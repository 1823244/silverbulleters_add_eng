&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ИмяТипаМетаданных",ИмяТипаМетаданных);
	Параметры.Свойство("ПолноеИмяМетаданных",ПолноеИмяМетаданных);
	Если Параметры.Свойство("ОбъектСсылка") 
		И НЕ Параметры.ОбъектСсылка=Неопределено Тогда
		ОбъектСсылка = Параметры.ОбъектСсылка;
		ИсходнаяСсылка = ОбъектСсылка;
		//ИмяТипаМетаданных = ОбъектДанныхСсылка.Метаданные.Имя;
		стр_н = ЛогТекущихПорядкаВыбораСсылок.Добавить();
		стр_н.Ссылка = ОбъектСсылка;
	КонецЕсли;
	
	Если ИмяТипаМетаданных="Документ" Тогда
		Попытка
			ТипОбъектСсылка = новый ОписаниеТипов("ДокументСсылка."+ПолноеИмяМетаданных);
		Исключение
		КонецПопытки;
	ИначеЕсли ИмяТипаМетаданных="Справочник" Тогда
		Попытка
			ТипОбъектСсылка = новый ОписаниеТипов("СправочникСсылка."+ПолноеИмяМетаданных);
		Исключение
		КонецПопытки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если РеквизитыШапки=Ложь и РеквизитыТабличныхЧастей=Ложь Тогда
		РеквизитыШапки = Истина;
	КонецЕсли;	
	
	Если ЗначениеЗаполнено(ОбъектСсылка)Тогда
		ВывестиСтруктуруПодчиненности();
	КонецЕсли;
	

	
	Если ЛогТекущихПорядкаВыбораСсылок.Количество()<1 Тогда
		Элементы.ФормаВернутьсяНазад.Доступность = Ложь;
	КонецЕсли;
	ГлубинаИстории = "("+?(ЛогТекущихПорядкаВыбораСсылок.Количество()=0,0,ЛогТекущихПорядкаВыбораСсылок.Количество()-1)+")";
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьИПрименить(Команда)
	
	мПараметры = новый Структура;
	мПараметры.Вставить("МассивВыбранныхДанных",ПолучитьМассивСсылокДокументовИзКорзины());
	Оповестить("ВыборВыгрузкиПоСтруктуреСсылокОбъекта",мПараметры);
	ЭтаФорма.Закрыть();

КонецПроцедуры

&НаСервере
Функция ПолучитьМассивСсылокДокументовИзКорзины()
	
	МассивСтруктурСсылок = новый Массив;  	
	
	Для каждого стр из КорзинаСсылок Цикл
		мСтруктура = новый Структура;
		мСтруктура.Вставить("Ссылка",стр.Ссылка);
		мСтруктура.Вставить("ИмяТипаМетаданных","Документ");
		мСтруктура.Вставить("ПолноеИмяМетаданных",стр.Ссылка.Метаданные().Имя);
		МассивСтруктурСсылок.Добавить(мСтруктура);
	КонецЦикла;
	
	Возврат МассивСтруктурСсылок;
	
КонецФункции

&НаКлиенте
Процедура ВывестиДляТекущего(Команда)
	
	ТекущиеДанные = Элементы.ТаблицаСтруктураПодчиненности.ТекущиеДанные;
	
	Если ТекущиеДанные=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	ТипОбъектСсылка = ПолучитьОписаниеТипМетаданныхПоСсылке(ТекущиеДанные.Ссылка);
	Элементы.ОбъектСсылка.ОграничениеТипа = ТипОбъектСсылка;

	ОбъектСсылка = ТекущиеДанные.Ссылка;
	ВывестиСтруктуруПодчиненности();
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьОписаниеТипМетаданныхПоСсылке(Ссылка)
	
	Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
		Возврат Неопределено;
	КонецЕсли;		
	
	Если Метаданные.Документы.Содержит(Ссылка.Метаданные()) Тогда
		ОписаниеТипа = новый ОписаниеТипов("ДокументСсылка."+Ссылка.Метаданные().Имя);
	ИначеЕсли Метаданные.Справочники.Содержит(Ссылка.Метаданные()) Тогда
		ОписаниеТипа = новый ОписаниеТипов("СправочникСсылка."+Ссылка.Метаданные().Имя);
	КонецЕсли;
	
	Возврат ОписаниеТипа;
	
КонецФункции

&НаКлиенте
Процедура Обновить(Команда)
	ВывестиСтруктуруПодчиненности();
КонецПроцедуры

&НаКлиенте
Процедура ПоместитьВКорзину(Команда)
	
	Для каждого стр из ТаблицаСтруктураПодчиненности Цикл
		
		Если стр.Выбрана=Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		// может есть ссылка?
		мОтбор = новый Структура("Ссылка",стр.Ссылка);
		нСтроки = КорзинаСсылок.НайтиСтроки(мОтбор);
		
		Если нСтроки.Количество()>0 Тогда
			Продолжить;
		КонецЕсли;
		
		стр_н = КорзинаСсылок.Добавить();
		ЗаполнитьЗначенияСвойств(стр_н,стр);
		
	КонецЦикла;
	
	
	ИзменитьЗаголовокПоместитьВКорзину();

	
КонецПроцедуры

&НаКлиенте
Процедура ИзменитьЗаголовокПоместитьВКорзину()
	
	Элементы.ГруппаКорзина.Заголовок = "Корзина ("+КорзинаСсылок.Количество()+")";

КонецПроцедуры

#Область Служебные

// Инициирует вывод в табличный документ и отображает его по окончанию формирования.
&НаКлиенте
Процедура ВывестиСтруктуруПодчиненности()

	Если НЕ ЗначениеЗаполнено(ОбъектСсылка) Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьДеревоСтруктурыПодчиненности();

КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоСтруктурыПодчиненности(ВозвратНазад = Ложь)
	
	Если ОбъектСсылка=Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоследняяСсылка = Неопределено;
	
	Если ЛогТекущихПорядкаВыбораСсылок.Количество()>0 Тогда
		стр = ЛогТекущихПорядкаВыбораСсылок[ЛогТекущихПорядкаВыбораСсылок.Количество()-1];
		ПоследняяСсылка = стр.Ссылка;
	КонецЕсли;
	
	Если ПоследняяСсылка<>ОбъектСсылка И ВозвратНазад=Ложь Тогда
		стр_н = ЛогТекущихПорядкаВыбораСсылок.Добавить();
		стр_н.Ссылка = ОбъектСсылка;
	КонецЕсли;
	
	Если ЛогТекущихПорядкаВыбораСсылок.Количество()>1 Тогда
		Элементы.ФормаВернутьсяНазад.Доступность = Истина;
	КонецЕсли;
	
	ГлубинаИстории = "("+?(ЛогТекущихПорядкаВыбораСсылок.Количество()=0,0,ЛогТекущихПорядкаВыбораСсылок.Количество()-1)+")";
	
	ТаблицаСтруктураПодчиненности.Очистить();
	
	МетаданТип = "";
	КешОбъектовССылок = новый Соответствие;
	
	// добавим текущую ссылку
	стр_н = ТаблицаСтруктураПодчиненности.Добавить();
	стр_н.Ссылка = ОбъектСсылка;
	стр_н.Представление = Строка(ОбъектСсылка);
	стр_н.Тип = МетаданТип+"."+ТипЗнч(ОбъектСсылка);
	стр_н.ПометкаУдаления = ОбъектСсылка.ПометкаУдаления;
	стр_н.ИмяРеквизита =  ""; 
	стр_н.ИмяТабличнойЧасти = "";
	стр_н.ВыбранныйЭлемент = Истина;
	КешОбъектовССылок.Вставить(ОбъектСсылка,ОбъектСсылка);	
	
	// по всем реквизитам
	Если РеквизитыШапки=Истина Тогда
		ОбновитьДеревоСтруктурыПодчиненностиФрагмент(ОбъектСсылка,ОбъектСсылка.Метаданные().Реквизиты,КешОбъектовССылок,"");
	КонецЕсли;
	// по табличным частям
	Если РеквизитыТабличныхЧастей=Истина Тогда
		Для каждого ТабличнаяЧасть из ОбъектСсылка.Метаданные().ТабличныеЧасти Цикл
			Для каждого стр из ОбъектСсылка[ТабличнаяЧасть.Имя] Цикл
				ОбновитьДеревоСтруктурыПодчиненностиФрагмент(стр,ТабличнаяЧасть.Реквизиты,КешОбъектовССылок,ТабличнаяЧасть.Имя);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоСтруктурыПодчиненностиФрагмент(Знач ИсточникДанных,Знач МетаданныеРеквизиты, КешОбъектовССылок,Знач ИмяТабличнойЧасти)
	
	Перем ИзКеша, МетаданТип, Ссылка, стр, стр_н;
	
	Для каждого стр из МетаданныеРеквизиты Цикл
		
		Ссылка = ИсточникДанных[стр.Имя];
		
		Если НЕ ЗначениеЗаполнено(Ссылка) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(Ссылка)=Тип("Строка") 
			ИЛИ ТипЗнч(Ссылка)=Тип("Булево") 
			ИЛИ ТипЗнч(Ссылка)=Тип("Дата") 
			ИЛИ ТипЗнч(Ссылка)=Тип("Число")
			ИЛИ ТипЗнч(Ссылка)=Тип("УникальныйИдентификатор")
			ИЛИ ТипЗнч(Ссылка)=Тип("ХранилищеЗначения") Тогда
			Продолжить;
		КонецЕсли;
		Попытка
			Если Метаданные.Справочники.Содержит(Ссылка.Метаданные()) Тогда
				МетаданТип = "Справочник";
			ИначеЕсли Метаданные.Документы.Содержит(Ссылка.Метаданные()) Тогда 
				МетаданТип = "Документ";
			Иначе
				Продолжить;
			КонецЕсли;
		Исключение
			Продолжить;
		КонецПопытки;
		
		ИзКеша = КешОбъектовССылок.Получить(Ссылка);
		
		Если ИзКеша<>Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		стр_н = ТаблицаСтруктураПодчиненности.Добавить();
		стр_н.Ссылка = Ссылка;
		Если ИмяТабличнойЧасти<>"" Тогда
			стр_н.Представление = "....."+Строка(Ссылка);
		Иначе
			стр_н.Представление = Строка(Ссылка);
		КонецЕсли;
		стр_н.Тип = МетаданТип+"."+ТипЗнч(Ссылка);
		стр_н.ПометкаУдаления = Ссылка.ПометкаУдаления;
		стр_н.ИмяРеквизита =  стр.Имя + "("+стр.Синоним+")"; 
		стр_н.ИмяТабличнойЧасти = ИмяТабличнойЧасти;
		КешОбъектовССылок.Вставить(Ссылка,Ссылка);
		
		Если МетаданТип = "Документ" Тогда
			стр_н.Проведен = Ссылка.Проведен;
		ИначеЕсли МетаданТип = "Справочник" Тогда			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры


&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для каждого стр из ТаблицаСтруктураПодчиненности Цикл
		стр.Выбрана = Истина;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для каждого стр из ТаблицаСтруктураПодчиненности Цикл
		стр.Выбрана = Ложь;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Процедура КорзинаСсылокПриИзменении(Элемент)
	ИзменитьЗаголовокПоместитьВКорзину();
КонецПроцедуры


&НаКлиенте
Процедура ДокументСсылкаПриИзменении(Элемент)
	ВывестиСтруктуруПодчиненности();
КонецПроцедуры


&НаКлиенте
Процедура РеквизитыТабличныхЧастейПриИзменении(Элемент)
	ВывестиСтруктуруПодчиненности();
КонецПроцедуры


&НаКлиенте
Процедура РеквизитыШапкиПриИзменении(Элемент)
	ВывестиСтруктуруПодчиненности();
КонецПроцедуры


&НаКлиенте
Процедура ВернутьсяНазад(Команда)
	Если ЛогТекущихПорядкаВыбораСсылок.Количество()>0 Тогда
		стр = ЛогТекущихПорядкаВыбораСсылок[ЛогТекущихПорядкаВыбораСсылок.Количество()-1];
		Если ОбъектСсылка=стр.Ссылка Тогда
			Если ЛогТекущихПорядкаВыбораСсылок.Количество()>=2 Тогда
				ЛогТекущихПорядкаВыбораСсылок.Удалить(стр);
				стр2 = ЛогТекущихПорядкаВыбораСсылок[ЛогТекущихПорядкаВыбораСсылок.Количество()-1];
				ОбъектСсылка = стр2.Ссылка;
			КонецЕсли;
		Иначе
			ОбъектСсылка = стр.Ссылка;
			Если ЛогТекущихПорядкаВыбораСсылок.Количество()>1 Тогда
				ЛогТекущихПорядкаВыбораСсылок.Удалить(стр);
			КонецЕсли;			
		КонецЕсли;
		
		
		ТипОбъектСсылка = ПолучитьОписаниеТипМетаданныхПоСсылке(ОбъектСсылка);
		Элементы.ОбъектСсылка.ОграничениеТипа = ТипОбъектСсылка;		
		
		ОбновитьДеревоСтруктурыПодчиненности(Истина);
		
		Если ЛогТекущихПорядкаВыбораСсылок.Количество()<=1 Тогда
			Элементы.ФормаВернутьсяНазад.Доступность = Ложь;
		КонецЕсли;
	Иначе
		Сообщить("Достигли начала истории!");
	КонецЕсли	
КонецПроцедуры
#КонецОбласти