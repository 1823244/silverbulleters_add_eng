
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// пришло имя документа
	Если Параметры.Свойство("Документ_ПолноеИмяМетаданных") Тогда
		
		Документ_ПолноеИмяМетаданных = Параметры.Документ_ПолноеИмяМетаданных;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если Сведений=Ложь И Расчетов=Ложь И Бухгалтерии=Ложь И Накопления=Ложь Тогда
		Накопления = Истина;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Документ_ПолноеИмяМетаданных) Тогда
		ДобавитьВСтрокиДанныеРегистровПоОдномуДокументу(Документ_ПолноеИмяМетаданных);
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Процедура ЗакрытьИПрименить(Команда)
	мПараметры = новый Структура;
	мПараметры.Вставить("МассивВыбранныхДанных",ПолучитьМассивСтруктурВыбораВыгрузкиРегистровПоРегистратору());
	мПараметры.Вставить("Документ_ПолноеИмяМетаданных",Документ_ПолноеИмяМетаданных);
	Оповестить("ВыборВыгрузкиРегистровПоРегистратору",мПараметры);
	ЭтаФорма.Закрыть();
КонецПроцедуры


&НаСервере
Процедура ДобавитьВСтрокиДанныеРегистровПоОдномуДокументу(ПолноеИмяМетаданных)
	
	// получим соответствия
	СоответствияРегистров = новый Соответствие;
	Для каждого стр из ТаблицаМатрицаСоответствия Цикл
		Ключ = стр.ИмяВидаРегистра+"."+стр.ПолноеИмяМетаданных;
		СоответствияРегистров.Вставить(Ключ,стр);
	КонецЦикла;
	
	// удалим лишние
	МассивУдаляемыхСтрок = новый Массив;
	Для каждого стр из ТаблицаМатрицаСоответствия Цикл
		Если НеобходимостьВыгрузки(стр.ИмяВидаРегистра)=Ложь Тогда
			МассивУдаляемыхСтрок.Добавить(стр);
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	Для каждого стр из МассивУдаляемыхСтрок Цикл
		ТаблицаМатрицаСоответствия.Удалить(стр);
	КонецЦикла;
	
	// обновим таблицу
	мДвижения = Метаданные.Документы[ПолноеИмяМетаданных].Движения;
		
	Для каждого стр из мДвижения Цикл
		ПолноеИмя = стр.ПолноеИмя();
		Имя = стр.Имя;
		ИмяВидаРегистра  = СтрЗаменить(ПолноеИмя,"."+Имя,""); 
		
		Если НеобходимостьВыгрузки(ИмяВидаРегистра)=Ложь Тогда
			Продолжить;
		КонецЕсли;
		
		// добавляем
		Ключ = ИмяВидаРегистра+"."+Имя;
		Если СоответствияРегистров.Получить(Ключ)<>Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		стр_н = ТаблицаМатрицаСоответствия.Добавить();
		стр_н.ИмяВидаРегистра = ИмяВидаРегистра; 
		стр_н.ПолноеИмяМетаданных = Имя;
		стр_н.Выгружать = 1;
		стр_н.Документ = 2;
		стр_н.Документ_ПолноеИмяМетаданных = ПолноеИмяМетаданных;
	КонецЦикла;
	
	
	ТаблицаМатрицаСоответствия.Сортировать("ИмяВидаРегистра,ПолноеИмяМетаданных");
	
КонецПроцедуры

&НаСервере
Функция НеобходимостьВыгрузки(ИмяВидаРегистра)
	
	
	
	
	Отказ = Истина;
	
	Если Накопления=Истина И (Найти(ИмяВидаРегистра,"Накопления") ИЛИ Найти(ИмяВидаРегистра,"Accumulation")) Тогда
		Отказ = Ложь;
	КонецЕсли;
	
	Если Сведений=Истина И (Найти(ИмяВидаРегистра,"Сведений") ИЛИ Найти(ИмяВидаРегистра,"Information")) Тогда
		Отказ = Ложь;
	КонецЕсли;
	
	Если Расчетов=Истина И (Найти(ИмяВидаРегистра,"Регистр") ИЛИ Найти(ИмяВидаРегистра,"Calculation")) Тогда
		Отказ = Ложь;
	КонецЕсли;
	
	Если Бухгалтерии=Истина И (Найти(ИмяВидаРегистра,"Бухгалтерии") ИЛИ Найти(ИмяВидаРегистра,"Accounting")) Тогда
		Отказ = Ложь;
	КонецЕсли;
	
	Возврат НЕ Отказ;
	
КонецФункции

&НаКлиенте
Функция ПолучитьМассивСтруктурВыбораВыгрузкиРегистровПоРегистратору()
	
	МассивРезультат = новый Массив;
	
	Для каждого стр из ТаблицаМатрицаСоответствия Цикл
		
		мСтруктура = новый Структура("ИмяВидаРегистра,ПолноеИмяМетаданных,Документ_ПолноеИмяМетаданных,Выгружать",стр.ИмяВидаРегистра,стр.ПолноеИмяМетаданных,стр.Документ_ПолноеИмяМетаданных,стр.Выгружать);
		МассивРезультат.Добавить(мСтруктура);
		
	КонецЦикла;
	
	
	Возврат МассивРезультат;
	
КонецФункции

#Область Служебные

// Процедура - Создать динамические колонки таблицы
//
// Параметры:
//  ИмяТаблицы					 - строка	 - имя таблицы на форме строкой
//  МассивСтруктурКолонок		 - 	 - описание создаваемых колонок
//  МассивСтруктурТекущихКолонок - 	 - описание текущих колонок для удаления из текущей таблицы
&НаСервере
Процедура СоздатьДинамическиеКолонкиТаблицы(ИмяТаблицы,МассивСтруктурКолонок,МассивСтруктурТекущихКолонок)
	
	МассивУдаляемыхЭлементов = новый Массив;
	МассивДобавляемыхЭлементов = новый Массив;
	
	Для каждого Колонка из МассивСтруктурТекущихКолонок Цикл
		МассивУдаляемыхЭлементов.Добавить(ИмяТаблицы+"."+Колонка.Имя);
		Элементы.Удалить(Элементы[ИмяТаблицы+Колонка.Имя]);    
	КонецЦикла;   
	
	МассивТипов = новый Массив;
	МассивТипов.Добавить(Тип("ТаблицаЗначений"));           
	ОписаниеТиповТаблица = Новый ОписаниеТипов(МассивТипов);
	МассивТипов = новый Массив;
	МассивТипов.Добавить(Тип("Строка"));          
	ОписаниеТиповСтрока = Новый ОписаниеТипов(МассивТипов);
	
	Для каждого Колонка из МассивСтруктурКолонок Цикл
		Если Колонка.ТипЗначения = ОписаниеТиповТаблица Тогда
			ОписаниеТипов = ОписаниеТиповСтрока;
		Иначе
			ОписаниеТипов = новый ОписаниеТипов(Колонка.ТипЗначения);
		КонецЕсли;
		НовыйРеквизит = Новый РеквизитФормы(Колонка.Имя, ОписаниеТипов, ИмяТаблицы, Колонка.Имя, Ложь);
		МассивДобавляемыхЭлементов.Добавить(НовыйРеквизит);
	КонецЦикла;
	
	ЭтаФорма.ИзменитьРеквизиты(МассивДобавляемыхЭлементов,МассивУдаляемыхЭлементов);
	
	
	Для каждого Колонка из МассивСтруктурКолонок Цикл                       
		НовыйЭлемент = Элементы.Вставить(Элементы[ИмяТаблицы].Имя+Колонка.Имя, Тип("Полеформы"), Элементы[ИмяТаблицы]);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеВвода;
		НовыйЭлемент.Видимость = Истина;
		НовыйЭлемент.Доступность = Истина;
		НовыйЭлемент.ТолькоПросмотр = Ложь;   
		НовыйЭлемент.Высота = 0;
		НовыйЭлемент.Ширина = Колонка.Ширина;                
		НовыйЭлемент.Заголовок = Колонка.Заголовок;
		НовыйЭлемент.Подсказка = Колонка.Имя;
		НовыйЭлемент.ПутьКДанным = ИмяТаблицы+"."+Колонка.Имя;    
	КонецЦикла;
	
	
КонецПроцедуры         


#КонецОбласти


&НаКлиенте
Процедура ТаблицаМатрицаСоответствияПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	Сообщить("Добавление данных в матрицу не предусмотрено!");
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	Для Каждого стр из ТаблицаМатрицаСоответствия Цикл
		стр.Выгружать = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	Для Каждого стр из ТаблицаМатрицаСоответствия Цикл
		стр.Выгружать = Истина;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	Если ЗначениеЗаполнено(Документ_ПолноеИмяМетаданных) Тогда
		ДобавитьВСтрокиДанныеРегистровПоОдномуДокументу(Документ_ПолноеИмяМетаданных);
	КонецЕсли;
КонецПроцедуры
