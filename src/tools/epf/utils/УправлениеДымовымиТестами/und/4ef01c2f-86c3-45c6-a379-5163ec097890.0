{3,
{46,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{1,3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",1,0,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{35,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоМетаданныхЗаполнитьДеревоМетаданных",
{1,0},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{36,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхЗаполнитьДеревоМетаданныхРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{64,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ЗагрузитьФайлНастроек",
{1,0},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{65,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗагрузитьФайлНастроекРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{40,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СоздатьФайлНастроек",
{1,1,
{"ru","Сохранить файл настроек"}
},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{41,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СоздатьФайлНастроекРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{6,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"Группа1",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},0,1,0,1,
{10,
{7,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},143c00f7-a42d-4cd7-9189-88e4467dc768,
{51,
{8,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,0,"ДеревоМетаданных",0,0,1,
{1,0},
{1,0},
{1,
{2}
},0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,0,
{1,60edb81d-887b-478e-94ee-7fef2b13393d,"ДеревоМетаданныхПриАктивизацииСтроки",1,0,60edb81d-887b-478e-94ee-7fef2b13393d,0,1},
{3,0ae4bea5-23be-42a7-b69e-97b11b29c453,8d772f97-c0ef-47c0-9cb0-efea28c61341,b0016a68-ec64-4e6d-b905-c71fd62efc4c},1,
{21,
{9,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{21,
{10,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ДеревоМетаданныхКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{21,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ДеревоМетаданныхВыбор",1,0,
{1,1,
{"ru","Исключено из проверки"}
},
{1,0},
{2,
{2},
{1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДеревоМетаданныхВыборПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{22,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхВыборКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{23,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхВыборРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{33,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоМетаданныхГруппа1",
{1,1,
{"ru","Исключаемые из проверки формы"}
},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,2,1,0,3,
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{0},
{"Pattern"},"",
{1,0},0},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{24,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоМетаданныхВидМетаданных",1,0,
{1,1,
{"ru","Исключаемые из проверки формы"}
},
{1,0},
{2,
{2},
{2}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{25,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхВидМетаданныхКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{26,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхВидМетаданныхРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{37,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоМетаданныхВидПроверки",0,0,
{1,0},
{1,0},
{2,
{2},
{4}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{38,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхВидПроверкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{39,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхВидПроверкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{27,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоМетаданныхИмяМетаданного",0,0,
{1,0},
{1,0},
{2,
{2},
{3}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{28,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхИмяМетаданногоКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{29,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхИмяМетаданногоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{34,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхГруппа1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{10,
{11,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,0,0,1,
{4,
{12,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{21,
{13,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{14,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{8,0},0,3,3},1,
{4,
{15,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ДеревоМетаданныхСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{21,
{16,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{17,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{8,1},0,3,3},1,
{4,
{18,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоМетаданныхУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{21,
{19,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоМетаданныхУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{20,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоМетаданныхУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{8,2},0,3,3},0,1,0,0,1,0,3,3,0,1,0},143c00f7-a42d-4cd7-9189-88e4467dc768,
{51,
{42,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ЗначенияРеквизитовНовых",0,0,1,
{1,0},
{1,0},
{1,
{3}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,13,
{"U"},
{2,2391e7b8-7235-45d7-ab7e-6ff3dc086396,"ЗначенияРеквизитовНовыхПередНачаломДобавления",b3c10170-c5ff-4cba-b537-679e1c872b45,"ЗначенияРеквизитовНовыхПриНачалеРедактирования",1,0,2391e7b8-7235-45d7-ab7e-6ff3dc086396,0,1,b3c10170-c5ff-4cba-b537-679e1c872b45,0,1},
{0},1,
{21,
{43,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗначенияРеквизитовНовыхКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{21,
{44,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ЗначенияРеквизитовНовыхКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{69,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗначенияРеквизитовНовыхВидМетаданных",1,0,
{1,0},
{1,0},
{2,
{3},
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{70,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗначенияРеквизитовНовыхВидМетаданныхКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{71,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗначенияРеквизитовНовыхВидМетаданныхРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{55,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗначенияРеквизитовНовыхИмяМетаданного",1,0,
{1,0},
{1,0},
{2,
{3},
{1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{56,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗначенияРеквизитовНовыхИмяМетаданногоКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{57,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗначенияРеквизитовНовыхИмяМетаданногоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{58,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗначенияРеквизитовНовыхРеквизит",1,0,
{1,0},
{1,0},
{2,
{3},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ЗначенияРеквизитовНовыхРеквизитПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{59,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗначенияРеквизитовНовыхРеквизитКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{60,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗначенияРеквизитовНовыхРеквизитРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{61,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗначенияРеквизитовНовыхЗначениеРеквизита",1,0,
{1,0},
{1,0},
{2,
{3},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ЗначенияРеквизитовНовыхЗначениеРеквизитаПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{62,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗначенияРеквизитовНовыхЗначениеРеквизитаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{63,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗначенияРеквизитовНовыхЗначениеРеквизитаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{10,
{45,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗначенияРеквизитовНовыхРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,0,0,1,
{4,
{46,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗначенияРеквизитовНовыхСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{21,
{47,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗначенияРеквизитовНовыхСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{48,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗначенияРеквизитовНовыхСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{42,0},0,3,3},1,
{4,
{49,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ЗначенияРеквизитовНовыхСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{21,
{50,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗначенияРеквизитовНовыхСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{51,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗначенияРеквизитовНовыхСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{42,1},0,3,3},1,
{4,
{52,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗначенияРеквизитовНовыхУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{21,
{53,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗначенияРеквизитовНовыхУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{54,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗначенияРеквизитовНовыхУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{42,2},0,3,3},0,1,0,0,1,0,3,3,0,1,0},"","",0,1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0},"
&НаКлиенте
Процедура ПриОткрытии(Отказ)
	ЗаполнитьДеревоМетаданных(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДеревоМетаданных(Команда)
	ЗаполнитьДеревоМетаданныхНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоМетаданныхНаСервере()
	
	ДЗ = РеквизитФормыВЗначение(""ДеревоМетаданных"");
	
	ДЗ.Строки.Очистить();
	
	ВидыПроверок = Новый Массив;
	ВидыПроверок.Добавить(""Списки"");
	ВидыПроверок.Добавить(""Новые"");
	ВидыПроверок.Добавить(""Существующие"");
	
	//добавляем справочники
	ДобавитьМетаданныеВДерево(ВидыПроверок,ДЗ,""Справочники"");
	
	//добавляем документв
	ДобавитьМетаданныеВДерево(ВидыПроверок,ДЗ,""Документы"");
	
	//добавляем отчеты
	ДобавитьМетаданныеВДерево(Новый Массив,ДЗ,""Отчеты"");
	
	//добавляем обработки
	ДобавитьМетаданныеВДерево(Новый Массив,ДЗ,""Обработки"");
	
	ЗначениеВРеквизитФормы(ДЗ,""ДеревоМетаданных"");
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьМетаданныеВДерево(ВидыПроверок,Дерево,ВидМетаданных)
	
	СтрокаМетаданных = Дерево.Строки.Добавить();
	СтрокаМетаданных.ВидМетаданных          = ВидМетаданных;
	СтрокаМетаданных.ВидМетаданныхДляПоиска = ВидМетаданных;
	
	Если ВидыПроверок.Количество() Тогда
		Для каждого ВидПроверки из ВидыПроверок Цикл
			
			СтрокаПроверки = СтрокаМетаданных.Строки.Добавить();
			СтрокаПроверки.ВидМетаданныхДляПоиска = ВидМетаданных;
			СтрокаПроверки.ВидПроверкиДляПоиска   = ВидПроверки;
			СтрокаПроверки.ВидПроверки = ВидПроверки;
			
			Для каждого Метаданное из Метаданные[ВидМетаданных] Цикл
				
				СтрокаОбъекта = СтрокаПроверки.Строки.Добавить();
				СтрокаОбъекта.ИмяМетаданного         = Метаданное.Имя;
				СтрокаОбъекта.ВидМетаданныхДляПоиска = ВидМетаданных;
				СтрокаОбъекта.ВидПроверкиДляПоиска   = ВидПроверки;
				

			КонецЦикла;
		КонецЦикла;
	Иначе
		Для каждого Метаданное из Метаданные[ВидМетаданных] Цикл
			СтрокаОбъекта = СтрокаМетаданных.Строки.Добавить();
			СтрокаОбъекта.ВидМетаданныхДляПоиска = ВидМетаданных;
			СтрокаОбъекта.ИмяМетаданного         = Метаданное.Имя;		
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФайлНастроек(Команда)
	
	ОбработчикОповещения = Новый ОписаниеОповещения(""ЗаписатьНастройкуПослеВыбораФайла"",ЭтотОбъект);
	
	ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
	
	ВыборФайла.Показать(ОбработчикОповещения);
	ВыборФайла.Фильтр = ""Файлы JSON (*.json)|*.json"";
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНастройкуПослеВыбораФайла(Результат,ДопПараметры) Экспорт
	
	Если Результат<>Неопределено Тогда
		
		ИмяФайла = Результат[0];
		
		Файл = Новый Файл(ИмяФайла);
		
		ПараметрыЗаписи = Новый ПараметрыЗаписиJSON(,Символы.Таб);
		ЗаписьJSON = Новый ЗаписьJSON;
		
		Если ЗначениеЗаполнено(СтрокаJSON) Тогда
			ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписи);
		Иначе 
			ЗаписьJSON.ОткрытьФайл(ИмяФайла);
		КонецЕсли;
		 	
		ЗаполнитьJSONНастроек(ЗаписьJSON);
			
		Если ЗначениеЗаполнено(СтрокаJSON) Тогда
			ВремСтрокаJSON = ЗаписьJSON.Закрыть();
			
			НастроенноеСоответствие = ПрочитатьСоответствиеИзСтрокиJSON(ВремСтрокаJSON);
		
			СоответствиеИсх = ПрочитатьСоответствиеИзСтрокиJSON(СтрокаJSON);
			
			ДымовоеСоответствиеИсх = СоответствиеИсх[КлючНастройки()];
			ДымовоеСоответствие = НастроенноеСоответствие[КлючНастройки()];
			Если ЗначениеЗаполнено(ДымовоеСоответствие) Тогда
				Если Не ЗначениеЗаполнено(ДымовоеСоответствиеИсх) Тогда
					СоответствиеИсх.Вставить(КлючНастройки(), ДымовоеСоответствие);
				Иначе
					МассивВидов = Новый Массив;
					МассивВидов.Добавить(""Справочники"");
					МассивВидов.Добавить(""Документы"");
					МассивВидов.Добавить(""Отчеты"");
					МассивВидов.Добавить(""Обработки"");
					Для каждого Вид Из МассивВидов Цикл
						ВремСоответствие = ДымовоеСоответствие[Вид];
						Если ВремСоответствие = Неопределено Тогда
							ДымовоеСоответствиеИсх.Удалить(Вид);
						Иначе	
							ДымовоеСоответствиеИсх.Вставить(Вид, ВремСоответствие);
						КонецЕсли;
					КонецЦикла; 
				КонецЕсли;
				
			КонецЕсли;
		
			ЗаписьJSON = Новый ЗаписьJSON;
			ЗаписьJSON.ОткрытьФайл(ИмяФайла,,,ПараметрыЗаписи);
			ЗаписатьJSON(ЗаписьJSON, СоответствиеИсх);
			ЗаписьJSON.Закрыть();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьJSONНастроек(ЗаписьJSON)
	
	Настройки = Новый Соответствие;
	
	Для каждого СтрокаМетаданного из ДеревоМетаданных.ПолучитьЭлементы() Цикл
		
		ВидыПроверки = Новый Структура;
		ДобавлятьМетаданное = Истина;
		
		Если СтрокаМетаданного.ВидМетаданных = ""Справочники"" Или СтрокаМетаданного.ВидМетаданных = ""Документы"" Тогда		
			//сначала добавляем данные о значениях реквизитов 
			Если СтрокаМетаданного.Исключено Тогда
				ДобавлятьМетаданное = Ложь;
			Иначе
				НастройкаЗаполненияРеквизитов = ПолучитьНастройкуЗаполненияРеквизтов(СтрокаМетаданного.ВидМетаданных);
				
				Если НастройкаЗаполненияРеквизитов.Количество() Тогда
					ВидыПроверки.Вставить(""ЗначенияРеквизитовНовых"",НастройкаЗаполненияРеквизитов);
				КонецЕсли;
				
				//для справочников и документов есть еще подраздел виды проверки
				Для каждого СтрокаВидаПроверки Из СтрокаМетаданного.ПолучитьЭлементы() Цикл
					
					ДобавлятьВидПроверки = Истина;
					Если СтрокаВидаПроверки.Исключено Тогда
						ДобавлятьВидПроверки = Ложь;
						ВидыПроверки.Вставить(СтрокаВидаПроверки.ВидПроверки, Ложь);
					Иначе
						МетаданныеПроверки = Новый Массив;
						
						Для каждого СтрокаИмяМетаданного из СтрокаВидаПроверки.ПолучитьЭлементы() Цикл
							
							Если СтрокаИмяМетаданного.Исключено Тогда
								МетаданныеПроверки.Добавить(СтрокаИмяМетаданного.ИмяМетаданного);
							КонецЕсли;
							
						КонецЦикла;
						
						Если МетаданныеПроверки.Количество() Тогда
							ВидыПроверки.Вставить(СтрокаВидаПроверки.ВидПроверки,МетаданныеПроверки);
						КонецЕсли;
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
		Иначе
			
			МетаданныеПроверки = Новый Массив;
			
			Если СтрокаМетаданного.Исключено Тогда
				ДобавлятьМетаданное = Ложь;
			Иначе
				Для каждого СтрокаИмяМетаданного из СтрокаМетаданного.ПолучитьЭлементы() Цикл
					
					Если СтрокаИмяМетаданного.Исключено Тогда
						МетаданныеПроверки.Добавить(СтрокаИмяМетаданного.ИмяМетаданного);
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
			Если МетаданныеПроверки.Количество() Тогда
				ВидыПроверки = МетаданныеПроверки;
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДобавлятьМетаданное Тогда
			Если ВидыПроверки.Количество() Тогда
				Настройки.Вставить(СтрокаМетаданного.ВидМетаданных, ВидыПроверки);
			КонецЕсли;
		Иначе
			Настройки.Вставить(СтрокаМетаданного.ВидМетаданных, Ложь);
		КонецЕсли; 
		
	КонецЦикла;
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	ЗаписьJSON.ЗаписатьИмяСвойства(КлючНастройки());
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	
	Если Настройки.Количество() Тогда
		Для каждого ЭлементВидаМетаданных из Настройки Цикл
			
			ЗаписьJSON.ЗаписатьИмяСвойства(ЭлементВидаМетаданных.Ключ);
						
			Если ТипЗнч(ЭлементВидаМетаданных.Значение) = Тип(""Булево"") Тогда
				ЗаписьJSON.ЗаписатьЗначение(Ложь);
				Продолжить;
			ИначеЕсли ТипЗнч(ЭлементВидаМетаданных.Значение) = Тип(""Структура"") Тогда
				
				ЗаписьJSON.ЗаписатьНачалоОбъекта();

				Для каждого ЭлементПроверки из ЭлементВидаМетаданных.Значение Цикл
					
					ЗаписьJSON.ЗаписатьИмяСвойства(ЭлементПроверки.Ключ);
					
					
					Если ЭлементПроверки.Ключ = ""ЗначенияРеквизитовНовых"" Тогда
						
						ЗаписьJSON.ЗаписатьНачалоОбъекта();	
						
						Для каждого ОбъектМетаданных из ЭлементПроверки.Значение Цикл
							
							ЗаписьJSON.ЗаписатьИмяСвойства(ОбъектМетаданных.Ключ);	
							
							ЗаписьJSON.ЗаписатьНачалоОбъекта();
							
							Для каждого Реквизит из ОбъектМетаданных.Значение Цикл
								ЗаписьJSON.ЗаписатьИмяСвойства(Реквизит.Ключ);	
								ЗаписьJSON.ЗаписатьЗначение(Реквизит.Значение);
							КонецЦикла;
							ЗаписьJSON.ЗаписатьКонецОбъекта();
						КонецЦикла;
						ЗаписьJSON.ЗаписатьКонецОбъекта();
					Иначе
						Если ТипЗнч(ЭлементПроверки.Значение) = Тип(""Булево"") Тогда
							ЗаписьJSON.ЗаписатьЗначение(Ложь);
							Продолжить;
						Иначе

							ЗаписьJSON.ЗаписатьНачалоМассива();
							
							Для каждого ОбъектМетаданных из ЭлементПроверки.Значение Цикл
								
								ЗаписьJSON.ЗаписатьЗначение(ОбъектМетаданных);
								
							КонецЦикла;
							
							ЗаписьJSON.ЗаписатьКонецМассива();
						КонецЕсли;
						
					КонецЕсли;
				КонецЦикла;
				
				ЗаписьJSON.ЗаписатьКонецОбъекта();	
				
			Иначе
				
				ЗаписьJSON.ЗаписатьНачалоМассива();
				
				Для каждого ОбъектМетаданных из ЭлементВидаМетаданных.Значение Цикл
					ЗаписьJSON.ЗаписатьЗначение(ОбъектМетаданных);
				КонецЦикла;
				
				ЗаписьJSON.ЗаписатьКонецМассива();
			КонецЕсли;
						
		КонецЦИкла;
		
		ЗаписьJSON.ЗаписатьКонецОбъекта();
		
	КонецЕсли;
	
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	
КонецПроцедуры

&НаСервере
Функция ПолучитьНастройкуЗаполненияРеквизтов(ВидМетаданных)
	
	НастройкаЗаполненияРеквизитов = Новый Структура;
	
	Отбор = Новый Структура(""ВидМетаданных"", ВидМетаданных);
	
	ТЗ = ЗначенияРеквизитовНовых.Выгрузить(Отбор);
	
	ТЗИменМетаданных = ТЗ.Скопировать();
	ТЗИменМетаданных.Свернуть(""ИмяМетаданного"");
	
	Для каждого СтрокаМетаданного из ТЗИменМетаданных Цикл
		
		ЗначенияРеквизитов = Новый Структура;
		Отбор = Новый Структура(""ИмяМетаданного"",СтрокаМетаданного.ИмяМетаданного);
		СтрокиРеквизитов = ТЗ.НайтиСтроки(Отбор);
		
		Для каждого СтрокаРеквзита из СтрокиРеквизитов Цикл
			ЗначенияРеквизитов.Вставить(СтрокаРеквзита.Реквизит,СтрокаРеквзита.ЗначениеРеквизитаСтрокой);
		КонецЦИкла;
		
		НастройкаЗаполненияРеквизитов.Вставить(СтрокаМетаданного.ИмяМетаданного,ЗначенияРеквизитов);
		
	КонецЦикла;
	
	Возврат НастройкаЗаполненияРеквизитов;
	
КонецФункции

&НаКлиенте
Процедура ДеревоМетаданныхВыборПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ДеревоМетаданных.ТекущиеДанные;
	ЗначениеФлажка = ТекущаяСтрока.Исключено;
	ПодчиненныеСтроки = ТекущаяСтрока.ПолучитьЭлементы();
	УстановитьЗначениеВыбораВПодчиненных(ПодчиненныеСтроки,ЗначениеФлажка);
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЗначениеВыбораВПодчиненных(ПодчиненныеСтроки,ЗначениеФлажка)
	
	Для каждого Строка из ПодчиненныеСтроки Цикл
		Строка.Исключено = ЗначениеФлажка;
		УстановитьЗначениеВыбораВПодчиненных(Строка.ПолучитьЭлементы(),ЗначениеФлажка);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияРеквизитовНовыхПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	СтрокаДЗ = Элементы.ДеревоМетаданных.ТекущиеДанные;
	ТекущаяСтрока = Элементы.ЗначенияРеквизитовНовых.ТекущиеДанные;
	ТекущаяСтрока.ВидМетаданных = СтрокаДЗ.ВидМетаданныхДляПоиска;
	ТекущаяСтрока.ИмяМетаданного = СтрокаДЗ.ИмяМетаданного;
	
	ЗаполнитьСписокРеквизитов(ТекущаяСтрока); 
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокРеквизитов(ТекущаяСтрока)

	МассивРеквизитов = ПолучитьМассивРеквизитовНаСервере(ТекущаяСтрока.ВидМетаданных,ТекущаяСтрока.ИмяМетаданного); 
	
	Элементы.ЗначенияРеквизитовНовыхРеквизит.СписокВыбора.ЗагрузитьЗначения(МассивРеквизитов);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивРеквизитовНаСервере(ЗНАЧ ВидМетаданных,ЗНАЧ ИмяМетаданного)
	ОбМетаданных = ПолучитьОбъектМетаданных(ВидМетаданных,ИмяМетаданного); 
	
	МассивРеквизитов = Новый Массив;
	
	Для каждого Реквизит Из ОбМетаданных.Реквизиты Цикл
		МассивРеквизитов.Добавить(Реквизит.Имя);
	КонецЦикла;
	
	Для каждого Реквизит Из ОбМетаданных.СтандартныеРеквизиты Цикл
		МассивРеквизитов.Добавить(Реквизит.Имя);
	КонецЦикла;

	Возврат МассивРеквизитов;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьФайлНастроек(Команда)
	
	ОбработчикОповещения = Новый ОписаниеОповещения(""ЗагрузитьНастройкуПослеВыбораФайла"",ЭтотОбъект);
	
	ВыборФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);

	ВыборФайла.Показать(ОбработчикОповещения);
	ВыборФайла.Фильтр = ""Файлы JSON (*.json)|*.json"";
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкуПослеВыбораФайла(Результат,ДопПараметры) Экспорт
	
	Если Результат<>Неопределено Тогда
		
		ИмяФайла = Результат[0];
		
		КоллекцияИсключаемыхКлючей = Новый Соответствие;
		КоллекцияИсключаемыхКлючей.Вставить(""$schema"", ""$schema"");	
		
		ЧтениеJSON = Новый ЧтениеJSON;
		ЧтениеJSON.ОткрытьФайл(ИмяФайла);
	
		Соответствие = ПрочитатьJSON(ЧтениеJSON, Истина);
		
		СтрокаJSON = """";
				
		ПараметрыЗаписи = Новый ПараметрыЗаписиJSON(,Символы.Таб);
		ЗаписьJSON = Новый ЗаписьJSON;
		ЗаписьJSON.УстановитьСтроку(ПараметрыЗаписи);
		ЗаписатьJSON(ЗаписьJSON, Соответствие);
		СтрокаJSON = ЗаписьJSON.Закрыть();
		
		Результат = ПреобразоватьСоответствиеВСтруктуру(Соответствие, КоллекцияИсключаемыхКлючей);

		ЗагрузитьФайлНастроекНаСервере(Результат);	
		
		ДеревоМетаданныхПриАктивизацииСтроки(Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПреобразоватьСоответствиеВСтруктуру(Знач Соответствие, Знач КоллекцияИсключаемыхКлючей)
	Результат = Новый Структура;
	Для каждого КлючЗначение Из Соответствие Цикл
		Если КоллекцияИсключаемыхКлючей.Получить(КлючЗначение.Ключ) = Неопределено Тогда
			Значение = КлючЗначение.Значение;
			Если ТипЗнч(Значение) = Тип(""Соответствие"") Тогда
				Значение = ПреобразоватьСоответствиеВСтруктуру(Значение, КоллекцияИсключаемыхКлючей);
			КонецЕсли;
			Результат.Вставить(КлючЗначение.Ключ, Значение);
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
КонецФункции

&НаСервере
Процедура ЗагрузитьФайлНастроекНаСервере(Результат)
	
		
	ЗаполнитьДеревоМетаданныхНаСервере();
	
	ДЗ = РеквизитФормыВЗначение(""ДеревоМетаданных"");

	Попытка
		Настройки = Результат[КлючНастройки()];
		Для каждого Элемент из Настройки Цикл
			ЗагрузитьНастройкиВДерево(ДЗ,Элемент);
		КонецЦикла;
	Исключение
		СообщитьПользователю(""Ошибка при загрузке настроек из файла: ""+ОписаниеОшибки());
	КонецПопытки;
	
	ЗначениеВРеквизитФормы(ДЗ,""ДеревоМетаданных"");
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНастройкиВДерево(ДЗ,Элемент)
	
	//1. Исключаем из проверки формы указанные в файле настроек
	Если Элемент.Ключ = ""Документы"" Или  Элемент.Ключ = ""Справочники"" Тогда
		
		Если ТипЗнч(Элемент.Значение) = Тип(""Булево"") И Элемент.Значение = Ложь Тогда
			Отбор = Новый Структура(""ВидМетаданныхДляПоиска"", Элемент.Ключ);
			МассивСтрокМетаданного = ДЗ.Строки.НайтиСтроки(Отбор, Ложь);
			Для каждого СтрокаМетаданного из МассивСтрокМетаданного Цикл
				СтрокаМетаданного.Исключено = Истина;
			КонецЦикла;
		Иначе
			Для каждого ПодчЭлемент из Элемент.Значение Цикл
				Если ПодчЭлемент.Ключ <> ""ЗначенияРеквизитовНовых"" Тогда
					Если ТипЗнч(ПодчЭлемент.Значение) = Тип(""Булево"") И ПодчЭлемент.Значение = Ложь Тогда
						Отбор = Новый Структура(""ВидМетаданныхДляПоиска,ВидПроверкиДляПоиска"", Элемент.Ключ, ПодчЭлемент.Ключ);
						МассивСтрокМетаданного = ДЗ.Строки.НайтиСтроки(Отбор,Истина);
						Для каждого СтрокаМетаданного из МассивСтрокМетаданного Цикл
							СтрокаМетаданного.Исключено = Истина;
						КонецЦикла;
					Иначе
						Для каждого Метаданное из ПодчЭлемент.Значение Цикл 
							//ключ - вид проверки, значение массив метаданных
							Отбор = Новый Структура(""ВидМетаданныхДляПоиска,ВидПроверкиДляПоиска,ИмяМетаданного"", Элемент.Ключ, ПодчЭлемент.Ключ, Метаданное);
							МассивСтрокМетаданного = ДЗ.Строки.НайтиСтроки(Отбор,Истина);
							Для каждого СтрокаМетаданного из МассивСтрокМетаданного Цикл
								СтрокаМетаданного.Исключено = Истина;
							КонецЦикла;
						КонецЦикла;
					КонецЕсли;
					
				Иначе
					
					ВидМетаданных = Элемент.Ключ;
					//заполним таблицу со значениями реквизитов для запролнения
					Для каждого Метаданное из ПодчЭлемент.Значение Цикл
						
						ОбМетаданных = ПолучитьОбъектМетаданных(ВидМетаданных,Метаданное.Ключ);
						
						Для каждого Реквизит из Метаданное.Значение Цикл
							ЗначениеРеквизита = ЗначениеРеквизита(ОбМетаданных,Реквизит.Ключ,Реквизит.Значение);
							СтрокаРеквизита = ЗначенияРеквизитовНовых.Добавить();
							СтрокаРеквизита.ИмяМетаданного           = Метаданное.Ключ;
							СтрокаРеквизита.Реквизит                 = Реквизит.Ключ;
							СтрокаРеквизита.ЗначениеРеквизита        = ЗначениеРеквизита;
							СтрокаРеквизита.ЗначениеРеквизитаСтрокой = Реквизит.Значение;
							СтрокаРеквизита.ВидМетаданных            = ВидМетаданных;
							
						КонецЦикла;
					КонецЦикла;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли; 
		
	ИначеЕсли Элемент.Ключ = ""Обработки"" Или Элемент.Ключ = ""Отчеты"" Тогда
		
		Если ТипЗнч(Элемент.Значение) = Тип(""Булево"") И Элемент.Значение = Ложь Тогда
			Отбор = Новый Структура(""ВидМетаданныхДляПоиска"", Элемент.Ключ);
			МассивСтрокМетаданного = ДЗ.Строки.НайтиСтроки(Отбор, Ложь);
			Для каждого СтрокаМетаданного из МассивСтрокМетаданного Цикл
				СтрокаМетаданного.Исключено = Истина;
			КонецЦикла;
		Иначе
			//находим строки по виду метаданного
			Отбор = Новый Структура(""ВидМетаданных"",Элемент.Ключ);
			МассивСтрокВидовМетаданных = ДЗ.Строки.НайтиСтроки(Отбор);
			
			Для каждого Метаданное из Элемент.Значение Цикл
				
				Отбор = Новый Структура(""ВидМетаданныхДляПоиска,ИмяМетаданного"",Элемент.Ключ,Метаданное);
				МассивСтрокМетаданного = ДЗ.Строки.НайтиСтроки(Отбор,Истина);
				
				Для каждого СтрокаМетаданного из МассивСтрокМетаданного Цикл
					СтрокаМетаданного.Исключено = Истина;
				КонецЦикла;
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОбъектМетаданных(ВидМетаданных,ИмяМетаданного)
	
	ПолноеИмяМетаданного = Лев(ВидМетаданных,СтрДлина(ВидМетаданных)-1)+"".""+ИмяМетаданного;
	ОбМетаданных = Метаданные.НайтиПоПолномуИмени(ПолноеИмяМетаданного);
	
	Возврат ОбМетаданных;
	
КонецФункции

&НаСервере
Функция ЗначениеРеквизита(МетаданныеОбъекта, ИмяРеквизита, ЗначениеРеквизитаИзФайла)

	//Плевако Е. добавил попытку для возможности указания значений стандартных реквизитов 
	ЭтоСтандартныйРеквизит = Ложь;
	Попытка	
		ТипРеквизита = МетаданныеОбъекта.Реквизиты[ИмяРеквизита].Тип.Типы()[0];
	Исключение
		ТипРеквизита = МетаданныеОбъекта.СтандартныеРеквизиты[ИмяРеквизита].Тип.Типы()[0];
		ЭтоСтандартныйРеквизит = Истина;
	КонецПопытки;

	Если ЭтоПримитивныйТипДанных(ТипРеквизита) Тогда
		Если ЭтоСтандартныйРеквизит Тогда
			Возврат МетаданныеОбъекта.СтандартныеРеквизиты[ИмяРеквизита].Тип.ПривестиЗначение(ЗначениеРеквизитаИзФайла);
		Иначе
			Возврат МетаданныеОбъекта.Реквизиты[ИмяРеквизита].Тип.ПривестиЗначение(ЗначениеРеквизитаИзФайла);
		КонецЕсли;
	КонецЕсли;

	// Значит, это ссылочный тип данных.
	Попытка
		МетаданныеЗначения = Метаданные.НайтиПоТипу(ТипРеквизита);
		Если Метаданные.Справочники.Содержит(МетаданныеЗначения) Тогда
			Возврат Справочники[МетаданныеЗначения.Имя].НайтиПоНаименованию(ЗначениеРеквизитаИзФайла,Истина);
		ИначеЕсли Метаданные.Перечисления.Содержит(МетаданныеЗначения) Тогда
			Возврат Перечисления[МетаданныеЗначения.Имя][ЗначениеРеквизитаИзФайла];
		КонецЕсли;
		// TODO: поддержку документов и других ссылочных типов данных (добавим по необходимости)
	Исключение
	КонецПопытки;

	Возврат Неопределено;

КонецФункции

&НаСервере
Функция ЭтоПримитивныйТипДанных(Тип)
	Возврат Тип = Тип(""Строка"") Или Тип = Тип(""Число"")
		Или Тип = Тип(""Дата"") Или Тип = Тип(""Булево"");
КонецФункции

&НаКлиенте
Процедура ДеревоМетаданныхПриАктивизацииСтроки(Элемент)
	
	СтрокаДЗ = Элементы.ДеревоМетаданных.ТекущиеДанные;
	
	Если СтрокаДЗ<>Неопределено Тогда
		Отбор = Новый ФиксированнаяСтруктура(Новый Структура(""ВидМетаданных,ИмяМетаданного"",СтрокаДЗ.ВидМетаданныхДляПоиска,СтрокаДЗ.ИмяМетаданного));
		Элементы.ЗначенияРеквизитовНовых.ОтборСтрок = Отбор;	
	Иначе
		Отбор = Новый ФиксированнаяСтруктура(Новый Структура(""ВидМетаданных,ИмяМетаданного"","""",""""));
		Элементы.ЗначенияРеквизитовНовых.ОтборСтрок = Отбор;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияРеквизитовНовыхПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	СтрокаДЗ = Элементы.ДеревоМетаданных.ТекущиеДанные;
	Если Не ЗначениеЗаполнено(СтрокаДЗ.ИмяМетаданного) ТОгда
		СообщитьПользователю(""Выберите объект метаданных, для добавления значений реквизитов"", Отказ);
	ИначеЕсли СтрокаДЗ.ВидМетаданныхДляПоиска<>""Справочники"" И СтрокаДЗ.ВидМетаданныхДляПоиска<>""Документы"" Тогда
		СообщитьПользователю(""Данная настройка доступна только для справочников или документов"", Отказ);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияРеквизитовНовыхРеквизитПриИзменении(Элемент)
	
	ТекущаяСтрока = Элементы.ЗначенияРеквизитовНовых.ТекущиеДанные;
	
	УстановитьТипПоляВСтроке(ТекущаяСтрока);
			
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТипПоляВСтроке(ТекущаяСтрока)
	
	Элементы.ЗначенияРеквизитовНовыхЗначениеРеквизита.ОграничениеТипа = ПолучитьОписаниеТиповРеквизита(ТекущаяСтрока.ВидМетаданных,ТекущаяСтрока.ИмяМетаданного,ТекущаяСтрока.Реквизит);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОписаниеТиповРеквизита(ВидМетаданных,ИмяМетаданного,ИмяРеквизита)
	
	ОбМетаданных = ПолучитьОбъектМетаданных(ВидМетаданных,ИмяМетаданного);
	
	Попытка	
		ТипРеквизита = ОбМетаданных.Реквизиты[ИмяРеквизита].Тип;
	Исключение
		ТипРеквизита = ОбМетаданных.СтандартныеРеквизиты[ИмяРеквизита].Тип;
	КонецПопытки;

	Возврат ТипРеквизита;
	
КонецФункции


&НаСервере
Процедура ЗначенияРеквизитовНовыхЗначениеРеквизитаПриИзмененииНаСервере()
	
	СтрокаТЗ = ЗначенияРеквизитовНовых.НайтиПоИдентификатору(Элементы.ЗначенияРеквизитовНовых.ТекущаяСтрока);
	ЗначениеРеквизита = СтрокаТЗ.ЗначениеРеквизита;
	
	ТипРеквизита = ТипЗнч(ЗначениеРеквизита);
	
	Если ЭтоПримитивныйТипДанных(ТипРеквизита) Тогда
		СтрокаТЗ.ЗначениеРеквизитаСтрокой = ЗначениеРеквизита;
		Возврат;
	КонецЕсли;
	
	МетаданныеЗначения = Метаданные.НайтиПоТипу(ТипРеквизита);
	Если Метаданные.Справочники.Содержит(МетаданныеЗначения) Тогда
		СтрокаТЗ.ЗначениеРеквизитаСтрокой = ЗначениеРеквизитаОбъекта(ЗначениеРеквизита,""Наименование"");
	ИначеЕсли Метаданные.Перечисления.Содержит(МетаданныеЗначения) Тогда
		Для каждого ЭлементПеречисления из МетаданныеЗначения.ЗначенияПеречисления Цикл
			Если ЭлементПеречисления.Синоним = Строка(ЗначениеРеквизита) Тогда
				СтрокаТЗ.ЗначениеРеквизитаСтрокой = ЭлементПеречисления.Имя;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗначенияРеквизитовНовыхЗначениеРеквизитаПриИзменении(Элемент)
	ЗначенияРеквизитовНовыхЗначениеРеквизитаПриИзмененииНаСервере();
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СообщитьПользователю(Знач Сообщение, Отказ = Ложь)
	Сообщить(Сообщение);	
	Отказ = Истина;
КонецПроцедуры

#область ФункцииДляСовместимости

// Возвращает структуру, содержащую значения реквизитов прочитанные из информационной базы
// по ссылке на объект.
// 
//  Если доступа к одному из реквизитов нет, то в случае ""ВыбратьРазрешенные = Ложь"" возникнет исключение прав доступа,
//  а в случае ""ВыбратьРазрешенные = Истина"" вернется значение Неопределено для всех реквизитов.
//
//  Если необходимо зачитать реквизит независимо от прав текущего пользователя,
//  то следует использовать предварительный переход в привилегированный режим.
// 
// Функция не предназначена для получения значений реквизитов пустых ссылок.
//
// Параметры:
//  Ссылка    - ЛюбаяСсылка - объект, значения реквизитов которого необходимо получить.
//
//  Реквизиты - Строка - имена реквизитов, перечисленные через запятую, в формате
//              требований к свойствам структуры.
//              Например, ""Код, Наименование, Родитель"".
//            - Структура, ФиксированнаяСтруктура - в качестве ключа передается
//              псевдоним поля для возвращаемой структуры с результатом, а в качестве
//              значения (опционально) фактическое имя поля в таблице.
//              Если значение не определено, то имя поля берется из ключа.
//            - Массив, ФиксированныйМассив - имена реквизитов в формате требований
//              к свойствам структуры.
//
//  ВыбратьРазрешенные - Булево - если Истина, то запрос к объекту выполняется с учетом прав пользователя, и в случае,
//                                если выборка будет пустая, то все реквизиты вернутся со значением Неопределено;
//                                если Ложь, то возникнет исключение при отсутствии прав на любой из реквизитов.
//
// Возвращаемое значение:
//  Структура - содержит имена (ключи) и значения затребованных реквизитов.
//              Если строка затребованных реквизитов пуста, то возвращается пустая структура.
//              Если в качестве объекта передана пустая ссылка, то все реквизиты вернутся со значением Неопределено.
//
&НаСервере
Функция ЗначенияРеквизитовОбъекта(Ссылка, Знач Реквизиты, ВыбратьРазрешенные = Ложь) Экспорт
	
	Если ТипЗнч(Реквизиты) = Тип(""Строка"") Тогда
		Если ПустаяСтрока(Реквизиты) Тогда
			Возврат Новый Структура;
		КонецЕсли;
		Реквизиты = РазложитьСтрокуВМассивПодстрок(Реквизиты, "","", Ложь);
	КонецЕсли;
	
	СтруктураРеквизитов = Новый Структура;
	Если ТипЗнч(Реквизиты) = Тип(""Структура"") Или ТипЗнч(Реквизиты) = Тип(""ФиксированнаяСтруктура"") Тогда
		СтруктураРеквизитов = Реквизиты;
	ИначеЕсли ТипЗнч(Реквизиты) = Тип(""Массив"") Или ТипЗнч(Реквизиты) = Тип(""ФиксированныйМассив"") Тогда
		Для Каждого Реквизит Из Реквизиты Цикл
			СтруктураРеквизитов.Вставить(СтрЗаменить(Реквизит, ""."", """"), Реквизит);
		КонецЦикла;
	Иначе
		ВызватьИсключение ПодставитьПараметрыВСтроку(НСтр(""ru = 'Неверный тип второго параметра Реквизиты: %1'""), Строка(ТипЗнч(Реквизиты)));
	КонецЕсли;
	
	ТекстПолей = """";
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		ИмяПоля   = ?(ЗначениеЗаполнено(КлючИЗначение.Значение),
		              СокрЛП(КлючИЗначение.Значение),
		              СокрЛП(КлючИЗначение.Ключ));
		
		Псевдоним = СокрЛП(КлючИЗначение.Ключ);
		
		ТекстПолей  = ТекстПолей + ?(ПустаяСтрока(ТекстПолей), """", "","") + ""
		|	"" + ИмяПоля + "" КАК "" + Псевдоним;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр(""Ссылка"", Ссылка);
	Запрос.Текст =
	""ВЫБРАТЬ "" + ?(ВыбратьРазрешенные, ""РАЗРЕШЕННЫЕ"", """") + ""
	|"" + ТекстПолей + ""
	|ИЗ
	|	"" + Ссылка.Метаданные().ПолноеИмя() + "" КАК ПсевдонимЗаданнойТаблицы
	|ГДЕ
	|	ПсевдонимЗаданнойТаблицы.Ссылка = &Ссылка
	|"";
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = Новый Структура;
	Для Каждого КлючИЗначение Из СтруктураРеквизитов Цикл
		Результат.Вставить(КлючИЗначение.Ключ);
	КонецЦикла;
	
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(Результат, Выборка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

// Возвращает значение реквизита, прочитанного из информационной базы по ссылке на объект.
// 
//  Если доступа к реквизиту нет, то в случае ""ВыбратьРазрешенные = Ложь"" возникнет исключение прав доступа,
//  а в случае ""ВыбратьРазрешенные = Истина"" вернется значение Неопределено.
//
//  Если необходимо зачитать реквизит независимо от прав текущего пользователя,
//  то следует использовать предварительный переход в привилегированный режим.
//
// Функция не предназначена для получения значений реквизитов пустых ссылок.
// 
// Параметры:
//  Ссылка    - ЛюбаяСсылка - объект, значения реквизитов которого необходимо получить.
//  ИмяРеквизита - Строка - имя получаемого реквизита.
//  ВыбратьРазрешенные - Булево - если Истина, то запрос к объекту выполняется с учетом прав пользователя, и в случае,
//                                если выборка будет пустая, то вернется значение Неопределено.
// 
// Возвращаемое значение:
//  Произвольный - зависит от типа значения прочитанного реквизита.
// 
&НаСервере
Функция ЗначениеРеквизитаОбъекта(Ссылка, ИмяРеквизита, ВыбратьРазрешенные = Ложь) Экспорт
	
	Результат = ЗначенияРеквизитовОбъекта(Ссылка, ИмяРеквизита, ВыбратьРазрешенные);
	Возврат Результат[СтрЗаменить(ИмяРеквизита, ""."", """")];
	
КонецФункции 

// Возвращает значения реквизитов, прочитанные из информационной базы
// для нескольких объектов.
// 
//  Если доступа к одному из реквизитов какого-либо объекта нет, то в случае ""ВыбратьРазрешенные = Ложь"" возникнет
//  исключение прав доступа, а в случае ""ВыбратьРазрешенные = Истина"" вернется значение Неопределено для всех
//  реквизитов этого объекта.
//
//  Если необходимо зачитать реквизит независимо от прав текущего пользователя,
//  то следует использовать предварительный переход в привилегированный режим.
//
// Функция не предназначена для получения значений реквизитов пустых ссылок.
// 
// Параметры:
//  МассивСсылок - Массив - массив ссылок на объекты одного типа.
//                 ВАЖНО! Значения массива должны быть ссылками на объекты ОДНОГО типа!
//  ИменаРеквизитов - Строка - имена реквизитов перечисленные через запятую, в формате требований к свойствам структуры.
//                             Например, ""Код, Наименование, Родитель"".
// 
//  ВыбратьРазрешенные - Булево - если Истина, то запрос к объектам выполняется с учетом прав пользователя, и в случае,
//                                если какой-либо объект будет исключен из выборки по правам, то все реквизиты этого объекта
//                                вернутся со значением Неопределено;
//                                если Ложь, то возникнет исключение при отсутствии прав на любой из реквизитов любого
//                                из объектов.
// Возвращаемое значение:
//  Соответствие - список объектов и значений их реквизитов:
//   * Ключ - ЛюбаяСсылка - ссылка на объект;
//   * Значение - Структура - значения реквизитов:
//    ** Ключ - Строка - имя реквизита;
//    ** Значение - Произвольный - значение реквизита.
// 
&НаСервере
Функция ЗначенияРеквизитовОбъектов(МассивСсылок, ИменаРеквизитов, ВыбратьРазрешенные = Ложь) Экспорт
	
	ЗначенияРеквизитов = Новый Соответствие;
	Если МассивСсылок.Количество() = 0 Тогда
		Возврат ЗначенияРеквизитов;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		""ВЫБРАТЬ "" + ?(ВыбратьРазрешенные, ""РАЗРЕШЕННЫЕ"", """") + ""
		|	Ссылка КАК Ссылка, "" + ИменаРеквизитов + ""
		|ИЗ
		|	"" + МассивСсылок[0].Метаданные().ПолноеИмя() + "" КАК Таблица
		|ГДЕ
		|	Таблица.Ссылка В (&МассивСсылок)"";
	Запрос.УстановитьПараметр(""МассивСсылок"", МассивСсылок);
	Выборка = Запрос.Выполнить().Выбрать();
	
	Для Каждого Ссылка Из МассивСсылок Цикл
		ЗначенияРеквизитов.Вставить(Ссылка, Новый Структура(ИменаРеквизитов));
	КонецЦикла;
	
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(ЗначенияРеквизитов[Выборка.Ссылка], Выборка);
	КонецЦикла;
	
	Возврат ЗначенияРеквизитов;
	
КонецФункции


// Преобразует строку таблицы значений в структуру.
// Свойства структуры и их значения совпадают с колонками переданной строки.
//
// Параметры:
//  СтрокаТаблицыЗначений - СтрокаТаблицыЗначений - строка таблицы значений.
//
// Возвращаемое значение:
//  Структура - преобразованная строка таблицы значений.
//
&НаСервере
Функция СтрокаТаблицыЗначенийВСтруктуру(СтрокаТаблицыЗначений) Экспорт
	
	Структура = Новый Структура;
	Для каждого Колонка Из СтрокаТаблицыЗначений.Владелец().Колонки Цикл
		Структура.Вставить(Колонка.Имя, СтрокаТаблицыЗначений[Колонка.Имя]);
	КонецЦикла;
	
	Возврат Структура;
	
КонецФункции

// Подставляет параметры в строку. Максимально возможное число параметров - 9.
// Параметры в строке задаются как %<номер параметра>. Нумерация параметров начинается с единицы.
//
// Параметры:
//  ШаблонСтроки  - Строка - шаблон строки с параметрами (вхождениями вида ""%<номер параметра>"", 
//                           например, ""%1 пошел в %2"");
//  Параметр<n>   - Строка - значение подставляемого параметра.
//
// Возвращаемое значение:
//  Строка   - текстовая строка с подставленными параметрами.
//
// Пример:
//  СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(""ru='%1 пошел в %2'""), ""Вася"", ""Зоопарк"") = ""Вася пошел
//  в Зоопарк"".
//
&НаСервере
Функция ПодставитьПараметрыВСтроку(Знач ШаблонСтроки,
	Знач Параметр1, Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено,
	Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено,
	Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено) Экспорт
	
	ЕстьПараметрыСПроцентом = Найти(Параметр1, ""%"") > 0
		Или Найти(Параметр2, ""%"") > 0
		Или Найти(Параметр3, ""%"") > 0
		Или Найти(Параметр4, ""%"") > 0
		Или Найти(Параметр5, ""%"") > 0
		Или Найти(Параметр6, ""%"") > 0
		Или Найти(Параметр7, ""%"") > 0
		Или Найти(Параметр8, ""%"") > 0
		Или Найти(Параметр9, ""%"") > 0;
		
	Если ЕстьПараметрыСПроцентом Тогда
		Возврат ПодставитьПараметрыСПроцентом(ШаблонСтроки, Параметр1,
			Параметр2, Параметр3, Параметр4, Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
	КонецЕсли;
	
	ШаблонСтроки = СтрЗаменить(ШаблонСтроки, ""%1"", Параметр1);
	ШаблонСтроки = СтрЗаменить(ШаблонСтроки, ""%2"", Параметр2);
	ШаблонСтроки = СтрЗаменить(ШаблонСтроки, ""%3"", Параметр3);
	ШаблонСтроки = СтрЗаменить(ШаблонСтроки, ""%4"", Параметр4);
	ШаблонСтроки = СтрЗаменить(ШаблонСтроки, ""%5"", Параметр5);
	ШаблонСтроки = СтрЗаменить(ШаблонСтроки, ""%6"", Параметр6);
	ШаблонСтроки = СтрЗаменить(ШаблонСтроки, ""%7"", Параметр7);
	ШаблонСтроки = СтрЗаменить(ШаблонСтроки, ""%8"", Параметр8);
	ШаблонСтроки = СтрЗаменить(ШаблонСтроки, ""%9"", Параметр9);
	Возврат ШаблонСтроки;
	
КонецФункции

// Вставляет параметры в строку, учитывая, что в параметрах могут использоваться подстановочные слова %1, %2 и т.д.
&НаСервере
Функция ПодставитьПараметрыСПроцентом(Знач СтрокаПодстановки,
	Знач Параметр1, Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено,
	Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено,
	Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено)
	
	Результат = """";
	Позиция = Найти(СтрокаПодстановки, ""%"");
	Пока Позиция > 0 Цикл 
		Результат = Результат + Лев(СтрокаПодстановки, Позиция - 1);
		СимволПослеПроцента = Сред(СтрокаПодстановки, Позиция + 1, 1);
		ПодставляемыйПараметр = """";
		Если СимволПослеПроцента = ""1"" Тогда
			ПодставляемыйПараметр =  Параметр1;
		ИначеЕсли СимволПослеПроцента = ""2"" Тогда
			ПодставляемыйПараметр =  Параметр2;
		ИначеЕсли СимволПослеПроцента = ""3"" Тогда
			ПодставляемыйПараметр =  Параметр3;
		ИначеЕсли СимволПослеПроцента = ""4"" Тогда
			ПодставляемыйПараметр =  Параметр4;
		ИначеЕсли СимволПослеПроцента = ""5"" Тогда
			ПодставляемыйПараметр =  Параметр5;
		ИначеЕсли СимволПослеПроцента = ""6"" Тогда
			ПодставляемыйПараметр =  Параметр6;
		ИначеЕсли СимволПослеПроцента = ""7"" Тогда
			ПодставляемыйПараметр =  Параметр7
		ИначеЕсли СимволПослеПроцента = ""8"" Тогда
			ПодставляемыйПараметр =  Параметр8;
		ИначеЕсли СимволПослеПроцента = ""9"" Тогда
			ПодставляемыйПараметр =  Параметр9;
		КонецЕсли;
		Если ПодставляемыйПараметр = """" Тогда
			Результат = Результат + ""%"";
			СтрокаПодстановки = Сред(СтрокаПодстановки, Позиция + 1);
		Иначе
			Результат = Результат + ПодставляемыйПараметр;
			СтрокаПодстановки = Сред(СтрокаПодстановки, Позиция + 2);
		КонецЕсли;
		Позиция = Найти(СтрокаПодстановки, ""%"");
	КонецЦикла;
	Результат = Результат + СтрокаПодстановки;
	
	Возврат Результат;
КонецФункции

&НаСервере
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = "","", Знач ПропускатьПустыеСтроки = Неопределено) Экспорт
	
	Результат = Новый Массив;
	
	// для обеспечения обратной совместимости
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = "" "", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда 
			Если Разделитель = "" "" Тогда
				Результат.Добавить("""");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
		
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Результат.Добавить(Строка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции 

#КонецОбласти

//
&НаКлиенте
Функция ПрочитатьСоответствиеИзСтрокиJSON(Знач ИсхСтрока) 
	ЧтениеJSON = Новый ЧтениеJSON;
	ЧтениеJSON.УстановитьСтроку(ИсхСтрока);
	
	НастроенноеСоответствие = ПрочитатьJSON(ЧтениеJSON, Истина);
		
	Возврат НастроенноеСоответствие;
	
КонецФункции
 
//
&НаКлиентеНаСервереБезКонтекста
Функция КлючНастройки() 
		
	Возврат ""smoke"";
	
КонецФункции
 ",
{4,4,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",ad2d63ee-86f7-4b9d-8554-51242235153f}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{2},0,"ДеревоМетаданных",
{1,1,
{"ru","Дерево метаданных"}
},
{"Pattern",
{"#",e603c0f2-92fb-4d47-8f38-a44a381cf235}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,6,
{5,1,0,"Исключено",
{1,1,
{"ru","Исключено"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"ВидМетаданных",
{1,1,
{"ru","Вид метаданных"}
},
{"Pattern",
{"S",200,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ИмяМетаданного",
{1,1,
{"ru","Имя метаданного"}
},
{"Pattern",
{"S",200,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ВидПроверки",
{1,1,
{"ru","Вид проверки"}
},
{"Pattern",
{"S",200,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ВидМетаданныхДляПоиска",
{1,1,
{"ru","Вид метаданных для поиска"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"ВидПроверкиДляПоиска",
{1,1,
{"ru","Вид проверки для поиска"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{3},0,"ЗначенияРеквизитовНовых",
{1,1,
{"ru","Значения реквизитов новых"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,5,
{5,1,0,"ИмяМетаданного",
{1,1,
{"ru","Имя метаданного"}
},
{"Pattern",
{"S",200,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Реквизит",
{1,1,
{"ru","Реквизит"}
},
{"Pattern",
{"S",200,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ЗначениеРеквизита",
{1,1,
{"ru","Значение реквизита"}
},
{"Pattern",
{"#",38bfd075-3e63-4aaa-a93e-94521380d579},
{"#",474c3bf6-08b5-4ddc-a2ad-989cedf11583},
{"B"},
{"#",6291e9b3-8df5-44e1-b6b2-d9fe008016c0},
{"#",99892482-ed55-4fb5-a7f7-20888820a758},
{"S"},
{"D","D"},
{"#",ac606d60-0209-4159-8e4c-794bc091ce38},
{"N",10,0,0},
{"#",e61ef7b8-f3e1-4f4b-8ac7-676e90524997}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ЗначениеРеквизитаСтрокой",
{1,1,
{"ru","Значение реквизита строкой"}
},
{"Pattern",
{"B"},
{"S"},
{"D","D"},
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ВидМетаданных",
{1,1,
{"ru","Вид метаданных"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{4},0,"СтрокаJSON",
{1,1,
{"ru","Строка JSON"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,3,
{8,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗаполнитьДеревоМетаданных",
{1,1,
{"ru","Обновить дерево метаданных"}
},
{1,1,
{"ru","Заполнить дерево метаданных"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗаполнитьДеревоМетаданных",3,0,0,
{0,0},1,0,1,0,0},
{8,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СоздатьФайлНастроек",
{1,1,
{"ru","Создать файл настроек"}
},
{1,1,
{"ru","Создать файл настроек"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СоздатьФайлНастроек",3,0,0,
{0,0},1,0,1,0,0},
{8,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьФайлНастроек",
{1,1,
{"ru","Загрузить файл настроек"}
},
{1,1,
{"ru","Загрузить файл настроек"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьФайлНастроек",3,0,0,
{0,0},1,0,1,0,0}
},
{0,0},
{0,0},0,0}