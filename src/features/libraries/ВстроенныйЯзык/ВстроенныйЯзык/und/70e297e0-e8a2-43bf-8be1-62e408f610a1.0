{3,
{46,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"Контекст",1,0,
{1,0},
{1,0},
{0},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{2,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КонтекстКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{3,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КонтекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},"","",0,1,"",2,0,0,0,0,0,3,3,0,0,2,100,1,1,0},"//начало текста модуля
&НаКлиенте
Перем Ванесса;

&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//пример вызова Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);
	
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВыражениеВнутреннегоЯзыкаИстинно(Парам01)"",""ВыражениеВнутреннегоЯзыкаИстинно"",""И выражение внутреннего языка """"Контекст.КоличествоФинальное - Контекст.КоличествоНачальное = 1"""" Истинно"",""Позволяет проверить произвольное выражение встроенного языка"",""Встроенный язык"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗапоминаюЗначениеВыраженияВПеременную(Парам01,Парам02)"",""ЯЗапоминаюЗначениеВыраженияВПеременную"",""И Я запоминаю значение выражения """"Ванесса.ПолучитьМассивPIDОкон1С().Количество()"""" в переменную """"КоличествоНачальное"""""",""Позволяет сохранить в переменную Контекст произвольное выражение встроенного языка"",""Встроенный язык"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯЗапоминаюЗначениеВыраженияВПеременнуюГлобально(Парам01,Парам02)"",""ЯЗапоминаюЗначениеВыраженияВПеременнуюГлобально"",""И Я запоминаю значение выражения """"Ванесса.ПолучитьМассивPIDОкон1С().Количество()"""" в переменную """"КоличествоНачальное"""" глобально"",""Позволяет сохранить в переменную КонтекстСохраняемый произвольное выражение встроенного языка"",""Встроенный язык"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЗатемЯВыполняюКодВстроенногоЯзыка(ТабПарам)"",""ЗатемЯВыполняюКодВстроенногоЯзыка"",""И затем я выполняю код встроенного языка"",""Позволяет выполнить произвольный код на встроенном языке"",""Встроенный язык"");

	Возврат ВсеТесты;
КонецФункции

&НаКлиенте
Процедура ПередНачаломСценария() Экспорт
КонецПроцедуры

&НаКлиенте
Процедура ПередОкончаниемСценария() Экспорт
КонецПроцедуры


&НаКлиенте
//И выражение внутреннего языка ""Контекст.КоличествоНачальноеПлюсОдин - Контекст.КоличествоНачальное = 1"" Истинно
//@ВыражениеВнутреннегоЯзыкаИстинно(Парам01)
Процедура ВыражениеВнутреннегоЯзыкаИстинно(Выражение) Экспорт
	ЗначениеВыражения = Ванесса.ВычислитьВнутреннееВыражение(Выражение);
	Если ЗначениеВыражения <> Истина Тогда
		ВызватьИсключение ""Выражение <"" + Выражение + ""> оказалось равно <"" + ЗначениеВыражения + "">, а ожидали <"" + Строка(Истина) + "">."";
	КонецЕсли;	 
КонецПроцедуры

&НаКлиенте
//И Я запоминаю выражение внутреннего языка ""Ванесса.ПолучитьМассивPIDОкон1С().Количество()"" в переменную ""КоличествоНачальноеПлюсОдинВторойРаз""
//@ЯЗапоминаюЗначениеВыраженияВПеременную(Парам01,Парам02)
Процедура ЯЗапоминаюЗначениеВыраженияВПеременную(Знач Выражение,ИмяПеременной) Экспорт
	ЗначениеВыражения = Ванесса.ВычислитьВнутреннееВыражение(Выражение);
	Контекст.Вставить(ИмяПеременной,ЗначениеВыражения);
КонецПроцедуры

&НаКлиенте
//И Я запоминаю выражение внутреннего языка ""Ванесса.ПолучитьМассивPIDОкон1С().Количество()"" в переменную ""КоличествоНачальноеПлюсОдинВторойРаз"" глобально
//@ЯЗапоминаюЗначениеВыраженияВПеременнуюГлобально(Парам01,Парам02)
Процедура ЯЗапоминаюЗначениеВыраженияВПеременнуюГлобально(Выражение,ИмяПеременной) Экспорт
	ЗначениеВыражения = Ванесса.ВычислитьВнутреннееВыражение(Выражение);
	Попытка
		КонтекстСохраняемый.Вставить(ИмяПеременной,ЗначениеВыражения);
	Исключение
		Ванесса.СохранитьЗначениеВКонтекстСохраняемый(ИмяПеременной,ЗначениеВыражения);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
//И затем я выполняю код встроенного языка
//@ЗатемЯВыполняюКодВстроенногоЯзыка(ТабПарам)
Процедура ЗатемЯВыполняюКодВстроенногоЯзыка(ТабПарам) Экспорт
	Текст = """";
	Для Каждого СтрокаТабПарам Из ТабПарам Цикл
		Текст = Текст + СтрокаТабПарам.Кол1 + Символы.ПС;
	КонецЦикла;	
	
	Выполнить(Текст);
КонецПроцедуры


",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}