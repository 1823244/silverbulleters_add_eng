{3,
{46,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",0,1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0},"//начало текста модуля

///////////////////////////////////////////////////
//Служебная часть
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//пример вызова Ванесса.ДобавитьШагВМассивТестов(МассивТестов, Снипет, ИмяПроцедуры,ПредставлениеТеста = Неопределено,ОписаниеШага = Неопределено,ТипШагаДляОписания = Неопределено,ТипШагаВДереве = Неопределено);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ИмеетсяМетаданное(Парам01)"",""ИмеетсяМетаданное"",""Дано:  Имеется метаданное """"Справочник.Справочник1"""""",
		""Проверяет наличие метаданного в метаданных ИБ"", ""Данные"");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВСпискеЭлементовСправочникаСуществуетНеМенееЭлементов(Парам01,Парам02)"",""ВСпискеЭлементовСправочникаСуществуетНеМенееЭлементов"",""Тогда В списке элементов справочника """"Справочник1"""" существует не менее 1000 элементов"",
		""Проверяет наличие указанного количества элементов в справочнике"", ""Данные"");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Дано:  Имеется метаданное ""Справочник.Справочник1""
//@ИмеетсяМетаданное(Парам01)
Процедура ИмеетсяМетаданное(ИмяОбъекта) Экспорт
	Ванесса.ПроверитьНеРавенство(ИмеетсяМетаданноеНаСервере(ИмяОбъекта),Ложь);
КонецПроцедуры

&НаСервере
Функция ИмеетсяМетаданноеНаСервере(ИмяОбъекта)
	 Если ТипЗнч(Метаданные.НайтиПоПолномуИмени(ИмяОбъекта))=Тип(""Неопределено"") Тогда
		 Возврат Ложь;
	 Иначе
		 Возврат Истина;
	 КонецЕсли;	 
КонецФункции

&НаКлиенте
//Тогда В списке элементов справочника ""Справочник1"" существует не менее 1000 элементов
//@ВСпискеЭлементовСправочникаСуществуетНеМенееЭлементов(Парам01,Парам02)
Процедура ВСпискеЭлементовСправочникаСуществуетНеМенееЭлементов(ИмяСправочника,Количество) Экспорт
	СуществуетЭлементов = ПолучитьКоличествоЭлементовСправочника(ИмяСправочника);
	Ванесса.ПроверитьРавенство(СуществуетЭлементов>Количество, Истина);
КонецПроцедуры

Функция ПолучитьКоличествоЭлементовСправочника(ИмяСправочника)
	
	СуществуетЭлементов = 0;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	""ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК Счетчик
	|ИЗ
	|	Справочник.""+ИмяСправочника+"" КАК ИмяСправочника"";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда;
	
		СуществуетЭлементов = ВыборкаДетальныеЗаписи.Счетчик;
		
	КонецЕсли;	
	
	Возврат СуществуетЭлементов;
КонецФункции	

",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}