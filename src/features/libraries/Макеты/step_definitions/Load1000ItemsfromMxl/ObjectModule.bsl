
///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

// контекст фреймворка Vanessa-Behavior
Перем Ванесса;

// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//пример вызова Ванесса.ДобавитьШагВМассивТестов(МассивТестов, Снипет, ИмяПроцедуры,ПредставлениеТеста = Неопределено,ОписаниеШага = Неопределено,ТипШагаДляОписания = Неопределено,ТипШагаВДереве = Неопределено);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ИмеетсяМетаданное(Парам01)","ИмеетсяМетаданное","Дано:  Имеется метаданное ""Справочник1""",
		"Проверяет наличие метаданного в метаданных ИБ", "Данные");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"СуществуетМакет(Парам01)","СуществуетМакет","и существует макет ""ТысячаЭлементовСправочника1""",
		"Проверяет наличие макета", "Макет");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗагружаюМакет(Парам01)","ЯЗагружаюМакет","И я загружаю макет ""ТысячаЭлементовСправочника1""",
		"Загружает данные из макета, полученного через плагин ГенераторДанных", "Данные");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ВСпискеЭлементовСправочникаСуществуетНеМенееЭлементов(Парам01,Парам02)","ВСпискеЭлементовСправочникаСуществуетНеМенееЭлементов","Тогда В списке элементов справочника ""Справочник1"" существует не менее 1000 элементов",
		"Проверяет наличие указанного количества элементов в справочнике", "Данные");

	Возврат ВсеТесты;
КонецФункции
	
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакет(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры



///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

//Дано:  Имеется метаданное "Справочник1"
//@ИмеетсяМетаданное(Парам01)
Процедура ИмеетсяМетаданное(ИмяОбъекта) Экспорт
	
	Ванесса.ПроверитьНеРавенство(Метаданные.НайтиПоПолномуИмени(ИмяОбъекта),Неопределено);
	
КонецПроцедуры

//и существует макет "ТысячаЭлементовСправочника1"
//@СуществуетМакет(Парам01)
Процедура СуществуетМакет(ИмяМакета) Экспорт
	
	Попытка
		Макет = ПолучитьМакет(ИмяМакета);
	Исключение
		ВызватьИсключение "Не найден макет "+ИмяМакета+" ошибка: "+ОписаниеОшибки();
	КонецПопытки;
	
КонецПроцедуры

//И я загружаю макет "ТысячаЭлементовСправочника1"
//@ЯЗагружаюМакет(Парам01)
Процедура ЯЗагружаюМакет(ИмяМакета) Экспорт
	Ошибка = """";
	Попытка
		ОбычнаяФормаВанессы 				= Ванесса.ПолучитьФорму("Форма");
		ОбработкаСвязаннаяСИсполняемойФичей = ОбычнаяФормаВанессы.ОбработкаСвязаннаяСИсполняемойФичей; 
		Макет 								= ОбработкаСвязаннаяСИсполняемойФичей.ПолучитьМакетОбработки(ИмяМакета);
		СтруктураДанных 					= Ванесса.СоздатьДанныеПоТабличномуДокументу(Макет);
		Ванесса.ПроверитьНеРавенство(СтруктураДанных,Неопределено,"Получили структуру данных.");
	Исключение
		Ошибка =  СокрЛП(ОписаниеОшибки());  		
		ВызватьИсключение "Шаг выполнен с ошибкой: " + СокрЛП(Ошибка);	
	КонецПопытки;  
КонецПроцедуры

//Тогда В списке элементов справочника "Справочник1" существует не менее 1000 элементов
//@ВСпискеЭлементовСправочникаСуществуетНеМенееЭлементов(Парам01,Парам02)
Процедура ВСпискеЭлементовСправочникаСуществуетНеМенееЭлементов(ИмяСправочника,Количество) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК Счетчик
	|ИЗ
	|	Справочник."+ИмяСправочника+" КАК ИмяСправочника";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	ВыборкаДетальныеЗаписи.Следующий();
	
	СуществуетЭлементов = ВыборкаДетальныеЗаписи.Счетчик;
	
	Ванесса.ПроверитьРавенство(СуществуетЭлементов>Количество, Истина)

	
КонецПроцедуры
