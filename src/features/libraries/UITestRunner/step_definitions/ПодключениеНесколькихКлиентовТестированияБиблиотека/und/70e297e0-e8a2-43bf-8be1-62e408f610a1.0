{3,
{46,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,0},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",0,1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0},"//начало текста модуля

///////////////////////////////////////////////////
//Служебные функции и процедуры
///////////////////////////////////////////////////

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//пример вызова Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯСоздаюЭлементГдеНаименованиеРавноИмениПользователя(Парам01)"",""ЯСоздаюЭлементГдеНаименованиеРавноИмениПользователя"",""И я создаю элемент """"Справочник1"""" где Наименование равно имени пользователя"","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ВБазеДанныхЕстьЭлементаСНаименованиемРавным(Парам01,Парам02,Парам03)"",""ВБазеДанныхЕстьЭлементаСНаименованиемРавным"",""И в базе данных есть 2 элемента """"Справочник1"""" с Наименованием равным """"Пользователь1"""""","""","""");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции



///////////////////////////////////////////////////
//Работа со сценариями
///////////////////////////////////////////////////

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//И я создаю элемент ""Справочник1"" где Наименование равно имени пользователя
//@ЯСоздаюЭлементГдеНаименованиеРавноИмениПользователя(Парам01)
Процедура ЯСоздаюЭлементГдеНаименованиеРавноИмениПользователя(ВидСправочника) Экспорт
	Ванесса.Шаг(""Когда В панели разделов я выбираю """"Основная"""""");
	Ванесса.Шаг(""И     В панели функций я выбираю """""" + ВидСправочника + """""""");
	Ванесса.Шаг(""И     я нажимаю на кнопку """"Создать"""""");
	Ванесса.Шаг(""И     я нажимаю на кнопку """"Ввести в наименование имя пользовтаеля"""""");
	Ванесса.Шаг(""И     я нажимаю на кнопку """"Записать и закрыть"""""");
КонецПроцедуры

&НаСервере
Функция ПолучитьКоличествоЭлементовСправочикаПоНаименованию(ВидСправочника,Наименование)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		""ВЫБРАТЬ
		|	КОЛИЧЕСТВО(Справочник1.Ссылка) КАК КоличествоЭлементов
		|ИЗ
		|	Справочник.Справочник1 КАК Справочник1
		|ГДЕ
		|	Справочник1.Наименование = &Наименование"";
		
		
	Запрос.Текст = СтрЗаменить(Запрос.Текст,""Справочник1"",ВидСправочника);	
	Запрос.УстановитьПараметр(""Наименование"", Наименование);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		Возврат ВыборкаДетальныеЗаписи.КоличествоЭлементов;
	КонецЦикла;
	
	Возврат 0;
КонецФункции	

&НаКлиенте
//И в базе данных есть 2 элемента ""Справочник1"" с Наименованием равным ""Пользователь1""
//@ВБазеДанныхЕстьЭлементаСНаименованиемРавным(Парам01,Парам02,Парам03)
Процедура ВБазеДанныхЕстьЭлементаСНаименованиемРавным(КоличествоЭлементов,ВидСправочника,Наименование) Экспорт
	КоличествоЭлементовСправочика = ПолучитьКоличествоЭлементовСправочикаПоНаименованию(ВидСправочника,Наименование);
	Если КоличествоЭлементовСправочика <> КоличествоЭлементов Тогда
		ВызватьИсключение ""Ожидали <"" + КоличествоЭлементов + ""> элементов справочника <"" + ВидСправочника + "">, а нашли <"" + КоличествоЭлементовСправочика + ""> элементов."";
	КонецЕсли;	 
КонецПроцедуры

//окончание текста модуля",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",1fa267af-3d54-4f70-ac00-718486d7aafd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}