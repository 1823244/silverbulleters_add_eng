
#Область Служебные_функции_и_процедуры

// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//пример вызова Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПеременнаяСоответствуетРегулярномуВыражению(Парам01,Парам02)","ПеременнаяСоответствуетРегулярномуВыражению","Тогда переменная ""ПроверяемаяСтрока"" соответствует регулярному выражению ""\d\d\d""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ЯЗапоминаюСтрокуКакПеременную(Парам01,Парам02)","ЯЗапоминаюСтрокуКакПеременную","Когда Я запоминаю строку ""Привет"" как переменную ""ПроверяемаяСтрока""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПеременнаяСоответствуетПростомуШаблону(Парам01,Парам02)","ПеременнаяСоответствуетПростомуШаблону","Тогда переменная ""ПроверяемаяСтрока"" соответствует простому шаблону ""*ри*""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПеременнаяНеСоответствуетРегулярномуВыражению(Парам01,Парам02)","ПеременнаяНеСоответствуетРегулярномуВыражению","Тогда переменная ""ПроверяемаяСтрока"" не соответствует регулярному выражению ""\d{4}""","","");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,"ПеременнаяНеСоответствуетПростомуШаблону(Парам01,Парам02)","ПеременнаяНеСоответствуетПростомуШаблону","Тогда переменная ""ПроверяемаяСтрока"" не соответствует простому шаблону ""*ДругойТекст*""","","");

	Возврат ВсеТесты;
КонецФункции
	
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакет(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

//Когда Я запоминаю строку "Привет" как переменную "ПроверяемаяСтрока"
//@ЯЗапоминаюСтрокуКакПеременную(Парам01,Парам02)
Процедура ЯЗапоминаюСтрокуКакПеременную(ИсходнаяСтрока, ИмяПеременной) Экспорт
	Контекст.Вставить(ИмяПеременной, ИсходнаяСтрока);
КонецПроцедуры

//Тогда переменная "ПроверяемаяСтрока" соответствует регулярному выражению "/d/d/d"
//@ПеременнаяСоответствуетРегулярномуВыражению(Парам01,Парам02)
Процедура ПеременнаяСоответствуетРегулярномуВыражению(ИмяПеременной, ШаблонРегулярки) Экспорт
	
	ПроверяемаяСтрока = "";
	
	Нашли = ПеременнаяСоответствуетРегулярномуВыражениюВнутр(ИмяПеременной, ШаблонРегулярки, ПроверяемаяСтрока);
	
	Ожидаем = Ванесса.Плагин("УтвержденияBDD");
	Ожидаем.Что(Нашли, 
		СтрШаблон("Ожидали, что проверяемая строка из переменной совпадает с шаблоном регулярного выражения, а это не так
		|Регулярное выражение %1
		|Имя переменной %2
		|Проверяемая строка:
		|%3", ШаблонРегулярки, ИмяПеременной, ПроверяемаяСтрока))
		.ЭтоИстина();
КонецПроцедуры

//Тогда переменная "ПроверяемаяСтрока" не соответствует регулярному выражению "\d{4}"
//@ПеременнаяНеСоответствуетРегулярномуВыражению(Парам01,Парам02)
Процедура ПеременнаяНеСоответствуетРегулярномуВыражению(ИмяПеременной, ШаблонРегулярки) Экспорт
	
	ПроверяемаяСтрока = "";
	
	Нашли = ПеременнаяСоответствуетРегулярномуВыражениюВнутр(ИмяПеременной, ШаблонРегулярки, ПроверяемаяСтрока);
	
	Ожидаем = Ванесса.Плагин("УтвержденияBDD");
	Ожидаем.Что(Нашли, 
		СтрШаблон("Ожидали, что проверяемая строка не совпадает с шаблоном регулярного выражения, а она совпадает, что неверно
		|Регулярное выражение %1
		|Имя переменной %2
		|Проверяемая строка:
		|%3", ШаблонРегулярки, ИмяПеременной, ПроверяемаяСтрока))
		.ЭтоЛожь();
КонецПроцедуры

//Тогда переменная "ПроверяемаяСтрока" соответствует простому шаблону "*ри*"
//@ПеременнаяСоответствуетПростомуШаблону(Парам01,Парам02)
Процедура ПеременнаяСоответствуетПростомуШаблону(ИмяПеременной, ШаблонРегулярки) Экспорт
	
	ПроверяемаяСтрока = "";
	Нашли = ПеременнаяСоответствуетПростомуШаблонуВнутр(ИмяПеременной, ШаблонРегулярки, ПроверяемаяСтрока);
	
	Ожидаем = Ванесса.Плагин("УтвержденияBDD");
	Ожидаем.Что(Нашли, 
		СтрШаблон("Ожидали, что проверяемая строка совпадает с шаблоном регулярного выражения, а это не так
		|Шаблон проверки %1
		|Имя переменной %2
		|Проверяемая строка:
		|%3", ШаблонРегулярки, ИмяПеременной, ПроверяемаяСтрока))
		.ЭтоИстина();
КонецПроцедуры

//Тогда переменная "ПроверяемаяСтрока" не соответствует простому шаблону "*ДругойТекст*"
//@ПеременнаяНеСоответствуетПростомуШаблону(Парам01,Парам02)
Процедура ПеременнаяНеСоответствуетПростомуШаблону(ИмяПеременной, ШаблонРегулярки) Экспорт
	ПроверяемаяСтрока = "";
	Нашли = ПеременнаяСоответствуетПростомуШаблонуВнутр(ИмяПеременной, ШаблонРегулярки, ПроверяемаяСтрока);
	
	Ожидаем = Ванесса.Плагин("УтвержденияBDD");
	Ожидаем.Что(Нашли, 
		СтрШаблон("Ожидали, что проверяемая строка не совпадает с простым шаблоном, а она совпадает, что неверно
		|Шаблон проверки %1
		|Имя переменной %2
		|Проверяемая строка:
		|%3", ШаблонРегулярки, ИмяПеременной, ПроверяемаяСтрока))
		.ЭтоЛожь();
КонецПроцедуры

Функция ПеременнаяСоответствуетРегулярномуВыражениюВнутр(ИмяПеременной, ШаблонРегулярки, ПроверяемаяСтрока)
	
	РегулярныеВыражения = Ванесса.Плагин("РегулярныеВыражения");
	РегулярныеВыражения.Подготовить(ШаблонРегулярки);
	
	ПроверяемаяСтрока = Контекст[ИмяПеременной];
	
	Нашли = РегулярныеВыражения.Совпадает(ПроверяемаяСтрока);
	
	Возврат Нашли;
КонецФункции

Функция ПеременнаяСоответствуетПростомуШаблонуВнутр(ИмяПеременной, ШаблонРегулярки, ПроверяемаяСтрока)
	
	РегулярныеВыражения = Ванесса.Плагин("РегулярныеВыражения");
	
	ПроверяемаяСтрока = Контекст[ИмяПеременной];
	
	Нашли = РегулярныеВыражения.СтрокаСоответствуетШаблону(ПроверяемаяСтрока, ШаблонРегулярки);
	
	Возврат Нашли;
КонецФункции
