{3,
{46,0,0,0,0,1,0,0,00000000-0000-0000-0000-000000000000,1,
{1,1,
{"ru","тест_дддд"}
},0,0,1,1,1,0,1,0,
{0,1,0},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},0,"","",0,1,"",0,0,0,0,0,0,3,3,0,0,0,100,1,1,0},"
#Область Служебные_функции_и_процедуры

&НаКлиенте
// контекст фреймворка Vanessa-Behavior
Перем Ванесса;
 
&НаКлиенте
// Структура, в которой хранится состояние сценария между выполнением шагов. Очищается перед выполнением каждого сценария.
Перем Контекст Экспорт;
 
&НаКлиенте
// Структура, в которой можно хранить служебные данные между запусками сценариев. Существует, пока открыта форма Vanessa-Behavior.
Перем КонтекстСохраняемый Экспорт;

&НаКлиенте
// Функция экспортирует список шагов, которые реализованы в данной внешней обработке.
Функция ПолучитьСписокТестов(КонтекстФреймворкаBDD) Экспорт
	Ванесса = КонтекстФреймворкаBDD;
	
	ВсеТесты = Новый Массив;

	//описание параметров
	//пример вызова Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,Снипет,ИмяПроцедуры,ПредставлениеТеста,ОписаниеШага,ТипШага,Транзакция,Параметр);

	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯУстанавливаюSeverity(Парам01)"",""ЯУстанавливаюSeverity"",""Когда Я устанавливаю severity 'critical'"","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯУстанавливаюНазваниеФичи(Парам01)"",""ЯУстанавливаюНазваниеФичи"",""Когда Я устанавливаю название фичи 'Мой дивный чудный мир'"","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯУстанавливаюРучноеВыполнениеСценария()"",""ЯУстанавливаюРучноеВыполнениеСценария"",""Когда Я устанавливаю ручное выполнение сценария"","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯУстанавливаюМеткеЗначение(Парам01,Парам02)"",""ЯУстанавливаюМеткеЗначение"",""Тогда Я устанавливаю метке 'issue' значение 'SUP-123'"","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯВызываюИсключениеНеДано()"",""ЯВызываюИсключениеНеДано"",""И Я вызываю исключение не дано"","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯУстанавливаюСсылкуСИменем()"",""ЯУстанавливаюСсылкуСИменем"",""И Я устанавливаю ссылку 'http://test/issue' с именем 'SUP-222'"","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯУстанавливаюСсылкуСИменемСТипом()"",""ЯУстанавливаюСсылкуСИменемСТипом"",""И Я устанавливаю ссылку 'http://test/issue' с именем 'SUP-222' c типом 'tms'"","""","""");
	Ванесса.ДобавитьШагВМассивТестов(ВсеТесты,""ЯПодключаюФайлКШагу()"",""ЯПодключаюФайлКШагу"",""И Я подключаю файл '$workspaceRoot/fixtures/file.xls' к шагу 'id'"","""","""");

	Возврат ВсеТесты;
КонецФункции
	
&НаСервере
// Служебная функция.
Функция ПолучитьМакетСервер(ИмяМакета)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьМакет(ИмяМакета);
КонецФункции
	
&НаКлиенте
// Служебная функция для подключения библиотеки создания fixtures.
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Возврат ПолучитьМакетСервер(ИмяМакета);
КонецФункции

#КонецОбласти



#Область Работа_со_сценариями

&НаКлиенте
// Процедура выполняется перед началом каждого сценария
Процедура ПередНачаломСценария() Экспорт
	
КонецПроцедуры

&НаКлиенте
// Процедура выполняется перед окончанием каждого сценария
Процедура ПередОкончаниемСценария() Экспорт
	
КонецПроцедуры

#КонецОбласти


///////////////////////////////////////////////////
//Реализация шагов
///////////////////////////////////////////////////

&НаКлиенте
//Когда Я устанавливаю severity 'critical'
//@ЯУстанавливаюSeverity(Парам01)
Процедура ЯУстанавливаюSeverity(Парам01) Экспорт
	ЯУстанавливаюМеткеЗначение(""severity"", Парам01);
КонецПроцедуры

&НаКлиенте
//Когда Я устанавливаю название фичи 'Мой дивный чудный мир'
//@ЯУстанавливаюНазваниеФичи(Парам01)
Процедура ЯУстанавливаюНазваниеФичи(Парам01) Экспорт
	ЯУстанавливаюМеткеЗначение(""feature"", Парам01);
КонецПроцедуры

&НаКлиенте
//Когда Я устанавливаю ручное выполнение сценария
//@ЯУстанавливаюРучноеВыполнениеСценария()
Процедура ЯУстанавливаюРучноеВыполнениеСценария() Экспорт
	Ванесса.ПризнакРучногоВыполненияШага = Истина;
КонецПроцедуры

&НаКлиенте
//Тогда Я устанавливаю метке 'issue' значение 'SUP-123'
//@ЯУстанавливаюМеткеЗначение(Парам01,Парам02)
Процедура ЯУстанавливаюМеткеЗначение(Метка, Значение) Экспорт
	СостояниеVanessaBehvior = Ванесса.ПолучитьСостояниеVanessaBehavior();
	
	РезультатПрохожденияТестовВСценарии = СостояниеVanessaBehvior[""ТекущийСценарий""].РезультатПрохожденияТестовСценария;
	Если НЕ РезультатПрохожденияТестовВСценарии.Свойство(""СписокМеток"") Тогда
		РезультатПрохожденияТестовВСценарии.Вставить(""СписокМеток"", Новый СписокЗначений);
	КонецЕсли;
	
	РезультатПрохожденияТестовВСценарии[""СписокМеток""].Добавить(Метка, Значение);
	
КонецПроцедуры

&НаКлиенте
//И Я вызываю исключение не дано
//@ЯВызываюИсключениеНеДано()
Процедура ЯВызываюИсключениеНеДано() Экспорт
	ВызватьИсключение ""Не дано."";
КонецПроцедуры

&НаКлиенте
Процедура ЯУстанавливаюСсылкуСИменемСТипом(Ссылка, Имя, Тип = ""issue"") Экспорт
	
	СостояниеVanessaBehvior = Ванесса.ПолучитьСостояниеVanessaBehavior();
	
	РезультатПрохожденияТестовВСценарии = СостояниеVanessaBehvior[""ТекущийСценарий""].РезультатПрохожденияТестовСценария;
	Если НЕ РезультатПрохожденияТестовВСценарии.Свойство(""СписокСсылок"") Тогда
		РезультатПрохожденияТестовВСценарии.Вставить(""СписокСсылок"", Новый СписокЗначений);
	КонецЕсли;
	
	СтруктураСсылки = Новый Структура(""name, url, type"", Имя, Ссылка, Тип);
	РезультатПрохожденияТестовВСценарии[""СписокСсылок""].Добавить(СтруктураСсылки);
	
КонецПроцедуры

&НаКлиенте
Процедура ЯУстанавливаюСсылкуСИменем(Ссылка, Имя = """") Экспорт
	
	ЯУстанавливаюСсылкуСИменемСТипом(Ссылка, Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ЯПодключаюФайлКШагу(ПутьКФайлу, ИД = """") Экспорт
	
	
	ПлагинАллюра = Ванесса.Плагин(""Аллюр2Отчет"");
	ПлагинАллюра.ДобавитьФайлКТекущемуШагу(ПутьКФайлу);
	
КонецПроцедуры",
{4,1,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",8bcdaea6-9e29-11e7-4385-3e185572bbbd}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},0,0,
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiLz4=}
},
{0,0},
{0,0},
{0,0},
{0,0},0,0}