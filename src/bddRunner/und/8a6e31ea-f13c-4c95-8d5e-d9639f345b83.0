{3,
{46,0,0,0,0,1,0,1,00000000-0000-0000-0000-000000000000,1,
{1,0},1,0,1,1,1,0,1,0,
{4,3699f6a3-9a2a-4c82-a775-6ff4824a08ca,"ОбработкаОповещения",3ccc650e-f631-4cae-8e33-3eaac610b5f9,"ПриОткрытии",9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,"ПриСозданииНаСервере",ca21cd18-35b2-4281-b5c8-016ecc8da8ac,"ПриЗакрытии",1,0,3699f6a3-9a2a-4c82-a775-6ff4824a08ca,0,1,3ccc650e-f631-4cae-8e33-3eaac610b5f9,0,1,9f2e5ddb-3492-4f5d-8f0d-416b8d1d5c5b,0,1,ca21cd18-35b2-4281-b5c8-016ecc8da8ac,0,1},
{0},1,
{21,
{-1,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ФормаКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0,0,3,3},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{302,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаФункциональности",
{1,1,
{"ru","Группа функциональности"}
},
{1,1,
{"ru","Группа функциональности"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{45,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ФункциональностьЗакладки",
{1,1,
{"ru","Функциональность закладки"}
},
{1,1,
{"ru","Функциональность закладки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1,
{0,1,0}
},7,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{44,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"ГруппаЗапускТестов",
{1,20,
{"ru","Запуск сценариев"},
{"en","Run and Invoke"},
{"am","ቅድሚያ የሚሰጡዋቸውን"},
{"az","Start ssenarilərin"},
{"bg","Стартирането на скриптове"},
{"et","Skript"},
{"fr","Les scripts de démarrage"},
{"ka","Run სკრიპტები"},
{"de","Skripts ausführen"},
{"hu","Scriptek futtatását"},
{"it","L'esecuzione di script"},
{"lv","Palaist skriptu"},
{"lt","Pradėti scenarijus"},
{"mn","Ажиллуулах скриптүүд"},
{"pl","Uruchamianie skryptów"},
{"ro","Script-uri de pornire"},
{"sl","Zaganjanje skriptov"},
{"es","Ejecutar secuencias de comandos"},
{"sv","Köra skript"},
{"tr","Komut dosyası çalıştırma"}
},
{1,1,
{"ru","Группа запуск тестов"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1564,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа2",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0,
{0}
},7,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{63,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ПодменюЗагрузитьФичи",
{1,20,
{"ru","Загрузить фичи"},
{"en","Load features"},
{"am","ተጨማሪ ገፅታዎች"},
{"az","Yüklə фичи"},
{"bg","Изтегли фичи"},
{"et","Alla laadida фичи"},
{"fr","Télécharger fonctionnalités"},
{"ka","ჩამოწერე თვისებები"},
{"de","Herunterladen Fichi"},
{"hu","Letöltés funkciók"},
{"it","Caricare caratteristiche"},
{"lv","Lejupielādēt фичи"},
{"lt","Atsisiųsti фичи"},
{"mn","Татаж онцлог"},
{"pl","Pobierz cechy"},
{"ro","Descărcați фичи"},
{"sl","Prenos funkcije"},
{"es","Descargar slave"},
{"sv","Ladda ner funktioner"},
{"tr","İndir özellikler"}
},
{1,1,
{"ru","Подменю загрузить фичи"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{7,
{4,3,
{0},"",-1,-1,0,
{
{#base64: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
JOn/AJ06Dg0Lnh0eAAAAAElFTkSuQmCC}
},0,""},
{0},2,3,0,0,
{3,4,
{0}
},
{3,4,
{0}
}
},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1249,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ГруппаКнопокЗагрузитьФичи",
{1,0},
{1,1,
{"ru","Группа кнопок загрузить фичи"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{64,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ФормаЗагрузитьФичиИзКаталога",
{1,20,
{"ru","Загрузить файлы из каталога"},
{"en","Load features files from directory"},
{"am","ጋር ፋይሎች ከአንድ የማውጫ"},
{"az","Faylları yüklə kataloq"},
{"bg","Качване на файлове от директория"},
{"et","Lae failid kataloogist"},
{"fr","Télécharger des fichiers à partir du répertoire"},
{"ka","რომ გადმოწეროთ ფაილები დირექტორია"},
{"de","Laden Sie die Dateien aus dem Verzeichnis"},
{"hu","A fájlok letöltése a könyvtár"},
{"it","Scaricare i file dalla directory"},
{"lv","Lejupielādēt failus no kataloga"},
{"lt","Parsisiųsti failus iš katalogo"},
{"mn","Татаж авах файл сан"},
{"pl","Pobierz pliki z katalogu"},
{"ro","Descărca fișierele din directorul"},
{"sl","Če želite prenesti datoteke iz imenika"},
{"es","Descargar los archivos desde el directorio"},
{"sv","För att ladda ner filer från en katalog"},
{"tr","Upload dizinindeki dosyaları"}
},1,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1254,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаЗагрузитьФичиИзКаталогаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{65,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ФормаЗагрузитьОднуФичу",
{1,20,
{"ru","Загрузить один файл"},
{"en","Load one feature file"},
{"am","ላይ አንድ ፋይል"},
{"az","Yüklemek üçün bir fayl"},
{"bg","Качване на един файл"},
{"et","Alla laadida ühe faili"},
{"fr","Télécharger un seul fichier"},
{"ka","ჩამოტვირთვა ერთი ფაილი"},
{"de","Herunterladen einer Datei"},
{"hu","Letöltés egyetlen fájl"},
{"it","Caricare un file"},
{"lv","Lejupielādēt failu"},
{"lt","Įkelti vieną failą"},
{"mn","Нэг файл татаж авах"},
{"pl","Pobierz jeden plik"},
{"ro","Încărcați un fișier"},
{"sl","Prenos eno datoteko"},
{"es","Subir un archivo"},
{"sv","Ladda ner enstaka fil"},
{"tr","Bir dosya yükleyin"}
},1,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1255,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаЗагрузитьОднуФичуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{1253,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаКнопокЗагрузитьФичиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1251,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ГруппаКнопокНедавноЗагруженныеФичи",
{1,0},
{1,1,
{"ru","Группа кнопок недавно загруженные фичи"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},0,1,0,1,
{10,
{1256,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаКнопокНедавноЗагруженныеФичиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1252,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПодменюЗагрузитьФичиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{60,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"Перезагрузить",
{1,20,
{"ru","Перезагрузить сценарии"},
{"en","Reload scenario"},
{"am","መገለጫዎ ይታያል"},
{"az","Yeniden ssenarilər"},
{"bg","Презареждане на сценарии"},
{"et","Uuesti skriptide"},
{"fr","Redémarrer le scénario"},
{"ka","გადატვირთვა სცენარი"},
{"de","Neustart des Skripts"},
{"hu","Indítsa újra forgatókönyvek"},
{"it","Riavviare scenari"},
{"lv","Restartēt scenāriji"},
{"lt","Iš naujo paleisti scenarijų"},
{"mn","Рестарт хувилбарууд"},
{"pl","Ponownie uruchomić skrypty"},
{"ro","Reporniți scenarii"},
{"sl","Znova zaženite scenarijev"},
{"es","Reiniciar el escenario"},
{"sv","Starta scenarier"},
{"tr","Yeniden senaryolar"}
},1,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64: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
fbH+ZEHQdaBGrCgPHgp3++nuPc0VOPF21bLo6ZQGaR3fCVH+rrrK2gcB+/FrezHD
3UTB3ahtDxXsZYQYuSwqy4LETM5L28t0horSdhNVUWnHnaHKX0qCvLa11n+9EA/0
Phr6FmJ+0sU/fhPe3YNLf2CCP6Csz10g2PfHWg3Y21PtlySp/Yp43bsxUYXrg0lL
mlM/2fl2/NA2fM/bRMYdTKrJ62wlpmBLI2Ws8dXdu0PUZkdjZWwi3aAdBburKmN7
aWXvLa/sfWVdae3P3Wv9MJAy7WGw6aMX1m/XL4g0MRiy96JM+t4a/3g3OWLQeJTm
JS1jqr86bg9W3jt1lLUb0lCXlXm7iJ67UNpuRmZPRXeTTIjK3MvUA7RkFFJ3VlLa
NnK2rSwXkQI8tjZfr74/Ef18irF9BWEXUJmZIeIyN4/D/92Z4Gc6fXWbRh1+UvlL
wpS+qqnytzdX1laS6rcZ2cNN6RC5lHVmP8Fmn68yd4Md9ZS+va5abiWZJSq32t1I
OdtJbvc2VuEepn67mH4xi8jaQbSnDxl7IJDS+pO1C8e/m3RjF+kGyN6Jv+aYIZM+
u34hiox9iAFk7YHoXeR8DJQjbSw+7XmLnq1Q2pT6untbMCNKo3ZheruoYCd+jZtm
u4owy92kEHsq0IhKriHpjJRNZnP2kNMwZ81bUU+dl8ZoxT8nQcnH+u/Vf6IyomIR
YZeR2G9XfubYD+733T+u1INLMtV2eYSy1qOYnfVRuB8kEa13cP/tFdVydzm13FOe
sgr14T9311UGpGTu8oeEBkrdShshMg+3kslqRM47RO53/JTxFgEJYjN21XHXtaQP
6UbMTlIOjuWgHEPWDr47eIjLMoXugbAiZO2CtJ2kHe+gtHfwaWPvVJ2+ltwSPVPG
s6a0uRkj7KuMdyDtnepquY2GU6bzPX1HJaXvLE8jKtBwPkNsOgpMf4dIiSpar2Vu
tiSQTL4H3ukopHwBVb+iqN9R2BVc2W+U51268CMO/rWzE9RhDgt8q2JVsKGZst6i
3u10zNVXHQIYLMqsd5jmvFNeWdtxCdv5/nZtZVgbDZisEWXtzXwbVXBODufkYMI5
bxPQQCamGrOlvCttQJK24qccab5K2YL5bUdpb0MW19l9DC3fqexgg5bxDgGDGUGr
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
13Hu2vKKXXmHcvCzma/jPqbUVc8lHZiknSJbtHZddOt1ti53gfW7LyFu2cfTlTM5
XJk8HE97necXW5hFbKjq2pO+voJS1pVVDilH6nqsbB3tW8MKNQQ3GnKHqpp5Vsn6
x3XSXq2lxKVVHWmG2FcrK/511LeqskJfvd11pMWrZZQyB1WM89OqjybSlE+drtxE
3JbGrIS8HzHNjf+dr+yJPNViRSJ/NU/ON1mOVEpxazF9TCJpHSnNWiLeGvzHGkxi
jflRiIMMp6x1FaizgpLoiAekC7QhDUUajOA0kIcFZLzGCvKiEHWenabTV3YyaP+G
rp91hYXNq1cv65c/fmZN7jzt/Rb9vav5p8epzYwWyp5LNF/ekMDmp+glBCfalLwK
sazGl1J3KoExA1+cv6aJGg6+XVXMPIuTlrgYB2ykvVpFiSB+GbuIllVVwkp2FC7l
hiuIWkt5ODGP1dBRjXTk5zdpyL/cYuI10sxKIe5nlDb54DPq8GoztXmdpHl5LUwb
dZADRa1hMPAlCetqoxSSVEcahK0tp7S1Rhy+zKmoLMSWUQuU2QJlJq7l+tX4tlX4
tZU4cAYzazU+kN2QiWxr7Ty3pQ5d3MSAfQ49Hpdx6ffLzgAsmrMYhVWwEHXlc844
p1Hbn1Ob6THKXdRU2SvrK/3NOorBHRVs84c4Zj4QZgNj9eW/GaAGA29X5V5e0gYw
UgsxT0hLWAJhi9mGCYy06MX4Dnxa3KJSip1eQmnTeXY4iadV/YL06ZWDbj3sytWL
HtJsrcxmAnz+hUb3mN5Srab6qt3Shsp73VdRC8srCf+QuMFPsW/WViyNSVhNmsPI
pqwqi+mWVvJqVFg00uZfktZT70YAaUn4vrRVRMflvsoh92qFOsyN5L/WVHctiNeR
K1sxwE8ZsK9pBoudKMwY++3iH65Zf7D4acTZvPgnzrGHNgM2PqLsGQFKW+Sr1JVM
+MnJ4s1FLWeAICyVgclYwdO21U3VCNKqPFHk06L6k04saKjERTUcWQmLSD1ACz7H
LsRElmAGC1iHmoP9T2yowqERyn0qygndmaaxRSLrFhmv0EpgD0laPROk3EE8tpvG
U24GJYtkOPmNuii3nuJW+Cp+Je5gFQ4fklquJl9zwKfg35Jc2lNGietKKmZDacVg
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
TkSuQmCC}
},0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1257,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПерезагрузитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{61,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"кнВыполнитьСценарии",
{1,20,
{"ru","Выполнить сценарии"},
{"en","Run scenario"},
{"am","ቅድሚያ የሚሰጡዋቸውን"},
{"az","İcra ssenarilər"},
{"bg","Изпълнение на скриптове"},
{"et","Käivita stsenaarium"},
{"fr","Exécuter les scripts"},
{"ka","აწარმოებს სკრიპტები"},
{"de","Ausführen von Skripts"},
{"hu","A scriptek futtatását"},
{"it","Eseguire gli script"},
{"lv","Izpildīt skriptus"},
{"lt","Vykdyti scenarijus"},
{"mn","Ажиллуулах скриптүүд"},
{"pl","Uruchom skrypty"},
{"ro","Executa script-uri"},
{"sl","Dovolite zaganjanje skriptov"},
{"es","Ejecutar secuencias de comandos"},
{"sv","Att köra skript"},
{"tr","Çalıştır komut"}
},1,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64: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}
},0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1258,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"кнВыполнитьСценарииРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{151,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ФормаПерезагрузитьИВыполнить",
{1,20,
{"ru","Перезагрузить и выполнить"},
{"en","Reload and run"},
{"am","ጋር ይገናኛሉ እና ሆኗል"},
{"az","Yenidən başladın və yerinə yetirmək"},
{"bg","Рестартирате и изпълнение на"},
{"et","Restart ja käivita"},
{"fr","Redémarrer et exécuter"},
{"ka","გადატვირთეთ და შეასრულოს"},
{"de","Neu starten und ausführen"},
{"hu","Újraindul végre"},
{"it","Riavviare ed eseguire"},
{"lv","Pārlādēt un izpildīt"},
{"lt","Paleisti ir vykdyti"},
{"mn","Дахин ачаалах болон гүйцэтгэх"},
{"pl","Ponownie uruchomić i wykonać"},
{"ro","Pentru a reîncărca și de a efectua"},
{"sl","Za ponovni zagon in izvajanje"},
{"es","Reiniciar y ejecutar"},
{"sv","Att starta och köra"},
{"tr","Yeniden yükle ve çalıştır"}
},1,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1259,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаПерезагрузитьИВыполнитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1552,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ФормаСправка",
{1,0},1,
{0,39bb0fe9-771d-4dd5-8a6e-2d16984523af},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1553,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаСправкаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1586,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ГруппаВидимостьКолонок",
{1,20,
{"ru","Колонки"},
{"en","Columns"},
{"am","."},
{"az","Natiqlər"},
{"bg","Колона"},
{"et","Kõlarid"},
{"fr","La colonne"},
{"ka","მშობლიურ"},
{"de","Spalte"},
{"hu","Hangszórók"},
{"it","Colonna"},
{"lv","Skaļruņi"},
{"lt","Kolonėlės"},
{"mn","Чанга яригч"},
{"pl","Kolumny"},
{"ro","Coloana"},
{"sl","Zvočniki"},
{"es","La columna"},
{"sv","Högtalare"},
{"tr","Sütun"}
},
{1,1,
{"ru","Показать/скрыть колонки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{7,
{4,1,
{0,52b637e5-f95f-4c70-9a72-2a4b5a9df449},"",-1,-1,1,0,""},
{0},2,1,0,0,
{3,4,
{0}
},
{3,4,
{0}
}
},6,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1594,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ПоказатьСкрытьВсеКолонки",
{1,20,
{"ru","Все колонки"},
{"en","All columns"},
{"am","ሁሉንም ቀለሞች"},
{"az","Bütün natiqlər"},
{"bg","Всички колони"},
{"et","Kõik kõlarid"},
{"fr","Toutes les colonnes"},
{"ka","ყველა სვეტები"},
{"de","Alle Spalten"},
{"hu","Az összes oszlop"},
{"it","Tutti gli altoparlanti"},
{"lv","Visi skaļruņi"},
{"lt","Visi garsiakalbiai"},
{"mn","Бүх багана"},
{"pl","Wszystkie głośniki"},
{"ro","Toate coloanele"},
{"sl","Vse stolpce"},
{"es","Todos los altavoces"},
{"sv","Alla kolumner"},
{"tr","Tüm sütun"}
},1,
{58,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{-10},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1595,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПоказатьСкрытьВсеКолонкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1584,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ПоказатьСкрытьПутьКФайлу",
{1,20,
{"ru","Адрес в файле"},
{"en","Addres in feature"},
{"am","አድራሻ ነው ፋይል"},
{"az","Ünvan fayl"},
{"bg","Адрес на файла"},
{"et","Aadress failis"},
{"fr","Adresse dans le fichier"},
{"ka","მისამართი ფაილი"},
{"de","Adresse in der Datei"},
{"hu","Cím a fájl"},
{"it","L'indirizzo nel file"},
{"lv","Adrese failā"},
{"lt","Adresas faile"},
{"mn","Хаяг файл"},
{"pl","Adres w pliku"},
{"ro","Adresa într-un fișier"},
{"sl","Naslov v datoteko"},
{"es","La dirección en el archivo"},
{"sv","Adress i filen"},
{"tr","Adres dosyada"}
},1,
{54,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{-10},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1585,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПоказатьСкрытьПутьКФайлуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1588,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ПоказатьСкрытьСнипет",
{1,20,
{"ru","Имя снипета"},
{"en","Snippet"},
{"am","ስም snippet"},
{"az","Adı снипета"},
{"bg","Името на снипета"},
{"et","Nimi снипета"},
{"fr","Le nom de снипета"},
{"ka","სახელი snippet"},
{"de","Name Schnipsel"},
{"hu","A neve a kódrészletet"},
{"it","Nome снипета"},
{"lv","Nosaukums снипета"},
{"lt","Vardas снипета"},
{"mn","Нэр snippet"},
{"pl","Nazwa снипета"},
{"ro","Numele снипета"},
{"sl","Ime delček"},
{"es","El nombre de снипета"},
{"sv","Namn utdrag"},
{"tr","Adı снипета"}
},1,
{55,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{-10},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1589,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПоказатьСкрытьСнипетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1590,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ПоказатьСкрытьАдресСнипета",
{1,20,
{"ru","Обработка вызова"},
{"en","DataProcessor"},
{"am","ጥሪ"},
{"az","Emal zəng etmək"},
{"bg","Обработка на повикване"},
{"et","Töötlemine kõne"},
{"fr","Le traitement de l'appel"},
{"ka","დარეკეთ"},
{"de","Die Verarbeitung des Anrufs"},
{"hu","A hívás"},
{"it","Trattamento di chiamata"},
{"lv","Apstrāde zvanu"},
{"lt","Apdorojimo skambinti"},
{"mn","Дуудлага"},
{"pl","Obsługa połączeń"},
{"ro","Prelucrarea de apel"},
{"sl","Klic"},
{"es","El tratamiento de la llamada"},
{"sv","Samtalet"},
{"tr","İşleme arama"}
},1,
{56,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{-10},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1591,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПоказатьСкрытьАдресСнипетаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1592,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ПоказатьСкрытьСтрокаРеальнойПроцедуры",
{1,20,
{"ru","Строка реальной процедуры"},
{"en","Procedure name"},
{"am","መስመር ግምገማ ይታያል"},
{"az","String real prosedurları"},
{"bg","Ред на реална процедура"},
{"et","Rida tegelik protseduuri"},
{"fr","La ligne réelle de la procédure"},
{"ka","ხაზი არის რეალური პროცედურა"},
{"de","Zeile realen Verfahren"},
{"hu","A sort egy igazi eljárás"},
{"it","Stringa reale procedura"},
{"lv","Virkne reālu procedūras"},
{"lt","Eilutė nekilnojamojo procedūros"},
{"mn","Мөр нь бодит журам"},
{"pl","Wiersz prawdziwym procedury"},
{"ro","Linie reală a procedurii de"},
{"sl","Linija je pravi postopek"},
{"es","La línea real de los procedimientos de"},
{"sv","Line är ett riktigt förfarande"},
{"tr","Satır gerçek prosedürleri"}
},1,
{57,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{-10},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1593,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПоказатьСкрытьСтрокаРеальнойПроцедурыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1614,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ПоказатьСкрытьИДСтроки",
{1,20,
{"ru","№ строки"},
{"en","Line number"},
{"am"," ቅድሚያ."},
{"az","№ satır"},
{"bg","№ ред"},
{"et"," nr rea"},
{"fr"," n ° de ligne"},
{"ka"," line არა."},
{"de","№ Zeile"},
{"hu"," a vonal Nem."},
{"it","№ riga"},
{"lv","№ rindas"},
{"lt"," nr. eilutės"},
{"mn"," мөр Үгүй."},
{"pl"," nr wiersza"},
{"ro"," nr. de comandă"},
{"sl"," linija Št."},
{"es"," número de línea de"},
{"sv"," linje Nr."},
{"tr"," no. satır"}
},1,
{60,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{-10},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1615,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПоказатьСкрытьИДСтрокиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{1587,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВидимостьКолонокРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1787,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ГруппаВнешниеИнструменты",
{1,1,
{"ru","Внешние инструменты"}
},
{1,1,
{"ru","Внешние инструменты"}
},1,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{7,
{4,0,
{0},"",-1,-1,1,0,""},
{0},2,3,0,0,
{3,4,
{0}
},
{3,4,
{0}
}
},6,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1797,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ВнешнийИнструментБраузерТестов_xddTestRunner",
{1,0},1,
{78,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},0,
{"Pattern"},"",2,0,1,
{10,
{1798,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВнешнийИнструментБраузерТестов_xddTestRunnerРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1799,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СоздатьОткрытьОтчетAllure",
{1,0},1,
{79,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1800,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СоздатьОткрытьОтчетAllureРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1789,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"КомандаГенераторМакетовДанных",
{1,0},1,
{74,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1790,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КомандаГенераторМакетовДанныхРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1791,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"КомандаПоказатьГУИД",
{1,0},1,
{75,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1792,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КомандаПоказатьГУИДРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1793,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ФормаКонвертерТестов",
{1,0},1,
{77,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1794,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаКонвертерТестовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1795,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ФормаПреобразоватьЖурналДействийПользователяВТест",
{1,0},1,
{76,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1796,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФормаПреобразоватьЖурналДействийПользователяВТестРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{1788,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВнешниеИнструментыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1565,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа2РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},143c00f7-a42d-4cd7-9189-88e4467dc768,
{51,
{66,02023637-7868-4a5f-8576-835a76e0c9ba},0,2,0,"ДеревоТестов",0,0,1,
{1,0},
{1,0},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,2,0,1,1,
{1,
{17,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{4,3,
{0},"",-1,-1,0,
{
{#base64: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
b73G898MgvD/tDueJERVW7oAAAAASUVORK5CYII=}
},0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,0,
{6,1282f000-23b6-4887-87f4-9e8e79db3d32,"ДеревоТестовВыбор",2391e7b8-7235-45d7-ab7e-6ff3dc086396,"ДеревоТестовПередНачаломДобавления",2ccfdec5-583d-4eca-8319-e55de492665a,"ДеревоТестовПередУдалением",60edb81d-887b-478e-94ee-7fef2b13393d,"ДеревоТестовПриАктивизацииСтроки",8ad48496-8d0b-4f6c-ae48-99d95227884b,"ДеревоТестовПеретаскивание",ab930362-ff94-4dcb-ad16-188805d23e3c,"ДеревоТестовПередНачаломИзменения",1,0,1282f000-23b6-4887-87f4-9e8e79db3d32,0,1,2391e7b8-7235-45d7-ab7e-6ff3dc086396,0,1,2ccfdec5-583d-4eca-8319-e55de492665a,0,1,60edb81d-887b-478e-94ee-7fef2b13393d,0,1,8ad48496-8d0b-4f6c-ae48-99d95227884b,0,1,ab930362-ff94-4dcb-ad16-188805d23e3c,0,1},
{0},1,
{21,
{67,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0},5,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1014,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"Основная",
{1,1,
{"ru","Основная"}
},
{1,1,
{"ru","Основная"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},6,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1471,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюВыполнитьДанныйСценарийСТекущегоШага",
{1,20,
{"ru","Выполнить с текущего шага"},
{"en","Continue from this step"},
{"am","ቅድሚያ የሚሰጡዋቸውን ስክሪፕት ይዘው የአሁኑ እርምጃ"},
{"az","Yerinə yetirmək üçün həmin ssenari ilə cari addım"},
{"bg","Изпълни този сценарий с текущата стъпка"},
{"et","Käivita see skript on praeguse sammu"},
{"fr","Exécuter ce script à l'étape en cours"},
{"ka","აწარმოებს ამ სკრიპტის მიმდინარე ნაბიჯი"},
{"de","Ausführen dieses Szenario mit dem aktuellen Schritt"},
{"hu","Fuss, ez a szkript a jelenlegi lépés"},
{"it","Eseguire lo script con il passaggio dell'"},
{"lv","Izpildīt šo skriptu ar pašreizējo soļi"},
{"lt","Vykdyti scenarijus su dabartine žingsnio"},
{"mn","Run энэ скрипт нь одоогийн алхам"},
{"pl","Uruchom ten skrypt z bieżącego kroku"},
{"ro","Pentru a efectua acest script curent cu pas"},
{"sl","Poženite ta skript s trenutno korak"},
{"es","Ejecutar esta secuencia de comandos con el actual paso"},
{"sv","Kör skriptet med det aktuella steget"},
{"tr","Çalıştır bu komut dosyası, geçerli adım"}
},1,
{44,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1472,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюВыполнитьДанныйСценарийСТекущегоШагаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1473,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюВыполнитьДанныйСценарийСТекущегоШагаСПродолжением",
{1,20,
{"ru","Выполнить с текущего шага с продолжением"},
{"en","Continue from this step and run other scenarios"},
{"am","ቅድሚያ የሚሰጡዋቸውን ስክሪፕት ከሌሎች ጋር ይገናኛሉ አዳዲስ ግምገማዎች በይፋ"},
{"az","Yerinə yetirmək üçün həmin ssenari ilə cari addım ilə davamı"},
{"bg","Изпълни този сценарий с настоящите стъпки с продължение"},
{"et","Käivita see skript on praeguse sammu jätkamine"},
{"fr","Exécuter ce script à l'étape actuelle, avec la suite"},
{"ka","აწარმოებს ამ სკრიპტის მიმდინარე ნაბიჯი გაგრძელება"},
{"de","Ausführen dieses Szenario mit dem aktuellen Schritt mit der Fortsetzung"},
{"hu","Fuss, ez a szkript a jelenlegi lépés a folytatása"},
{"it","Eseguire lo script con passo corrente con la continuazione"},
{"lv","Izpildīt šo skriptu ar pašreizējo soļi ar turpinājumu"},
{"lt","Vykdyti scenarijus su dabartine žingsniai su tęsinys"},
{"mn","Run энэ скрипт нь одоогийн алхам нь үргэлжлэл"},
{"pl","Uruchom ten skrypt z bieżącego kroku z kontynuacją"},
{"ro","Pentru a efectua acest scenariu cu curent pas cu continuarea"},
{"sl","Poženite ta skript s trenutno korak s nadaljevanje"},
{"es","Ejecutar esta secuencia de comandos con el actual paso a la continuación de"},
{"sv","Kör skriptet med det aktuella steget med en fortsättning"},
{"tr","Çalıştır bu komut dosyası, geçerli adım devam"}
},1,
{45,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1474,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюВыполнитьДанныйСценарийСТекущегоШагаСПродолжениемРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1016,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюПунктВыполнитьСценарий",
{1,20,
{"ru","Выполнить с начала"},
{"en","Run only selected scenario"},
{"am","ጋር ይገናኛሉ ከመጀመሪያ"},
{"az","Yerinə yetirmək üçün həmin ssenari ilə başladı"},
{"bg","Изпълни този сценарий от началото на"},
{"et","Käivita seda skripti algusest"},
{"fr","Exécuter le script depuis le début"},
{"ka","აწარმოებს სცენარი თავიდანვე"},
{"de","Ausführen dieses Szenario seit Beginn"},
{"hu","Futtatni a szkriptet a kezdet"},
{"it","Eseguire lo script con inizio"},
{"lv","Izpildīt šo skriptu no sākuma"},
{"lt","Atlikti šį scenarijų nuo pradžios"},
{"mn","Ажиллуулах бичиг эхнээс нь"},
{"pl","Uruchom ten skrypt od początku"},
{"ro","Pentru a efectua acest scenariu de la începutul"},
{"sl","Če želite zagnati skript od začetka"},
{"es","Ejecutar esta secuencia de comandos de inicio de la"},
{"sv","För att köra skriptet från början"},
{"tr","Çalıştır bu komut ile başladı"}
},1,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1264,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюПунктВыполнитьСценарийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1562,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюПерезагрузитьИВыполнитьДанныйСценарий",
{1,20,
{"ru","Перезагрузить и выполнить этот сценарий"},
{"en","Reload and run this scenario"},
{"am","አሁን እና ቅድሚያ የሚሰጡዋቸውን ስክሪፕት"},
{"az","Yenidən başladın və yerinə yetirmək üçün bu ssenarini"},
{"bg","Рестартирате и да изпълнят този сценарий"},
{"et","Restart ja käivita see skript"},
{"fr","Redémarrer et d'exécuter ce script"},
{"ka","გადატვირთეთ და გაუშვით ეს სკრიპტი"},
{"de","Neu starten und dieses Skript ausführen"},
{"hu","Újraindítás, majd futtassa ezt a forgatókönyvet"},
{"it","Riavviare ed eseguire questo script"},
{"lv","Pārlādēt un izpildīt šo skriptu"},
{"lt","Paleisti ir vykdyti šį scenarijų"},
{"mn","Дахин ачаалж, ажиллуулж энэ скрипт"},
{"pl","Ponownie uruchomić i uruchomić ten skrypt"},
{"ro","Pentru a reîncărca și de a executa acest script"},
{"sl","Ponovno zagnal in poženite ta skript,"},
{"es","Reiniciar y ejecutar esta secuencia de comandos"},
{"sv","Att starta och köra detta skript"},
{"tr","Yeniden ve bu komut dosyasını çalıştırmak"}
},1,
{51,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1563,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюПерезагрузитьИВыполнитьДанныйСценарийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1247,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюПунктВыполнитьФичу",
{1,20,
{"ru","Выполнить сценарии этой фичи"},
{"en","Run scenarios of rhat feature"},
{"am","ቅድሚያ የሚሰጡዋቸውን ላይ ባህሪያት"},
{"az","İcra ssenarilər bu фичи"},
{"bg","Изпълняват скриптове от тази фичи"},
{"et","Käivita stsenaarium selle фичи"},
{"fr","Exécuter les scripts de fonctionnalités"},
{"ka","Run სკრიპტები თვისებები"},
{"de","Skripts ausführen dieser Funktionen"},
{"hu","Scriptek futtatását a jellemzők"},
{"it","Eseguire gli script di questa feature"},
{"lv","Izpildīt skriptus šo фичи"},
{"lt","Vykdyti scenarijų šiame фичи"},
{"mn","Ажиллуулах скрипт онцлог"},
{"pl","Uruchom skrypty tej cechy"},
{"ro","Executa script-uri de acest фичи"},
{"sl","Zaganjanje skriptov za funkcije"},
{"es","Ejecutar secuencias de comandos de esta slave"},
{"sv","Köra skript för funktioner"},
{"tr","Çalıştır komut bu."}
},1,
{33,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1265,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюПунктВыполнитьФичуРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1484,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюВыполнитьОдинШаг",
{1,20,
{"ru","Выполнить шаг"},
{"en","Run one step"},
{"am","አንድ ነጠላ ደረጃ"},
{"az","Həyata bir addım"},
{"bg","Пусни една стъпка"},
{"et","Teha üks samm"},
{"fr","Effectuer une étape"},
{"ka","შეასრულოს ერთი ნაბიჯი"},
{"de","Einen Schritt ausführen"},
{"hu","Végre is egyetlen lépéssel"},
{"it","Eseguire un passo"},
{"lv","Palaist vienu soli"},
{"lt","Atlikti vienas žingsnis"},
{"mn","Хийх нэг алхам"},
{"pl","Wykonać jeden krok"},
{"ro","Executa un pas"},
{"sl","Za opravljanje enem koraku"},
{"es","Seguir el paso uno"},
{"sv","För att utföra ett enda steg"},
{"tr","Gerçekleştirmek için bir adım"}
},1,
{48,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1485,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюВыполнитьОдинШагРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{1263,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОсновнаяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1469,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ОткрытьФичаФайлВРедакторе",
{1,1,
{"ru","Открыть фича файл в редакторе"}
},
{1,1,
{"ru","Открыть фича файл в редакторе"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1018,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюПунктОткрытьФичаФайл",
{1,20,
{"ru","Редактировать файл фичи"},
{"en","Open feature file in editor"},
{"am","ክፍት አዳዲስ ግምገማዎች ፋይል ውስጥ አራሚ"},
{"az","Açıq feature faylı redaktoru"},
{"bg","Отвори feature файл в редактора"},
{"et","Avada feature faili editor"},
{"fr","Ouvrir feature fichier dans l'éditeur"},
{"ka","ღია ფუნქცია, ფაილის რედაქტორი"},
{"de","Feature Datei öffnen im Editor"},
{"hu","Nyissa meg a funkció a fájlt a szerkesztő"},
{"it","Aprire feature file nell'editor"},
{"lv","Atvērt feature failu redaktors"},
{"lt","Atidaryti feature failą redaktorius"},
{"mn","Нээх боломж файлыг засварлагч"},
{"pl","Otworzyć feature plik w edytorze"},
{"ro","Deschide feature fișierul într-un editor"},
{"sl","Odprite funkcijo datoteko v urejevalniku"},
{"es","Abrir feature archivo en el editor de"},
{"sv","Öppna funktionen fil i editorn"},
{"tr","Aç feature dosyası düzenleyicisi'nde,"}
},1,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1266,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюПунктОткрытьФичаФайлРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1550,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюОткрытьКаталогФичи",
{1,20,
{"ru","Открыть каталог фичи"},
{"en","Open feature path"},
{"am","ክፍት ይገናኛሉ የሚሰጡዋቸውን"},
{"az","Open directory feature"},
{"bg","Отваряне на каталог feature"},
{"et","Ava kataloog feature"},
{"fr","Ouvrir le répertoire feature"},
{"ka","ღია კატალოგი ფუნქცია"},
{"de","Feature-Katalog öffnen"},
{"hu","Nyitva katalógus funkció"},
{"it","Aprire il catalogo feature"},
{"lv","Open directory feature"},
{"lt","Atidaryti katalogą feature"},
{"mn","Нээлттэй каталог онцлог"},
{"pl","Otworzyć katalog feature"},
{"ro","Deschideți directorul feature"},
{"sl","Odprite katalog funkcija"},
{"es","Abrir el directorio de feature"},
{"sv","Öppna katalog-funktion"},
{"tr","Açık dizin özelliği"}
},1,
{50,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1551,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюОткрытьКаталогФичиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{1470,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОткрытьФичаФайлВРедактореРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1020,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ЧастичноеВыполнениеСценариев",
{1,1,
{"ru","Частичное выполнение сценариев"}
},
{1,1,
{"ru","Частичное выполнение сценариев"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1022,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюВыполнятьСценарийСЭтогоШага",
{1,20,
{"ru","Выполнять сценарий с этого шага с сохранением контекстов"},
{"en","Run scenario from that step whith context save"},
{"am","ቅድሚያ ቅድሚያ የሚሰጡዋቸውን ቅድሚያ, የሚያድን contexts"},
{"az","Yerinə ssenari ilə bu addım saxlanılması ilə kontekstlərdə"},
{"bg","Изпълнява сценарий с тази стъпка, с опазването на контекст"},
{"et","Teha skripti seda sammu säilitades kontekstides"},
{"fr","Exécuter un script à partir de cette étape, avec le maintien des contextes"},
{"ka","To run script ეს ნაბიჯი, გადარჩენის კონტექსტში"},
{"de","Ein Skript mit diesem Schritt mit der Erhaltung der Kontexte"},
{"hu","Hogy fut egy forgatókönyvet, ez a lépés, a megtakarítás kontextusokban"},
{"it","Eseguire lo script con questo passo con la conservazione dei contesti"},
{"lv","Izpildīt skriptu ar šo soli, saglabājot kontekstus"},
{"lt","Atlikti scenarijų su šio žingsnio išlaikant situaciją"},
{"mn","Ажиллуулах скрипт нь энэ алхам, хадгалах нөхцөл"},
{"pl","Wykonać skrypt z tego kroku, z zachowaniem kontekstu"},
{"ro","Executa script-ul cu acest pas, cu menținerea contexte"},
{"sl","Če želite zagnati skript s tem korakom, varčevanje kontekstih"},
{"es","Ejecutar la secuencia de comandos con este paso con la conservación de los contextos de"},
{"sv","För att köra ett skript med detta steg, spara sammanhang"},
{"tr","Gerçekleştirmek için bir komut dosyası ile bu adımı koruyarak bağlamları"}
},1,
{12,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1268,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюВыполнятьСценарийСЭтогоШагаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1024,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюВыполнятьСценарииСначала",
{1,20,
{"ru","Выполнять сценарии с начала"},
{"en","Run scenario from first step"},
{"am","ቅድሚያ የሚሰጡዋቸውን ከመጀመሪያ"},
{"az","Yerinə ssenari ilə başladı"},
{"bg","Изпълнява скриптове от началото на"},
{"et","Käivitada skripti algusest"},
{"fr","Exécuter des scripts depuis le début"},
{"ka","აწარმოებს სკრიპტები თავიდანვე"},
{"de","Seit Anfang des Skripts"},
{"hu","A scriptek futtatását a kezdetektől"},
{"it","Eseguire lo script con inizio"},
{"lv","Izpildīt skriptu no sākuma"},
{"lt","Atlikti scenarijų nuo pradžios"},
{"mn","Ажиллуулах скриптүүд эхнээс нь"},
{"pl","Wykonywanie skryptów z początku"},
{"ro","Executa script-uri de la începutul"},
{"sl","Dovolite zaganjanje skriptov od začetka"},
{"es","Ejecutar secuencias de comandos de inicio de la"},
{"sv","För att köra skript från början"},
{"tr","Komut ile başladı"}
},1,
{13,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1269,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюВыполнятьСценарииСначалаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{1267,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЧастичноеВыполнениеСценариевРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1026,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"Свернуть",
{1,1,
{"ru","Свернуть"}
},
{1,1,
{"ru","Свернуть"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1028,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюСвернутьДоФич",
{1,20,
{"ru","Свернуть до фич"},
{"en","Switch to features"},
{"am","ማውጣት የሚሰጡዋቸውን"},
{"az","Gəzmək qədər фич"},
{"bg","Свиване до функции"},
{"et","Rulli enne фич"},
{"fr","Réduire en fich"},
{"ka","Roll up ფუნქცია"},
{"de","Rollen bis zu Fitch"},
{"hu","Roll-up funkció"},
{"it","Rotolare fino fich"},
{"lv","Sakļaut līdz pazīmes"},
{"lt","Sutraukti iki фич"},
{"mn","Roll up онцлог"},
{"pl","Zwinąć do funkcjonalności"},
{"ro","Se rostogolească până la caracteristici"},
{"sl","Roll up funkcija"},
{"es","Minimizar a fich"},
{"sv","Roll up funktionen"},
{"tr","Kadar rulo fitch"}
},1,
{19,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1271,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюСвернутьДоФичРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1030,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюСвернутьДоСценариев",
{1,20,
{"ru","Свернуть до сценариев"},
{"en","Switch to scenarios"},
{"am","ሰብስብ ወደ ይታያል"},
{"az","Gəzmək qədər ssenariləri"},
{"bg","Свиване до скриптове"},
{"et","Rulli enne skriptide"},
{"fr","Réduire les scripts"},
{"ka","დაიშალოს, რომ სცენარი"},
{"de","Rollen-Szenarien"},
{"hu","Összeomlás forgatókönyvei"},
{"it","Rotolare fino script"},
{"lv","Sakļaut līdz skriptu"},
{"lt","Sutraukti iki scenarijus"},
{"mn","Уналт хийх хувилбарууд"},
{"pl","Zwinąć do skryptów"},
{"ro","Se rostogolească până la scripting"},
{"sl","Collapse, da scenarijev"},
{"es","Minimizar a los escenarios"},
{"sv","Kollaps för scenarier"},
{"tr","Rulo senaryolar"}
},1,
{20,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1272,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюСвернутьДоСценариевРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{1270,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СвернутьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1478,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"Брейпоинты",
{1,1,
{"ru","Брейпоинты"}
},
{1,1,
{"ru","Брейпоинты"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1480,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюБрейкпоинт",
{1,20,
{"ru","Брейкпоинт"},
{"en","Breakpoint"},
{"am","ወደ breakpoint"},
{"az","Брейкпоинт"},
{"bg","Брейкпоинт"},
{"et","Брейкпоинт"},
{"fr","Брейкпоинт"},
{"ka","""Breakpoint"},
{"de","Haltepunkt"},
{"hu","A töréspont"},
{"it","Брейкпоинт"},
{"lv","Брейкпоинт"},
{"lt","Брейкпоинт"},
{"mn","Энэ breakpoint"},
{"pl","Брейкпоинт"},
{"ro","Брейкпоинт"},
{"sl","Prekinitvena točka"},
{"es","Брейкпоинт"},
{"sv","Brytpunkten"},
{"tr","Брейкпоинт"}
},1,
{46,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1481,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюБрейкпоинтРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1482,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДеревоТестовКонтекстноеМенюБрейпоинтУбратьВсе",
{1,20,
{"ru","Убрать все брейкпоинты"},
{"en","Remove all breakpoints"},
{"am","በይፋ breakpoints"},
{"az","Clear bütün брейкпоинты"},
{"bg","Изтрий всички брейкпоинты"},
{"et","Kustuta kõik брейкпоинты"},
{"fr","Supprimer tous les брейкпоинты"},
{"ka","ამოიღონ ყველა breakpoints"},
{"de","Entfernen Sie alle брейкпоинты"},
{"hu","Távolítsa el az összes töréspontok"},
{"it","Rimuovere tutti брейкпоинты"},
{"lv","Notīrīt visu брейкпоинты"},
{"lt","Ištrinti visas брейкпоинты"},
{"mn","Бүх устгах нь breakpoints"},
{"pl","Usunąć wszystkie брейкпоинты"},
{"ro","Pentru a elimina toate брейкпоинты"},
{"sl","Odstranite vse mejne vrednosti"},
{"es","Eliminar todos los брейкпоинты"},
{"sv","Ta bort alla brytpunkter"},
{"tr","Kaldırmak için брейкпоинты"}
},1,
{47,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1483,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовКонтекстноеМенюБрейпоинтУбратьВсеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{1479,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"БрейпоинтыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,0,0,3,3},1,
{21,
{68,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ДеревоТестовКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},0,1,0,0,0,3,3},8,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1475,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"ДеревоТестовБрейкпоинт",1,0,
{1,1,
{"ru"," "}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{31,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{8,3,0,0,1,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAAXNSR0IArs4c6QAA
AARnQU1BAACxjwv8YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAAadEVYdFNvZnR3
YXJlAFBhaW50Lk5FVCB2My41LjExR/NCNwAAAmpJREFUOE91U0trE2EUnWlm5ptX
donBDBZXgqKgLsSVuNDfUvpITVKThiZNhkyT1GKrrfVZ4wN8YVF8YSvBiq8iuNCF
4MJuFPwFUh+r8Zzho9KAgcPc3HPunfsaRen6BWkvFTjO6IRlderC/OKb5lrVtFbG
bKdSSqa8bv3G/+qu3WrDcfKThrF+UtPCU1oM0ELak0Bd08OybvwqOvHxwZTXsylR
Y88+tWXbC9MQnkXgJaAtQZu+aaABvoxEeWHdzu7Y+S9J03VzMyAvQHRNj4W39J7w
rgRt+sjNAAF0pZgeZi23FlURJJKJKV3/cQ7kdQgXEfAIWNLVCI9lInLUTCFBlVVo
4k8mkepVmo49wl4vg7wD8RPguaGGb4DXAG0mIUcNtZxHAVVk7HigtEzz6Zws/R5E
z/DWVQR9NJTwA0CbPnJsZQ4JOItRJhD2W6UpxOczsvz7EHUQ8A74hGCCdgcJyLEN
apmAcxjSze9KAwlm4bgq+1+G8BWC3kdQIpuz4GyuQDOLBBOyggEmCExzievjum5C
9EC2sYJAYhnB9JG7GK1TC33M4Dgq6Bf2quK7bqEFJ0tryxWy34cStLlKcuyfWt7C
sZgR9lluoNQ8b4tviHWuh0kW5DxuIIBg3/SRo4Zv5wYGsMa+RHJ7dAtlJz5CgifL
E57H8zyexLxcHTlqounz7bZb3zjn00eOqiXTao9DwEtjmSckaAfwkysieJjBprNY
OXRY2/Q9VA4cVAtOvFjUjZ9jEFYQQNBmYA4Y1MRv9F3L790f++9XWfC2pXO2W84J
60VWWF+HhfVtSNgv+y3Xz2xN93YH/gWJok6bh0JyBwAAAABJRU5ErkJggg==}
},0,""},0,0,0,
{1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,0,
{0},1,1,0,48312c09-257f-4b29-b280-284dd89efc1e},0,0,
{0,1,0},0,3,0,1,0},
{0,1,0},1,
{21,
{1476,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовБрейкпоинтКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},0,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1477,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовБрейкпоинтРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{69,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовИмя",1,0,
{1,20,
{"ru","Наименование"},
{"en","Description"},
{"am","ስም"},
{"az","Adı"},
{"bg","Наименование"},
{"et","Nimetus"},
{"fr","Le nom de"},
{"ka","დასახელება"},
{"de","Bezeichnung"},
{"hu","Név"},
{"it","Nome"},
{"lv","Nosaukums"},
{"lt","Pavadinimas"},
{"mn","Нэр"},
{"pl","Nazwa"},
{"ro","Denumirea"},
{"sl","Ime"},
{"es","Nombre de la"},
{"sv","Namn"},
{"tr","İsim"}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{1,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},5,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{70,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовИмяКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1283,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовИмяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{73,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовПолныйПуть",1,0,
{1,20,
{"ru","Адрес в файле"},
{"en","Path"},
{"am","አድራሻ ነው ፋይል"},
{"az","Ünvan fayl"},
{"bg","Адрес на файла"},
{"et","Aadress failis"},
{"fr","Adresse dans le fichier"},
{"ka","მისამართი ფაილი"},
{"de","Adresse in der Datei"},
{"hu","Cím a fájl"},
{"it","L'indirizzo nel file"},
{"lv","Adrese failā"},
{"lt","Adresas faile"},
{"mn","Хаяг файл"},
{"pl","Adres w pliku"},
{"ro","Adresa într-un fișier"},
{"sl","Naslov v datoteko"},
{"es","La dirección en el archivo"},
{"sv","Adress i filen"},
{"tr","Adres dosyada"}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{2,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{74,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовПолныйПутьКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1284,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовПолныйПутьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{497,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовСтатус",1,0,
{1,20,
{"ru","Статус"},
{"en","Status"},
{"am","ሁኔታ"},
{"az","Statusu"},
{"bg","Статус"},
{"et","Staatus"},
{"fr","Le statut de"},
{"ka","სტატუსი"},
{"de","Status"},
{"hu","Állapot"},
{"it","Lo stato"},
{"lv","Statuss"},
{"lt","Statusas"},
{"mn","Байдал"},
{"pl","Status"},
{"ro","Statutul de"},
{"sl","Stanje"},
{"es","El estado de"},
{"sv","Status"},
{"tr","Durumu"}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{18,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{498,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовСтатусКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1285,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовСтатусРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{75,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовСнипет",1,0,
{1,20,
{"ru","Снипет"},
{"en","Snippet"},
{"am","Snippet"},
{"az","Снипет"},
{"bg","Снипет"},
{"et","Снипет"},
{"fr","Extrait google"},
{"ka","Snippet"},
{"de","Снипет"},
{"hu","Részlet"},
{"it","Fare in modo che i"},
{"lv","Снипет"},
{"lt","Снипет"},
{"mn","Snippet"},
{"pl","Снипет"},
{"ro","Снипет"},
{"sl","Delček kode"},
{"es","Снипет"},
{"sv","Utdrag"},
{"tr","Снипет"}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{3,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{76,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовСнипетКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1286,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовСнипетРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{77,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовАдресСнипета",1,0,
{1,20,
{"ru","Обработка вызова"},
{"en","Steps definition"},
{"am","ጥሪ"},
{"az","Emal zəng etmək"},
{"bg","Обработка на повикване"},
{"et","Töötlemine kõne"},
{"fr","Le traitement de l'appel"},
{"ka","დარეკეთ"},
{"de","Die Verarbeitung des Anrufs"},
{"hu","A hívás"},
{"it","Trattamento di chiamata"},
{"lv","Apstrāde zvanu"},
{"lt","Apdorojimo skambinti"},
{"mn","Дуудлага"},
{"pl","Obsługa połączeń"},
{"ro","Prelucrarea de apel"},
{"sl","Klic"},
{"es","El tratamiento de la llamada"},
{"sv","Samtalet"},
{"tr","İşleme arama"}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{4,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{78,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовАдресСнипетаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1287,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовАдресСнипетаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{79,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовСтрокаРеальнойПроцедуры",1,0,
{1,20,
{"ru","Строка процедуры вызова шага"},
{"en","Step definition procedure"},
{"am","ሕብረቁምፊ ይታያል ቅድሚያ የሚሰጡዋቸውን"},
{"az","String prosedur zəng addım"},
{"bg","Ред процедури повикване стъпки"},
{"et","Rida protseduure kõne sammu"},
{"fr","La chaîne de la procédure d'appel d'étape"},
{"ka","String პროცედურა დარეკეთ ნაბიჯი"},
{"de","Zeile procedure Call Schritt"},
{"hu","String eljárás hívás lépés"},
{"it","La stringa di chiamata di routine passo"},
{"lv","Rinda procedūras zvanu soļi"},
{"lt","Eilutė procedūros skambinti žingsnio"},
{"mn","Мөр журам дуудлага алхам"},
{"pl","Wiersz procedury połączenia kroku"},
{"ro","Linia de apeluri de proceduri pas"},
{"sl","Niz procedure call korak"},
{"es","La cadena de llamada a procedimiento paso"},
{"sv","String procedure call steg"},
{"tr","Satır yordam çağrısı adım"}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{5,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{80,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовСтрокаРеальнойПроцедурыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1288,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовСтрокаРеальнойПроцедурыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1611,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовИДСтроки",1,0,
{1,1,
{"ru","№ строки"}
},
{1,0},
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{19,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},3,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,3,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1612,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовИДСтрокиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1613,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовИДСтрокиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{10,
{1273,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,1,1,1,
{4,
{1274,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{21,
{1275,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1276,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{66,0},0,3,3},1,
{4,
{1277,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ДеревоТестовСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{21,
{1278,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1279,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{66,1},0,3,3},1,
{4,
{1280,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДеревоТестовУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{21,
{1281,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДеревоТестовУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1282,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДеревоТестовУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{66,2},0,3,3},0,1,0,0,1,0,3,3,0,1,0},1,0,1,
{10,
{1262,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаЗапускТестовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{46,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"ГруппаГенерацияEPF",
{1,20,
{"ru","Генератор EPF"},
{"en","Snippet generation"},
{"am","ቅድሚያ አርትዕ"},
{"az","Generator EPF"},
{"bg","Генератор на EPF"},
{"et","Generaator EPF"},
{"fr","Le générateur de l'EPF"},
{"ka","გენერატორი ევრაზიის თანამშრომლობის ფონდი"},
{"de","Generator EPF"},
{"hu","Generátor EPF"},
{"it","Generatore di EPF"},
{"lv","Ģenerators EPF"},
{"lt","Generatorius EPF"},
{"mn","Генератор EPF"},
{"pl","Generator EPF"},
{"ro","Generator de EPF"},
{"sl","Generator EPF"},
{"es","El generador de la EPF"},
{"sv","Generator EPF"},
{"tr","Jeneratör EPF"}
},
{1,1,
{"ru","Группа генерация"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},6,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1620,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"Группа7",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{47,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"кнСоздатьШаблоныОбработок",
{1,20,
{"ru","Создать и обновить шаблоны обработок"},
{"en","Create and update step definitons"},
{"am","መፍጠር እና ማዘመን ይታያል ነው የሚሰጡዋቸውን"},
{"az","Yaratmaq və təkmilləşdirmək şablonlar müalicə"},
{"bg","Създаване и актуализиране на шаблони на лечение"},
{"et","Luua ja uuendada malle ravi"},
{"fr","Créer et mettre à jour les modèles de traitements"},
{"ka","შექმნა და განახლება თარგები მკურნალობა"},
{"de","Erstellen und aktualisieren von Vorlagen Behandlungen"},
{"hu","Létre frissítés sablonok kezelések"},
{"it","Creare e aggiornare i modelli di trattamenti"},
{"lv","Veidot un uzlabot ārstēšanas veidnes"},
{"lt","Sukurti ir atnaujinti šablonai обработок"},
{"mn","Бий болгох, шинэчлэх, templates of эмчилгээ"},
{"pl","Utworzyć i zaktualizować szablony traktowania"},
{"ro","Pentru a crea și actualiza modele de tratamente"},
{"sl","Ustvarjanje in posodabljanje predloge zdravljenja"},
{"es","Crear y actualizar las plantillas de los tratamientos"},
{"sv","Skapa och uppdatera mallar av behandlingar"},
{"tr","Oluşturmak ve güncellemek şablonları tedaviler"}
},1,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1290,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"кнСоздатьШаблоныОбработокРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1616,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"КомандаСохранитьНастройки1",
{1,20,
{"ru","Сохранить настройки"},
{"en","Save settings"},
{"am","አዳዲስ ግምገማዎች."},
{"az","Parametrləri saxlamaq"},
{"bg","Запазване на настройките"},
{"et","Salvesta seaded"},
{"fr","Enregistrer les paramètres"},
{"ka","შენახვა პარამეტრები"},
{"de","Speichern Sie die Einstellungen"},
{"hu","A beállítások mentéséhez"},
{"it","Salvare le impostazioni"},
{"lv","Saglabāt iestatījumus"},
{"lt","Išsaugoti nustatymus"},
{"mn","Хадгалах тохиргоо"},
{"pl","Zapisz ustawienia"},
{"ro","Salvați setările"},
{"sl","Shranite nastavitve"},
{"es","Guardar la configuración"},
{"sv","Spara inställningar"},
{"tr","Ayarları kaydet"}
},1,
{22,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1617,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КомандаСохранитьНастройки1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},1,0,1,
{10,
{1621,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа7РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{50,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ГенерироватьУФ1",4,0,
{1,20,
{"ru","Генерировать управляемую форму"},
{"en","Generate managed form"},
{"am","ጋር አንድ ይታያል ቅጽ"},
{"az","Yaratmaq idarə forması"},
{"bg","Генерира управляема форма"},
{"et","Luua kontrollitav vormi"},
{"fr","Générer géré le formulaire"},
{"ka","გენერირება მართვადი ფორმა"},
{"de","Erzeugen überschaubare Form"},
{"hu","Hogy létrehoz egy kezelhető formában"},
{"it","Generare gestita modulo"},
{"lv","Radīt pārvalda formu"},
{"lt","Kurti valdoma formą"},
{"mn","Бий болгох нь зохицуулж хэлбэр"},
{"pl","Generowanie zarządzaniu formularz"},
{"ro","Genera gestionate de forma"},
{"sl","Za ustvarjanje obvladljivi obliki"},
{"es","Generar administrado por la forma de"},
{"sv","För att skapa en hanterbar form"},
{"tr","Oluşturmak için yönetilen formu"}
},
{1,0},
{2,
{1},
{0,4a613abb-7ca7-4311-a631-b5e3612d6162}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{51,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ГенерироватьУФ1КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1291,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГенерироватьУФ1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{361,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"СоздаватьОбластиПриГенерацииКода",4,0,
{1,20,
{"ru","Создавать области при генерации кода"},
{"en","Create regions with generated step code"},
{"am","ለመፍጠር ክልል ሆኗል መጠቀም ኮድ"},
{"az","Yaratmaq sahəsində zamanı yaradan kodu"},
{"bg","Създаване на областта при генериране на кода"},
{"et","Luua valdkonnas kui koodi"},
{"fr","Créer le domaine de la génération de code"},
{"ka","შექმნათ რეგიონში მომტანი კოდი"},
{"de","Sie können Bereiche bei der Codegenerierung"},
{"hu","Hozzon létre egy-egy régióban, amelynél a kódot"},
{"it","Creare area durante la generazione del codice"},
{"lv","Izveidot jomā ģenerējot kodu"},
{"lt","Kurti srityje, kai kodo generavimas"},
{"mn","Бий болгох, бүс нутаг бий болгох код"},
{"pl","Tworzenie obszarów podczas generowania kodu"},
{"ro","Pentru a crea zona de la generare de cod"},
{"sl","Če želite ustvariti regija za pridobivanje kodo"},
{"es","Crear el área de la generación de código"},
{"sv","Att skapa en region för att generera kod"},
{"tr","Alanları oluşturun oluştururken kod"}
},
{1,0},
{2,
{1},
{0,8a283e0f-869c-4fcd-900f-3dd5d76d573b}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{362,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СоздаватьОбластиПриГенерацииКодаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1292,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СоздаватьОбластиПриГенерацииКодаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{153,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур",4,0,
{1,20,
{"ru","Создавать закомментированный код для переиспользуемых процедур"},
{"en","Add comments for reused procedure"},
{"am","ለመፍጠር ስለጀመሩ ቅድሚያ የሚሰጡዋቸውን ኮድ reusable አካሄዶች"},
{"az","Yaratmaq закомментированный üçün kodu переиспользуемых prosedurlarının"},
{"bg","Създаване на коментарите код за переиспользуемых процедури"},
{"et","Luua закомментированный kood переиспользуемых kord"},
{"fr","Créer commentée code pour переиспользуемых procédures"},
{"ka","შექმნათ კომენტარი out კოდი reusable პროცედურები"},
{"de","Erstellen закомментированный Code für переиспользуемых Verfahren"},
{"hu","Hozzon létre kommentálva kód újrahasználható eljárások"},
{"it","Creare il codice commentato per переиспользуемых procedure"},
{"lv","Izveidot komentēja kods, lai переиспользуемых procedūras"},
{"lt","Kurti закомментированный kodas переиспользуемых procedūras"},
{"mn","Бий болгох тайлбар гарч кодыг дахин ашиглах журам"},
{"pl","Tworzenie komentarz kod do переиспользуемых procedur"},
{"ro","Pentru a crea закомментированный cod pentru переиспользуемых proceduri"},
{"sl","Ustvariti je komentiral ven kodo za večkratno uporabo postopkov"},
{"es","Crear que comentarios código de procedimientos переиспользуемых"},
{"sv","För att skapa bortkommenterad kod för återanvändbara förfaranden"},
{"tr","Oluşturmak yorumlu kodu переиспользуемых prosedürleri"}
},
{1,0},
{2,
{1},
{0,260d4c6d-de55-4638-b304-609476bac030}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{154,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедурКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1293,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедурРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{478,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ВыводитьТекстМодуляВместоПерегенерацииEPF",4,0,
{1,20,
{"ru","Выводить текст получаемого модуля, вместо перегенерации EPF"},
{"en","Put text module. instead regenerate and update step defintion"},
{"am","አሁን ከጽሑፉ ነው የሚሰጡዋቸውን ቅድሚያ የሚሰጡዋቸውን regeneration አርትዕ"},
{"az","Çıxış mətnini əldə modulu, əvəzinə перегенерации EPF"},
{"bg","Извежда текст на получените модул, вместо перегенерации EPF"},
{"et","Kuva tekst toodetud moodul, selle asemel, et перегенерации EPF"},
{"fr","Afficher le texte reçu du module, au lieu de перегенерации EPF"},
{"ka","ჩვენება ტექსტი შედეგად მოდული, ნაცვლად რეგენერაციას ევრაზიის თანამშრომლობის ფონდი"},
{"de","Stellt den Text des resultierenden Moduls, anstelle der EPF перегенерации"},
{"hu","A szöveg megjelenjen a kapott modul, ahelyett, hogy a regeneráció EPF"},
{"it","Visualizzare il testo ricevuto il modulo, invece перегенерации EPF"},
{"lv","Izvadīt tekstu, kas iegūti moduli, nevis перегенерации EPF"},
{"lt","Išvesti tekstą gavo modulio, vietoj перегенерации EPF"},
{"mn","Дэлгэц нь текст үр дүнд модуль, оронд нь нөхөн сэргээх EPF"},
{"pl","Wyświetlanie tekstu odbieranego modułu, zamiast перегенерации EPF"},
{"ro","Textul de ieșire generate de modul, în loc de re-generarea de EPF"},
{"sl","Prikaže besedilo, ki izhajajo modul, namesto regeneracijo EPF"},
{"es","Mostrar el texto resultante del módulo, en lugar de перегенерации EPF"},
{"sv","Visa texten i den resulterande modul, i stället för förnyelse EPF"},
{"tr","Çıkış metni elde edilen modül yerine перегенерации EPF"}
},
{1,0},
{2,
{1},
{0,c41105ef-8c8d-4cfe-aa90-50c875ba808e}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{479,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВыводитьТекстМодуляВместоПерегенерацииEPFКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1294,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыводитьТекстМодуляВместоПерегенерацииEPFРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1557,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"Группа1",
{1,1,
{"ru","Группа1"}
},
{1,0},0,1,0,28,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1559,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ВерсияПлатформыДляГенерацииEPF",1,0,
{1,20,
{"ru","Версия платформы для генерации EPF (8.3.10 или выше)"},
{"en","Platform version. 8.3.10 or greater."},
{"am","የሚሰጡዋቸውን የሚሰጡዋቸውን ሆኗል አርትዕ (8.3.10 ወይም ከዚያ በላይ)"},
{"az","Version platforma yaratmaq üçün EPF (8.3.10 və ya daha yüksək)"},
{"bg","Версия на платформа за генериране на EPF (8.3.10 или по-висока)"},
{"et","Platvormi versiooni, et luua EPF (8.3.10 või kõrgem)"},
{"fr","La version de la plate-forme pour générer des EPF (8.3.10 ou supérieur)"},
{"ka","ვერსია პლატფორმა მომტანი ევრაზიის თანამშრომლობის ფონდის (8.3.10 ან უფრო მაღალი)"},
{"de","Version der Plattform für die Erzeugung von EPF (8.3.10 oder höher)"},
{"hu","Verzió platform létrehozására EPF (8.3.10 vagy magasabb)"},
{"it","Versione della piattaforma per la generazione di EPF (8.3.10 o superiore)"},
{"lv","Versija platformu, lai radītu EPF (8.3.10 vai augstāk)"},
{"lt","Platformos versiją generuoti EPF (8.3.10 arba aukščiau)"},
{"mn","Хувилбар платформ бий болгох EPF (8.3.10 буюу түүнээс дээш)"},
{"pl","Wersja platformy do generowania EPF (8.3.10 lub wyżej)"},
{"ro","Versiune a platformei pentru a genera EPF (8.3.10 sau mai sus)"},
{"sl","Različica platforme za ustvarjanje EPF (8.3.10 ali višje)"},
{"es","La versión de la plataforma para la generación de EPF (8.3.10 o superior)"},
{"sv","Version av plattform för att generera EPF (8.3.10 eller högre)"},
{"tr","Versiyon platformu oluşturmak için, EPF (8.3.10 veya daha yüksek)"}
},
{1,20,
{"ru","Для генерации epf на ПК надо установить платформу 8.3.10 или выше. При этом разработку можно вести на ЛЮБОЙ версии платформы, указанной в справке."},
{"en","Platform version for epf generation."},
{"am","አንድ አርትዕ አሁን ግምገማዎች ላይ ያለው ስምዎ ስለጀመሩ ቅድሚያ የሚሰጡዋቸውን 8.3.10. ስለሆነም እድገት የሚቻል በማንኛውም የሚሰጡዋቸውን የሚሰጡዋቸውን ተጠቃሚ የምስክር ወረቀት."},
{"az","Yaratmaq üçün epf PC lazımdır yüklemek üçün platforma 8.3.10 və ya daha yüksək. Bu zaman inkişaf aparmaq olar, HƏR hansı bir versiyası platforma göstərilən yardım."},
{"bg","За генериране на epf на КОМПЮТЪРА трябва да инсталирате платформа 8.3.10 или по-висока. При това развитие може да се извършва на ВСЯКА версия на платформата, посочена в помощ."},
{"et","Luua epf ARVUTISSE tuleb paigaldada platvorm 8.3.10 või kõrgem. Seejuures arendada saab pidada IGA platvormi versiooni, mis on määratud spikrist."},
{"fr","Pour la génération des epf sur le PC, il faut installer la plate-forme 8.3.10 ou plus. Ce développement peut mener à une version de la plate-forme indiquée dans l'aide."},
{"ka","გენერირება ევრაზიის თანამშრომლობის ფონდის PC, თქვენ უნდა დააყენოთ პლატფორმა 8.3.10 ან უფრო მაღალი. ამგვარად განვითარების შესაძლებელია ნებისმიერი ვერსია პლატფორმა მითითებული მოწმობა."},
{"de","Für die Erzeugung der epf auf dem PC installieren muss Plattform 8.3.10 oder höher. Bei dieser Entwicklung kann man auf eine BELIEBIGE Version der Plattform, die in der Hilfe."},
{"hu","Generál az epf a SZÁMÍTÓGÉPEN telepíteni kell a platform 8.3.10 vagy magasabb. Így a fejlesztés lehetséges változata a platform meghatározott igazolás."},
{"it","Per la generazione di epf sul PC devi installare la piattaforma 8.3.10 o superiore. In questo sviluppo si può guidare su QUALSIASI versione della piattaforma indicata nella guida."},
{"lv","Lai radītu epf uz DATORA nepieciešams uzstādīt platformu 8.3.10 vai augstāka. Šajā izstrādi var veikt uz JEBKURU versiju platforma, kas ir norādīta palīdzībā."},
{"lt","Generuoti epf į KOMPIUTERĮ reikia įdiegti platforma 8.3.10 arba didesnis. Tokiu atveju kurti galima vesti BET kurios versijos platformos, nurodytą žinyne."},
{"mn","Бий болгох epf КОМПЬЮТЕР дээр та суулгах хэрэгтэй платформ 8.3.10 буюу түүнээс дээш. Тиймээс хөгжүүлэх боломжтой ЯМАР хувилбар платформ-д заасан гэрчилгээ."},
{"pl","Do generowania epf na PC trzeba zainstalować platformę 8.3.10 lub wyżej. Przy tym rozwój można prowadzić w DOWOLNEJ wersji platformy, określonej w pomocy."},
{"ro","Pentru a genera epf pe PC, trebuie să instalați platforma 8.3.10 sau mai mare. La această dezvoltare poate conduce pe ORICE versiune de platformă, specificate în ajutor."},
{"sl","Za ustvarjanje epf na RAČUNALNIK, morate namestiti platformo 8.3.10 ali višje. Tako razvoj je mogoče v kateri KOLI različici platforme navedeni v potrdilu."},
{"es","Para la generación de la epf en el pc es necesario instalar la plataforma de 8.3.10 o superior. Cuando este desarrollo se puede llevar en CUALQUIER versión de la plataforma especificada en la ayuda."},
{"sv","För att generera epf på en PC måste du installera plattformen 8.3.10 eller högre. Därmed utvecklingen är möjligt att i NÅGON version av den plattform som anges i certifikatet."},
{"tr","Oluşturmak için epf PC üzerinde yüklemek için gerekli bir platform 8.3.10 veya daha yüksek. Bu durumda, geliştirme, sürücü, HERHANGİ bir framework sürümü, belirtilen yardım."}
},
{2,
{1},
{0,88549973-9731-4050-9481-35934b3b28b3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"ВерсияПлатформыДляГенерацииEPFНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1560,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВерсияПлатформыДляГенерацииEPFКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1561,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВерсияПлатформыДляГенерацииEPFРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1558,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1289,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаГенерацияEPFРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{83,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"ГруппаКаталогиБиблиотек",
{1,20,
{"ru","Библиотеки"},
{"en","Libs and Canned steps"},
{"am","ላይብረሪ"},
{"az","Kitabxana"},
{"bg","Библиотека"},
{"et","Raamatukogu"},
{"fr","La bibliothèque"},
{"ka","ბიბლიოთეკა"},
{"de","Bibliothek"},
{"hu","Könyvtár"},
{"it","Libreria"},
{"lv","Bibliotēkas"},
{"lt","Bibliotekos"},
{"mn","Номын сан"},
{"pl","Biblioteki"},
{"ro","Biblioteca"},
{"sl","Knjižnica"},
{"es","La biblioteca"},
{"sv","Bibliotek"},
{"tr","Kitaplığı"}
},
{1,1,
{"ru","Группа каталоги библиотек"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{306,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"БиблиотекиПовторногоКода",
{1,1,
{"ru","Библиотеки повторного кода"}
},
{1,1,
{"ru","Библиотеки повторного кода"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{51,
{84,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"КаталогиБиблиотек",0,0,1,
{1,0},
{1,0},
{2,
{1},
{0,8f038ea1-e2cb-4d4e-85e5-de99851c076e}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,1,2,2,0,0,0,0,0,1,2,0,0,1,1,
{1,
{3}
},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,0,
{1,de65638d-a806-4a76-bc10-f62bbc86e0e7,"КаталогиБиблиотекПослеУдаления",1,0,de65638d-a806-4a76-bc10-f62bbc86e0e7,0,1},
{0},1,
{21,
{85,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогиБиблиотекКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{21,
{86,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"КаталогиБиблиотекКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},4,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1689,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"КаталогиБиблиотекДобавить",
{1,20,
{"ru","Добавить"},
{"en","Add"},
{"am","ያክሉ"},
{"az","Əlavə etmək"},
{"bg","Добави"},
{"et","Lisa"},
{"fr","Ajouter"},
{"ka","დამატება"},
{"de","Hinzufügen"},
{"hu","Add"},
{"it","Aggiungere"},
{"lv","Pievienot"},
{"lt","Pridėti"},
{"mn","Нэмэх"},
{"pl","Dodać"},
{"ro","Adauga"},
{"sl","Dodaj"},
{"es","Agregar"},
{"sv","Lägg till"},
{"tr","Ekle"}
},1,
{64,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1690,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекДобавитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1618,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"КомандаСохранитьНастройки2",
{1,20,
{"ru","Сохранить настройки"},
{"en","Save settings"},
{"am","አዳዲስ ግምገማዎች."},
{"az","Parametrləri saxlamaq"},
{"bg","Запазване на настройките"},
{"et","Salvesta seaded"},
{"fr","Enregistrer les paramètres"},
{"ka","შენახვა პარამეტრები"},
{"de","Speichern Sie die Einstellungen"},
{"hu","A beállítások mentéséhez"},
{"it","Salvare le impostazioni"},
{"lv","Saglabāt iestatījumus"},
{"lt","Išsaugoti nustatymus"},
{"mn","Хадгалах тохиргоо"},
{"pl","Zapisz ustawienia"},
{"ro","Salvați setările"},
{"sl","Shranite nastavitve"},
{"es","Guardar la configuración"},
{"sv","Spara inställningar"},
{"tr","Ayarları kaydet"}
},1,
{22,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1619,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КомандаСохранитьНастройки2РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1780,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"КаталогиБиблиотекОчистить",
{1,0},1,
{73,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1781,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекОчиститьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1782,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДобавитьИзвестныйШаг1",
{1,20,
{"ru","Добавить известный шаг"},
{"en","Known steps"},
{"am","ያክሉ የታወቀ ደረጃ"},
{"az","Əlavə tanınan addım"},
{"bg","Добави известен стъпка"},
{"et","Lisa tuntud samm"},
{"fr","Ajouter le célèbre étape"},
{"ka","რჩეულებში ცნობილია ნაბიჯი"},
{"de","Hinzufügen der berühmte Schritt"},
{"hu","Adjunk hozzá egy ismert lépés"},
{"it","Aggiungere il famoso passo"},
{"lv","Pievienot zināms solis"},
{"lt","Pridėti žinomas žingsnis"},
{"mn","Нэмэх нь мэдэгдэж алхам"},
{"pl","Dodaj znany krok"},
{"ro","Adauga cunoscut pas"},
{"sl","Dodajanje znan korak"},
{"es","Agregar el famoso paso"},
{"sv","Lägg till en känd steg"},
{"tr","Eklemek ünlü adım"}
},1,
{43,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1783,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДобавитьИзвестныйШаг1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{87,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогиБиблиотекЗначение",1,0,
{1,0},
{1,1,
{"ru","Каталоги библиотек"}
},
{3,
{1},
{0,8f038ea1-e2cb-4d4e-85e5-de99851c076e},
{0}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,0,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогиБиблиотекЗначениеНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{88,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогиБиблиотекЗначениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1307,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекЗначениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{10,
{1297,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,1,1,1,
{4,
{1298,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{21,
{1299,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогиБиблиотекСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1300,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{84,0},0,3,3},1,
{4,
{1301,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"КаталогиБиблиотекСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{21,
{1302,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогиБиблиотекСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1303,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{84,1},0,3,3},1,
{4,
{1304,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогиБиблиотекУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{21,
{1305,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогиБиблиотекУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1306,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогиБиблиотекУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{84,2},0,3,3},0,1,0,0,1,0,3,3,0,1,0},1,0,1,
{10,
{1296,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"БиблиотекиПовторногоКодаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1295,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаКаталогиБиблиотекРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{292,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"ГруппаДополнительно",
{1,20,
{"ru","Работа с UI"},
{"en","Record UI behavior"},
{"am","አብረው."},
{"az","İş UI"},
{"bg","Работа с UI"},
{"et","Töö UI"},
{"fr","Le travail avec l'UI"},
{"ka","მუშაობა UI"},
{"de","Die Arbeit mit UI"},
{"hu","A munka az UI"},
{"it","Lavoro con UI"},
{"lv","Darbs ar UI"},
{"lt","Darbas su UI"},
{"mn","Хамтран ажиллах UI"},
{"pl","Praca z UI"},
{"ro","Lucrul cu UI"},
{"sl","Delo z UI"},
{"es","El trabajo con la interfaz de usuario"},
{"sv","Arbetet med UI"},
{"tr","İş ile UI"}
},
{1,1,
{"ru","Группа дополнительно"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{333,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РаботасUI",
{1,1,
{"ru","Работас UI"}
},
{1,1,
{"ru","Работас UI"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0,
{0}
},6,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{298,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ОткрытьПодключитьTestClient",
{1,20,
{"ru","Подключить TestClient"},
{"en","Enable test client session"},
{"am","ጋር TestClient"},
{"az","Əlaqə TestClient"},
{"bg","Свържете TestClient"},
{"et","Ühendada TestClient"},
{"fr","Connecter TestClient"},
{"ka","დაკავშირება TestClient"},
{"de","Verbinden Von Testclient"},
{"hu","Csatlakoztassa TestClient"},
{"it","Collegare TestClient"},
{"lv","Pievienot TestClient"},
{"lt","Prijungti TestClient"},
{"mn","To Connect TestClient"},
{"pl","Podłączyć TestClient"},
{"ro","Conectați TestClient"},
{"sl","Za Povezavo TestClient"},
{"es","Conectar TestClient"},
{"sv","För Att Ansluta TestClient"},
{"tr","Bağlamak TestClient"}
},1,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64: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
z0H/w/9B/8P/Qf/D/0E=}
},0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1310,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОткрытьПодключитьTestClientРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{294,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"кнНачатьЗаписьДействийПользователя",
{1,20,
{"ru","Начать запись поведения"},
{"en","Record user behavior"},
{"am","አዳዲስ ግምገማዎች ቀረጻ ባህሪ"},
{"az","Yazmağa başlamaq davranış"},
{"bg","Започнете запис на поведение"},
{"et","Alustada käitumine rekord"},
{"fr","Commencer l'enregistrement de conduite"},
{"ka","ჩაწერის დაწყება ქცევა"},
{"de","Starten Sie die Aufnahme des Verhaltens"},
{"hu","Indítsa el a felvételt viselkedés"},
{"it","Avviare la registrazione del comportamento"},
{"lv","Sākt rīcību ierakstu"},
{"lt","Pradėti įrašymą, elgesio"},
{"mn","Бичиж эхлэх зан"},
{"pl","Rozpocząć nagrywanie zachowania"},
{"ro","Începe înregistrarea comportamentului"},
{"sl","Začetek snemanja vedenje"},
{"es","Iniciar la grabación de la conducta"},
{"sv","Starta inspelningen beteende"},
{"tr","Kaydı başlatmak davranış"}
},1,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:AAABAAEAGBgAAAEAGABIBwAAFgAAACgAAAAYAAAAMAAAAAEAGAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAACAgICAgICAgICAgIAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgICAgICAgIAAAP8A
AP8AAP8AAP+AgICAgICAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAACAgICAgIAAAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP+AgICAgIAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgIAAAP8AAP8AAP8AAP8AAP8AAP8A
AP8AAP8AAP8AAP8AAP8AAP8AAP8AAP+AgIAAAAAAAAAAAAAAAAAAAAAAAAAAAACA
gIAAAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP+AgIAAAAAAAAAAAAAAAAAAAAAAAACAgIAAAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP+AgIAAAAAAAAAAAAAAAAAAAACAgIAA
AP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP8AAP+AgIAAAAAAAAAAAAAAAACAgIAAAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP+AgIAAAAAAAAAAAACAgIAAAP8A
AP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP8AAP+AgIAAAAAAAAAAAACAgIAAAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP+AgIAAAAAAAACAgIAAAP8A
AP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP8AAP8AAP+AgIAAAAAAAACAgIAAAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP+AgIAAAAAAAACAgIAAAP8A
AP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP8AAP8AAP+AgIAAAAAAAACAgIAAAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP+AgIAAAAAAAAAAAAAAAACAgIAA
AP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP8AAP+AgIAAAAAAAAAAAAAAAACAgIAAAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP+AgIAAAAAAAAAAAAAAAAAAAACA
gIAAAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP+AgIAAAAAAAAAAAAAAAAAAAAAAAACAgIAAAP8AAP8AAP8AAP8AAP8AAP8AAP8A
AP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP+AgIAAAAAAAAAAAAAAAAAAAAAAAAAA
AACAgIAAAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP8AAP+A
gIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgICAgIAAAP8AAP8AAP8AAP8A
AP8AAP8AAP8AAP8AAP8AAP+AgICAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAACAgICAgIAAAP8AAP8AAP8AAP8AAP8AAP+AgICAgIAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAgICAgICA
gICAgICAgICAgIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAD///9B/8P/Qf4Af0H4AB9B8AAPQeAAB0HgAAdBwAADQcAA
A0GAAANBgAABQYAAAUGAAAFBgAABQYAAA0HAAANBwAADQeAAB0HgAAdB8AAPQfgA
H0H+AH9B/4H/Qf///0E=}
},0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1311,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"кнНачатьЗаписьДействийПользователяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1579,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"кнПродолжитьЗаписьДействийПользователя",
{1,0},1,
{53,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,1,
{0,0ce78048-0196-4f80-a781-9829cdb7f43e},"",-1,-1,1,0,""},0,
{"Pattern"},"",2,0,1,
{10,
{1580,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"кнПродолжитьЗаписьДействийПользователяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1577,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"кнПриостановитьЗаписьДействийПользователя",
{1,0},1,
{52,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:AAABAAEAEBAAAAEAIABoBAAAFgAAACgAAAAQAAAAIAAAAAEAIAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmQD/AJkA/wCZ
AP8AmQD/AJkA/wAAAAAAAAAAAJkA/wCZAP8AmQD/AJkA/wCZAP8AAAAAAAAAAAAA
AAAAAAAAAJkA/wCZAP8AmQD/AJkA/wCZAP8AAAAAAAAAAACZAP8AmQD/AJkA/wCZ
AP8AmQD/AAAAAAAAAAAAAAAAAAAAAACZAP8AmQD/AJkA/wCZAP8AmQD/AAAAAAAA
AAAAmQD/AJkA/wCZAP8AmQD/AJkA/wAAAAAAAAAAAAAAAAAAAAAAmQD/AJkA/wCZ
AP8AmQD/AJkA/wAAAAAAAAAAAJkA/wCZAP8AmQD/AJkA/wCZAP8AAAAAAAAAAAAA
AAAAAAAAAJkA/wCZAP8AmQD/AJkA/wCZAP8AAAAAAAAAAACZAP8AmQD/AJkA/wCZ
AP8AmQD/AAAAAAAAAAAAAAAAAAAAAACZAP8AmQD/AJkA/wCZAP8AmQD/AAAAAAAA
AAAAmQD/AJkA/wCZAP8AmQD/AJkA/wAAAAAAAAAAAAAAAAAAAAAAmQD/AJkA/wCZ
AP8AmQD/AJkA/wAAAAAAAAAAAJkA/wCZAP8AmQD/AJkA/wCZAP8AAAAAAAAAAAAA
AAAAAAAAAJkA/wCZAP8AmQD/AJkA/wCZAP8AAAAAAAAAAACZAP8AmQD/AJkA/wCZ
AP8AmQD/AAAAAAAAAAAAAAAAAAAAAACZAP8AmQD/AJkA/wCZAP8AmQD/AAAAAAAA
AAAAmQD/AJkA/wCZAP8AmQD/AJkA/wAAAAAAAAAAAAAAAAAAAAAAmQD/AJkA/wCZ
AP8AmQD/AJkA/wAAAAAAAAAAAJkA/wCZAP8AmQD/AJkA/wCZAP8AAAAAAAAAAAAA
AAAAAAAAAJkA/wCZAP8AmQD/AJkA/wCZAP8AAAAAAAAAAACZAP8AmQD/AJkA/wCZ
AP8AmQD/AAAAAAAAAAAAAAAAAAAAAACZAP8AmQD/AJkA/wCZAP8AmQD/AAAAAAAA
AAAAmQD/AJkA/wCZAP8AmQD/AJkA/wAAAAAAAAAAAAAAAAAAAAAAmQD/AJkA/wCZ
AP8AmQD/AJkA/wAAAAAAAAAAAJkA/wCZAP8AmQD/AJkA/wCZAP8AAAAAAAAAAAAA
AAAAAAAAAJkA/wCZAP8AmQD/AJkA/wCZAP8AAAAAAAAAAACZAP8AmQD/AJkA/wCZ
AP8AmQD/AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA//+sQcGDrEHBg6xBwYOsQcGD
rEHBg6xBwYOsQcGDrEHBg6xBwYOsQcGDrEHBg6xBwYOsQcGDrEHBg6xB//+sQQ==
}
},0,""},0,
{"Pattern"},"",2,0,1,
{10,
{1578,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"кнПриостановитьЗаписьДействийПользователяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{296,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"кнЗавершитьЗаписьДействийПользователя",
{1,20,
{"ru","Закончить запись поведения"},
{"en","Stop record of user behavior"},
{"am","ለመጨረስ ቀረጻ ነው ባህሪ"},
{"az","Son giriş davranış"},
{"bg","Пълен запис на поведение"},
{"et","Lõpetada käitumine rekord"},
{"fr","Terminer l'enregistrement de conduite"},
{"ka","დასრულება ჩაწერა ქცევა"},
{"de","Beenden Sie die Aufzeichnung des Verhaltens"},
{"hu","Befejezni a felvétel a viselkedés"},
{"it","Terminare la registrazione del comportamento"},
{"lv","Pabeigt rīcību ierakstu"},
{"lt","Baigti filmuoti elgesio"},
{"mn","Дуусгах бичлэг зан"},
{"pl","Zakończyć nagrywanie zachowania"},
{"ro","Pentru a termina înregistrarea comportamentului"},
{"sl","Če želite končati snemanje vedenja"},
{"es","Terminar la grabación de la conducta"},
{"sv","För att avsluta inspelningen av beteende"},
{"tr","Kaydı bitirmek davranış"}
},1,
{10,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:AAABAAEAGBgAAAEAGABIBwAAFgAAACgAAAAYAAAAMAAAAAEAGAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/gAD/gAD/gAD/gAD/gAD/gAD/gAD/gAD/
gAD/gAD/gAD/gAD/gAD/gAD/gAD/gAD/gAD/gAAAAAAAAAAAAAAAAAD/hAj/hAj/
hAj/hAj/hAj/hAj/hAj/hAj/hAj/hAj/hAj/hAj/hAj/hAj/hAj/hAj/hAj/hAj/
hAj/hAj/hAj/hAgAAAAAAAD/hxD/hxD/hxD/hxD/hxD/hxD/hxD/hxD/hxD/hxD/
hxD/hxD/hxD/hxD/hxD/hxD/hxD/hxD/hxD/hxD/hxD/hxAAAAD/ixf/ixf/ixf/
ixf/ixf/ixf/ixf/ixf/ixf/ixf/ixf/ixf/ixf/ixf/ixf/ixf/ixf/ixf/ixf/
ixf/ixf/ixf/ixf/ixf/jh//jh//jh//jh//jh//jh//jh//jh//jh//jh//jh//
jh//jh//jh//jh//jh//jh//jh//jh//jh//jh//jh//jh//jh//kif/kif/kif/
kif/kif/kif/kif/kif/kif/kif/kif/kif/kif/kif/kif/kif/kif/kif/kif/
kif/kif/kif/kif/kif/li//li//li//li//li//li//li//li//li//li//li//
li//li//li//li//li//li//li//li//li//li//li//li//li//mTb/mTb/mTb/
mTb/mTb/mTb/mTb/mTb/mTb/mTb/mTb/mTb/mTb/mTb/mTb/mTb/mTb/mTb/mTb/
mTb/mTb/mTb/mTb/mTb/nT7/nT7/nT7/nT7/nT7/nT7/nT7/nT7/nT7/nT7/nT7/
nT7/nT7/nT7/nT7/nT7/nT7/nT7/nT7/nT7/nT7/nT7/nT7/nT7/oEb/oEb/oEb/
oEb/oEb/oEb/oEb/oEb/oEb/oEb/oEb/oEb/oEb/oEb/oEb/oEb/oEb/oEb/oEb/
oEb/oEb/oEb/oEb/oEb/pE7/pE7/pE7/pE7/pE7/pE7/pE7/pE7/pE7/pE7/pE7/
pE7/pE7/pE7/pE7/pE7/pE7/pE7/pE7/pE7/pE7/pE7/pE7/pE7/qFb/qFb/qFb/
qFb/qFb/qFb/qFb/qFb/qFb/qFb/qFb/qFb/qFb/qFb/qFb/qFb/qFb/qFb/qFb/
qFb/qFb/qFb/qFb/qFb/q13/q13/q13/q13/q13/q13/q13/q13/q13/q13/q13/
q13/q13/q13/q13/q13/q13/q13/q13/q13/q13/q13/q13/q13/r2X/r2X/r2X/
r2X/r2X/r2X/r2X/r2X/r2X/r2X/r2X/r2X/r2X/r2X/r2X/r2X/r2X/r2X/r2X/
r2X/r2X/r2X/r2X/r2X/s23/s23/s23/s23/s23/s23/s23/s23/s23/s23/s23/
s23/s23/s23/s23/s23/s23/s23/s23/s23/s23/s23/s23/s23/tnX/tnX/tnX/
tnX/tnX/tnX/tnX/tnX/tnX/tnX/tnX/tnX/tnX/tnX/tnX/tnX/tnX/tnX/tnX/
tnX/tnX/tnX/tnX/tnX/un3/un3/un3/un3/un3/un3/un3/un3/un3/un3/un3/
un3/un3/un3/un3/un3/un3/un3/un3/un3/un3/un3/un3/un3/vYT/vYT/vYT/
vYT/vYT/vYT/vYT/vYT/vYT/vYT/vYT/vYT/vYT/vYT/vYT/vYT/vYT/vYT/vYT/
vYT/vYT/vYT/vYT/vYT/wYz/wYz/wYz/wYz/wYz/wYz/wYz/wYz/wYz/wYz/wYz/
wYz/wYz/wYz/wYz/wYz/wYz/wYz/wYz/wYz/wYz/wYz/wYz/wYz/xZT/xZT/xZT/
xZT/xZT/xZT/xZT/xZT/xZT/xZT/xZT/xZT/xZT/xZT/xZT/xZT/xZT/xZT/xZT/
xZT/xZT/xZT/xZT/xZT/yJz/yJz/yJz/yJz/yJz/yJz/yJz/yJz/yJz/yJz/yJz/
yJz/yJz/yJz/yJz/yJz/yJz/yJz/yJz/yJz/yJz/yJz/yJz/yJwAAAD/zKP/zKP/
zKP/zKP/zKP/zKP/zKP/zKP/zKP/zKP/zKP/zKP/zKP/zKP/zKP/zKP/zKP/zKP/
zKP/zKP/zKP/zKMAAAAAAAD/z6v/z6v/z6v/z6v/z6v/z6v/z6v/z6v/z6v/z6v/
z6v/z6v/z6v/z6v/z6v/z6v/z6v/z6v/z6v/z6v/z6v/z6sAAAAAAAAAAAAAAAD/
07P/07P/07P/07P/07P/07P/07P/07P/07P/07P/07P/07P/07P/07P/07P/07P/
07P/07MAAAAAAAAAAADgAAdBgAABQYAAAUEAAABBAAAAQQAAAEEAAABBAAAAQQAA
AEEAAABBAAAAQQAAAEEAAABBAAAAQQAAAEEAAABBAAAAQQAAAEEAAABBAAAAQQAA
AEGAAAFBgAABQeAAB0E=}
},0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1312,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"кнЗавершитьЗаписьДействийПользователяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{347,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ГруппаКоманднаяПанель",
{1,20,
{"ru","Форма"},
{"en","Form"},
{"am","ቅጽ"},
{"az","Forması"},
{"bg","Форма"},
{"et","Vorm"},
{"fr","La forme"},
{"ka","ფორმა"},
{"de","Form"},
{"hu","Formában"},
{"it","La forma"},
{"lv","Forma"},
{"lt","Forma"},
{"mn","Маягт"},
{"pl","Kształt"},
{"ro","Forma"},
{"sl","Obrazec"},
{"es","La forma de"},
{"sv","Form"},
{"tr","Formu"}
},
{1,1,
{"ru","Группа командная панель"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{7,
{4,0,
{0},"",-1,-1,1,0,""},
{0},2,3,0,0,
{3,4,
{0}
},
{3,4,
{0}
}
},4,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{351,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ГруппаПодменюСостояниеTestClient",
{1,20,
{"ru","Состояние формы"},
{"en","Form state"},
{"am","የግዛት ዘመን ቅጽ"},
{"az","Dövlət formaları"},
{"bg","Състоянието на форми"},
{"et","Seisukord vormi"},
{"fr","L'état de forme"},
{"ka","სახელმწიფოს ფორმა"},
{"de","Zustand Form"},
{"hu","Állam a forma"},
{"it","Lo stato di forma"},
{"lv","Valsts formas"},
{"lt","Valstybės formos"},
{"mn","Төрийн хэлбэр"},
{"pl","Stan formy"},
{"ro","Starea de forma"},
{"sl","Stanje obliki"},
{"es","El estado de forma de"},
{"sv","Staten i form"},
{"tr","Durumu form"}
},
{1,1,
{"ru","Группа подменю состояние test client"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{349,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ЗапомнитьСостояниеФормыTestClient",
{1,20,
{"ru","Запомнить состояние формы TestClient"},
{"en","Remember form state from test client"},
{"am","አስታውሱ የግዛት ዘመን ቅጽ TestClient"},
{"az","Yadda vəziyyəti formaları TestClient"},
{"bg","Запомни състояние на формата TestClient"},
{"et","Meeles olek vorm TestClient"},
{"fr","Mémoriser l'état de forme de TestClient"},
{"ka","მახსოვს, სახელმწიფოს ფორმა TestClient"},
{"de","Merken Sie sich den Zustand der Form von Testclient"},
{"hu","Ne feledje, hogy az állam a formában TestClient"},
{"it","Memorizzare lo stato di forma TestClient"},
{"lv","Atcerēties stāvoklis formas TestClient"},
{"lt","Prisiminti būseną formos TestClient"},
{"mn","Санаж төрийн хэлбэрээр TestClient"},
{"pl","Zapamiętaj kształt TestClient"},
{"ro","De retinut starea de formă TestClient"},
{"sl","Ne pozabite, stanje obliki TestClient"},
{"es","Recordar el estado de forma de TestClient"},
{"sv","Kom ihåg att staten i form TestClient"},
{"tr","Durumunu hatırla form TestClient"}
},1,
{14,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1315,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗапомнитьСостояниеФормыTestClientРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{353,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ЗабытьСостояниеФормыTestClient",
{1,20,
{"ru","Забыть состояние формы TestClient"},
{"en","Purge form state for test client"},
{"am","መርሳት የግዛት ዘመን ቅጽ TestClient"},
{"az","Unutmaq vəziyyəti formaları TestClient"},
{"bg","Забрави за състоянието на форми TestClient"},
{"et","Unustada olek vorm TestClient"},
{"fr","Oublier l'état de forme de TestClient"},
{"ka","დაგვავიწყდეს, სახელმწიფოს ფორმა TestClient"},
{"de","Vergessen Sie den Zustand der Form von Testclient"},
{"hu","Felejtsd el, hogy az állam a formában TestClient"},
{"it","Dimenticare lo stato di forma TestClient"},
{"lv","Aizmirst stāvoklis formas TestClient"},
{"lt","Užmiršti valstybės formos TestClient"},
{"mn","Мартаж төрийн хэлбэрээр TestClient"},
{"pl","Zapomnieć stan formy TestClient"},
{"ro","Uita starea forme TestClient"},
{"sl","Pozabite stanje obliki TestClient"},
{"es","Olvidar el estado de forma de TestClient"},
{"sv","Glöm staten i form TestClient"},
{"tr","Unutmak durum, form TestClient"}
},1,
{15,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1316,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗабытьСостояниеФормыTestClientРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{1314,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаПодменюСостояниеTestClientРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1715,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ГруппаИсследовательФормы",
{1,1,
{"ru","Группа исследователь формы"}
},
{1,1,
{"ru","Группа исследователь формы"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1713,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ИсследовательФормы",
{1,0},1,
{65,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1714,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсследовательФормыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{1716,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаИсследовательФормыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{357,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ПолучитьИзмененияФормыGherkin",
{1,20,
{"ru","Получить состояние всей формы"},
{"en","Get the state of the whole form"},
{"am","ጋር ይገናኛሉ ይታያል"},
{"az","Əldə formasının dəyişdirilməsi"},
{"bg","Да промени формата"},
{"et","Saada kuju muutused"},
{"fr","Obtenir des modifications de la forme"},
{"ka","ფორმის შეცვლა"},
{"de","Änderungen in der Form erhalten"},
{"hu","Hogy megváltoztassuk"},
{"it","Ottenere un cambiamento di forma"},
{"lv","Iegūt formas izmaiņas"},
{"lt","Gauti pokyčiai formos"},
{"mn","Өөрчлөх хэлбэр"},
{"pl","Zobacz zmiany formy"},
{"ro","Pentru a obține modificări de formă"},
{"sl","Če želite spremeniti obliko"},
{"es","Obtener el cambio de la forma de"},
{"sv","För att ändra formen"},
{"tr","Değişiklik olsun form"}
},1,
{16,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1318,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПолучитьИзмененияФормыGherkinРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1764,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ПолучитьСостояниеТекущегоЭлементаФормы",
{1,0},1,
{69,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1765,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПолучитьСостояниеТекущегоЭлементаФормыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{1313,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаКоманднаяПанельРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1309,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РаботасUIРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{308,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"АвтоматизированноеСозданиеСценариев",
{1,1,
{"ru","Автоматизированное создание сценариев"}
},
{1,1,
{"ru","Автоматизированное создание сценариев"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{310,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"РезультатГенерации",
{1,1,
{"ru","Результат генерации"}
},
{1,1,
{"ru","Результат генерации"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1,
{0,1,0}
},5,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{312,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"СценарийПоведения",
{1,20,
{"ru","Сценарий поведения"},
{"en","Feature template"},
{"am","ወደ ባህሪ"},
{"az","Ssenari davranış"},
{"bg","Сценарий на поведение"},
{"et","Stsenaarium käitumist"},
{"fr","Le script de comportement"},
{"ka","ქცევა"},
{"de","Szenario Verhalten"},
{"hu","A viselkedés"},
{"it","Lo scenario di comportamento"},
{"lv","Uzvedības scenāriju"},
{"lt","Scenarijus elgesio"},
{"mn","Зан"},
{"pl","Scenariusz postępowania"},
{"ro","Scenariu de comportament"},
{"sl","Vedenje"},
{"es","La secuencia de comandos de la conducta"},
{"sv","Beteendet"},
{"tr","Senaryo davranış"}
},
{1,1,
{"ru","Сценарий поведения"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1245,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"Группа4",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1241,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"ПодготовитьСценарийКВыполнению",
{1,20,
{"ru","Подготовить сценарий к выполнению"},
{"en","Pepare scenario for run"},
{"am","ደረጃ ስክሪፕት በአፈጻጸም ደረጃ አልተሰጠውም"},
{"az","Hazırlamaq üçün script yerinə yetirilməsinə"},
{"bg","Подготви сценарий за изпълнение"},
{"et","Valmistada skripti täitmist"},
{"fr","Préparer un script à exécuter"},
{"ka","მომზადება სკრიპტის შესრულების"},
{"de","Bereiten Sie ein Skript zur Ausführung"},
{"hu","Készítsen szkript végrehajtása"},
{"it","Preparare uno script per l'esecuzione di"},
{"lv","Lai sagatavotu skriptu izpildei"},
{"lt","Parengti scenarijų įgyvendinti"},
{"mn","Бэлтгэх бичиг гүйцэтгэл"},
{"pl","Przygotować skrypt do wykonania"},
{"ro","Pentru a pregăti un scenariu la executarea"},
{"sl","Pripravimo skript za izvajanje"},
{"es","Preparar una secuencia de comandos a la aplicación de"},
{"sv","Förbereder manuset för utförande"},
{"tr","Hazırlamak için bir komut dosyası yürütme"}
},1,
{32,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1324,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПодготовитьСценарийКВыполнениюРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1467,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"ДобавитьИзвестныйШаг",
{1,20,
{"ru","Добавить известный шаг"},
{"en","Known steps"},
{"am","ያክሉ የታወቀ ደረጃ"},
{"az","Əlavə tanınan addım"},
{"bg","Добави известен стъпка"},
{"et","Lisa tuntud samm"},
{"fr","Ajouter le célèbre étape"},
{"ka","რჩეულებში ცნობილია ნაბიჯი"},
{"de","Hinzufügen der berühmte Schritt"},
{"hu","Adjunk hozzá egy ismert lépés"},
{"it","Aggiungere il famoso passo"},
{"lv","Pievienot zināms solis"},
{"lt","Pridėti žinomas žingsnis"},
{"mn","Нэмэх нь мэдэгдэж алхам"},
{"pl","Dodaj znany krok"},
{"ro","Adauga cunoscut pas"},
{"sl","Dodajanje znan korak"},
{"es","Agregar el famoso paso"},
{"sv","Lägg till en känd steg"},
{"tr","Eklemek ünlü adım"}
},1,
{43,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1468,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДобавитьИзвестныйШагРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1766,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"ПеревестиТекстНаДругойЯзык",
{1,0},1,
{70,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1767,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПеревестиТекстНаДругойЯзыкРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},1,0,1,
{10,
{1323,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа4РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{314,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,7,"СгенерированныйСценарий",0,0,
{1,0},
{1,0},
{2,
{1},
{0,b81fdd5d-651e-4768-b17b-c7c88064a8e1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,50,10,1,1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,0,0,1,0},
{0,1,0},1,
{21,
{315,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СгенерированныйСценарийКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1603,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СгенерированныйСценарийКонтекстноеМенюРедактироватьТаблицуТекст",
{1,1,
{"ru","Редактировать таблицу"}
},1,
{59,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1604,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СгенерированныйСценарийКонтекстноеМенюРедактироватьТаблицуТекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1720,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СгенерированныйСценарийКонтекстноеМенюПолучитьМакетПоТаблице",
{1,0},1,
{66,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1721,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СгенерированныйСценарийКонтекстноеМенюПолучитьМакетПоТаблицеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1745,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"СгенерированныйСценарийКонтекстноеМенюОчиститьСгенерированныйСценарий",
{1,0},1,
{68,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1746,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СгенерированныйСценарийКонтекстноеМенюОчиститьСгенерированныйСценарийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1325,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СгенерированныйСценарийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1322,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СценарийПоведенияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{852,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"СценарийПоведенияКод",
{1,20,
{"ru","Сценарий поведения код"},
{"en","Feature template code"},
{"am","ወደ ኮድ ባህሪ"},
{"az","Ssenari davranış kodu"},
{"bg","Сценарий на поведението код"},
{"et","Stsenaarium käitumist kood"},
{"fr","Le script de code de conduite"},
{"ka","ქცევის კოდექსი"},
{"de","Script Code des Verhaltens"},
{"hu","A viselkedési kódex"},
{"it","Lo script di codice di comportamento"},
{"lv","Uzvedības scenāriju kods"},
{"lt","Scenarijus elgesio kodą"},
{"mn","Зан код"},
{"pl","Scenariusz postępowania kod"},
{"ro","Scenariul codul de conduită"},
{"sl","Vedenje kodo"},
{"es","La secuencia de comandos de código de conducta"},
{"sv","Beteendet kod"},
{"tr","Senaryo davranış kodu"}
},
{1,1,
{"ru","Сценарий поведения код"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{854,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,7,"СгенерированныйСценарийКод",0,0,
{1,0},
{1,0},
{2,
{1},
{0,fdddfbe9-d7f2-4050-a2ec-63997bea4ad0}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,50,10,1,1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,0,0,1,0},
{0,1,0},1,
{21,
{855,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СгенерированныйСценарийКодКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1327,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СгенерированныйСценарийКодРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1744,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаВыполнитьКод",
{1,1,
{"ru","Группа выполнить код"}
},
{1,1,
{"ru","Группа выполнить код"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1776,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"ВыполнитьКодНаКлиенте",
{1,0},1,
{72,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1777,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыполнитьКодНаКлиентеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1778,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"ВыполнитьКодНаСервере",
{1,0},1,
{71,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1779,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыполнитьКодНаСервереРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},1,0,1,
{10,
{1745,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВыполнитьКодРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1326,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СценарийПоведенияКодРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{317,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"КодПроверкиПоведения",
{1,20,
{"ru","Код проверки поведения"},
{"en","Generated code"},
{"am","አዳዲስ ግምገማዎች ቅስቀሳቸውን"},
{"az","Kodu yoxlamaq davranış"},
{"bg","Код за проверка на поведението на"},
{"et","Kood vaadata käitumine"},
{"fr","Le code de vérification de comportement"},
{"ka","შეამოწმეთ კოდი ჩატარება"},
{"de","Validierungscode Verhalten"},
{"hu","Ellenőrizze a magatartási kódex"},
{"it","Il codice di verifica del comportamento"},
{"lv","Kods pārbaudes uzvedību"},
{"lt","Patikrinimo kodą elgesio"},
{"mn","Шалгах ес зүйн дүрэм"},
{"pl","Kod sprawdzenia zachowania"},
{"ro","Codul de verificare a comportamentului"},
{"sl","Preverite kodeks ravnanja"},
{"es","Validación del código de conducta"},
{"sv","Kolla uppförandekod"},
{"tr","Doğrulama kodu bir davranış"}
},
{1,1,
{"ru","Сценарий поведения"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{327,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,7,"СгенерированныйКод",0,0,
{1,0},
{1,0},
{2,
{1},
{0,b9d60bc5-61d1-479d-9260-cfe574728063}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{4,50,10,1,1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,0,0,1,0},
{0,1,0},1,
{21,
{328,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СгенерированныйКодКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1329,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СгенерированныйКодРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1328,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КодПроверкиПоведенияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{322,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"ИсходныйXMLПроверки",
{1,20,
{"ru","Исходный XML"},
{"en","XML file from UI record"},
{"am","ምንጩ ይታያል"},
{"az","Mənbə XML"},
{"bg","Изходния XML"},
{"et","Algne XML"},
{"fr","Source XML"},
{"ka","წყარო XML"},
{"de","Die XML-Quelle"},
{"hu","A forrás XML"},
{"it","Sorgente XML"},
{"lv","Oriģinālais XML"},
{"lt","Šaltinio XML"},
{"mn","Эх XML"},
{"pl","Oryginalny XML"},
{"ro","Sursă XML"},
{"sl","Vir XML"},
{"es","De origen XML"},
{"sv","Käll-XML -"},
{"tr","Kaynak XML"}
},
{1,1,
{"ru","Сценарий поведения"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1239,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"ПреобразоватьИсходныйXML",
{1,0},1,
{31,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1331,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПреобразоватьИсходныйXMLРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{330,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"СгенерированныйXML",0,0,
{1,0},
{1,0},
{2,
{1},
{0,465ba1b5-af91-42ac-bb9d-275b4b1cafab}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,1,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{331,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СгенерированныйXMLКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1332,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СгенерированныйXMLРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1330,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИсходныйXMLПроверкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1697,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"НастройкиРаботыСUI",
{1,20,
{"ru","Настройки"},
{"en","Settings"},
{"am","ቅንብሮችን"},
{"az","Parametrlər"},
{"bg","Настройки"},
{"et","Seaded"},
{"fr","Les paramètres de"},
{"ka","პარამეტრები"},
{"de","Einstellungen"},
{"hu","Beállítások"},
{"it","Impostazioni"},
{"lv","Uzstādījumi"},
{"lt","Parametrai"},
{"mn","Тохиргоо"},
{"pl","Ustawienia"},
{"ro","Setări"},
{"sl","Nastavitve"},
{"es","Ajustes"},
{"sv","Inställningar"},
{"tr","Ayarlar"}
},
{1,1,
{"ru","Настройки работы СUI"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1711,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ПараметрыЧтенияМакетов",
{1,20,
{"ru","Параметры чтения макетов"},
{"en","Spreadsheet settings"},
{"am","የንባብ ግቤቶች ይታያል"},
{"az","Parametrləri oxu planlarının"},
{"bg","Настройки за четене на схеми"},
{"et","Seaded lugeda skeeme"},
{"fr","Les paramètres de lecture des maquettes"},
{"ka","კითხვა პარამეტრების ფორმატისთვის"},
{"de","Leseoptionen Layouts"},
{"hu","Olvasási paramétereket elrendezés"},
{"it","Le opzioni di layout di lettura"},
{"lv","Parametri lasāmi izkārtojumu"},
{"lt","Parametrai maketų skaityti"},
{"mn","Унших параметрүүдийг байрлал"},
{"pl","Parametry odczytu układów"},
{"ro","Opțiuni de citire machete"},
{"sl","Za branje parametrov postavitve"},
{"es","Opciones de lectura de diseños"},
{"sv","Behandlingen parametrar layouter"},
{"tr","Ayarlar okuma düzenleri"}
},
{1,1,
{"ru","Параметры чтения макетов"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1708,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"СчитываниеМакетаНачСтр",1,0,
{1,20,
{"ru","Начальная строка"},
{"en","First row"},
{"am","አሁን ሕብረቁምፊ"},
{"az","İlkin simli"},
{"bg","Първоначалната линия"},
{"et","Esialgne rida"},
{"fr","Ligne de départ"},
{"ka","საწყის string"},
{"de","Erste Zeile"},
{"hu","Az eredeti string"},
{"it","Riga iniziale"},
{"lv","Sākuma rinda"},
{"lt","Pirmoji eilutė"},
{"mn","Эхний мөр"},
{"pl","Początkowy wiersz"},
{"ro","Inițial șirul"},
{"sl","Začetni niz"},
{"es","Línea de inicio"},
{"sv","Den första strängen"},
{"tr","Başlangıç satırı"}
},
{1,0},
{1,
{31}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1709,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СчитываниеМакетаНачСтрКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1710,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СчитываниеМакетаНачСтрРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1705,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"СчитываниеМакетаНачКол",1,0,
{1,20,
{"ru","Начальная колонка"},
{"en","First column"},
{"am","አዳዲስ ግምገማዎች ስፋት"},
{"az","İlkin sütun"},
{"bg","Първоначалната колона"},
{"et","Esialgne veerg"},
{"fr","Initial de la colonne"},
{"ka","დაწყება სვეტი"},
{"de","Erste Spalte"},
{"hu","Start oszlop"},
{"it","Iniziale colonna"},
{"lv","Sākuma kolonna"},
{"lt","Pirmoji skiltis"},
{"mn","Эхлэх багана"},
{"pl","Kolumna początkowa"},
{"ro","Inițial coloana"},
{"sl","Start stolpec"},
{"es","Inicial de la columna"},
{"sv","Börja kolumn"},
{"tr","İlk sütun"}
},
{1,0},
{1,
{32}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1706,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СчитываниеМакетаНачКолКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1707,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СчитываниеМакетаНачКолРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1702,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"СчитываниеМакетаКолСтр",1,0,
{1,20,
{"ru","Количество строк"},
{"en","Row count"},
{"am","ቁጥር የሚሰጡዋቸውን"},
{"az","Xətləri sayı"},
{"bg","Брой редове"},
{"et","Ridade arv"},
{"fr","Le nombre de lignes"},
{"ka","სტრიქონების რაოდენობა"},
{"de","Die Anzahl der Zeilen"},
{"hu","A sorok száma"},
{"it","Il numero di righe"},
{"lv","Rindu skaits"},
{"lt","Eilučių skaičius"},
{"mn","The number of rows"},
{"pl","Ilość wierszy"},
{"ro","Numărul de rânduri"},
{"sl","Število vrstic"},
{"es","El número de filas"},
{"sv","Antalet rader"},
{"tr","Satır sayısı"}
},
{1,0},
{1,
{33}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1703,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СчитываниеМакетаКолСтрКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1704,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СчитываниеМакетаКолСтрРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1699,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"СчитываниеМакетаКолКол",1,0,
{1,20,
{"ru","Количество колонок"},
{"en","Column count"},
{"am","ቁጥር ተደግፏል"},
{"az","Sayı, sütun"},
{"bg","Брой високоговорители"},
{"et","Tulpade"},
{"fr","Le nombre de colonnes"},
{"ka","სვეტების"},
{"de","Die Anzahl der Spalten"},
{"hu","Az oszlopok száma"},
{"it","Il numero di colonne"},
{"lv","Skaļruņu skaitu"},
{"lt","Garsiakalbių skaičius"},
{"mn","The number of columns"},
{"pl","Liczba kolumn"},
{"ro","Număr de difuzoare"},
{"sl","Število stolpcev"},
{"es","El número de columnas"},
{"sv","Antal kolumner"},
{"tr","Sütun sayısını"}
},
{1,0},
{1,
{34}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1700,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СчитываниеМакетаКолКолКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1701,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СчитываниеМакетаКолКолРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1712,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПараметрыЧтенияМакетовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1698,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастройкиРаботыСUIРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1321,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РезультатГенерацииРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1320,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"АвтоматизированноеСозданиеСценариевРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1308,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаДополнительноРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{957,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"ГруппаНесколькоКлиентовТестирования",
{1,20,
{"ru","Test clients"},
{"en","Test clients"},
{"am","ቅድሚያ የሚሰጡዋቸውን"},
{"az","Test clients"},
{"bg","Тест clients"},
{"et","Test clients"},
{"fr","Test clients"},
{"ka","ტესტი კლიენტებს"},
{"de","Test clients"},
{"hu","Teszt költségtérítést"},
{"it","Test clients"},
{"lv","Test klientiem"},
{"lt","Test clients"},
{"mn","Туршилтын үйлчлүүлэгч"},
{"pl","Test clients"},
{"ro","Test de clienti"},
{"sl","Test strank"},
{"es","Test clients"},
{"sv","Testa kunder"},
{"tr","Test clients"}
},
{1,1,
{"ru","Группа несколько клиентов тестирования"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{51,
{959,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДанныеКлиентовТестирования",0,0,1,
{1,0},
{1,0},
{1,
{18}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,13,
{"U"},
{3,4d88756d-bad4-4fde-92e1-c1f1402ac6b2,"ДанныеКлиентовТестированияПередОкончаниемРедактирования",ab930362-ff94-4dcb-ad16-188805d23e3c,"ДанныеКлиентовТестированияПередНачаломИзменения",de65638d-a806-4a76-bc10-f62bbc86e0e7,"ДанныеКлиентовТестированияПослеУдаления",1,0,4d88756d-bad4-4fde-92e1-c1f1402ac6b2,0,1,ab930362-ff94-4dcb-ad16-188805d23e3c,0,1,de65638d-a806-4a76-bc10-f62bbc86e0e7,0,1},
{0},1,
{21,
{960,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДанныеКлиентовТестированияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,0},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1569,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДанныеКлиентовТестированияКонтекстноеМенюПодключитьВыбранногоКлиентаТестирования",
{1,0},1,
{25,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64: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
z0H/w/9B/8P/Qf/D/0E=}
},0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1570,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияКонтекстноеМенюПодключитьВыбранногоКлиентаТестированияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1571,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДанныеКлиентовТестированияКонтекстноеМенюНачатьЗаписьДействийПользлователяВВыбранномКлиентеТестирования",
{1,2,
{"ru","Начать запись поведения"},
{"en","Begin record"}
},1,
{26,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:AAABAAEAEBAAAAEAGABoAwAAFgAAACgAAAAQAAAAIAAAAAEAGAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8AAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8AAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8KE/8AAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8KE/8AAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8KE/8AAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8KE/8AAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8AAAAAAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAD//6xB+B+sQfAPrEHgB6xBwAOsQYADrEGAAaxBgAGsQYAB
rEGAAaxBgAOsQcADrEHgB6xB8A+sQfgfrEH//6xB}
},0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1572,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияКонтекстноеМенюНачатьЗаписьДействийПользлователяВВыбранномКлиентеТестированияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1768,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДанныеКлиентовТестированияКонтекстноеМенюОтключитьВыбранногоКлиентаТестирования",
{1,0},1,
{27,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAACXBIWXMAAA7DAAAO
wwHHb6hkAAADrklEQVRIiaWWu4sddRTHv+f8fr95XOdCWPEVSSGoJJrY2cRWjQEb
FRX8CyRgYRGjpBSFpPNViGmChUpsjK6wVjYKcX0gptBGgkUCEmTZ3JnJnfn9ztdi
7pq7m2x2N55mnnzOOd/zmJGquk1FRPD/TABw402S9CIizqnc4Pl2wQogAfAA7Joj
gRmhM1/gDvkkFBATkSmJBMgUgHGOCfx3AexEJBJOVboY45113X4ymdR/NU17muTt
ItLNshq443HlnNtRDVREuq6Lu+u6WQKw3zl3MaW02zn3a1WVT4rI3wCCGc3leaaq
WzoQEl4EGOD97rpulwDsL4r8WFWVzwFwfd+/QHIhy8JZAIGEbTMDMREYSQXgVlfr
b83sYFHkx8oyP0nSA4LV1ckFEVkZj0f7ZxlQbw6GAogppQfruj2dkj1kZnvN7GCe
Z++WZX7SjGNAYtO0r5rZvap6btb1CmBLB2u9lbquf4m0uwBZERHEGJ+v6/aUqlxp
mvZo1/UnVeV8UWTHObSkAcB2aqDeu8uq+qcIWu/9L30fX0zJ7gNkIca0t+v6N1Tl
fFWNDnnvLgHIAJCca6frpZEYY3psdbW+NJm07zvnvg8hfNP3/eEY0z7v/R9mdnff
x5dV9VxVjQ6puotmzNeiB4bpu14XQlUBEWGW+Q9DCJ+JSA2gJDEqinypLPOnUkr3
m/EO5/RnEe1JZiJI86zrJCLhRGRqZrvM7BFV/T0E/1PbTj8lOcmy8LVz+kVK9rCZ
jbIsnAPgSKjItchnrPUZzCZ02nX9nqa5ugjwAAlr2+mKmS1k2egdkq2ItDH2jwNS
k1gmIRsjn9P62vkAj3vqul0ieaAo8uMh+DNmtuCcrjjnfuj7+HRdt4vOueUs8x8B
dJvB5x2IiHR9H++Zjf++oshfL8vi7aLI38qycDYl29X38YkQ/FcppUeb5up7AAKG
Vt60C9ccOACIMR6bwY+WZX4iJRt7734DsDx7z1QFRVG8UlWjZ1V1gkHmTXfxWg0I
ACnZAyLCPM8+JgERuVLX7Wtd17+pqt957xbN6LMsnAEoJAOwvrCbSgQAIfgvSUrT
tKdIjmYTekJVlquqfEZVrwKQYfcMq+BmcGD9uhYAfdtOP5hOuyMi0pMMIvLjeDw6
rOouA8y2injezMiNc6Ah+EVVvSAiLgT/eVkWR5xz/5DMN/b5VkZu+OCQg1Qi0g9H
gKS/0RBtNwM/oIefApE1TZnPOUy3Ah9M4M3ItQ/0nMVbA66Hmxn+BSjC7GY4Sr0i
AAAAAElFTkSuQmCC}
},0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1769,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияКонтекстноеМенюОтключитьВыбранногоКлиентаТестированияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},1,
{21,
{961,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ДанныеКлиентовТестированияКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},4,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{987,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДанныеКлиентовТестированияДобавить",
{1,20,
{"ru","Добавить"},
{"en","Add"},
{"am","ያክሉ"},
{"az","Əlavə etmək"},
{"bg","Добави"},
{"et","Lisa"},
{"fr","Ajouter"},
{"ka","დამატება"},
{"de","Hinzufügen"},
{"hu","Add"},
{"it","Aggiungere"},
{"lv","Pievienot"},
{"lt","Pridėti"},
{"mn","Нэмэх"},
{"pl","Dodać"},
{"ro","Adauga"},
{"sl","Dodaj"},
{"es","Agregar"},
{"sv","Lägg till"},
{"tr","Ekle"}
},1,
{959,b0016a68-ec64-4e6d-b905-c71fd62efc4c},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1334,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияДобавитьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{989,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДанныеКлиентовТестированияСохранитьКлиентовТестирования",
{1,0},1,
{24,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1335,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияСохранитьКлиентовТестированияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{991,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,6,"ДанныеКлиентовТестированияГруппа1",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,
{0},2,0},3,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{993,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДанныеКлиентовТестированияПодключитьВыбранногоКлиентаТестирования",
{1,0},1,
{25,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64: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
z0H/w/9B/8P/Qf/D/0E=}
},0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1337,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияПодключитьВыбранногоКлиентаТестированияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{995,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДанныеКлиентовТестированияНачатьЗаписьДействийПользлователяВВыбранномКлиентеТестирования",
{1,20,
{"ru","Начать запись поведения"},
{"en","Begin record"},
{"am","አዳዲስ ግምገማዎች ቀረጻ ባህሪ"},
{"az","Yazmağa başlamaq davranış"},
{"bg","Започнете запис на поведение"},
{"et","Alustada käitumine rekord"},
{"fr","Commencer l'enregistrement de conduite"},
{"ka","ჩაწერის დაწყება ქცევა"},
{"de","Starten Sie die Aufnahme des Verhaltens"},
{"hu","Indítsa el a felvételt viselkedés"},
{"it","Avviare la registrazione del comportamento"},
{"lv","Sākt rīcību ierakstu"},
{"lt","Pradėti įrašymą, elgesio"},
{"mn","Бичиж эхлэх зан"},
{"pl","Rozpocząć nagrywanie zachowania"},
{"ro","Începe înregistrarea comportamentului"},
{"sl","Začetek snemanja vedenje"},
{"es","Iniciar la grabación de la conducta"},
{"sv","Starta inspelningen beteende"},
{"tr","Kaydı başlatmak davranış"}
},1,
{26,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:AAABAAEAEBAAAAEAGABoAwAAFgAAACgAAAAQAAAAIAAAAAEAGAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8AAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8AAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8KE/8AAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8KE/8AAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8KE/8AAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8KE/8AAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8AAAAAAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8KE/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8KE/8K
E/8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAKE/8KE/8KE/8KE/8KE/8KE/8A
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAD//6xB+B+sQfAPrEHgB6xBwAOsQYADrEGAAaxBgAGsQYAB
rEGAAaxBgAOsQcADrEHgB6xB8A+sQfgfrEH//6xB}
},0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1338,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияНачатьЗаписьДействийПользлователяВВыбранномКлиентеТестированияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{997,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДанныеКлиентовТестированияОтключитьВыбранногоКлиентаТестирования",
{1,0},1,
{27,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,3,
{0},"",-1,-1,0,
{
{#base64:iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAACXBIWXMAAA7DAAAO
wwHHb6hkAAADrklEQVRIiaWWu4sddRTHv+f8fr95XOdCWPEVSSGoJJrY2cRWjQEb
FRX8CyRgYRGjpBSFpPNViGmChUpsjK6wVjYKcX0gptBGgkUCEmTZ3JnJnfn9ztdi
7pq7m2x2N55mnnzOOd/zmJGquk1FRPD/TABw402S9CIizqnc4Pl2wQogAfAA7Joj
gRmhM1/gDvkkFBATkSmJBMgUgHGOCfx3AexEJBJOVboY45113X4ymdR/NU17muTt
ItLNshq443HlnNtRDVREuq6Lu+u6WQKw3zl3MaW02zn3a1WVT4rI3wCCGc3leaaq
WzoQEl4EGOD97rpulwDsL4r8WFWVzwFwfd+/QHIhy8JZAIGEbTMDMREYSQXgVlfr
b83sYFHkx8oyP0nSA4LV1ckFEVkZj0f7ZxlQbw6GAogppQfruj2dkj1kZnvN7GCe
Z++WZX7SjGNAYtO0r5rZvap6btb1CmBLB2u9lbquf4m0uwBZERHEGJ+v6/aUqlxp
mvZo1/UnVeV8UWTHObSkAcB2aqDeu8uq+qcIWu/9L30fX0zJ7gNkIca0t+v6N1Tl
fFWNDnnvLgHIAJCca6frpZEYY3psdbW+NJm07zvnvg8hfNP3/eEY0z7v/R9mdnff
x5dV9VxVjQ6puotmzNeiB4bpu14XQlUBEWGW+Q9DCJ+JSA2gJDEqinypLPOnUkr3
m/EO5/RnEe1JZiJI86zrJCLhRGRqZrvM7BFV/T0E/1PbTj8lOcmy8LVz+kVK9rCZ
jbIsnAPgSKjItchnrPUZzCZ02nX9nqa5ugjwAAlr2+mKmS1k2egdkq2ItDH2jwNS
k1gmIRsjn9P62vkAj3vqul0ieaAo8uMh+DNmtuCcrjjnfuj7+HRdt4vOueUs8x8B
dJvB5x2IiHR9H++Zjf++oshfL8vi7aLI38qycDYl29X38YkQ/FcppUeb5up7AAKG
Vt60C9ccOACIMR6bwY+WZX4iJRt7734DsDx7z1QFRVG8UlWjZ1V1gkHmTXfxWg0I
ACnZAyLCPM8+JgERuVLX7Wtd17+pqt957xbN6LMsnAEoJAOwvrCbSgQAIfgvSUrT
tKdIjmYTekJVlquqfEZVrwKQYfcMq+BmcGD9uhYAfdtOP5hOuyMi0pMMIvLjeDw6
rOouA8y2injezMiNc6Ah+EVVvSAiLgT/eVkWR5xz/5DMN/b5VkZu+OCQg1Qi0g9H
gKS/0RBtNwM/oIefApE1TZnPOUy3Ah9M4M3ItQ/0nMVbA66Hmxn+BSjC7GY4Sr0i
AAAAAElFTkSuQmCC}
},0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1339,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияОтключитьВыбранногоКлиентаТестированияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,1,
{10,
{1336,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияГруппа1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{999,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ДанныеКлиентовТестированияКлиентТестированияТекущейИнфобазы",
{1,0},1,
{28,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,0,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1340,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияКлиентТестированияТекущейИнфобазыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},4,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1725,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДанныеКлиентовТестированияГруппа4",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,1,1,0,3,
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{0},
{"Pattern"},"",
{1,0},0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{975,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДанныеКлиентовТестированияИмя",1,0,
{1,0},
{1,0},
{2,
{18},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{976,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДанныеКлиентовТестированияИмяКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1351,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияИмяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1722,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДанныеКлиентовТестированияСиноним",1,0,
{1,0},
{1,0},
{2,
{18},
{9}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1723,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДанныеКлиентовТестированияСинонимКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1724,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияСинонимРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1726,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияГруппа4РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1001,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДанныеКлиентовТестированияГруппа2",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,1,1,0,3,
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{0},
{"Pattern"},"",
{1,0},0},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{981,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДанныеКлиентовТестированияПутьКИнфобазе",1,0,
{1,0},
{1,0},
{2,
{18},
{4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{982,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДанныеКлиентовТестированияПутьКИнфобазеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1355,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияПутьКИнфобазеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1011,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДанныеКлиентовТестированияДопПараметры",1,0,
{1,0},
{1,0},
{2,
{18},
{7}
},
{0},1,0,2,0,2,
{1,0},
{1,1,
{"ru","Дополнительные параметры командной строки подключения 1С"}
},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1012,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДанныеКлиентовТестированияДопПараметрыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1356,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияДопПараметрыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1566,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДанныеКлиентовТестированияТипКлиента",1,0,
{1,0},
{1,0},
{2,
{18},
{1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,3,"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","Тонкий"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,20,
{"ru","Тонкий"},
{"en","Thin"},
{"am","ቀጥል"},
{"az","İncə"},
{"bg","Тънък"},
{"et","Õhuke"},
{"fr","Mince"},
{"ka","თხელი"},
{"de","Schlank"},
{"hu","Vékony"},
{"it","Sottile"},
{"lv","Slim"},
{"lt","Plonas"},
{"mn","Нимгэн"},
{"pl","Cienki"},
{"ro","Subțire"},
{"sl","Tanke"},
{"es","Delgado"},
{"sv","Tunn"},
{"tr","İnce"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","Толстый"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,20,
{"ru","Толстый"},
{"en","Fat"},
{"am","."},
{"az","Qalın"},
{"bg","Дебел"},
{"et","Paks"},
{"fr","Épais"},
{"ka","სქელი"},
{"de","Dick"},
{"hu","Vastag"},
{"it","Spessa"},
{"lv","Biezs"},
{"lt","Storas"},
{"mn","Зузаан"},
{"pl","Gruby"},
{"ro","Gros"},
{"sl","Debel"},
{"es","Gordo"},
{"sv","Tjock"},
{"tr","Kalın"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","Web"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,20,
{"ru","Web"},
{"en","Web"},
{"am","የድረ ገፅ"},
{"az","Web"},
{"bg","Web"},
{"et","Web"},
{"fr","Web"},
{"ka","ვებ"},
{"de","Web"},
{"hu","Web"},
{"it","Web"},
{"lv","Web"},
{"lt","Web"},
{"mn","Вэб"},
{"pl","Web"},
{"ro","Web"},
{"sl","Splet"},
{"es","Web"},
{"sv","Webb"},
{"tr","Web"}
}
}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
}
},0,0,2,2,1,2,2,2,2,2,2,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,1,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДанныеКлиентовТестированияТипКлиентаПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{1567,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДанныеКлиентовТестированияТипКлиентаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1568,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияТипКлиентаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1352,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияГруппа2РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1675,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДанныеКлиентовТестированияГруппа3",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{2,1,1,0,3,
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{0},
{"Pattern"},"",
{1,0},0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1677,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДанныеКлиентовТестированияИмяКомпьютера",1,0,
{1,0},
{1,0},
{2,
{18},
{8}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДанныеКлиентовТестированияИмяКомпьютераПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{1678,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДанныеКлиентовТестированияИмяКомпьютераКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1679,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияИмяКомпьютераРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{984,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДанныеКлиентовТестированияПорт",1,0,
{1,0},
{1,0},
{2,
{18},
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{985,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДанныеКлиентовТестированияПортКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1357,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияПортРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1676,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияГруппа3РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1646,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДанныеКлиентовТестированияPID",1,0,
{1,0},
{1,0},
{2,
{18},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1647,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДанныеКлиентовТестированияPIDКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1648,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияPIDРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{10,
{1341,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,1,1,1,
{4,
{1342,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{21,
{1343,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДанныеКлиентовТестированияСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1344,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{959,0},0,3,3},1,
{4,
{1345,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ДанныеКлиентовТестированияСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{21,
{1346,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДанныеКлиентовТестированияСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1347,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{959,1},0,3,3},1,
{4,
{1348,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДанныеКлиентовТестированияУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{21,
{1349,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДанныеКлиентовТестированияУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1350,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДанныеКлиентовТестированияУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{959,2},0,3,3},0,1,0,0,1,0,3,3,0,1,0},1,0,1,
{10,
{1333,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаНесколькоКлиентовТестированияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{133,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"ГруппаНастройки",
{1,20,
{"ru","Сервис"},
{"en","Service and Settings"},
{"am","አገልግሎት"},
{"az","Xidmət"},
{"bg","Услуги"},
{"et","Teenus"},
{"fr","Service"},
{"ka","სამსახური"},
{"de","Service"},
{"hu","Szolgáltatás"},
{"it","Servizio"},
{"lv","Serviss"},
{"lt","Paslauga"},
{"mn","Үйлчилгээ"},
{"pl","Obsługa"},
{"ro","Servicii"},
{"sl","Storitev"},
{"es","Servicio"},
{"sv","Service"},
{"tr","Hizmet"}
},
{1,1,
{"ru","Группа настройки"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{720,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"КомандаСохранитьНастройки",
{1,1,
{"ru","Сохранить настройки"}
},1,
{22,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},2,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1359,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КомандаСохранитьНастройкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{650,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"СтраницыСервис",
{1,1,
{"ru","Страницы сервис"}
},
{1,1,
{"ru","Страницы сервис"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1,
{0,1,0}
},4,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{652,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"СтраницыСервисОсновные",
{1,20,
{"ru","Основные"},
{"en","Main"},
{"am","ዋናው"},
{"az","Əsas"},
{"bg","Основни"},
{"et","Põhi"},
{"fr","Les principaux"},
{"ka","მთავარი"},
{"de","Die wichtigsten"},
{"hu","Fő"},
{"it","Di base"},
{"lv","Pamata"},
{"lt","Pagrindiniai"},
{"mn","Гол"},
{"pl","Podstawowe"},
{"ro","De bază"},
{"sl","Glavni"},
{"es","Básicos"},
{"sv","Viktigaste"},
{"tr","Temel"}
},
{1,1,
{"ru","Страницы сервис основные"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},15,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{304,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"РаботаСТэгами",
{1,1,
{"ru","Работа с тэгами"}
},
{1,1,
{"ru","Работа с тэгами"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,1,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{221,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"СписокТеговИсключение1",1,0,
{1,20,
{"ru","Список исключаемых тэгов"},
{"en","Not run tags"},
{"am","አዳዲስ ሆኖ ይታያል"},
{"az","Siyahısı tags исключаемых"},
{"bg","Списък на изключване на тагове"},
{"et","Nimekiri исключаемых-i"},
{"fr","La liste des exclus des balises"},
{"ka","სია გამორიცხული საკვანძო სიტყვები"},
{"de","Liste der ausgeschlossenen Tags"},
{"hu","A lista kizárt kategória"},
{"it","Elenco esclusi tag"},
{"lv","Saraksts atbrīvoto tagiem"},
{"lt","Sąrašas žymių исключаемых"},
{"mn","Жагсаалтаас хассан tags"},
{"pl","Lista blokowanych elementów"},
{"ro","Lista excluse tag-uri"},
{"sl","Seznam izključenih oznake"},
{"es","La lista de exclusión de las etiquetas"},
{"sv","Listan över undantagna taggar"},
{"tr","İstisna listesi etiketleri"}
},
{1,0},
{2,
{1},
{0,c62ae8e3-c76b-402d-8ac4-7220e83d541c}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,b50dc41b-c15a-4ebe-a17f-d01e51c47de6,"СписокТеговИсключение1Очистка",1,0,b50dc41b-c15a-4ebe-a17f-d01e51c47de6,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{222,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СписокТеговИсключение1КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1363,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СписокТеговИсключение1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{224,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"СписокТеговОтбор1",1,0,
{1,20,
{"ru","Тэги для запуска"},
{"en","Run only tags"},
{"am","በቀዳሚ ግምገማዎች ጋር"},
{"az","Tags başlamaq üçün"},
{"bg","Тагове за стартиране"},
{"et","Tags joosta"},
{"fr","Étiquettes pour démarrer"},
{"ka","Tags უნდა დაიწყოს"},
{"de","Tags zu starten"},
{"hu","Kategória indításához"},
{"it","Tag per eseguire"},
{"lv","Tags, lai palaistu"},
{"lt","Žymos paleisti"},
{"mn","Сэдвийн эхлэх"},
{"pl","Tagi do uruchomienia"},
{"ro","Tag-uri pentru a rula"},
{"sl","Oznake za začetek"},
{"es","Etiquetas para iniciar"},
{"sv","Taggar för att starta"},
{"tr","Etiketler başlatmak için"}
},
{1,0},
{2,
{1},
{0,67164642-7fbb-446d-b627-4bbec5c301c3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{225,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СписокТеговОтбор1КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1364,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СписокТеговОтбор1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1362,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РаботаСТэгамиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{859,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаОтладкаTestClient",
{1,20,
{"ru","Отладка TestClient"},
{"en","TestClient debug"},
{"am","አንድ TestClient"},
{"az","Ayıklama TestClient"},
{"bg","Отстраняване На Грешки TestClient"},
{"et","Silumine TestClient"},
{"fr","Débogage TestClient"},
{"ka","გამართვის TestClient"},
{"de","Debuggen Von Testclient"},
{"hu","Debug TestClient"},
{"it","Debug TestClient"},
{"lv","Atkļūdošana TestClient"},
{"lt","Derinimas TestClient"},
{"mn","Дибаг TestClient"},
{"pl","Debugowanie TestClient"},
{"ro","Depanare TestClient"},
{"sl","Debug TestClient"},
{"es","La Depuración De TestClient"},
{"sv","Felsöka TestClient"},
{"tr","Hata Ayıklama TestClient"}
},
{1,1,
{"ru","Группа отладка test client"}
},0,1,0,0,0,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,1,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{867,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ЗапускатьТестКлиентВРежимеОтладки",4,0,
{1,0},
{1,0},
{2,
{1},
{0,40b1a642-6565-46d5-9eda-554b325627a0}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ЗапускатьТестКлиентВРежимеОтладкиПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{868,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗапускатьТестКлиентВРежимеОтладкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1366,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗапускатьТестКлиентВРежимеОтладкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{924,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"НастройкиОтладчикаTC",
{1,1,
{"ru","Настройки отладчика TC"}
},
{1,1,
{"ru","Настройки отладчика TC"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{861,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КлючиОтладки",1,0,
{1,0},
{1,0},
{2,
{1},
{0,840a1222-1134-4e9c-8b6b-3e6b43832313}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{862,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КлючиОтладкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1368,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КлючиОтладкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{864,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"АдресОтладчика",1,0,
{1,0},
{1,0},
{2,
{1},
{0,533a26ed-ea27-4523-a57d-023be95a6d58}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{865,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"АдресОтладчикаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1369,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"АдресОтладчикаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1367,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастройкиОтладчикаTCРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1365,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаОтладкаTestClientРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1806,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"Группа5",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,2},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1694,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЯзыкГенератораGherkin",1,0,
{1,1,
{"ru","Язык генератора Gherkin"}
},
{1,0},
{2,
{1},
{0,d56bcfbb-9446-4aa4-9591-f7d13f90c923}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,8,"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","ru"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,1,
{"ru","Русский"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","en"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,1,
{"ru","English"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","uk"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,1,
{"ru","Украинский"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","ro"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,1,
{"ru","Romanian"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","de"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,1,
{"ru","Deutsch"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","lv"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,1,
{"ru","Latvian"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","it"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,1,
{"ru","Italian"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","pl"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,1,
{"ru","Polish"}
}
}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
}
},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ЯзыкГенератораGherkinПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{1695,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЯзыкГенератораGherkinКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1696,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЯзыкГенератораGherkinРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1808,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КоманднаяСтрокаРедактированияФичи",1,0,
{1,0},
{1,0},
{2,
{1},
{0,345f8cc8-299e-44e8-b213-e75ea78eb2e4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1809,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КоманднаяСтрокаРедактированияФичиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1810,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КоманднаяСтрокаРедактированияФичиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1807,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа5РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{910,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ФлажкиНастроек",
{1,1,
{"ru","Флажки настроек"}
},
{1,1,
{"ru","Флажки настроек"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{912,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ЛеваяЧастьФлажковНастроек",
{1,1,
{"ru","Левая часть флажков настроек"}
},
{1,1,
{"ru","Левая часть флажков настроек"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{341,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ПодключитьВнешниеОбработкиДляОтладки",4,0,
{1,20,
{"ru","Подлючать обработки реализации шагов для отладки"},
{"en","Enable debug for steps defitions"},
{"am","ቅድሚያ ቅድሚያ የሚሰጡዋቸውን ደረጃዎች ላይ መጠቀም"},
{"az","Подлючать emalı həyata keçirilməsi üçün addımlar debug"},
{"bg","Подлючать обработка на изпълнението стъпки за отстраняване на грешки"},
{"et","Подлючать töötlemise rakendamise samme, et silumine"},
{"fr","Подлючать traitement étapes de mise en œuvre pour le débogage"},
{"ka","დაკავშირება, დამუშავება განხორციელების ნაბიჯები გამართვის"},
{"de","Подлючать Behandlung Umsetzungsschritte für das Debuggen"},
{"hu","Csatlakoztassa a feldolgozás végrehajtási lépések a hibakeresés"},
{"it","Подлючать trattamento di realizzazione di passaggi per eseguire il debug"},
{"lv","Подлючать apstrādes īstenošanas pasākumus, lai atkļūdošanas"},
{"lt","Подлючать perdirbimo įgyvendinimo priemonių derinimo"},
{"mn","To connect боловсруулах, хэрэгжүүлэх алхмуудыг дибаг хийх"},
{"pl","Подлючать przetwarzania realizacji kroków do debugowania"},
{"ro","Подлючать de prelucrare realizarea de pași pentru a depana"},
{"sl","Za povezavo obdelave izvajanje korake za odpravljanje napak"},
{"es","Подлючать de procesamiento de la implementación de medidas para la depuración"},
{"sv","För att ansluta bearbetning genomförandet av åtgärder för felsökning"},
{"tr","Подлючать işleme uygulamak için adım hata ayıklama"}
},
{1,0},
{2,
{1},
{0,c09d1e67-5742-415e-b9ce-4f315bb7f8e8}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{342,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПодключитьВнешниеОбработкиДляОтладкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1372,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПодключитьВнешниеОбработкиДляОтладкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{344,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"СохранятьКонтекстыПередВыполнениемШагов",4,0,
{1,20,
{"ru","Сохранять контексты перед выполнением шагов"},
{"en","Save contexts before step invoke"},
{"am","አዳዲስ ግምገማዎች contexts ፊት መጠቀም ስለጀመሩ ቅድሚያ የሚሰጡዋቸውን"},
{"az","Saxlaya kontekstlərdə etmədən əvvəl addımlar"},
{"bg","Запишете контекст, преди да изпълните стъпки"},
{"et","Salvestada kontekstides enne sammud"},
{"fr","Enregistrer les contextes avant de suivre les étapes"},
{"ka","შენახვა კონტექსტში ადრე ასრულებენ ნაბიჯები"},
{"de","Speichern Kontexte vor der Ausführung der Schritte"},
{"hu","A mentés kontextusokban végrehajtása előtt a lépcsőn"},
{"it","Salvare i contesti prima di eseguire i passaggi"},
{"lv","Saglabāt situācijās, pirms soļi"},
{"lt","Išsaugoti контексты prieš atlikdami veiksmus"},
{"mn","Хадгалах нөхцөл хийхийн өмнө арга хэмжээ"},
{"pl","Zapisywać konteksty przed wykonaniem kroków"},
{"ro","Salva contexte înainte de a efectua pași"},
{"sl","Shrani kontekstih pred izvedbo korakov"},
{"es","Guardar los contextos antes de realizar los pasos"},
{"sv","Spara sammanhang innan du utför stegen"},
{"tr","Kaydetmek bağlamları adımları gerçekleştirmeden önce,"}
},
{1,0},
{2,
{1},
{0,edbf9d14-eabd-4f3d-8c3e-e43bd46ad329}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{345,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СохранятьКонтекстыПередВыполнениемШаговКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1373,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СохранятьКонтекстыПередВыполнениемШаговРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{335,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ВыполнятьШагиАссинхронно",4,0,
{1,20,
{"ru","Обновлять состояние дерева при выполнении шагов"},
{"en","Invoke steps as async procedure"},
{"am","ቅድሚያ የሚሰጡዋቸውን asynchronously"},
{"az","Yerinə addımlar асинхронно"},
{"bg","Изпълнява асинхронно стъпки"},
{"et","Täita sammud asünkroonselt"},
{"fr","Effectuer les étapes de manière asynchrone"},
{"ka","აწარმოებს ნაბიჯები asynchronously"},
{"de","Führen Sie die Schritte asynchron"},
{"hu","Futni lépéseket aszinkron módon kerülhet sor"},
{"it","Eseguire i passaggi in modo asincrono"},
{"lv","Veikt pasākumus asinhroni"},
{"lt","Atlikti veiksmus asinchroniškai"},
{"mn","Ажиллуулах арга хэмжээ asynchronously"},
{"pl","Wykonać kroki asynchronicznie"},
{"ro","Pentru a efectua pașii asincron"},
{"sl","Teči koraki asinhrono"},
{"es","Realizar los pasos de forma asincrónica"},
{"sv","Att köra steg asynkront"},
{"tr","Gerçekleştirmek için adımlar uyumsuz"}
},
{1,2,
{"ru","Если флаг выставлен - то это замедляет выполнение шагов, но позоволяет обновлять состояние дерева при выполнении каждого шага."},
{"en","If the flag is set, it slows down the execution of the steps, but it allows you to update the state of the tree at each step."}
},
{2,
{1},
{0,d3e90876-ed13-418b-8adf-61b9879875ae}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{336,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВыполнятьШагиАссинхронноКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1374,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыполнятьШагиАссинхронноРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{954,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ОстановкаПриВозникновенииОшибки",4,0,
{1,20,
{"ru","Остановка при возникновении ошибки"},
{"en","Stop on error"},
{"am","ቅድሚያ የሚሰጡዋቸውን ስህተት ይኖራል"},
{"az","Stop yarandıqda səhvlər"},
{"bg","Спирка при възникване на грешка"},
{"et","Stop vea ilmnemisel"},
{"fr","Arrêt en cas d'erreur"},
{"ka","შეწყდეს, როდესაც შეცდომა ხდება"},
{"de","Stop wenn ein Fehler Auftritt"},
{"hu","Állj meg, amikor hiba fordul elő"},
{"it","Stop in caso di errore"},
{"lv","Apstāšanās, ja rodas kļūda"},
{"lt","Stotelė kai įvyksta klaida"},
{"mn","Зогсоох үед алдаа гардаг"},
{"pl","Przystanek w przypadku wystąpienia błędu"},
{"ro","Oprire atunci când apare o eroare"},
{"sl","Ustavi, ko pride do napake"},
{"es","La parada cuando se produce un error"},
{"sv","Sluta när fel uppstår"},
{"tr","Durdurma bir hata oluştuğunda"}
},
{1,0},
{2,
{1},
{0,82396c19-d212-45d0-a6c9-6721b573e40e}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{955,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ОстановкаПриВозникновенииОшибкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1375,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОстановкаПриВозникновенииОшибкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1371,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЛеваяЧастьФлажковНастроекРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{914,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ПраваяЧастьФлажковНастроек",
{1,1,
{"ru","Правая часть флажков настроек"}
},
{1,1,
{"ru","Правая часть флажков настроек"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{289,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"DebugLog2",4,0,
{1,20,
{"ru","Включить отладочные сообщения"},
{"en","Output verbose log and debug log"},
{"am","አሁን.."},
{"az","Daxil debug mesajları"},
{"bg","Включва изтриване на съобщения"},
{"et","Luba silumine sõnumeid"},
{"fr","Activer les messages de débogage"},
{"ka","ჩართვა გამართვის შეტყობინებები"},
{"de","Debug-Meldungen aktivieren"},
{"hu","Hogy enable debug üzenetek"},
{"it","Includere i messaggi di debug"},
{"lv","Ieslēgt atkļūdošanas ziņojumus"},
{"lt","Įtraukti derinimo pranešimai"},
{"mn","Идэвхжүүлэхийн тулд debug messages"},
{"pl","Włączyć komunikaty diagnostyczne"},
{"ro","Activați mesajele de depanare"},
{"sl","Če želite omogočiti sporočila debug"},
{"es","Incluir mensajes de depuración"},
{"sv","För att aktivera debug-meddelanden"},
{"tr","Etkinleştirmek için hata ayıklama iletileri"}
},
{1,0},
{2,
{1},
{0,05bfb715-9288-4b87-adbb-dc394cfe21ad}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{290,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"DebugLog2КонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1377,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"DebugLog2РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{338,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ДелатьЛогВыполненияСценариевВЖР",4,0,
{1,20,
{"ru","Записывать лог выполнения в журнал регистрации"},
{"en","Output log to 1C registration journal"},
{"am","አዳዲስ ግምገማዎች በአፈጻጸም ላይ ስለጀመሩ ቅድሚያ የሚሰጡዋቸውን"},
{"az","Qeyd günlük yerinə yetirilməsi qeydiyyatı jurnalı"},
{"bg","Записва лог изпълнение в списание регистрация"},
{"et","Kirjutada logifaili error log registreerimine"},
{"fr","Enregistrer le journal d'exécution dans le journal de l'enregistrement"},
{"ka","ჩანაწერი აღსრულების შესვლა შესვლა"},
{"de","Aufzeichnen der log-Ausführung in Protokolldatei"},
{"hu","Rekord a végrehajtási napló a napló"},
{"it","Registrare un log di esecuzione nel registro"},
{"lv","Ierakstīt log veiktu reģistrācijas žurnāls"},
{"lt","Įrašyti failą, atlikti registracijos žurnalas"},
{"mn","Бичлэг гүйцэтгэх нэвтрэх бүртгэлийн"},
{"pl","Zapisywać log z wykonania w dzienniku"},
{"ro","Scrie jurnal de execuție în jurnalul de înregistrare a"},
{"sl","Snemanje izvedbo dnevnik v dnevniku"},
{"es","Grabar un log de ejecución en el registro de horas"},
{"sv","Registrera utförande i logg"},
{"tr","Kaydetmek için bir günlük çalışma günlüğü"}
},
{1,0},
{2,
{1},
{0,0289709e-d09d-4ae3-8e91-cb039e008662}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{339,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДелатьЛогВыполненияСценариевВЖРКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1378,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДелатьЛогВыполненияСценариевВЖРРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{481,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ПроверкаРаботыVanessaBehaviorВРежимеTestClient",4,0,
{1,20,
{"ru","Проверка работы Vanessa-Behavior в режиме test client"},
{"en","Check Vanessa-Behavior on 1C test client session"},
{"am","አዳዲስ ግምገማዎች ሆኖ ነው በጣም-ባህሪ የሚሰጡዋቸውን ቅድሚያ የታዘዘ"},
{"az","Yoxlama iş Vanessa-Behavior rejimində test client"},
{"bg","Проверка на работата на Ванеса-Behavior в режим client test"},
{"et","Kontroll töö Vanessa-Behavior-režiimis test client"},
{"fr","Vérifier le fonctionnement de Vanessa-Behavior en mode de test client"},
{"ka","შეამოწმეთ ოპერაციის Vanessa-ქცევა რეჟიმი ტესტი კლიენტი"},
{"de","Überprüfung der Arbeit von Vanessa-Behavior im Modus test client"},
{"hu","Ellenőrizze, hogy a művelet a Vanessa-Viselkedés mód teszt ügyfél"},
{"it","Il lavoro di verifica Vanessa-Behavior in modalità test client"},
{"lv","Pārbaudes darbs ""Vanessa"" -Behavior režīmā test client"},
{"lt","Veikimo tikrinimas Vanessa-Behavior režimu test client"},
{"mn","Шалгах үйл ажиллагаанд Vanessa-Зан үйлийн горим туршилтын үйлчлүүлэгч"},
{"pl","Sprawdzenie działania Vanessa-Behavior w trybie test client"},
{"ro","Verificarea funcționării Vanessa-Behavior în modul de test client"},
{"sl","Preverite delovanje Vanessa-Vedenje načinu test odjemalec"},
{"es","Verificación del funcionamiento de Vanessa-Behavior en el modo de test client"},
{"sv","Kontrollera driften av Vanessa-Beteende läge testet klienten"},
{"tr","Çalışma kontrol Vanessa-Behavior modunda test client"}
},
{1,0},
{2,
{1},
{0,7bd6467b-8fd5-4ec5-82b5-7470ba5f322c}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ПроверкаРаботыVanessaBehaviorВРежимеTestClientПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{482,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПроверкаРаботыVanessaBehaviorВРежимеTestClientКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1379,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПроверкаРаботыVanessaBehaviorВРежимеTestClientРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1750,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ПоказыватьНомерСтрокиДереваПриВозникновенииОшибки",4,0,
{1,0},
{1,0},
{2,
{1},
{0,677c400c-bbcc-4a89-a0bf-eb564f73eac5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{1751,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПоказыватьНомерСтрокиДереваПриВозникновенииОшибкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1752,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПоказыватьНомерСтрокиДереваПриВозникновенииОшибкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1376,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПраваяЧастьФлажковНастроекРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1370,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФлажкиНастроекРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{922,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"Группа6",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{897,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ПортЗапускаТестКлиента",1,0,
{1,0},
{1,0},
{0},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{898,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПортЗапускаТестКлиентаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1381,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПортЗапускаТестКлиентаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1380,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа6РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1672,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаймаутЗапуска1С",1,0,
{1,0},
{1,0},
{2,
{1},
{0,444c19dc-031b-4574-9456-46d0bbab779c}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1673,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаймаутЗапуска1СКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1674,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаймаутЗапуска1СРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1784,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаймаутДляАсинхронныхШагов",1,0,
{1,0},
{1,0},
{2,
{1},
{0,49dbab7b-a8e3-4000-b13a-c3e1470aabcf}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1785,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаймаутДляАсинхронныхШаговКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1786,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаймаутДляАсинхронныхШаговРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1770,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КоличествоСекундПоискаОкна",1,0,
{1,0},
{1,0},
{2,
{1},
{0,e7f711ca-d445-4ea6-a9b9-e32db1875229}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1771,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КоличествоСекундПоискаОкнаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1772,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КоличествоСекундПоискаОкнаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1683,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ДиапазонПортовTestclient",1,0,
{1,0},
{1,0},
{2,
{1},
{0,17188653-ed0c-4672-bd1f-4f01f3898d39}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1684,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДиапазонПортовTestclientКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1685,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДиапазонПортовTestclientРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{380,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогИнструментов",1,0,
{1,20,
{"ru","Каталог инструментов"},
{"en","directory for Vanessa Stack"},
{"am","መሣሪያዎች የታዘዘ"},
{"az","Kataloq alətləri"},
{"bg","Каталог за инструменти"},
{"et","Vahendid kataloogi"},
{"fr","Catalogue d'outils"},
{"ka","ინსტრუმენტი კატალოგი"},
{"de","Werkzeugkatalog"},
{"hu","Az eszközök katalógus"},
{"it","Catalogo degli strumenti"},
{"lv","Instrumentu katalogs"},
{"lt","Įrankių katalogas"},
{"mn","Багаж хэрэгсэл каталог"},
{"pl","Katalog narzędzi"},
{"ro","Catalog de instrumente"},
{"sl","Orodja katalog"},
{"es","Catálogo de herramientas"},
{"sv","De verktyg katalog"},
{"tr","Katalog, araç"}
},
{1,0},
{2,
{1},
{0,13046aca-b33c-4435-b736-44bd900e8d98}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогИнструментовНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{381,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогИнструментовКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1382,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогИнструментовРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{364,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"VanessaStackCommons",1,0,
{1,20,
{"ru","Расширенные инструменты Vanessa Stack Commons"},
{"en","path for extended Vanessa Satck Commons"},
{"am","የላቀ መሣሪያዎች ግምገማ ቅድሚያ Commons"},
{"az","İnkişaf etmiş alətləri Vanessa Stack Commons"},
{"bg","Разширени инструменти Ванеса Stack Commons"},
{"et","Täiustatud tööriistad Vanessa Stack Commonsi"},
{"fr","Outils de Vanessa Stack Commons"},
{"ka","გაფართოებული ინსტრუმენტები Vanessa დასტის Commons"},
{"de","Erweiterte Werkzeuge Vanessa Stack Commons"},
{"hu","A speciális eszközök Vanessa Stack Commons"},
{"it","Strumenti avanzati Vanessa Stack Commons"},
{"lv","Uzlabotas instrumenti Vanessa Commons Stack"},
{"lt","Papildomi įrankiai Vanessa Stack Commons"},
{"mn","Дэвшилтэт хэрэгсэл Ванесса Үд Commons"},
{"pl","Zaawansowane narzędzia Vanessa Stack Commons"},
{"ro","Instrumente extinse de Vanessa Stack Commons"},
{"sl","Napredna orodja, Vanessa Kup Commons"},
{"es","Herramientas avanzadas de Vanessa Stack Commons"},
{"sv","Avancerade verktyg Vanessa Stack Commons"},
{"tr","Gelişmiş araçlar Vanessa Stack Commons"}
},
{1,0},
{2,
{1},
{0,4d85443f-975e-4a29-8380-cf64e31473e4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"VanessaStackCommonsНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{365,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"VanessaStackCommonsКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},0,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1383,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"VanessaStackCommonsРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{717,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогПроекта",1,0,
{1,20,
{"ru","Каталог проекта"},
{"en","Project path"},
{"am","ፕሮጀክቱ የማውጫ"},
{"az","Kataloq layihəsi"},
{"bg","Каталог на проекта"},
{"et","Projekti kataloogi"},
{"fr","Le répertoire du projet"},
{"ka","პროექტის დირექტორია"},
{"de","Katalog des Projekts"},
{"hu","A projekt könyvtár"},
{"it","La directory del progetto"},
{"lv","Projektu katalogs"},
{"lt","Projekto katalogą"},
{"mn","Төслийн сан"},
{"pl","Katalog projektu"},
{"ro","Directorul de proiect"},
{"sl","Projekt imenik"},
{"es","El directorio del proyecto"},
{"sv","Projektkatalogen"},
{"tr","Dizin projesi"}
},
{1,0},
{2,
{1},
{0,9fc46fa6-3d72-407c-9604-0c94d4618802}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогПроектаНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{718,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогПроектаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1384,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогПроектаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{523,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ИнтервалВыполненияШагаЗаданныйПользователем",1,0,
{1,20,
{"ru","Интервал выполнения шага"},
{"en","Step invoke sleep interval"},
{"am","በ ደረጃ"},
{"az","İnterval yerinə yetirilməsi addım"},
{"bg","Интервалът на извършване на стъпки"},
{"et","Intervall teha samm"},
{"fr","L'intervalle d'exécution de l'étape"},
{"ka","ინტერვალი ნაბიჯი"},
{"de","Intervall Schritt"},
{"hu","Intervallum lépés"},
{"it","L'intervallo di passaggio"},
{"lv","Intervāls veiktu soli"},
{"lt","Intervalas atlikti žingsnis"},
{"mn","Интервал алхам"},
{"pl","Interwał wykonywania kroku"},
{"ro","Intervalul pasul"},
{"sl","Interval korak"},
{"es","El intervalo de paso"},
{"sv","Intervall steg"},
{"tr","Aralık adım"}
},
{1,0},
{2,
{1},
{0,b2ac6d56-9033-42b5-b64a-c9af0dc62ce3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{524,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИнтервалВыполненияШагаЗаданныйПользователемКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1385,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИнтервалВыполненияШагаЗаданныйПользователемРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1032,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗагрузкаФичПриОткрытии",1,0,
{1,20,
{"ru","Загрузка фичи при открытии VB"},
{"en","Load features on form open"},
{"am","ማውረድ ቅድሚያ የሚሰጡዋቸውን የመክፈቻ ስሪቶች"},
{"az","Yükləmə фичи açarkən VB"},
{"bg","Изтегляне на фичи при отваряне на VB"},
{"et","Allalaadimine фичи avamisel VB"},
{"fr","Le téléchargement de fonctions lors de l'ouverture de VB"},
{"ka","ჩამოწერე თვისებები გახსნისას VB"},
{"de","Download Features beim öffnen VB"},
{"hu","Letöltés funkció megnyitásakor VB"},
{"it","Il caricamento di caratteristiche quando si apre VB"},
{"lv","Lejupielāde фичи atverot VB"},
{"lt","Parsisiųsti фичи atidarius VB"},
{"mn","Татаж авах боломжуудыг нээх үед VB"},
{"pl","Pobieranie cechy po otwarciu VB"},
{"ro","Descărcarea фичи la deschiderea VB"},
{"sl","Prenos funkcij pri odpiranju VB"},
{"es","Descarga slave al abrir VB"},
{"sv","Ladda ner funktioner när du öppnar VB"},
{"tr","Yükleme özellikleri açtığınızda, VB"}
},
{1,0},
{2,
{1},
{0,0eafed33-a134-4f55-b472-3eb73684c100}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,0,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,4,"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","Загружать"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,20,
{"ru","Загружать"},
{"en","Load"},
{"am","አውርድ"},
{"az","Yüklə"},
{"bg","Качвате"},
{"et","Alla laadida"},
{"fr","Télécharger"},
{"ka","უფასო"},
{"de","Laden"},
{"hu","Letöltés"},
{"it","Caricare"},
{"lv","Lejupielādēt"},
{"lt","Atsisiųsti"},
{"mn","Татаж авах"},
{"pl","Pobieranie"},
{"ro","Descărca"},
{"sl","Download"},
{"es","Cargar"},
{"sv","Ladda ner"},
{"tr","İndirmek için"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","Загружать и выполнять"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,20,
{"ru","Загружать и выполнять"},
{"en","Load and run"},
{"am","ማውረድ እና ሆኗል"},
{"az","Yükləmək üçün və yerinə yetirmək"},
{"bg","Да изтеглите и стартирате"},
{"et","Alla laadida ja täita"},
{"fr","Télécharger et exécuter un"},
{"ka","უფასო და შეასრულოს"},
{"de","Herunterladen und ausführen"},
{"hu","Töltse le, majd végre"},
{"it","Scaricare ed eseguire"},
{"lv","Lejupielādēt un izpildīt"},
{"lt","Įkelti ir atlikti"},
{"mn","Татаж авах, гүйцэтгэх"},
{"pl","Pobierać i wykonywać"},
{"ro","Descărca și de a efectua"},
{"sl","Prenos in izvajanje"},
{"es","Descargar y ejecutar"},
{"sv","Ladda ner och köra"},
{"tr","Yüklemek ve gerçekleştirmek"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","Задавать вопрос"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,20,
{"ru","Задавать вопрос"},
{"en","Make question"},
{"am","ጥያቄ መጠየቅ"},
{"az","Sual vermək"},
{"bg","Да си зададем въпроса"},
{"et","Küsi"},
{"fr","Poser une question"},
{"ka","დასვით შეკითხვა"},
{"de","Stellen Sie eine Frage"},
{"hu","Kérdezd"},
{"it","Porre la domanda"},
{"lv","Uzdot jautājumu"},
{"lt","Užduoti klausimą"},
{"mn","Асуух асуулт"},
{"pl","Zadaj pytanie"},
{"ro","Pune o întrebare"},
{"sl","Vprašajte vprašanje"},
{"es","Preguntar"},
{"sv","Ställ fråga"},
{"tr","Soru sor"}
}
}
},"",
{"#",0e704aa2-07bd-48b9-8223-a0212c4d5fc2,
{0,1,
{"S","Не загружать"},00000000-0000-0000-0000-000000000000,00000000-0000-0000-0000-000000000000,
{1,20,
{"ru","Не загружать"},
{"en","Do not load"},
{"am","."},
{"az","Download"},
{"bg","Не се изтеглят"},
{"et","Ei lae"},
{"fr","Ne pas télécharger"},
{"ka","არ ჩამოტვირთვა"},
{"de","Nicht herunterladen"},
{"hu","Ne letöltés"},
{"it","Non caricare"},
{"lv","Nevar lejupielādēt"},
{"lt","Nereikia atsisiųsti"},
{"mn","Татаж авч хэрэггүй"},
{"pl","Nie pobierać"},
{"ro","Nu pentru a descărca"},
{"sl","Ne prenesete"},
{"es","No descargar"},
{"sv","Ladda inte ner"},
{"tr","İndirmek için değil"}
}
}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
},
{0,
{4,0,
{0},"",-1,-1,1,0,""}
}
},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",1,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1033,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗагрузкаФичПриОткрытииКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1386,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗагрузкаФичПриОткрытииРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1532,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"СброситьКешИзвестныхStepDefinition",
{1,0},1,
{49,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1533,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СброситьКешИзвестныхStepDefinitionРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},1,0,1,
{10,
{1361,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыСервисОсновныеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{654,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"СтраницыОтчетыОЗапуске",
{1,20,
{"ru","Отчет о запуске сценариев"},
{"en","Reports"},
{"am","ሪፖርት ይታያል"},
{"az","Hesabat başlamaq haqqında ssenarilər"},
{"bg","Доклад за стартиране на скриптове"},
{"et","Aruande käivitada skripte"},
{"fr","Le rapport sur l'exécution de scripts"},
{"ka","ანგარიში სკრიფტები"},
{"de","Bericht über die Ausführung von Skripts"},
{"hu","Jelentés scripting"},
{"it","Il rapporto sull'esecuzione degli script"},
{"lv","Pārskats par starta skriptu"},
{"lt","Ataskaitą apie paleidimo scenarijus"},
{"mn","Тайлан скрипт"},
{"pl","Raport na temat uruchamiania skryptów"},
{"ro","Raportul cu privire la lansarea de scripting"},
{"sl","Poročilo skriptni"},
{"es","Informe acerca de la ejecución de secuencias de comandos"},
{"sv","Rapport scripting"},
{"tr","Raporu çalıştırdığınızda, komut dosyası"}
},
{1,1,
{"ru","Страницы отчеты о запуске"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},7,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1534,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаСкриншоты",
{1,0},
{1,1,
{"ru","Группа скриншоты"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,1,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{507,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ДелатьСкриншотПриВозникновенииОшибки",4,0,
{1,20,
{"ru","Формировать скриншот при ошибке"},
{"en","Create screnshoots on exception"},
{"am","አንድ ግምገማ ቅድሚያ ከሌሎች ስህተት"},
{"az","Formalaşdırmaq ekran zamanı səhv"},
{"bg","Формиране на екрана при грешка"},
{"et","Kujundada screenshot kui viga"},
{"fr","Former une capture d'écran en cas d'erreur"},
{"ka","გენერირება screenshot შეცდომა"},
{"de","Formung, wenn eine Fehlermeldung Screenshot"},
{"hu","Hogy létrehoz egy screenshot a hiba"},
{"it","Formazione screenshot in caso di errore"},
{"lv","Formēt screenshot, kad kļūda"},
{"lt","Formuoti screenshot, kai klaida"},
{"mn","Бий болгох нь дэлгэцийн алдаа"},
{"pl","Kształtować zrzut ekranu w błędzie"},
{"ro","Pentru a forma o captură de ecran în caz de eroare"},
{"sl","Za ustvarjanje screenshot z napako"},
{"es","Formar una captura de pantalla en caso de error"},
{"sv","För att skapa en skärmdump med felet"},
{"tr","Şekillendirme ekran hatası"}
},
{1,0},
{2,
{1},
{0,a0413348-0fed-41ea-8cf3-7827976027f3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДелатьСкриншотПриВозникновенииОшибкиПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{508,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДелатьСкриншотПриВозникновенииОшибкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1391,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДелатьСкриншотПриВозникновенииОшибкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{500,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КомандаСделатьСкриншот",1,0,
{1,20,
{"ru","Консольная команда создания скриншотов"},
{"en","Console command on screenshots create"},
{"am","መሥሪያ ትዕዛዝ ለመፍጠር ቅጽበታዊ ገጽ እይታዎች"},
{"az","Консольная komanda yaratmaq ekran"},
{"bg","Конзолната команда създаване на скрийншоти"},
{"et","Konsooli käsk luua ekraanikuvasid"},
{"fr","La commande de création de captures d'écran"},
{"ka","Console command შექმნათ პროფესიონალური"},
{"de","Konsolenbefehl erstellen von screenshots"},
{"hu","Konzol parancs, hogy hozzon létre screenshotok"},
{"it","Riga di comando per la creazione di screenshot"},
{"lv","Konsole komanda radītu ekrānšāviņi"},
{"lt","Konsolės komanda sukurti vaizdus"},
{"mn","Консол тушаал бий болгох дэлгэцийн"},
{"pl","Konsola drużyna tworzenia zrzutów ekranu"},
{"ro","Consola de comanda a crea capturi de ecran"},
{"sl","Konzola ukaz, da ustvarite screenshots"},
{"es","Comando de consola crear capturas de pantalla"},
{"sv","Console för att skapa skärmdumpar"},
{"tr","Konsol komutu oluşturmak ekran görüntüleri"}
},
{1,0},
{2,
{1},
{0,20371760-fed8-4ccc-8549-d8fa5bdc3842}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{501,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КомандаСделатьСкриншотКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1402,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КомандаСделатьСкриншотРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1581,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"СниматьСкриншотКаждогоОкна1С",4,0,
{1,20,
{"ru","Снимать скриншот каждого окна 1С"},
{"en","Take every window screenshot"},
{"am","ማስጠንቀቂያ ቅድሚያ የሚሰጡዋቸውን መስኮት 1C"},
{"az","Şəkil çəkmək üçün ekran və hər bir windows, 1C"},
{"bg","Снима екрана на всеки прозорец 1C"},
{"et","Tulistada screenshot iga akna 1S"},
{"fr","Retirer la capture d'écran de chaque fenêtre 1S"},
{"ka","მიიღოს სკრინშოტი თითოეული ფანჯარა 1C"},
{"de","Schießen Screenshot jedes Fenster 1S"},
{"hu","Egy screenshot minden ablak 1C"},
{"it","Scattare uno screenshot di ogni finestra 1S"},
{"lv","Uzņemt screenshot no katra loga 1C"},
{"lt","Šaudyti screenshot kiekvieno lango 1"},
{"mn","Онцлог нь дэлгэцийн авах, тус бүрийн цонх 1C"},
{"pl","Zrob zrzut ekranu z każdego okna 1C"},
{"ro","Pentru a trage un screenshot de la fiecare fereastră 1C"},
{"sl","Posnetek zaslona vsako okno 1C"},
{"es","Retirar la captura de pantalla de cada una de las ventanas 1S"},
{"sv","Ta en skärmdump av varje fönster 1C"},
{"tr","Ateş ekran görüntüsü her pencere 1C"}
},
{1,0},
{2,
{1},
{0,b7cefb3f-7a51-4328-8c1c-26ddf8ae2903}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{1582,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СниматьСкриншотКаждогоОкна1СКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1583,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СниматьСкриншотКаждогоОкна1СРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{510,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогOutputСкриншоты",1,0,
{1,20,
{"ru","Временный каталог сохранения скриншотов"},
{"en","Temp directory for screenshoots"},
{"am","ጊዜያዊ ማውጫ ጋር ቅጽበታዊ ገጽ እይታዎች"},
{"az","Müvəqqəti kataloq ekran saxlamaq"},
{"bg","Временната директория за запазване на скрийншотове"},
{"et","Temp kataloogi salvestada pildid"},
{"fr","Un répertoire temporaire enregistrer des captures d'écran"},
{"ka","დროებითი დირექტორია გადარჩენა ეკრანის"},
{"de","Temporäres Verzeichnis speichern screenshots"},
{"hu","Ideiglenes könyvtárba menteni screenshotok"},
{"it","Una directory temporanea salvare gli screenshot"},
{"lv","Pagaidu direktoriju saglabātu ekrānšāviņi"},
{"lt","Laikiną katalogą išsaugoti vaizdus"},
{"mn","Түр зуурын сан аврахын тулд дэлгэцийн"},
{"pl","Tymczasowy katalog zapisywania zrzutów ekranu"},
{"ro","Directorul temporar a salva capturi de ecran"},
{"sl","Začasno mapo za shranjevanje posnetkov zaslona"},
{"es","Un directorio temporal para guardar capturas de pantalla"},
{"sv","Temporär katalog för att spara skärmdumparna"},
{"tr","Geçici bir dizine ekran görüntülerini kaydetmek"}
},
{1,0},
{2,
{1},
{0,cd4c849d-16de-4574-8d35-dc45da3b4bb9}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputСкриншотыНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{511,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогOutputСкриншотыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1395,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогOutputСкриншотыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1535,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСкриншотыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1536,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаAllure",
{1,0},
{1,1,
{"ru","Группа allure"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,1,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1801,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаНастройкаAllure",
{1,1,
{"ru","Группа настройка allure"}
},
{1,1,
{"ru","Группа настройка allure"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{138,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ДелатьОтчетВФорматеАллюр",4,0,
{1,20,
{"ru","Формировать данные для отчета Allure"},
{"en","Create data for Allure QA Report"},
{"am","አንድ ውሂብ ሪፖርቱ Allure"},
{"az","Formalaşdırmaq üçün məlumat hesabatının Məlumat"},
{"bg","Формиране на данни за доклад на Allure"},
{"et","Kujundada aruande andmed Allure"},
{"fr","Former les données pour le rapport de l'Allure"},
{"ka","გენერირება მონაცემები ანგარიშში Allure"},
{"de","Die formung der Daten für den Bericht Allure"},
{"hu","Generál adatokat a jelentés Varázsa"},
{"it","Modellare i dati per il report Allure"},
{"lv","Veidot atskaites dati Vilinājums"},
{"lt","Formuoti duomenis ataskaitai Allure"},
{"mn","Бий болгох мэдээллийг тайлан Зүйлсээр"},
{"pl","Kształtować dane do raportu Allure"},
{"ro","Forma de date pentru raportul Allure"},
{"sl","Za generiranje podatkov za poročilo Vabiti"},
{"es","Construcción de la información para el informe de Allure"},
{"sv","För att generera data för rapporten Locka"},
{"tr","Şekil verileri için rapor Allure"}
},
{1,0},
{2,
{1},
{0,60ba8002-c996-4811-bb24-8b8857299dee}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДелатьОтчетВФорматеАллюрПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{139,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДелатьОтчетВФорматеАллюрКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1392,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДелатьОтчетВФорматеАллюрРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1803,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ОтобразитьОтчетAllure",4,0,
{1,0},
{1,0},
{2,
{1},
{0,3bf0c2e3-be9d-4d80-8caf-ec50a9ad0c2f}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{1804,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ОтобразитьОтчетAllureКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1805,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОтобразитьОтчетAllureРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1802,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаНастройкаAllureРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{141,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогOutputAllure",1,0,
{1,20,
{"ru","Временный каталог файлов результатов Allure"},
{"en","Temp dir for Allure test suite files"},
{"am","ወደ ጊዜያዊ ፋይሎች ቅድሚያ የሚሰጡዋቸውን Allure"},
{"az","Müvəqqəti kataloq və faylları nəticələr Məlumat"},
{"bg","Временна директория файлове резултати Allure"},
{"et","Temp kataloogi failid tulemusi Allure"},
{"fr","Répertoire des fichiers temporaires de résultats Allure"},
{"ka","დროებითი ფაილები დირექტორია შედეგები Allure"},
{"de","Verzeichnis für temporäre Dateien der Ergebnisse Allure"},
{"hu","Az ideiglenes fájlok könyvtárát eredmények Varázsa"},
{"it","Directory file temporanei risultati Allure"},
{"lv","Pagaidu direktoriju failu rezultātu Vilinājums"},
{"lt","Laikinų failų katalogą rezultatų Allure"},
{"mn","Түр зуурын файлуудыг сан үр дүн Зүйлсээр"},
{"pl","Katalog plików tymczasowych wyników Allure"},
{"ro","Directorul temporar fișierele rezultate Allure"},
{"sl","Začasne datoteke imenik rezultati Vabiti"},
{"es","Directorio de archivos temporales de los resultados de Allure"},
{"sv","Tillfälliga filer i katalogen resultat Locka"},
{"tr","Geçici bir dizine dosyaları sonuç Allure"}
},
{1,0},
{2,
{1},
{0,460da161-c609-4913-a9d5-b774468cd6cb}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputAllureНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{142,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогOutputAllureКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1396,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогOutputAllureРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1537,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаAllureРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1538,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаjUnit",
{1,0},
{1,1,
{"ru","Группаj unit"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,1,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{367,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ДелатьОтчетВФорматеxUnit",4,0,
{1,20,
{"ru","Формировать отчет в формате jUnit"},
{"en","Create report in jUnit format"},
{"am","አንድ ሪፖርት ውስጥ jUnit የሚሰጡዋቸውን"},
{"az","Formalaşdırmaq hesabatı formatında jUnit"},
{"bg","Образуването на записа във формат jUnit"},
{"et","Kujundada aruanne formaadis rongid"},
{"fr","Génère un rapport au format jUnit"},
{"ka","გენერირება ანგარიში jUnit ფორმატში"},
{"de","Formung Report im jUnit-Format"},
{"hu","Hozzon létre jelentést a jUnit formátum"},
{"it","Formare un report in formato jUnit"},
{"lv","Veidot atskaites formātā jUnit"},
{"lt","Formuoti ataskaitą formatu jUnit"},
{"mn","Бий тайлан jUnit формат"},
{"pl","Tworzyć raport w formacie jUnit"},
{"ro","Forma de rapoarte în format jUnit"},
{"sl","Ustvari poročilo v jUnit format"},
{"es","Genera un informe en formato de jUnit"},
{"sv","Generera en rapport i jUnit-format"},
{"tr","Şekillendirme formatında bir rapor jUnit"}
},
{1,0},
{2,
{1},
{0,5bea373e-650c-458b-8cc3-0b84e7f55063}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДелатьОтчетВФорматеxUnitПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{368,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДелатьОтчетВФорматеxUnitКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1393,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДелатьОтчетВФорматеxUnitРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{370,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогOutputjUnit",1,0,
{1,20,
{"ru","Временный каталог для файлов JUnit"},
{"en","Temp dir for JUnit xml files"},
{"am","ጊዜያዊ ማውጫ ደረጃ ፋይሎችን JUnit"},
{"az","Müvəqqəti faylları üçün kataloq JUnit"},
{"bg","Временен каталог за файлове JUnit"},
{"et","Temp kataloogi failide Rongid"},
{"fr","Un répertoire temporaire pour les fichiers JUnit"},
{"ka","დროებითი დირექტორია ფაილი, JUnit"},
{"de","Das temporäre Verzeichnis für Dateien JUnit"},
{"hu","Ideiglenes könyvtárba a fájlokat, JUnit"},
{"it","La directory temporanea per i file di JUnit"},
{"lv","Pagaidu direktoriju failu JUnit"},
{"lt","Laikiną katalogą failų JUnit"},
{"mn","Түр зуурын сангийн файлууд, JUnit"},
{"pl","Tymczasowy katalog dla plików JUnit"},
{"ro","Directorul temporar pentru fișiere JUnit"},
{"sl","Začasni imenik za datoteke, JUnit"},
{"es","La ubicación temporal para los archivos de JUnit"},
{"sv","Temporär katalog för filer, JUnit"},
{"tr","Geçici dizin dosyaları için JUnit"}
},
{1,0},
{2,
{1},
{0,c75f2681-524c-4f0a-ab16-22c1f58dd0ff}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputjUnitНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{371,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогOutputjUnitКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1397,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогOutputjUnitРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1539,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаjUnitРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1540,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаCucumber",
{1,0},
{1,1,
{"ru","Группа cucumber"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,1,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1461,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ДелатьОтчетВФорматеCucumberJson",4,0,
{1,20,
{"ru","Формировать отчет в формате Cucumber"},
{"en","Create report in Cucumber format "},
{"am","አንድ ሪፖርት ውስጥ የሚሰጡዋቸውን ነፃ"},
{"az","Formalaşdırmaq hesabatı formatında Cucumber"},
{"bg","Образуването на записа във формат Cucumber"},
{"et","Kujundada aruanne formaadis Cucumber"},
{"fr","Génère un rapport au format Cucumber"},
{"ka","მოხსენება ფორმატში კიტრი"},
{"de","Die formung der Bericht im Format Bewertungen"},
{"hu","Hozzon létre jelentést a formátum Uborka"},
{"it","Formare un report in formato Cucumber"},
{"lv","Veidot atskaites formātā Cucumber"},
{"lt","Formuoti ataskaitą formatu Cucumber"},
{"mn","Бий тайлан хэлбэрээр өргөст хэмх"},
{"pl","Tworzyć raport w formacie Ogórek"},
{"ro","Forma de rapoarte în format Cucumber"},
{"sl","Ustvari poročilo v obliki Kumare"},
{"es","Genera un informe en formato Cucumber"},
{"sv","Generera en rapport i formatet Gurka"},
{"tr","Şekillendirme formatında bir rapor Cucumber"}
},
{1,0},
{2,
{1},
{0,a5258f3c-c615-480e-89b3-942210833a6b}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДелатьОтчетВФорматеCucumberJsonПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{1462,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДелатьОтчетВФорматеCucumberJsonКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1463,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДелатьОтчетВФорматеCucumberJsonРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1464,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогOutputCucumberJson",1,0,
{1,20,
{"ru","Временный каталог для файлов Cucumber"},
{"en","Temp dir for JUnit xml files"},
{"am","ጊዜያዊ ማውጫ ላይ ፋይሎች ነፃ"},
{"az","Müvəqqəti faylları üçün kataloq Cucumber"},
{"bg","Временен каталог за файлове Cucumber"},
{"et","Temp kataloogi failide Cucumber"},
{"fr","Un répertoire temporaire pour les fichiers Cucumber"},
{"ka","დროებითი დირექტორია ფაილი კიტრი"},
{"de","Das temporäre Verzeichnis für Dateien Bewertungen"},
{"hu","Ideiglenes könyvtárba a fájlokat, Uborka"},
{"it","La directory temporanea per i file Cucumber"},
{"lv","Pagaidu direktoriju failu Cucumber"},
{"lt","Laikiną katalogą failų Cucumber"},
{"mn","Түр зуурын сангийн файлууд өргөст хэмх"},
{"pl","Tymczasowy katalog dla plików Ogórek"},
{"ro","Directorul temporar pentru fișiere Cucumber"},
{"sl","Začasni imenik za datoteke, Kumare"},
{"es","La ubicación temporal para los archivos de Cucumber"},
{"sv","Temporär katalog för filer Gurka"},
{"tr","Geçici dizin dosyaları için Cucumber"}
},
{1,0},
{2,
{1},
{0,1f79a2b1-a7fd-4b0e-ab13-cb997703d943}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputCucumberJsonНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1465,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогOutputCucumberJsonКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1466,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогOutputCucumberJsonРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1541,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаCucumberРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1542,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаЛогТекст",
{1,0},
{1,1,
{"ru","Группа лог текст"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,1,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1544,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ДелатьЛогВыполненияСценариевВТекстовыйФайл",4,0,
{1,0},
{1,0},
{2,
{1},
{0,8251dbcf-7681-47f7-9207-c9c2fbac9b97}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДелатьЛогВыполненияСценариевВТекстовыйФайлПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{1545,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДелатьЛогВыполненияСценариевВТекстовыйФайлКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1546,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДелатьЛогВыполненияСценариевВТекстовыйФайлРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1773,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ВыводитьВЛогВыполнениеШагов",4,0,
{1,0},
{1,0},
{2,
{1},
{0,497c62b3-6a58-42ef-ad40-dfe46bb17edf}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{1774,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ВыводитьВЛогВыполнениеШаговКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1775,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыводитьВЛогВыполнениеШаговРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1547,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ИмяФайлаЛогВыполненияСценариев",1,0,
{1,0},
{1,0},
{2,
{1},
{0,28873b45-db16-4213-89d0-2f9ed5c6f5bb}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputВнутреннийФорматНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1548,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИмяФайлаЛогВыполненияСценариевКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1549,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИмяФайлаЛогВыполненияСценариевРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1543,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаЛогТекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1753,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаЛогОшибокТекст",
{1,0},
{1,1,
{"ru","Группа лог текст"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,1,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1755,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ДелатьЛогОшибокВТекстовыйФайл",4,0,
{1,0},
{1,0},
{2,
{1},
{0,d3c3bdd3-4e31-4ccc-9c4d-42808b5ef96e}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ДелатьЛогОшибокВТекстовыйФайлПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{1756,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДелатьЛогОшибокВТекстовыйФайлКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1757,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДелатьЛогОшибокВТекстовыйФайлРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1758,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ИмяКаталогаЛогОшибок",1,0,
{1,0},
{1,0},
{2,
{1},
{0,66e73b59-4e52-4a5c-95e9-af015dc641a1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"ИмяКаталогаЛогОшибокНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1759,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИмяКаталогаЛогОшибокКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1760,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИмяКаталогаЛогОшибокРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1754,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаЛогОшибокТекстРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{918,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"Группа3",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{375,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ДелатьОтчетВоВнутреннемФормате",4,0,
{1,20,
{"ru","Формировать отчет о запуске во внутреннем формате"},
{"en","Create report in internal format"},
{"am","አንድ ሪፖርት ስለ ስለጀመሩ ውስጥ ቅድሚያ የሚሰጡዋቸውን"},
{"az","Formalaşdırmaq haqqında hesabat başlamaq daxili formatında"},
{"bg","Оформят доклад за старта във вътрешния формат"},
{"et","Kujundada aruande käivitamisel sisemises formaadis"},
{"fr","Créer un rapport sur l'exécution dans un format interne"},
{"ka","მოხსენება იმის შესახებ, დაიწყოს შიდა ფორმატში"},
{"de","Formung Bericht über den Start in einem internen Format"},
{"hu","Létrehoz egy jelentést arról, hogy a dob, a belső formátum"},
{"it","Formazione il rapporto sull'avvio nel formato interno"},
{"lv","Veidot atskaites, startējot iekšējā formātā"},
{"lt","Formuoti ataskaitą apie paleidžiate į vidinį formatu"},
{"mn","Бий тайланг тухай эхэлснээс дотоод хэлбэр"},
{"pl","Tworzyć raport o uruchomieniu w wewnętrznym formacie"},
{"ro","Pentru a forma un raport cu privire la lansarea în format intern"},
{"sl","Ustvari poročilo o začetek v notranjem format"},
{"es","Genera un informe acerca de la ejecución en el formato interno de"},
{"sv","Generera en rapport om lanseringen i den interna format"},
{"tr","Şekillendirme raporu çalıştırdığınızda, iç formatında"}
},
{1,0},
{2,
{1},
{0,7d63373f-6a4a-4900-89d6-0cd45ef22cad}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{376,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ДелатьОтчетВоВнутреннемФорматеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1399,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДелатьОтчетВоВнутреннемФорматеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1398,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Группа3РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1387,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыОтчетыОЗапускеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{656,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"СтраницыАвтоИнструкции",
{1,20,
{"ru","Автоинструкции"},
{"en","Auto instructions"},
{"am","Avtoinstruktory"},
{"az","Автоинструкции"},
{"bg","Автоинструкции"},
{"et","Автоинструкции"},
{"fr","Автоинструкции"},
{"ka","Avtoinstruktory"},
{"de","Автоинструкции"},
{"hu","Avtoinstruktory"},
{"it","Автоинструкции"},
{"lv","Автоинструкции"},
{"lt","Автоинструкции"},
{"mn","Avtoinstruktory"},
{"pl","Автоинструкции"},
{"ro","Автоинструкции"},
{"sl","Avtoinstruktory"},
{"es","Автоинструкции"},
{"sv","Avtoinstruktory"},
{"tr","Автоинструкции"}
},
{1,1,
{"ru","Страницы авто инструкции"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{503,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"СтраницыАвтоИнструкцииОсновные",
{1,0},
{1,1,
{"ru","Страницы авто инструкции основные"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,2,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},0,1,0,1,
{10,
{1401,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыАвтоИнструкцииОсновныеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{658,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"HTMLИMarkdown",
{1,1,
{"ru","HTML и Markdown"}
},
{1,1,
{"ru","HTMLИMarkdown"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},1,1,0,1,
{1,0},0,0,3,3,2,0,1,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{513,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаHTML",
{1,0},
{1,1,
{"ru","Группа HTML"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{135,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"СоздаватьИнструкциюHTML",4,0,
{1,20,
{"ru","Создавать HTML инструкцию"},
{"en","Create HTML documentaion"},
{"am","መፍጠር ቅድሚያ ማኑዋል"},
{"az","Yaratmaq HTML təlimat"},
{"bg","Да създавате HTML инструкции"},
{"et","Luua HTML õpetus"},
{"fr","Créer une instruction"},
{"ka","შექმნათ HTML მექანიკური"},
{"de","Erstellen der HTML-Anweisung"},
{"hu","Létrehozása HTML-manuális"},
{"it","Creare HTML istruzione"},
{"lv","Izveidot HTML instrukciju"},
{"lt","Kurti HTML sakinį"},
{"mn","Бий болгох HTML гарын авлага"},
{"pl","Tworzenie HTML instrukcję"},
{"ro","Pentru a crea HTML instrucțiunea"},
{"sl","Ustvari HTML priročnik"},
{"es","Crear HTML instrucción"},
{"sv","Skapa HTML-manuell"},
{"tr","Oluşturmak için HTML deyim"}
},
{1,0},
{2,
{1},
{0,9eb13fb7-f8be-4967-8ce0-4884df5a4979}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СоздаватьИнструкциюHTMLПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{136,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СоздаватьИнструкциюHTMLКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1405,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СоздаватьИнструкциюHTMLРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{148,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогOutputИнструкцияHTML",1,0,
{1,20,
{"ru","Каталог для формирования инструкций HTML"},
{"en","HTML documentation files dir"},
{"am","ወደ ማውጫ ለማመንጨት ቅድሚያ የሚሰጡዋቸውን"},
{"az","Kataloq yaratmaq üçün təlimat HTML"},
{"bg","Каталог за формиране на инструкции HTML"},
{"et","Kataloogi moodustamine juhiseid HTML"},
{"fr","Catalogue de la formation des instructions HTML"},
{"ka","დირექტორია გენერირება HTML ინსტრუქცია"},
{"de","Katalog für die Bildung von HTML-Anweisungen"},
{"hu","A könyvtár generálni HTML utasítások"},
{"it","Catalogo per la formazione di istruzioni HTML"},
{"lv","Katalogs, lai veidotu instrukcijas HTML"},
{"lt","Katalogas forma instrukcijų HTML"},
{"mn","Сан бий болгох HTML заавар"},
{"pl","Katalog do tworzenia instrukcji HTML"},
{"ro","Directorul pentru formarea de instrucțiuni HTML"},
{"sl","Imenik za ustvarjanje HTML navodila"},
{"es","El directorio para la formación de instrucciones HTML"},
{"sv","Katalogen för att generera HTML-instruktioner"},
{"tr","Katalog oluşturmak için talimatlar HTML"}
},
{1,0},
{2,
{1},
{0,fc118c0e-9ac9-480a-ae97-95d8cca81e47}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputИнструкцияHTMLНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{149,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогOutputИнструкцияHTMLКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1406,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогOutputИнструкцияHTMLРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1404,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаHTMLРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{642,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаMarkdown",
{1,0},
{1,1,
{"ru","Группа markdown"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{644,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"СоздаватьИнструкциюMarkdown",4,0,
{1,20,
{"ru","Создавать Markdown инструкцию"},
{"en","Make Markdown instruction"},
{"am","ለመፍጠር Markdown."},
{"az","Yaratmaq Markdown təlimat"},
{"bg","Създаване на Markdown инструкции"},
{"et","Luua Markdown õpetus"},
{"fr","Créer Markdown l'instruction"},
{"ka","შექმნათ Markdown მექანიკური"},
{"de","Erstellen Markdown-Anweisung"},
{"hu","Hozzon létre egy Árleszállítás kézi"},
{"it","Creare Markdown istruzione"},
{"lv","Izveidot Markdown instrukciju"},
{"lt","Kurti Markdown sakinį"},
{"mn","Бий болгох Markdown гарын авлага"},
{"pl","Tworzenie Markdown instrukcję"},
{"ro","Pentru a crea Continua instrucțiunea"},
{"sl","Če želite ustvariti Markdown priročnik"},
{"es","Crear Markdown la instrucción"},
{"sv","För att skapa en Wiki manuell"},
{"tr","Oluşturmak için Markdown deyim"}
},
{1,0},
{2,
{1},
{0,7eff7d4a-86fe-4164-b21c-414ae25803e4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СоздаватьИнструкциюMarkdownПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{645,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СоздаватьИнструкциюMarkdownКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1408,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СоздаватьИнструкциюMarkdownРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{647,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогOutputИнструкцияMarkdown",1,0,
{1,20,
{"ru","Каталог для формирования инструкций Markdown"},
{"en","Markdown documentation files dir"},
{"am","ወደ ማውጫ አንድ Markdown ይከተሉ"},
{"az","Kataloq yaratmaq üçün təlimat Markdown"},
{"bg","Каталог за формиране на инструкции Markdown"},
{"et","Kataloogi moodustamine juhiseid Markdown"},
{"fr","Catalogue de la formation des instructions Markdown"},
{"ka","დირექტორია გენერირება Markdown ინსტრუქცია"},
{"de","Katalog für die Bildung von Markdown Anweisungen"},
{"hu","A könyvtárba hozza létre a Árleszállítás utasítások"},
{"it","Catalogo per la formazione di istruzioni Markdown"},
{"lv","Katalogs, lai veidotu instrukcijas Markdown"},
{"lt","Katalogas forma instrukcijų Markdown"},
{"mn","Сан бий болгох Markdown заавар"},
{"pl","Katalog do tworzenia instrukcji Markdown"},
{"ro","Directorul pentru formarea de instrucțiuni Continua"},
{"sl","Imenik za ustvarjanje Markdown navodila"},
{"es","El directorio para la formación de instrucciones Markdown"},
{"sv","Katalog för att skapa Wiki-instruktioner"},
{"tr","Katalog oluşturmak için talimatlar Markdown"}
},
{1,0},
{2,
{1},
{0,3c587afc-6eab-47bc-a583-afb26533b2e5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputИнструкцияMarkdownНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{648,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогOutputИнструкцияMarkdownКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1409,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогOutputИнструкцияMarkdownРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1407,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаMarkdownРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1403,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"HTMLИMarkdownРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{660,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"РаботаСВидео",
{1,1,
{"ru","Видеоинструкция"}
},
{1,1,
{"ru","Работа с видео"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},1,1,0,1,
{1,0},0,0,3,3,2,0,1,0},2,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{515,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаВидео",
{1,0},
{1,1,
{"ru","Группа видео"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{517,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"СоздаватьИнструкциюВидео",4,0,
{1,20,
{"ru","Создавать видеоинструкцию"},
{"en","Create live video documentation"},
{"am","ለመፍጠር በጣም"},
{"az","Yaratmaq видеоинструкцию"},
{"bg","Създаване на видеоинструкцию"},
{"et","Luua видеоинструкцию"},
{"fr","Créer pour visualiser un didacticiel vidéo"},
{"ka","შექმნათ ვიდეო"},
{"de","Erstellen Video"},
{"hu","Létre a videót"},
{"it","Creare video di istruzioni"},
{"lv","Izveidot видеоинструкцию"},
{"lt","Kurti видеоинструкцию"},
{"mn","Бий болгох видео"},
{"pl","Tworzenie samouczek wideo"},
{"ro","Pentru a crea видеоинструкцию"},
{"sl","Če želite ustvariti video"},
{"es","Crear видеоинструкцию"},
{"sv","För att skapa video"},
{"tr","Oluşturmak видеоинструкцию"}
},
{1,0},
{2,
{1},
{0,52cd35c4-2333-4036-8074-7d10fdd4d65c}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"СоздаватьИнструкциюВидеоПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{518,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СоздаватьИнструкциюВидеоКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1412,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СоздаватьИнструкциюВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{520,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогOutputИнструкцияВидео",1,0,
{1,20,
{"ru","Каталог для формирования инструкций Видео"},
{"en","Video documentation files dir"},
{"am","ወደ ማውጫ ለማመንጨት ይከተሉ ቪድዮ"},
{"az","Kataloq yaratmaq üçün təlimat Video"},
{"bg","Каталог за формиране на инструкции Видеоклипове"},
{"et","Kataloogi moodustamine juhiseid Video"},
{"fr","Catalogue pour la formation des instructions de la Vidéo"},
{"ka","დირექტორია გენერირება ინსტრუქციები ვიდეო"},
{"de","Katalog für die Bildung von Anweisungen Video"},
{"hu","A könyvtár létrehozásához utasításokat Videó"},
{"it","Catalogo per la formazione di istruzioni Video"},
{"lv","Katalogs, lai veidotu instrukcijas Video"},
{"lt","Katalogas forma instrukcijų Vaizdo įrašus"},
{"mn","Сан үүсгэх заавар Видео"},
{"pl","Katalog do tworzenia instrukcji Wideo"},
{"ro","Directorul pentru formarea de instrucțiuni Video de"},
{"sl","Imenik za ustvarjanje Video navodila"},
{"es","El directorio para la formación de instrucciones Vídeos"},
{"sv","Katalog för att skapa Video-instruktioner"},
{"tr","Katalog oluşturmak için talimatlar Video"}
},
{1,0},
{2,
{1},
{0,232037f4-6935-4cbb-b458-145de2c1fd0f}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"КаталогOutputИнструкцияВидеоНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{521,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогOutputИнструкцияВидеоКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1413,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогOutputИнструкцияВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1411,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{904,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"НастройкиВидеоИнструкций",
{1,1,
{"ru","Настройки видео инструкций"}
},
{1,1,
{"ru","Настройки видео инструкций"}
},0,1,0,0,0,1,1,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1,
{0,1,0}
},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{906,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"НастрокиВидео",
{1,20,
{"ru","Настроки видео"},
{"en","Video settings"},
{"am","ቅንብሮችን ቪድዮ"},
{"az","Настроки video"},
{"bg","Настроки видео"},
{"et","Настроки video"},
{"fr","Configuration de la vidéo"},
{"ka","ვიდეო პარამეტრები"},
{"de","Hauptparameter Video"},
{"hu","Beállítások videó"},
{"it","Impostazioni video"},
{"lv","Настроки video"},
{"lt","Настроки video"},
{"mn","Тохиргоог видео"},
{"pl","Te ustawienia wideo"},
{"ro","Configura video"},
{"sl","Nastavitve video"},
{"es","Configuración de vídeo"},
{"sv","Inställningar för video"},
{"tr","Hesap video"}
},
{1,1,
{"ru","Настроки видео"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},6,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{902,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"КнопкиВидео",
{1,1,
{"ru","Кнопки видео"}
},
{1,1,
{"ru","Кнопки видео"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{715,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"ПроверитьЧтоЗаписьВидеоБудетРаботать",
{1,0},1,
{21,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1417,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПроверитьЧтоЗаписьВидеоБудетРаботатьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{857,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"ЗагрузитьНастройкиПоУмолчанию",
{1,0},1,
{23,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1418,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗагрузитьНастройкиПоУмолчаниюРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},1,0,1,
{10,
{1416,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КнопкиВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{900,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ПараметрыЭкрана",
{1,1,
{"ru","Параметры экрана"}
},
{1,1,
{"ru","Параметры экрана"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},3,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{706,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоКоличествоКадров",1,0,
{1,20,
{"ru","Количество кадров в секунду"},
{"en","Number of frames"},
{"am","ቁጥር ፍራመስ ተጠቃሚ"},
{"az","Sayı kadr saniyə"},
{"bg","Брой на кадрите в секунда"},
{"et","Kaadrite arv sekundis"},
{"fr","Le nombre d'images par seconde"},
{"ka","რაოდენობის ფარგლებში წამში"},
{"de","Die Anzahl der Frames pro Sekunde"},
{"hu","A szám a kép másodpercenként"},
{"it","Il numero di fotogrammi al secondo"},
{"lv","Kadru skaits sekundē"},
{"lt","Kadrų skaičius per sekundę"},
{"mn","The number of frames per second"},
{"pl","Ilość klatek na sekundę"},
{"ro","Numărul de cadre pe secundă"},
{"sl","Število sličic na sekundo"},
{"es","El número de fotogramas por segundo"},
{"sv","Antalet bilder per sekund"},
{"tr","Saniyedeki kare sayısı"}
},
{1,0},
{2,
{1},
{0,627ed60b-0020-4827-8428-521e11a1abbb}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{707,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоКоличествоКадровКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1420,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоКоличествоКадровРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{700,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоЭкранШирина",1,0,
{1,20,
{"ru","Экран ширина"},
{"en","Width"},
{"am","የሚሰጡዋቸውን ይታያል"},
{"az","Ekran eni"},
{"bg","На екрана широчина -"},
{"et","Ekraani laius"},
{"fr","La largeur de l'écran"},
{"ka","ეკრანის სიგანე"},
{"de","Bildschirm Breite"},
{"hu","Képernyő szélessége"},
{"it","Schermo di larghezza"},
{"lv","Ekrāna platums"},
{"lt","Ekranas plotis"},
{"mn","Өргөн дэлгэц"},
{"pl","Ekran szerokość"},
{"ro","Ecranul lățime"},
{"sl","Širine zaslona"},
{"es","El ancho de la pantalla"},
{"sv","Skärmens bredd"},
{"tr","Ekran genişliği"}
},
{1,0},
{2,
{1},
{0,34044de3-d41d-474f-8bfd-2fdf21d0aaec}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{701,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоЭкранШиринаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1421,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоЭкранШиринаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{703,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоЭкранВысота",1,0,
{1,20,
{"ru","Экран высота"},
{"en","Height"},
{"am","የሚሰጡዋቸውን እርዝማኔ"},
{"az","Ekran hündürlüyü"},
{"bg","Височина на екрана"},
{"et","Ekraani kõrgus"},
{"fr","La hauteur de l'écran"},
{"ka","ეკრანზე სიმაღლე"},
{"de","Bildschirm Höhe"},
{"hu","Képernyő magassága"},
{"it","Schermo di altezza"},
{"lv","Ekrāna augstums"},
{"lt","Ekranas aukštis"},
{"mn","Дэлгэц өндөр"},
{"pl","Ekran wysokość"},
{"ro","Ecran înălțime"},
{"sl","Višino zaslona"},
{"es","La altura de la pantalla"},
{"sv","Skärmens höjd"},
{"tr","Ekran yüksekliği"}
},
{1,0},
{2,
{1},
{0,a853027a-4bf7-4379-aa68-125c412e7576}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{704,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоЭкранВысотаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1422,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоЭкранВысотаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1419,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПараметрыЭкранаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{662,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоКомандаНачатьЗаписьВидео",1,0,
{1,20,
{"ru","Команда начать запись видео"},
{"en","Comand to start record"},
{"am","የሚለውን ትዕዛዝ ጋር ቀረጻ ቪድዮ"},
{"az","Komanda başlamaq video"},
{"bg","Екипът започнете да записвате видео"},
{"et","Meeskond alustada video salvestamist"},
{"fr","L'équipe de commencer l'enregistrement de la vidéo"},
{"ka","ბრძანება დაიწყოს ჩაწერა ვიდეო"},
{"de","Das Team mit der Videoaufzeichnung zu beginnen"},
{"hu","A parancs a videofelvétel"},
{"it","La squadra di avviare la registrazione video"},
{"lv","Komanda sāktu ierakstīšanu video"},
{"lt","Komanda pradėti įrašinėti video"},
{"mn","Тушаал эхлэх бичлэг видео"},
{"pl","Zespół rozpocząć nagrywanie wideo"},
{"ro","Echipa începe înregistrarea video"},
{"sl","Ukaz za začetek snemanja video"},
{"es","El equipo de iniciar la grabación de vídeo"},
{"sv","Kommandot för att starta inspelning av video"},
{"tr","Komutu başlatmak için video kayıt"}
},
{1,0},
{2,
{1},
{0,5dc7f2ff-a66a-419c-a41a-29254157b8c4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{663,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоКомандаНачатьЗаписьВидеоКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1423,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоКомандаНачатьЗаписьВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{671,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоКаталогДляВременныхФайлов",1,0,
{1,20,
{"ru","Каталог для временных файлов"},
{"en","Template path"},
{"am","ማውጫ ላይ ጊዜያዊ ፋይሎችን"},
{"az","Kataloq üçün müvəqqəti faylları"},
{"bg","Каталог за временни файлове"},
{"et","Kataloog ajutiste failide jaoks"},
{"fr","Répertoire pour les fichiers temporaires"},
{"ka","დირექტორია დროებითი ფაილები"},
{"de","Verzeichnis für temporäre Dateien"},
{"hu","A könyvtár az ideiglenes fájlok számára"},
{"it","La directory per i file temporanei"},
{"lv","Katalogs pagaidu failus"},
{"lt","Katalogas laikinų failų"},
{"mn","Сан түр зуурын файлууд"},
{"pl","Katalog dla plików tymczasowych"},
{"ro","Directorul pentru fișiere temporare"},
{"sl","Imenik za začasne datoteke"},
{"es","Directorio de los archivos temporales"},
{"sv","Katalog för temporära filer"},
{"tr","Geçici dosyaları için dizini"}
},
{1,0},
{2,
{1},
{0,2cacccc6-7a16-4ee2-a542-031a658f4ca8}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{672,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоКаталогДляВременныхФайловКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1424,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоКаталогДляВременныхФайловРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{677,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоКомандаFfmpeg",1,0,
{1,20,
{"ru","Команда ffmpeg"},
{"en","ffmpeg command"},
{"am","የሚለውን ትዕዛዝ ffmpeg"},
{"az","Komanda ffmpeg"},
{"bg","Екипът на ffmpeg"},
{"et","Meeskond ffmpeg"},
{"fr","La commande ffmpeg"},
{"ka","ბრძანება ffmpeg"},
{"de","Der Befehl ffmpeg"},
{"hu","A parancs az ffmpeg"},
{"it","Il comando ffmpeg"},
{"lv","Komandu ffmpeg"},
{"lt","Komanda ffmpeg"},
{"mn","Тушаал ffmpeg"},
{"pl","Zespół ffmpeg"},
{"ro","Echipa de ffmpeg"},
{"sl","Ukaz grep"},
{"es","El comando ffmpeg"},
{"sv","Kommandot grep"},
{"tr","Takım ffmpeg"}
},
{1,0},
{2,
{1},
{0,9f4d8881-2be6-4071-b900-8d5e60a31f70}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{678,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоКомандаFfmpegКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1425,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоКомандаFfmpegРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{680,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоКомандаConvert",1,0,
{1,20,
{"ru","Команда Convert"},
{"en","Convert command"},
{"am","አቶ ትዕዛዝ ይታያል"},
{"az","Komanda Convert"},
{"bg","Командата Convert"},
{"et","Käsu Convert"},
{"fr","La Commande Convert"},
{"ka","Convert ბრძანება"},
{"de","Verwenden Sie Den Befehl Convert"},
{"hu","A Convert Parancs"},
{"it","Il Comando Convert"},
{"lv","Convert"},
{"lt","Komanda Convert"},
{"mn","Уг Хөрвүүлэх Тушаал"},
{"pl","Polecenie Convert"},
{"ro","Comanda Convert"},
{"sl","Pretvarjanje Ukazne"},
{"es","El Comando Convert"},
{"sv","Konverteringskommandot"},
{"tr","Convert Komutunu"}
},
{1,0},
{2,
{1},
{0,b1a9ac5e-423c-409c-a779-4251bb7f5af5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{681,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоКомандаConvertКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1426,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоКомандаConvertРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1415,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастрокиВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{908,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"НастройкиАудио",
{1,20,
{"ru","Настройки аудио"},
{"en","Audio settings"},
{"am","ለማስለቀቅ"},
{"az","Parametrlər audio"},
{"bg","Настройка на звука"},
{"et","Audio seaded"},
{"fr","Paramètres audio"},
{"ka","აუდიო პარამეტრები"},
{"de","Audio-Einstellungen"},
{"hu","Audio beállítások"},
{"it","Impostazioni audio"},
{"lv","Audio uzstādījumi"},
{"lt","Garso parametrai"},
{"mn","Аудио тохиргоо"},
{"pl","Ustawienia audio"},
{"ro","Setări audio"},
{"sl","Zvočne nastavitve"},
{"es","La configuración de audio"},
{"sv","Ljud-inställningar"},
{"tr","Ses ayarları"}
},
{1,1,
{"ru","Настройки аудио"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{683,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоКаталогМузыки",1,0,
{1,20,
{"ru","Каталог музыки"},
{"en","Music path"},
{"am","ቅድሚያ የታዘዘ"},
{"az","Musiqi kataloq"},
{"bg","Каталог музика"},
{"et","Kataloog muusika"},
{"fr","Catalogue de musique"},
{"ka","მუსიკა კატალოგი"},
{"de","Musik-Katalog"},
{"hu","Zene katalógus"},
{"it","Catalogo di musica"},
{"lv","Katalogs mūziku"},
{"lt","Muzikos katalogas"},
{"mn","Хөгжим каталог"},
{"pl","Katalog muzyki"},
{"ro","Catalog de muzică"},
{"sl","Glasba katalog"},
{"es","Catálogo de música"},
{"sv","Musik katalog"},
{"tr","Müzik kataloğu"}
},
{1,0},
{2,
{1},
{0,b2654bc3-2820-48c6-97d6-8f4e023137f3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"ЗаписьВидеоКаталогМузыкиНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{684,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоКаталогМузыкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1428,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоКаталогМузыкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{698,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ОзвучкаГолосом",
{1,20,
{"ru","Озвучка голосом"},
{"en","Make voice"},
{"am","ድምፅ ድምፅ"},
{"az","Səs səs"},
{"bg","Постпродукция глас"},
{"et","Hääl hääl"},
{"fr","Le doublage de la voix"},
{"ka","ხმა, ხმა"},
{"de","Stimme Stimme"},
{"hu","Hang"},
{"it","Voce voce"},
{"lv","Balss, balss"},
{"lt","Озвучка balsu"},
{"mn","Дуу дуу"},
{"pl","Głos głosem"},
{"ro","Vocea vocea"},
{"sl","Glasovne oznake"},
{"es","Doblaje de voz"},
{"sv","Röst-voice"},
{"tr","Ses ses"}
},
{1,1,
{"ru","Озвучка голосом"}
},0,1,0,0,0,2,2,
{3,0,
{16711680}
},
{7,3,0,1,100},
{0,0,0},1,
{23,0,0,2,1,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,0},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{686,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ЗаписьВидеоДелатьНаложениеTTS",4,0,
{1,20,
{"ru","Делать озвучку TTS"},
{"en","Make TTS"},
{"am","ማድረግ ድምፅ ይታያል"},
{"az","Bunu voiceovers TTS"},
{"bg","Направи voiceovers TTS"},
{"et","Teha озвучку TTS"},
{"fr","Faire les voix TTS"},
{"ka","ამის ხმა TTS"},
{"de","Tun TTS Sprachausgabe"},
{"hu","Hogy TTS hang"},
{"it","Fare doppiaggi TTS"},
{"lv","Darīt voiceovers TTS"},
{"lt","Daryti озвучку TTS"},
{"mn","Хийх дуу TTS"},
{"pl","Robić lektorów TTS"},
{"ro","Face voce care acționează TTS"},
{"sl","Za glasovni TTS"},
{"es","Hacer doblajes TTS"},
{"sv","Att göra röst TTS"},
{"tr","Yapmak TTS seslendirme"}
},
{1,0},
{2,
{1},
{0,1b05e4dc-d3f3-4db6-9ed6-17e948af1655}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"ЗаписьВидеоДелатьНаложениеTTSПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{687,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоДелатьНаложениеTTSКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1430,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоДелатьНаложениеTTSРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{689,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоПутьКДвижкуTTS",1,0,
{1,20,
{"ru","Путь к движку TTS"},
{"en","Path to TTS engine"},
{"am","መንገዱ ወደ ተጠቃሚ."},
{"az","Yol движку TTS"},
{"bg","Пътят към движку TTS"},
{"et","Tee движку TTS"},
{"fr","Le chemin d'accès au moteur TTS"},
{"ka","გზა TTS ძრავის"},
{"de","Der Weg zum TTS-Engine"},
{"hu","Az út a TTS motor"},
{"it","Percorso a motore TTS"},
{"lv","Ceļš uz движку TTS"},
{"lt","Kelias į движку TTS"},
{"mn","Зам нь TTS хөдөлгүүр"},
{"pl","Droga do silnika TTS"},
{"ro","Calea TTS engine"},
{"sl","Pot do TTS motor"},
{"es","La ruta de acceso al motor de TTS"},
{"sv","Vägen till TTS-motor"},
{"tr","Yol TTS motoru"}
},
{1,0},
{2,
{1},
{0,89667bd5-e182-490a-ba14-6425b0a785f9}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"ЗаписьВидеоПутьКДвижкуTTSНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{690,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоПутьКДвижкуTTSКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1431,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоПутьКДвижкуTTSРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{692,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоИмяTTS",1,0,
{1,20,
{"ru","Имя голоса TTS"},
{"en","TTS Voice"},
{"am","ስም ቅድሚያ"},
{"az","Adı səs TTS"},
{"bg","Име на глас TTS"},
{"et","Nimi häält TTS"},
{"fr","Le nom de la voix TTS"},
{"ka","სახელი TTS ხმა"},
{"de","Name TTS Stimme"},
{"hu","A név a TTS hang"},
{"it","Il nome di una voce TTS"},
{"lv","Vārds balss TTS"},
{"lt","Vardas balso TTS"},
{"mn","Нэр TTS дуу хоолой"},
{"pl","Nazwa głosy TTS"},
{"ro","Numele de voce TTS"},
{"sl","Ime TTS glas"},
{"es","El nombre de la voz del TTS"},
{"sv","Namnet på TTS-rösten"},
{"tr","Adı ses TTS"}
},
{1,0},
{2,
{1},
{0,70266db4-16e8-4988-b997-152f5cdce0ff}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{693,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоИмяTTSКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1432,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоИмяTTSРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},143c00f7-a42d-4cd7-9189-88e4467dc768,
{51,
{1727,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ЗаписьВидеоСловарьЗамен",3,0,1,
{1,2,
{"ru","Словари замен"},
{"en","Dictionaries replacement"}
},
{1,0},
{2,
{1},
{0,cb540838-5ba3-4b52-9f05-c27db709ebf9}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,0,1,0,1,2,2,0,0,0,0,0,1,2,0,0,1,1,
{1,
{3}
},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,0,0,
{0,1,0},
{0},1,
{21,
{1728,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоСловарьЗаменКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{21,
{1729,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ЗаписьВидеоСловарьЗаменКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,0},1,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1743,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ЗаписьВидеоСловарьЗаменДобавитьСтрокуВСписокСловарейЗамен",
{1,0},1,
{67,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1744,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоСловарьЗаменДобавитьСтрокуВСписокСловарейЗаменРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,0,0},1,0,0,0,3,3},1,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1740,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоСловарьЗаменЗначение",3,0,
{1,0},
{1,0},
{3,
{1},
{0,cb540838-5ba3-4b52-9f05-c27db709ebf9},
{0}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"ЗаписьВидеоСловарьЗаменЗначениеНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1741,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоСловарьЗаменЗначениеКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1742,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоСловарьЗаменЗначениеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{10,
{1730,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоСловарьЗаменРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,0,0,1,
{4,
{1731,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоСловарьЗаменСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{21,
{1732,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоСловарьЗаменСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1733,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоСловарьЗаменСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{1727,0},0,3,3},1,
{4,
{1734,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ЗаписьВидеоСловарьЗаменСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{21,
{1735,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоСловарьЗаменСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1736,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоСловарьЗаменСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{1727,1},0,3,3},1,
{4,
{1737,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоСловарьЗаменУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{21,
{1738,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоСловарьЗаменУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1739,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоСловарьЗаменУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{1727,2},0,3,3},0,1,0,0,1,0,3,3,0,1,0},1,0,1,
{10,
{1429,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ОзвучкаГолосомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1427,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастройкиАудиоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{926,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"НастройкиВидеоДополнительные",
{1,20,
{"ru","Дополнительно"},
{"en","More"},
{"am","በቀዳሚ"},
{"az","Əlavə"},
{"bg","Допълнително"},
{"et","Täpsemalt"},
{"fr","Facultatif"},
{"ka","დამატებით"},
{"de","Zusätzlich"},
{"hu","Továbbá"},
{"it","Extra"},
{"lv","Papildus"},
{"lt","Daugiau"},
{"mn","Нэмж хэлэхэд"},
{"pl","Dodatkowo"},
{"ro","Suplimentar"},
{"sl","Poleg tega"},
{"es","Extras"},
{"sv","Dessutom"},
{"tr","Ek"}
},
{1,1,
{"ru","Настройки видео дополнительные"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},4,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{665,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоФайлКурсораМышки",1,0,
{1,20,
{"ru","Файл курсор мыши"},
{"en","Mouse pict"},
{"am","ፋይል ስለጀመሩ ቅድሚያ cursor"},
{"az","Fayl siçan"},
{"bg","Файл на курсора на мишката"},
{"et","Faili hiir"},
{"fr","Fichier le curseur de la souris"},
{"ka","ფაილი მაუსის კურსორი"},
{"de","Die Datei Maus"},
{"hu","A fájl az egér kurzor"},
{"it","Il file il cursore del mouse"},
{"lv","Failu peles kursoru"},
{"lt","Failo pelės žymeklį"},
{"mn","Файл хулганы заагч"},
{"pl","Plik kursor myszy"},
{"ro","Fișierul cursorul mouse-ului"},
{"sl","Datoteka miškin kazalec"},
{"es","Archivo el cursor del ratón"},
{"sv","Fil muspekaren"},
{"tr","Dosya fare imleci"}
},
{1,0},
{2,
{1},
{0,01d682d1-3c53-4058-9a75-16b782221776}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"ЗаписьВидеоФайлКурсораМышкиНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{666,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоФайлКурсораМышкиКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1435,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоФайлКурсораМышкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{674,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ЗаписьВидеоФайлВодянойЗнак",1,0,
{1,20,
{"ru","Файл водяной знак"},
{"en","Watermark"},
{"am","ፋይል ነፃ"},
{"az","Fayl su nişanı"},
{"bg","Файл за воден знак"},
{"et","Faili vesimärk"},
{"fr","Le fichier filigrane"},
{"ka","ფაილი watermark"},
{"de","Datei Wasserzeichen"},
{"hu","Fájl vízjel"},
{"it","Il file filigrana"},
{"lv","Failu ūdenszīme"},
{"lt","Failo vandens ženklas"},
{"mn","Файл watermark"},
{"pl","Plik znak wodny"},
{"ro","Fișierul filigran"},
{"sl","Datoteka vodni žig"},
{"es","El archivo de marca de agua"},
{"sv","Fil vattenstämpel"},
{"tr","Dosya filigran"}
},
{1,0},
{2,
{1},
{0,a3380669-dd3e-4f03-ae33-1ee5d43239f5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,1,1,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{1,1960479b-4d89-4eba-8b39-0aa802020558,"ЗаписьВидеоФайлВодянойЗнакНачалоВыбора",1,0,1960479b-4d89-4eba-8b39-0aa802020558,0,1},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{675,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоФайлВодянойЗнакКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1436,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоФайлВодянойЗнакРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{709,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм",4,0,
{1,20,
{"ru","Подсвечивать активные элементы форм"},
{"en","Show active form controls"},
{"am","መገለጫዎ ንቁ ቅጽ ይታያል"},
{"az","Подсвечивать aktiv maddələr formaları"},
{"bg","Осветяване на активни елементи форми"},
{"et","Rõhutada aktiivsete üksuste vormid"},
{"fr","Mettre en évidence les éléments actifs des formes"},
{"ka","მონიშნეთ აქტიური ფორმის ელემენტები"},
{"de","Aktive Elemente hervorheben Formen"},
{"hu","Jelölje ki a aktív formában elemek"},
{"it","Evidenziare gli elementi attivi di forme"},
{"lv","Izcelt aktīvie elementi formu"},
{"lt","Paryškinti aktyvūs elementai formų"},
{"mn","Тодруулах идэвхтэй хэлбэр элемент"},
{"pl","Podświetl elementy aktywne formy"},
{"ro","Pentru a evidenția elementele active forme de"},
{"sl","Označite aktivno obliko elementov"},
{"es","Resaltar los elementos activos de las formas de"},
{"sv","Markera aktiv form element"},
{"tr","Parlat aktif öğeleri şekil"}
},
{1,0},
{2,
{1},
{0,9b037573-0482-46b4-ae39-d6f5088b6bbb}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{710,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоПодсвечиватьАктивныеЭлементыФормКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1437,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоПодсвечиватьАктивныеЭлементыФормРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{712,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы",4,0,
{1,20,
{"ru","Перемещать курсор мышки к активному элементу формы"},
{"en","Move mouse to active control"},
{"am","አዳዲስ ቅድሚያ ነጥብ ጋር ንቁ ቅጽ እንዳሏቸውም"},
{"az","Hərəkət kursor siçan fəal element formaları"},
{"bg","Преместване на курсора на мишката до активен елемент на формуляра"},
{"et","Liiguta hiirega sellele üksusele vormi"},
{"fr","Déplacer le curseur de la souris à l'élément actif de la forme"},
{"ka","გადატანა მაუსის მაჩვენებელი აქტიური ფორმის ელემენტი"},
{"de","Bewegen Sie den Mauszeiger auf das aktive Element der Form"},
{"hu","Vigye az egérmutatót a aktív formában elem"},
{"it","Spostare il cursore del mouse verso un elemento attivo di forma"},
{"lv","Pārvietot kursoru uz aktīvo elementu formas"},
{"lt","Perkelti pelės žymeklį į aktyvų elementą formos"},
{"mn","Хулганы заагчийг шилжүүлэх идэвхтэй хэлбэр элемент"},
{"pl","Przesunąć kursor myszy do aktywnego elementu formularza"},
{"ro","Muta cursorul mouse-ului la activ element de formular"},
{"sl","Premaknite kazalec miške na aktivno obliko element"},
{"es","Mover el cursor del ratón a la ventana activa un elemento de formulario"},
{"sv","Flytta muspekaren till den aktiva formen element"},
{"tr","Taşımak için fare imleci etkin öğeye formu"}
},
{1,0},
{2,
{1},
{0,5bc0f8c3-6c92-4884-9e98-94dc1de82d50}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{713,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1438,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1434,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастройкиВидеоДополнительныеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1414,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"НастройкиВидеоИнструкцийРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1410,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РаботаСВидеоРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1400,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыАвтоИнструкцииРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1658,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"СтраницаPID",
{1,20,
{"ru","PID"},
{"en","PID"},
{"am","ነፃ"},
{"az","PID"},
{"bg","Тазова възпалителна болест"},
{"et","PID"},
{"fr","PID"},
{"ka","PID"},
{"de","PID"},
{"hu","PID"},
{"it","PID"},
{"lv","PID"},
{"lt","PID"},
{"mn","PID"},
{"pl","PID"},
{"ro","PID"},
{"sl","PID"},
{"es","PID"},
{"sv","PID"},
{"tr","PID"}
},
{1,1,
{"ru","Страница PID"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1662,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"ВычислитьPIDЭтогоСеанса1",
{1,1,
{"ru","Вычислить PID"}
},1,
{62,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1663,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВычислитьPIDЭтогоСеанса1РасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1664,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"PIDЭтогоСеанса",1,0,
{1,1,
{"ru","PID этого сеанса"}
},
{1,0},
{1,
{24}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1665,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"PIDЭтогоСеансаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1666,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"PIDЭтогоСеансаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1659,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницаPIDРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1360,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницыСервисРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1358,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаНастройкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{484,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"ГруппаСлужебная",
{1,20,
{"ru","Служебная"},
{"en","Extended"},
{"am","አገልግሎት"},
{"az","Dövlət qulluqçusunun xidməti"},
{"bg","Служебна"},
{"et","Saavutused"},
{"fr","Programme d'aide"},
{"ka","სამსახური"},
{"de","Dienstliche"},
{"hu","Szolgáltatás"},
{"it","L'utilità di"},
{"lv","Dienesta"},
{"lt","Tarnybinis"},
{"mn","Үйлчилгээ"},
{"pl","Służbowy"},
{"ro","Utilitarul"},
{"sl","Storitev"},
{"es","La utilidad de"},
{"sv","Service"},
{"tr","Hizmet"}
},
{1,1,
{"ru","Группа служебная"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1635,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ГруппаСтраницыСлужебные",
{1,1,
{"ru","Группа страницы служебные"}
},
{1,1,
{"ru","Группа страницы служебные"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1,
{0,1,0}
},3,cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1637,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"СтраницаСлужебноеОсновное",
{1,1,
{"ru","Служебное основное"}
},
{1,1,
{"ru","Страница служебное основное"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},8,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{492,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"ДляВызоваКонфигуратора",
{1,20,
{"ru","Вызов конфигуратора"},
{"en","Invoke designer"},
{"am","ጥሪ Configurator"},
{"az","Zəng конфигуратора"},
{"bg","Предизвикателство конфигуратора"},
{"et","Kõne конфигуратора"},
{"fr","L'appel du configurateur"},
{"ka","დარეკეთ კბილის პასტა"},
{"de","Herausforderung Konfigurator"},
{"hu","A Hívás Configurator"},
{"it","La sfida configuratore"},
{"lv","Zvanu конфигуратора"},
{"lt","Skambinti конфигуратора"},
{"mn","Дуудлага Configurator"},
{"pl","Wyzwanie konfiguratora"},
{"ro","Apel configuratorului"},
{"sl","Klic Configurator"},
{"es","La llamada configurador"},
{"sv","Samtal Konfiguratorn"},
{"tr","Arama yapılandırıcı"}
},1,
{18,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1442,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ДляВызоваКонфигуратораРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{494,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогИнструментовСлужебный",1,0,
{1,20,
{"ru","Каталог инструментов (служебный)"},
{"en","Instruments directory (service)"},
{"am","ዶሴ ነው መሣሪያዎች (ኦፊሴላዊ)"},
{"az","Kataloq alətləri (xidməti)"},
{"bg","Каталог за инструменти (служебен)"},
{"et","Vahendid kataloogi (kasuliku)"},
{"fr","Répertoire d'outils (de service)"},
{"ka","დირექტორია ინსტრუმენტები (ოფიციალური)"},
{"de","Werkzeugkatalog (dienstliche)"},
{"hu","Könyvtár eszközök (hivatalos)"},
{"it","Catalogo degli strumenti (call of duty)"},
{"lv","Katalogs instrumentu (dienesta)"},
{"lt","Katalogas priemonės (paslaugos)"},
{"mn","Сан хэрэгсэл (албан есны)"},
{"pl","Katalog narzędzi (służbowy)"},
{"ro","Catalog de instrumente (de la serviciu)"},
{"sl","Imenik orodja (uradni)"},
{"es","Directorio de herramientas (negocios)"},
{"sv","Katalog av verktyg (officiella)"},
{"tr","Katalog, araç (iş)"}
},
{1,0},
{2,
{1},
{0,13046aca-b33c-4435-b736-44bd900e8d98}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"КаталогИнструментовСлужебныйПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{495,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогИнструментовСлужебныйКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1441,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогИнструментовСлужебныйРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{489,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"КаталогФичСлужебный",1,0,
{1,20,
{"ru","Каталог фич (служебный)"},
{"en","Features directory (service)"},
{"am","ወደ ማውጫ ባህሪያት (ኦፊሴላዊ)"},
{"az","Kataloq фич (xidməti)"},
{"bg","Каталог функции (служебен)"},
{"et","Kataloog фич (kasuliku)"},
{"fr","Catalogue fich (de service)"},
{"ka","დირექტორია თვისებები (ოფიციალური)"},
{"de","Katalog Fitch (dienstliche)"},
{"hu","A könyvtár funkciók (hivatalos)"},
{"it","Catalogo fitch (call of duty)"},
{"lv","Katalogs pazīmes (dienesta)"},
{"lt","Katalogas фич (paslaugos)"},
{"mn","Сан онцлог (албан есны)"},
{"pl","Katalog fitch (służbowy)"},
{"ro","Catalog de caracteristici (de la serviciu)"},
{"sl","Imenik funkcije (uradni)"},
{"es","El catálogo de funciones (negocios)"},
{"sv","Katalogen har (officiella)"},
{"tr","Katalog fitch (iş)"}
},
{1,0},
{2,
{1},
{0,1248d1d6-f91e-4a5f-97b6-46e4d48aa426}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{490,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогФичСлужебныйКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1440,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогФичСлужебныйРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1680,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ФйлФлагВыполненияСценариев",1,0,
{1,0},
{1,0},
{1,
{28}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1681,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ФйлФлагВыполненияСценариевКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1682,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФйлФлагВыполненияСценариевРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1686,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ИДПотока",1,0,
{1,1,
{"ru","ИД раннера"}
},
{1,0},
{2,
{1},
{0,327eb0c1-f007-482d-af04-57d5e3d05329}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1687,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ИДПотокаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1688,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ИДПотокаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1667,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"РежимСамотестирования",1,0,
{1,0},
{1,0},
{2,
{1},
{0,f0571e8b-752f-4337-90ce-9bffc5a992e0}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{1,fe115cc8-9e33-4684-a166-bd5136fe7a9f,"РежимСамотестированияПриИзменении",1,0,fe115cc8-9e33-4684-a166-bd5136fe7a9f,0,1},1,
{21,
{1668,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"РежимСамотестированияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1669,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РежимСамотестированияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1761,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ПриравниватьPendingКFailed",1,0,
{1,0},
{1,0},
{2,
{1},
{0,bf68bd90-89f1-4b85-bd57-81dd95821eb0}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{1762,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ПриравниватьPendingКFailedКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1763,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ПриравниватьPendingКFailedРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1670,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"СохранитьНастройкиКлиент",
{1,1,
{"ru","Сохранить настройки"}
},1,
{63,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1671,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СохранитьНастройкиКлиентРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},1,0,1,
{10,
{1638,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтраницаСлужебноеОсновноеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1639,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"ГруппаСлужебноеВыполнитьКод",
{1,1,
{"ru","Выполнить код"}
},
{1,1,
{"ru","Группа служебное выполнить код"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},2,a9f3b1ac-f51b-431e-b102-55a69acdecad,
{28,
{1644,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,1,"ВыполнитьПроизвольныйКод",
{1,0},1,
{61,409b9a53-7f7e-4178-86c1-33176c7c7a7a},
{0},3,0,0,0,2,2,0,0,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},0,
{4,0,
{0},"",-1,-1,1,0,""},1,
{"Pattern"},"",2,0,1,
{10,
{1645,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ВыполнитьПроизвольныйКодРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},
{"U"},1,0,0,1,0,0,0,3,3,3,0,0,1,0},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1641,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"РеквизитПроизвольныйКод",1,0,
{1,1,
{"ru","Произвольный код"}
},
{1,0},
{1,
{23}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,1,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1642,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"РеквизитПроизвольныйКодКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1643,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"РеквизитПроизвольныйКодРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1640,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСлужебноеВыполнитьКодРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1649,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,4,"ТаблицаStepDefinition",
{1,1,
{"ru","Таблица step definition"}
},
{1,1,
{"ru","Таблица step definition"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{16,
{4,0,
{0},"",-1,-1,1,0,""},0,0,
{0},
{1,0},1,
{"Pattern"},"",
{3,4,
{0}
},0,0,3,3,0,0,0},1,143c00f7-a42d-4cd7-9189-88e4467dc768,
{51,
{1486,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,"ТаблицаИзвестныхStepDefinition",0,0,1,
{1,0},
{1,0},
{1,
{9}
},0,1,0,0,0,1,1,0,0,0,0,0,1,0,1,1,0,1,2,2,1,1,0,0,0,1,2,0,0,1,1,
{0},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,1,1,13,
{"U"},
{0,1,0},
{0},1,
{21,
{1487,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{21,
{1488,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,9,"ТаблицаИзвестныхStepDefinitionКоманднаяПанель",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{0,0,1},0,1,0,0,0,3,3},11,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1499,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionИмяФайла",1,0,
{1,0},
{1,0},
{2,
{9},
{1}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1500,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionИмяФайлаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1501,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionИмяФайлаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1502,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionId",1,0,
{1,0},
{1,0},
{2,
{9},
{2}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1503,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionIdКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1504,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionIdРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1505,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionСтрокаРеальнойПроцедуры",1,0,
{1,0},
{1,0},
{2,
{9},
{3}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1506,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionСтрокаРеальнойПроцедурыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1507,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionСтрокаРеальнойПроцедурыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1508,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionПараметры",1,0,
{1,0},
{1,0},
{2,
{9},
{4}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1509,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionПараметрыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1510,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionПараметрыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1511,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionСтрокаДляПоиска",1,0,
{1,0},
{1,0},
{2,
{9},
{5}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1512,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionСтрокаДляПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1513,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionСтрокаДляПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1514,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionПредставлениеТеста",1,0,
{1,0},
{1,0},
{2,
{9},
{6}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1515,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionПредставлениеТестаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1516,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionПредставлениеТестаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1517,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionТранзакция",1,0,
{1,0},
{1,0},
{2,
{9},
{7}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1518,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionТранзакцияКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1519,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionТранзакцияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1520,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionОписаниеШага",1,0,
{1,0},
{1,0},
{2,
{9},
{8}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1521,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionОписаниеШагаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1522,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionОписаниеШагаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1523,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionТипШага",1,0,
{1,0},
{1,0},
{2,
{9},
{9}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1524,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionТипШагаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1525,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionТипШагаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1526,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionВерсияФайла",1,0,
{1,0},
{1,0},
{2,
{9},
{10}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,1,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1527,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionВерсияФайлаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1528,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionВерсияФайлаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1529,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ТаблицаИзвестныхStepDefinitionСтрокаОбрабатывалась",1,0,
{1,0},
{1,0},
{2,
{9},
{11}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,2,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{1530,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionСтрокаОбрабатываласьКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1531,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionСтрокаОбрабатываласьРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},2,2,1,0,
{"Pattern"},"","",2,2,0,1,
{10,
{1489,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,0,0,1,
{4,
{1490,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionСтрокаПоиска",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0},1,
{21,
{1491,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionСтрокаПоискаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1492,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionСтрокаПоискаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{1486,0},0,3,3},1,
{4,
{1493,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"ТаблицаИзвестныхStepDefinitionСостояниеПросмотра",
{1,0},
{1,0},1,1,0,1,
{1,0,2,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{7,3,0,1,100},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},3,
{0,1,0},1,0,0},1,
{21,
{1494,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionСостояниеПросмотраКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1495,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionСостояниеПросмотраРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{1486,1},0,3,3},1,
{4,
{1496,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"ТаблицаИзвестныхStepDefinitionУправлениеПоиском",
{1,0},
{1,0},1,1,0,1,
{1,0,
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,1,0},1,0,0,2},1,
{21,
{1497,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ТаблицаИзвестныхStepDefinitionУправлениеПоискомКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{10,
{1498,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаИзвестныхStepDefinitionУправлениеПоискомРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},2,
{1486,2},0,3,3},0,1,0,0,1,0,3,3,0,1,0},1,0,1,
{10,
{1650,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ТаблицаStepDefinitionРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1636,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСтраницыСлужебныеРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1439,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСлужебнаяРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1261,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФункциональностьЗакладкиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1717,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,2,"СтрокаСтатуса",0,0,
{1,0},
{1,0},
{1,
{38}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{32,
{3,0},0,0,2,2,1,2,2,2,2,2,2,2,2,2,
{"U"},
{"U"},"",0,
{4,0,
{0},"",-1,-1,1,0,""},0,0,2,3,00000000-0000-0000-0000-000000000000,
{5004,0},
{0,0},2,
{1,0},
{1,0},2,1,0,
{"Pattern"},1,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},1,
{3,0,0},0,
{1,0},2,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0},
{0,1,0},1,
{21,
{1718,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СтрокаСтатусаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},0,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1719,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтрокаСтатусаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1596,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаИнформация",
{1,1,
{"ru","Группа информация"}
},
{1,1,
{"ru","Группа информация"}
},0,1,0,0,0,1,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{81,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,1,"КаталогФич",1,0,
{1,20,
{"ru","Текущий каталог файлов функциональности"},
{"en","Current features files directory"},
{"am","ቅድሚያ የታዘዘ ፋይሎችን."},
{"az","Cari kataloq və faylları funksionallığı"},
{"bg","Текущата директория файл функционалност"},
{"et","Praegune failide kataloogi funktsionaalsus"},
{"fr","Le répertoire courant les fichiers de la fonctionnalité"},
{"ka","მიმდინარე დირექტორიაში ფაილების ფუნქციონალური"},
{"de","Aktuelle Dateiverzeichnis Funktionalität"},
{"hu","Aktuális könyvtárban lévő fájlok funkció"},
{"it","Risultati directory dei file di funzionalità"},
{"lv","Pašreizējā direktorijā failus funkcionalitāti"},
{"lt","Dabartinis failų katalogą funkcionalumą"},
{"mn","Одоогийн сан файлуудыг ажиллагаа"},
{"pl","Aktualny katalog plików funkcjonalności"},
{"ro","Directorul curent de fișiere de funcționalitate"},
{"sl","Trenutni imenik datotek funkcionalnost"},
{"es","El actual directorio de archivos de la funcionalidad de"},
{"sv","Aktuella katalogen filer funktionalitet"},
{"tr","Geçerli dosya dizin işlevselliği"}
},
{1,0},
{2,
{1},
{0,1248d1d6-f91e-4a5f-97b6-46e4d48aa426}
},
{0},1,1,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{11,50,0,2,2,2,
{1,0},1,
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},2,
{0,1,0},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e},1,0,0,1,0},
{0,1,0},1,
{21,
{82,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"КаталогФичКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1460,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"КаталогФичРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1601,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаСтатистика",
{1,1,
{"ru","Группа статистика"}
},
{1,1,
{"ru","Группа статистика"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,3d3cb80c-508b-41fa-8a18-680cdf5f1712,
{10,
{1598,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"Статистика",
{1,1,
{"ru","Статистика"}
},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,2,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},1,
{21,
{1599,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"СтатистикаКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,2,
{1,
{1,1,
{"ru","Статистика"}
},1},0,1,
{10,
{1600,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"СтатистикаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},1,0,0,1,0,3,3},cd5394d0-7dda-4b56-8927-93ccbe967a01,
{21,
{1622,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,5,"ГруппаСлужебныеФлаги",
{1,1,
{"ru","Группа служебные флаги"}
},
{1,1,
{"ru","Группа служебные флаги"}
},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{23,1,0,0,0,
{0},
{1,0},
{"Pattern"},"",
{3,4,
{0}
},0,0,0,1,
{1,0},0,0,3,3,2,0,1,1},2,77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1624,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ФлагСценарииЗагружены",1,0,
{1,0},
{1,0},
{1,
{21}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{1625,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ФлагСценарииЗагруженыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1626,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФлагСценарииЗагруженыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},77ffcc29-7f2d-4223-b22f-19666e7250ba,
{33,
{1627,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,3,"ФлагСценарииВыполнены",1,0,
{1,0},
{1,0},
{1,
{22}
},
{0},1,0,2,0,2,
{1,0},
{1,0},1,1,0,3,0,3,1,3,0,
{4,0,
{0},"",-1,-1,1,0,""},
{4,0,
{0},"",-1,-1,1,0,""},
{3,4,
{0}
},
{7,3,0,1,100},
{3,4,
{0}
},
{3,4,
{0}
},
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{10,0,
{3,4,
{0}
},
{3,4,
{0}
},0,
{1,0},
{3,4,
{0}
},
{7,3,0,1,100},0,0,0,2},
{0,1,0},1,
{21,
{1628,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,8,"ФлагСценарииВыполненыКонтекстноеМеню",
{1,0},
{1,0},0,1,0,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{1,1},0,1,0,0,0,3,3},1,
{"Pattern"},
{"Pattern"},"","",
{0},0,0,1,
{10,
{1629,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ФлагСценарииВыполненыРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},3,3},1,0,1,
{10,
{1623,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСлужебныеФлагиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1602,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаСтатистикаРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1597,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаИнформацияРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},1,0,1,
{10,
{1260,02023637-7868-4a5f-8576-835a76e0c9ba},0,0,0,0,"ГруппаФункциональностиРасширеннаяПодсказка",
{1,0},
{1,0},1,0,0,2,2,
{3,4,
{0}
},
{7,3,0,1,100},
{0,0,0},1,
{5,0,0,3,0,
{0,1,0},
{3,4,
{0}
},
{3,4,
{0}
},
{3,0,
{0},0,1,0,48312c09-257f-4b29-b280-284dd89efc1e}
},0,1,2,
{1,
{1,0},0},0,0,1,0,0,1,0,3,3},0,3,3},"","",0,1,"",2,0,0,0,0,0,3,3,0,1,2,100,1,1,0},"#Область ОписаниеПеременных

#Область ЭкспортируемыеПеременныеФормы

//Необходима для работы автотестироваиня VB
&НаКлиенте
Перем СлужебнаяПеременная Экспорт;

//Необходима для работы автотестироваиня VB
&НаКлиенте
Перем ХостСистема Экспорт;

&НаКлиенте
Перем ЭтоLinux Экспорт;

&НаКлиенте
Перем ЭтоЗапускВРежимеКоманднойСтроки Экспорт;

&НаКлиенте
Перем КешДанныеПеревода Экспорт;

&НаКлиенте
Перем Версия836ИлиВыше Экспорт;

&НаКлиенте
Перем Версия8311ИлиВыше Экспорт;

&НаКлиенте
Перем Версия8312ИлиВыше Экспорт;

&НаКлиенте
Перем Версия8313ИлиВыше Экспорт;


#КонецОбласти

#Область ГлобальныеПеременныеФормы

&НаКлиенте
Перем КэшФормПлагинов;

&НаКлиенте
Перем мСинхронныйРежимРазрешен;

&НаКлиенте
Перем ОбъектКонтекст;

&НаКлиенте
Перем ОбъектКонтекстСохраняемый Экспорт;

&НаКлиенте
Перем МассивСостоянияКонтекстовДоВыполненияШага;

&НаКлиенте
Перем ТаблицаУжеСуществующихСценариев;

&НаКлиенте
Перем МассивВерсийFeatureИмяФайла;
&НаКлиенте
Перем МассивВерсийFeatureВерсия;

&НаКлиенте
Перем МассивВерсийEPFИмяФайла;
&НаКлиенте
Перем МассивВерсийEPFВерсия;

&НаКлиенте
Перем ИдетОпросЭлементовФормTestClient;
&НаКлиенте
Перем МассивСостояниеФормTestClient;

&НаКлиенте
Перем ОбработкаСвязаннаяСИсполняемойФичей;

&НаКлиенте
Перем ТаблицаКонтекстовОбработок;

&НаКлиенте
Перем МассивИменКонтекстовОбработок;

&НаКлиенте
Перем ВыполнятьСценарииАсинхронно;

&НаКлиенте
Перем МассивСценариевДляВыполнения, МассивСтрокДереваДанныеФормы;

&НаКлиенте
Перем ТекИД_СценарияВМассиве;

&НаКлиенте
Перем ТекИД_ШагаВМассиве;

&НаКлиенте
Перем ТекИД_ВыполненногоШагаВМассиве;

&НаКлиенте
Перем СохраненноеСостояниеФормыTestClient;

&НаКлиенте
Перем ВсёЕщёИдётВыполнениеШагов;

&НаКлиенте
Перем МассивИДСтрокиДерева;

&НаКлиенте
Перем МассивРезультатПрохожденияТестовСценария;

&НаКлиенте
Перем ЦветУспешно;
&НаКлиенте
Перем ЦветОжидает;
&НаКлиенте
Перем ЦветНеУспешно;
&НаКлиенте
Перем ЦветЧужойСнипет;

&НаКлиенте
Перем ШагСтрокДляМодуля;

&НаКлиенте
Перем ИмяФайлаЛогаИнструкцииHTML, ТекущаяФичаИнструкцииHTML;

&НаКлиенте
Перем ИмяФайлаЛогаИнструкцииMarkdown, ТекущаяФичаИнструкцииMarkdown;

&НаКлиенте
Перем СтатусЗапускаСценариев;

&НаКлиенте
Перем ТаблицаОбработокДляОтладки;

&НаКлиенте
Перем СтрокаШагаСКоторогоНадоВыполнятьСценарий;

&НаКлиенте
Перем ПредставлениеВертЧертыВТабДок;

&НаКлиенте
Перем ТекущийИсполняемыйФичаФайл;

&НаКлиенте
Перем ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий;

&НаКлиенте
Перем ПрекратитьВыполнениеВсехСценариев;

&НаКлиенте
Перем ПрекратитьВыполнениеДанногоСценария;

&НаКлиенте
Перем МассивPIDОкон1С, ЗначениеПараметровДляСнятияСкриншотов, ТекProcessID, МассивКоординатОкон1С;

&НаКлиенте
Перем ИмяФайлаСубтитров, ИнтервалВыполненияШагаПриЗаписиВидео, БылаОшибкаСкриптовСборкиВидео;

&НаКлиенте
Перем СкриншотСделанВСценарии;

&НаКлиенте
Перем WshShell;

&НаКлиенте
Перем МассивСнипетовПрерывающихЗаписьСценария;

&НаКлиенте
Перем ЭтоЗапускВРежимеБезЗагрукиНастроек;

&НаКлиенте
Перем МассивTTS;

&НаКлиенте
Перем МодульРаботыСВидео;

&НаКлиенте
Перем НедавноЗагруженныеФичи;

&НаКлиенте
Перем Брейкпоинты;

&НаКлиенте
Перем ИмяСценарияКоторыйНадоВыполнитьПослеПереазгрузки;
&НаКлиенте
Перем СтрокаСценарияКоторыйНадоВыполнитьПослеПереазгрузкиЭтоПример;

&НаКлиенте
Перем ОбработанноеИдОповещения;

&НаКлиенте
Перем СтруктураПоискаСтрокДерева;

&НаКлиенте
Перем КешВерсияОбработки;

&НаКлиенте
Перем КешРежимСовместимости;

&НаКлиенте
Перем СчетчикШаговБезТаймера, МаксСчетчикШаговБезТаймера;

&НаКлиенте
Перем НадоПерейтиКСтрокеДерева;

&НаКлиенте
Перем ТекстСообщенийПользователю;

&НаКлиенте
Перем ВозниклаОшибкаПодключенияTestClient;

//Признак, выполняем шаг вручную, не автоматически - считаем что все шаги выполняются успешно.
&НаКлиенте
Перем ПризнакРучногоВыполненияШага Экспорт;

&НаКлиенте
Перем ВозниклаОшибкаВШагеКонтекста;

&НаКлиенте
Перем ГлобальныеЗначенияТаблиц;

&НаКлиенте
Перем ЗафиксированнаяФормаTestClient;

#КонецОбласти

#КонецОбласти

#Область КомандыФормы

&НаКлиенте
Процедура Брейкпоинт(Команда)
	ОбработатьУстановкуСнятиеБрейкпоинта();
КонецПроцедуры

&НаКлиенте
Процедура БрейкпоинтУбратьВсе(Команда)
	КопияБрейкпоинты = Новый Массив;
	
	Для каждого Элем Из Брейкпоинты Цикл
		КопияБрейкпоинты.Добавить(Элем);
	КонецЦикла;
	Для каждого Элем Из КопияБрейкпоинты Цикл
		УдалитьБрейкПоинт(Элем);
	КонецЦикла;
	
	СнятьПометкуБрейкпоинтаРекурсивно(Объект.ДеревоТестов.ПолучитьЭлементы());
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыделенныйСценарийФорма(Команда)
	ВыполнитьВыделенныйСценарий();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьФичуФорма(Команда)
	ВыполнитьФичу();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОдинШагФорма(Команда)
	ВыполнитьОдинШаг();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьФичиИзКаталога(Команда)
	Объект.текЗначениеОперации = ""ЗагрузитьФичиИзКаталога"";
	ОбновитьКнопкуЗагрузитьФичи();
	
	Объект.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШага                  = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением     = Ложь;
	Объект.РежимВыполненияОдногоШага                                    = Ложь;
	СтрокаШагаСКоторогоНадоВыполнятьСценарий      = Неопределено;
	МассивСостоянияКонтекстовДоВыполненияШага     = Новый Массив;
	
	ЗагрузитьТестыЗагрузитьФичиИзКаталога();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьОднуФичу(Команда)
	Объект.текЗначениеОперации = ""ЗагрузитьОднуФичу"";
	ОбновитьКнопкуЗагрузитьФичи();
	
	Объект.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШага                  = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением     = Ложь;
	Объект.РежимВыполненияОдногоШага                                    = Ложь;
	СтрокаШагаСКоторогоНадоВыполнятьСценарий      = Неопределено;
	МассивСостоянияКонтекстовДоВыполненияШага     = Новый Массив;
	
	ЗагрузитьТестыЗагрузитьОднуФичу();
КонецПроцедуры

&НаКлиенте
Процедура Перезагрузить(Команда)
	Объект.ИдетВыполнениеСценариев = Ложь;
	Если НЕ (Объект.ПроверкаРаботыVanessaBehaviorВРежимеTestClient ИЛИ Объект.РежимСамотестирования) Тогда
		ТекущиеДанныеДерева = Элементы.ДеревоТестов.ТекущиеДанные;
		Если ТекущиеДанныеДерева <> Неопределено Тогда
			НадоПерейтиКСтрокеДерева = ТекущиеДанныеДерева.ИДСтроки;
		КонецЕсли;
	КонецЕсли;
	
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСценарииФорма(Команда)
	
	ЭтаФорма.ТекущийЭлемент = Элементы.ГруппаЗапускТестов;
	СделатьПараметрыКорректными();
	
	Объект.РежимВыполненияДанногоСценарияСТекущегоШага              = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением = Ложь;
	Объект.РежимВыполненияОдногоШага                                = Ложь;
	
	ВыполнитьСценарии();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьШаблоныОбработокКоманда(Команда)
	СоздатьШаблоныОбработок();
КонецПроцедуры

&НаКлиенте
Процедура ПерезагрузитьИВыполнить(Команда)
	Объект.ИдетВыполнениеСценариев                                  = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШага              = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением = Ложь;
	Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
		ЗагрузитьФичи();
		ВыполнитьСценарии();
	Иначе
		Объект.НадоВыполнитьСценарииПослеЗагрузкиФичОдинРаз = Истина;
		ЗагрузитьФичи();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПерезагрузитьИВыполнитьДанныйСценарийФорма(Команда)
	ПерезагрузитьИВыполнитьДанныйСценарий();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФичаФайл(Команда)
	СтрокаФичи = Элементы.ДеревоТестов.ТекущиеДанные;
	Если СтрокаФичи = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПолныйПуть   = СтрокаФичи.ПолныйПуть;
	ИмяФайлаФичи = Неопределено;
	Если Найти(НРег(ПолныйПуть),"".feature"") > 0 Тогда
		ИмяФайлаФичи = ИмяФайлаФичиИзПолногоПути(ПолныйПуть);
	КонецЕсли;
	
	Если ИмяФайлаФичи = Неопределено Тогда
		Если СтрокаФичи.Тип <> ""Фича"" Тогда
			СтрокаФичи = НайтиСтрокуФичиЧерезРодителя(СтрокаФичи);
			Если СтрокаФичи = Неопределено Тогда
				Сообщить(""Строка с фича-файлом не найдена."");
				Возврат;
			КонецЕсли;
			
			ИмяФайлаФичи = СтрокаФичи.ПолныйПуть;
		КонецЕсли;
	КонецЕсли;
	
	НомерСтрокиВФиче = СтрокаФичи.НомерСтрокиВФиче;
	
	СтрокаЗапуска = ИмяФайлаФичи;
	
	Если ЗначениеЗаполнено(Объект.КоманднаяСтрокаРедактированияФичи) Тогда
		СтрокаЗапуска = Объект.КоманднаяСтрокаРедактированияФичи;
		СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, ""%FeatureFile%"", """""""" + ИмяФайлаФичи + """""""");
		СтрокаЗапуска = СтрЗаменить(СтрокаЗапуска, ""%FeatureLine%"", XMLСтрока(НомерСтрокиВФиче));
	КонецЕсли;	 
	
	ВыполнитьКомандуОСБезПоказаЧерногоОкна(СтрокаЗапуска, Ложь, Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКаталогФичи(Команда)
	СтрокаФичи = Элементы.ДеревоТестов.ТекущиеДанные;
	Если СтрокаФичи = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрокаФичи.Тип <> ""Фича"" Тогда
		СтрокаФичи = НайтиСтрокуФичиЧерезРодителя(СтрокаФичи);
		Если СтрокаФичи = Неопределено Тогда
			Сообщить(""Строка с фича-файлом не найдена."");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Файл = Новый Файл(СтрокаФичи.ПолныйПуть);
	
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработатьОткрытьКаталогФичи"""", ЭтаФорма)"");
		Выполнить(""НачатьЗапускПриложения(ОписаниеОповещения, Файл.Путь)"");
	Иначе
		ЗапуститьПриложение(Файл.Путь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗаписьДействийПользователяКнопка(Команда)
	ТекущиеДанные = Элементы.ДанныеКлиентовТестирования.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Если ДанныеКлиентовТестирования.Количество() > 0 Тогда
			ПараметрыОтбора = Новый Структура;
			ПараметрыОтбора.Вставить(""Имя"", ""Этот клиент"");
			
			НайденныеСтроки = ДанныеКлиентовТестирования.НайтиСтроки(ПараметрыОтбора);
			Если НайденныеСтроки.Количество() > 0 Тогда
				ДанныеЗапускаКлиентаТестирования = НайденныеСтроки[0];
				Элементы.ДанныеКлиентовТестирования.ТекущаяСтрока = ДанныеЗапускаКлиентаТестирования.ПолучитьИдентификатор();
				ТекущиеДанные = Элементы.ДанныеКлиентовТестирования.ТекущиеДанные;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ТекущиеДанные = Неопределено Тогда
		СделатьСообщение(""Не найден TestClient для подключения."");
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ТипКлиента = ""Web"" Тогда
		СделатьСообщение(""Web клиент не поддерживает запись действий пользователя."");
		Возврат;
	КонецЕсли;
	
	ЭтаФорма.ТекущийЭлемент = Элементы.РаботасUI;
	НачатьЗаписьДействийПользователя();
	УправлениеВидимостьюЗаписиДействийПользователя(""НачатьЗапись"");
КонецПроцедуры

&НаКлиенте
Процедура ПриостановитьЗаписьДействийПользователя(Команда)
	УправлениеВидимостьюЗаписиДействийПользователя(""ПриостановитьЗапись"");
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьЗаписьДействийПользователя(Команда)
	УправлениеВидимостьюЗаписиДействийПользователя(""ПродолжитьЗапись"");
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодключитьTestClient(Команда)
	ОткрытьНовыйСеансTestClientИлиПодключитьУжеСуществующий();
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗаписьДействийПользователяКнопка(Команда)
	ЗавершитьЗаписьДействийПользователя();
	УправлениеВидимостьюЗаписиДействийПользователя(""ЗавершитьЗапись"");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПометкуВыполнятьСценарийСЭтогоШага(Команда)
	ПроцУстановитьПометкуВыполнятьСценарийСЭтогоШага();
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометкуВыполнятьСценарийСЭтогоШага(Команда)
	Объект.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов = Ложь;
	Если СтрокаШагаСКоторогоНадоВыполнятьСценарий <> Неопределено Тогда
		ПромСтрока = Неопределено;
		НайтиСтрокуДереваПоИдСтроки(СтрокаШагаСКоторогоНадоВыполнятьСценарий.ИдСтроки, Объект.ДеревоТестов.ПолучитьЭлементы(), ПромСтрока);
		СтрокаШагаСКоторогоНадоВыполнятьСценарий = ПромСтрока;
		
		СтрокаШагаСКоторогоНадоВыполнятьСценарий.ВыполнятьСценарийСЭтогоШага = Ложь;
	КонецЕсли;
	
	СтрокаШагаСКоторогоНадоВыполнятьСценарий = Неопределено;
	
	Элементы.ДеревоТестовКонтекстноеМенюВыполнятьСценарииСначала.Видимость = Ложь;
	
	Сообщить(""Пометка снята."");
КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьСостояниеФормыTestClientКнопка(Команда)
	ЗапомнитьСостояниеФормыTestClient();
КонецПроцедуры

&НаКлиенте
Процедура ЗабытьСостояниеФормыTestClientКнопка(Команда)
	ЗабытьСостояниеФормыTestClient();
КонецПроцедуры

&НаКлиенте
Процедура ИсследовательФормы(Команда)
	Если НЕ ОбъектКонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
		Сообщить(ПолучитьТекстСообщенияПользователю(""$TestClient НЕ подключен.$""));
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить(""Язык"", Объект.ЯзыкГенератораGherkin);
	//ОткрытьФорму(""ВнешняяОбработка.аботка.bd.Форма.ИсследовательФормы"", ПараметрыФормы,ЭтаФорма);
	ФормаДобавитьШаг = ПолучитьФорму(""ВнешняяОбработка.bddRunner.Форма.ИсследовательФормы"", ПараметрыФормы,ЭтаФорма);
	ФормаДобавитьШаг.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьИзмененияФормыGherkinКнопка(Команда)
	ПолучитьИзмененияФормыGherkin();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСостояниеТекущегоЭлементаФормыКнопка(Команда)
	ПолучитьСостояниеТекущегоЭлементаФормы();
КонецПроцедуры

&НаКлиенте
Процедура ДляВызоваКонфигуратора(Команда)
	Зн = 1/0;
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДеревоДоФич(Команда)
	ДеревоФормыСтроки = Объект.ДеревоТестов.ПолучитьЭлементы();
	СвернутьДеревоДоФичРекурсивно(ДеревоФормыСтроки);
КонецПроцедуры

&НаКлиенте
Процедура СвернутьДеревоДоСценариев(Команда)
	ДеревоФормыСтроки = Объект.ДеревоТестов.ПолучитьЭлементы();
	СвернутьДеревоДоСценариевРекурсивно(ДеревоФормыСтроки);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЧтоЗаписьВидеоБудетРаботать(Команда)
	ПараметрыВидео = ПолучитьПараметрыЗаписиВидео();
	ПодключитьБиблиотекуРаботыСВидео();
	МодульРаботыСВидео.ПроверитьЧтоЗаписьВидеоБудетРаботать(ПараметрыВидео);
КонецПроцедуры

&НаКлиенте
Процедура КомандаСохранитьНастройки(Команда)
	
	ПлагинНастроек = Плагин(""LoadSettings"");
	ПлагинНастроек.СохранитьНастройки(Объект)
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНастройкиПоУмолчанию(Команда)
	ПараметрыФайла = ПрочитатьСтруктуруИзJSONФайлаКлиент(Объект.КаталогИнструментов + ""\tools\JSON\VideoDefault.json"");
	
	Для Каждого Элем Из ПараметрыФайла Цикл
		Если Лев(Элем.Ключ, 11) = ""ЗаписьВидео"" Тогда
			Если Найти(Элем.Ключ,""ВодянойЗнак"") > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			Если Найти(Элем.Ключ,""СловарьЗаменСписок"") > 0 Тогда
				Объект.ЗаписьВидеоСловарьЗамен.Очистить();
				Для Каждого ПутьКСловарюЗамен Из Элем.Значение Цикл
					Объект.ЗаписьВидеоСловарьЗамен.Добавить(ПреобразоватьПутьСТочкамиКНормальномуПути(ПутьКСловарюЗамен));
				КонецЦикла;
				
				Продолжить;
			КонецЕсли;
			
			Если Найти(Элем.Ключ,""СловарьЗамен"") > 0 Тогда
				Объект.ЗаписьВидеоСловарьЗамен.Очистить();
				Объект.ЗаписьВидеоСловарьЗамен.Добавить(ПреобразоватьПутьСТочкамиКНормальномуПути(Элем.Значение));
				Продолжить;
			КонецЕсли;
			Если Найти(Элем.Ключ,""КаталогДляВременныхФайлов"") > 0 Тогда
				ВременныйФайл = Новый Файл(ПолучитьИмяВременногоФайла());
				ПутьВременногоКаталогаДляВидео = ВременныйФайл.Путь + ""VideoTemp"" +
				ПолучитьРазделительПути() + ВременныйФайл.Имя;
				СоздатьКаталогКомандаСистемы(ПутьВременногоКаталогаДляВидео);
				
				Объект[Элем.Ключ] = ПутьВременногоКаталогаДляВидео;
				Продолжить;
			КонецЕсли;
			
			Значение = Элем.Значение;
			Если Лев(Элем.Значение, 1) = ""."" Тогда
				Значение = ПреобразоватьПутьСТочкамиКНормальномуПути(Элем.Значение);
			КонецЕсли;
			Объект[Элем.Ключ] = Значение;
		КонецЕсли;
	КонецЦикла;
	
	НастройкаДоступностиВидимостиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКлиентовТестированияКоманда(Команда)
	СохранитьКлиентовТестирования();
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьВыбранногоКлиентаТестирования(Команда)
	ТекущиеДанные = Элементы.ДанныеКлиентовТестирования.ТекущиеДанные;
	ПодключитьПрофильTestClientПоИмени(ТекущиеДанные.Имя);
КонецПроцедуры

&НаКлиенте
Процедура КлиентТестированияТекущейИнфобазы(Команда)
	
	ТекущиеДанные = Элементы.ДанныеКлиентовТестирования.ТекущиеДанные;
	ТекущиеДанные.ПутьКИнфобазе = СтрокаСоединенияИнформационнойБазы();
	
КонецПроцедуры


&НаКлиенте
Процедура НачатьЗаписьДействийПользлователяВВыбранномКлиентеТестирования(Команда)
	ТекущиеДанные = Элементы.ДанныеКлиентовТестирования.ТекущиеДанные;
	
	Если ТекущиеДанные.ТипКлиента = ""Web"" Тогда
		СделатьСообщение(""Web клиент не поддерживает запись действий пользователя."");
		Возврат;
	КонецЕсли;
	
	Если Не ТекущиеДанные.Подключен Тогда
		ПодключитьВыбранногоКлиентаТестирования("""");
	КонецЕсли;
	
	НачатьЗаписьДействийПользователя(Ложь);
	ЭтаФорма.ТекущийЭлемент = Элементы.ГруппаДополнительно;
	
	УправлениеВидимостьюЗаписиДействийПользователя(""НачатьЗапись"");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтключитьВыбранногоКлиентаТестирования(Команда)
	РазорватьСоединениеTestClient();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНедавнююФичу1(Команда)
	Объект.КаталогФич = НедавноЗагруженныеФичи[0].Путь;
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНедавнююФичу2(Команда)
	Объект.КаталогФич = НедавноЗагруженныеФичи[1].Путь;
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНедавнююФичу3(Команда)
	Объект.КаталогФич = НедавноЗагруженныеФичи[2].Путь;
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНедавнююФичу4(Команда)
	Объект.КаталогФич = НедавноЗагруженныеФичи[3].Путь;
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНедавнююФичу5(Команда)
	Объект.КаталогФич = НедавноЗагруженныеФичи[4].Путь;
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНедавнююФичу6(Команда)
	Объект.КаталогФич = НедавноЗагруженныеФичи[5].Путь;
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНедавнююФичу7(Команда)
	Объект.КаталогФич = НедавноЗагруженныеФичи[6].Путь;
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНедавнююФичу8(Команда)
	Объект.КаталогФич = НедавноЗагруженныеФичи[7].Путь;
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьНедавнююФичу9(Команда)
	Объект.КаталогФич = НедавноЗагруженныеФичи[8].Путь;
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьИзвестныйШаг(Команда)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить(""ТаблицаИзвестныхStepDefinition"", ТаблицаИзвестныхStepDefinition);
	ПараметрыФормы.Вставить(""ТаблицаУжеСуществующихСценариев"", ТаблицаУжеСуществующихСценариев);
	ПараметрыФормы.Вставить(""ЯзыкГенератораGherkin"", Объект.ЯзыкГенератораGherkin);
	ПараметрыФормы.Вставить(""КаталогИнструментов"", Объект.КаталогИнструментов);
	ПараметрыФормы.Вставить(""МакетШаблонПеревода"", МакетШаблонПеревода);
	ПараметрыФормы.Вставить(""ДвоичныеДанныеФайлПеревода"", ПолучитьФайлыПеревода());
	
	ФормаДобавитьШаг = ПолучитьФорму(""ВнешняяОбработка.bddRunner.Форма.ВыборИзвестногоШага"", ПараметрыФормы,ЭтаФорма);
	ФормаДобавитьШаг.Открыть();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДанныйСценарийСТекущегоШагаФорма(Команда)
	ВыполнитьДанныйСценарийСТекущегоШага();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДанныйСценарийСТекущегоШагаСПродолжениемФорма(Команда)
	ВыполнитьДанныйСценарийСТекущегоШагаСПродолжением();
КонецПроцедуры

&НаКлиенте
Процедура СброситьКешИзвестныхStepDefinition(Команда) Экспорт
	СброситьКешИзвестныхStepDefinitionСервер();
	СделатьСообщение(""Надо сделать перезапуск Vanessa-Behavior."");
КонецПроцедуры

//	{ управление видимостью колонок ДереваТестов
&НаКлиенте
Процедура ПоказатьСкрытьПутьКФайлу(Команда)
	ПоказатьСкрытьКолонкуДереваТестов(""ДеревоТестовПолныйПуть"", ""ПоказатьСкрытьПутьКФайлу"", Команда);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьСнипет(Команда)
	ПоказатьСкрытьКолонкуДереваТестов(""ДеревоТестовСнипет"", ""ПоказатьСкрытьСнипет"", Команда);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьАдресСнипета(Команда)
	ПоказатьСкрытьКолонкуДереваТестов(""ДеревоТестовАдресСнипета"", ""ПоказатьСкрытьАдресСнипета"", Команда);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьСтрокаРеальнойПроцедуры(Команда)
	ПоказатьСкрытьКолонкуДереваТестов(""ДеревоТестовСтрокаРеальнойПроцедуры"", ""ПоказатьСкрытьСтрокаРеальнойПроцедуры"", Команда);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьВсеКолонки(Команда)
	
	Если Не Элементы.ДеревоТестов.ПодчиненныеЭлементы.ДеревоТестовСтрокаРеальнойПроцедуры.Видимость Или
		Не Элементы.ДеревоТестов.ПодчиненныеЭлементы.ДеревоТестовАдресСнипета.Видимость Или
		Не Элементы.ДеревоТестов.ПодчиненныеЭлементы.ДеревоТестовСнипет.Видимость Или
		Не Элементы.ДеревоТестов.ПодчиненныеЭлементы.ДеревоТестовПолныйПуть.Видимость Или
		Не Элементы.ДеревоТестов.ПодчиненныеЭлементы.ДеревоТестовИДСтроки.Видимость
		
		Тогда
		
		ПоказатьСкрытьСтрокаРеальнойПроцедуры(""Показать"");
		ПоказатьСкрытьАдресСнипета(""Показать"");
		ПоказатьСкрытьСнипет(""Показать"");
		ПоказатьСкрытьПутьКФайлу(""Показать"");
		ПоказатьСкрытьИДСтроки(""Показать"");
		Элементы.ПоказатьСкрытьВсеКолонки.Картинка = БиблиотекаКартинок.СнятьФлажки;
		
	Иначе
		ПоказатьСкрытьСтрокаРеальнойПроцедуры("""");
		ПоказатьСкрытьАдресСнипета("""");
		ПоказатьСкрытьСнипет("""");
		ПоказатьСкрытьПутьКФайлу("""");
		ПоказатьСкрытьИДСтроки("""");
		Элементы.ПоказатьСкрытьВсеКолонки.Картинка = БиблиотекаКартинок.УстановитьФлажки;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьИДСтроки(Команда)
	ПоказатьСкрытьКолонкуДереваТестов(""ДеревоТестовИДСтроки"", ""ПоказатьСкрытьИДСтроки"", Команда);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСкрытьКолонкуДереваТестов(Знач ИмяКолонки, Знач ИмяПоляФормы, Знач Команда)
	ЭлементКолонки = Элементы.ДеревоТестов.ПодчиненныеЭлементы[ИмяКолонки];
	ЭлементФормы = Элементы[ИмяПоляФормы];
	Если Не ЭлементКолонки.Видимость Или Команда = ""Показать"" Тогда
		ЭлементКолонки.Видимость = Истина;
		ЭлементФормы.Картинка = БиблиотекаКартинок.УстановитьФлажки;
	Иначе
		ЭлементКолонки.Видимость = Ложь;
		ЭлементФормы.Картинка = БиблиотекаКартинок.СнятьФлажки;
	КонецЕсли;
КонецПроцедуры
//	} управление видимостью колонок ДереваТестов

&НаКлиенте
Процедура РедактироватьТаблицуТекст(Команда)
	ОткрытьРедактированиеТаблицыGherkin();
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьМакетПоТаблице(Команда)
	НачалоСтроки = 0;
	НачалоКолонки = 0;
	КонецСтроки = 0;
	КонецКолонки = 0;
	ВерхняяГраница = 0;
	НижняяГраница = 0;
	ОпределитьГраницыТаблицыGherkin(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки, ВерхняяГраница, НижняяГраница);
	
	МассивСтрок = РазложитьСтрокуВМассивПодстрокКлиент(Объект.СгенерированныйСценарий, Символы.ПС);
	
	МассивСтрокДляРедактирования = Новый Массив;
	Для Ккк = (НижняяГраница - 1) По ВерхняяГраница - 1 Цикл
		МассивСтрокДляРедактирования.Добавить(МассивСтрок[Ккк]);
	КонецЦикла;
	
	Если МассивСтрокДляРедактирования.Количество() = 0 Тогда
		СделатьСообщение(""Не найдена таблица для редактирования."");
		Возврат;
	КонецЕсли;
	
	ТабДок = Новый ТабличныйДокумент;
	НомСтр = 0;
	Для Каждого СтрокаМассива Из МассивСтрокДляРедактирования Цикл
		НомСтр = НомСтр + 1;
		
		
		Стр = СокрЛП(СтрокаМассива);
		Если Лев(Стр,1) = ""|"" Тогда
			Стр = Сред(Стр,2);
		КонецЕсли;
		
		Если Прав(Стр,1) = ""|"" Тогда
			Стр = Лев(Стр,СтрДлина(Стр)-1);
		КонецЕсли;
		
		МассивЗначений = РазложитьСтрокуВМассивПодстрок(Стр,""|"");
		
		НомКол = 0;
		Для Ккк = 0 По МассивЗначений.Количество()-1 Цикл
			НомКол = НомКол + 1;
			
			ТекЗначение = СокрЛП(МассивЗначений[Ккк]);
			Если ТекЗначение = ""''"" Тогда
				ТекЗначение = """";
			КонецЕсли;
			
			Если Лев(ТекЗначение,1) = ""'"" И Прав(ТекЗначение,1) = ""'"" Тогда
				ТекЗначение = Сред(ТекЗначение,2);
				ТекЗначение = Лев(ТекЗначение,СтрДлина(ТекЗначение)-1);
			КонецЕсли;
			
			ТекЗначение = СтрЗаменить(ТекЗначение,""\n"",Символы.ПС);
			
			ТабДок.Область(НомСтр,НомКол,НомСтр,НомКол).Текст = ТекЗначение;
			
			Если НомСтр = 1 Тогда
				ТабДок.Область(НомСтр,НомКол,НомСтр,НомКол).ШиринаКолонки = 12;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ТабДок.Показать();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроизвольныйКод(Команда)
	Выполнить(РеквизитПроизвольныйКод);
КонецПроцедуры

&НаКлиенте
Процедура ВычислитьPIDЭтогоСеанса(Команда)
	ВычислитьPIDЭтогоСеансаСлужебный();
КонецПроцедуры

//СохранитьНастройкиКлиент(Команда)

&НаКлиенте
Процедура ДобавитьСтрокуВСписокБиблиотек(Команда)
	Элементы.КаталогиБиблиотек.ДобавитьСтроку();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСтрокиВСпискеБиблиотек(Команда)
	Объект.КаталогиБиблиотек.Очистить();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуВСписокСловарейЗамен(Команда)
	Элементы.ЗаписьВидеоСловарьЗамен.ДобавитьСтроку();
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьСгенерированныйСценарий(Команда)
	Объект.СгенерированныйСценарий = """";
КонецПроцедуры

&НаКлиенте
Процедура ПеревестиТекстНаДругойЯзык(Команда)
	Перевод = ПеревестиТекст(Объект.СгенерированныйСценарий);
	Объект.СгенерированныйСценарий = Перевод;
КонецПроцедуры

#КонецОбласти //КомандыФормы

#Область ОбработкаСобытийДеревоТестов

&НаКлиенте
Процедура ДеревоТестовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекДанные = Элементы.ДеревоТестов.ТекущиеДанные;
	Если ТекДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Если МассивСценариевДляВыполнения <> Неопределено И Элемент.ТекущиеДанные.Тип = ""Шаг"" Тогда
		Родитель = Элемент.ТекущиеДанные.ПолучитьРодителя();
		Если Родитель <> Неопределено И Родитель.Статус =  ""Failed"" Тогда
			ИДСтрокиСценария = Родитель.ИДСтроки;
			РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
			Если РезультатПрохожденияТестовСценария <> Неопределено Тогда
				ВыполненныеШаги = РезультатПрохожденияТестовСценария.РезультатПрохожденияТестовШагов;
				Для каждого ИсторияШага из ВыполненныеШаги Цикл
					Если ИсторияШага.Статус = ""Failed"" Тогда
						Если ИсторияШага.Свойство(""ОписаниеОшибки"") Тогда
							СделатьСообщение(ИсторияШага[""ОписаниеОшибки""]);
						Иначе
							СделатьСообщение(""Нет описания ошибки"");
						КонецЕсли;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТестовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	Если Копирование Тогда //F9
		ОбработатьУстановкуСнятиеБрейкпоинта();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТестовПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТестовПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоТестовПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	Если ТипЗнч(ПараметрыПеретаскивания.Значение) = Тип(""Файл"") Тогда
		Если НРег(ПараметрыПеретаскивания.Значение.Расширение) = "".feature"" Тогда
			Объект.КаталогФич = ПараметрыПеретаскивания.Значение.ПолноеИмя;
			ЗагрузитьФичи();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти //ОбработкаСобытийДеревоТестов

#Область ОбработкаСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	ОбъектНаСервере = Объект();
	ИспользуемоеИмяФайла = ОбъектНаСервере.ИспользуемоеИмяФайла;
	
	ЕстьПоддержкаНемодальныхФорм    = УзнатьЕстьПоддержкаНемодальныхФорм();
	ЕстьПоддержкаАсинхронныхВызовов = УзнатьЕстьПоддержкаАсинхронныхВызовов();
	ЕстьЗащитаОтОпасныхДействий     = УзнатьЕстьЗащитаОтОпасныхДействий();
	
	Если Параметры.Свойство(""КаталогИнструментов"") Тогда
		Объект.КаталогИнструментов = Параметры.КаталогИнструментов;
	КонецЕсли;
	Если Параметры.Свойство(""КаталогПроекта"") Тогда
		Объект.КаталогПроекта = Параметры.КаталогПроекта;
	КонецЕсли;
	
	Объект.КоличествоСекундПоискаОкна = 10;
	
	МакетШаблонПеревода = ОбъектНаСервере.ПолучитьМакет(""ШаблонПеревода"");
	
	СтатусыРезультатаТестирования = ОбъектНаСервере.СтатусыРезультатаТестирования;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Объект.ИспользоватьПрямыеПутиФайлов = КлиентИСерверРасположеныНаОднойМашине();
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Версия836ИлиВыше    = ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(СистемнаяИнформация.ВерсияПриложения, ""8.3.6.0"");
	Версия8311ИлиВыше   = ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(СистемнаяИнформация.ВерсияПриложения, ""8.3.11.0"");
	Версия8312ИлиВыше   = ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(СистемнаяИнформация.ВерсияПриложения, ""8.3.12.0"");
	Версия8313ИлиВыше   = ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(СистемнаяИнформация.ВерсияПриложения, ""8.3.13.0"");
	
	СчитываниеМакетаНачСтр = 1;
	СчитываниеМакетаНачКол = 1;
	СчитываниеМакетаКолСтр = 30;
	СчитываниеМакетаКолКол = 20;
	
	// видимость колонок Дерева тестов
	ПоказатьСкрытьСтрокаРеальнойПроцедуры("""");
	ПоказатьСкрытьАдресСнипета("""");
	ПоказатьСкрытьСнипет("""");
	ПоказатьСкрытьПутьКФайлу("""");
	ПоказатьСкрытьИДСтроки(""Показать"");
	
	УстановитьВидимостьСлужебныхЭлементов();
	
	ЭтоLinux = Ложь;
	СисИнфо = Новый СистемнаяИнформация;
	Если Найти(Строка(СисИнфо.ТипПлатформы), ""Linux"") > 0 Тогда
		ЭтоLinux = Истина;
	КонецЕсли;
	
	Объект.ВыполнятьШагиАссинхронно = Ложь;
	Объект.ЯзыкГенератораGherkin = ""ru"";
	
	ОбъектКонтекст            = Новый Структура;
	ОбъектКонтекстСохраняемый = Новый Структура;
	Если Объект.ДополнительныеПараметры  = Неопределено Тогда
		Объект.ДополнительныеПараметры = Новый Структура;
	КонецЕсли;
	
	ЗаполнитьКаталогИнструментовЕслиОнПустой();
	
	Если Версия836ИлиВыше Тогда
		Обрабочик_ПриОткрытииЗавершение = Вычислить(""Новый ОписаниеОповещения(""""ПриОткрытииЗавершение"""", ЭтаФорма)"");
		ЗагрузитьПлагины(Ложь, Обрабочик_ПриОткрытииЗавершение);
	Иначе
		ЗагрузитьПлагины();
	КонецЕсли;
	
	ПодключитьОбработчикОжидания(""ПослеОткрытияФормы"", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии()
	ОтключитьОбработчикОжидания(""ОпросЭлементовФормTestClient"");
	ОтключитьОбработчикОжидания(""ПроверкаВнешнихКоманд"");
	Если НЕ ЭтоЗапускВРежимеБезЗагрукиНастроек Тогда
		СистемнаяИнформация = Новый СистемнаяИнформация;
		Если Не ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(СистемнаяИнформация.ВерсияПриложения, ""8.3.8.0"") Тогда
			КомандаСохранитьНастройки(Неопределено);
		КонецЕсли;
	КонецЕсли;
	
	Если ОбъектКонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
		Попытка
			ОбъектКонтекстСохраняемый.ТестовоеПриложение.РазорватьСоединение();
		Исключение
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = ""ВыборИзвестногоШага"" Тогда
		Объект.СгенерированныйСценарий = Объект.СгенерированныйСценарий + Символы.ПС + Символы.Таб + Параметр;
	ИначеЕсли ИмяСобытия = ""РедактированиеТаблицыGherkin"" Тогда
		ЗаменитьТаблицуGherkinПослеРедактирования(Параметр);
	ИначеЕсли Найти(ИмяСобытия, ""ВыполнитьСценарий"") > 0 или Найти(ИмяСобытия, ""ЗагрузитьСценарий"") Тогда
		
		Если НЕ ЭтаФорма.Открыта() Тогда
			Возврат;
		КонецЕсли;
		
		НадоПерейтиКСтрокеДерева = -1;
		
		ИдОповещения = Параметр.ИдОповещения;
		Если ИдОповещения = ОбработанноеИдОповещения Тогда
			Возврат;
		КонецЕсли;
		
		ОбработанноеИдОповещения = ИдОповещения;
		
		Объект.КаталогПроекта = Параметр.КаталогПроекта;
		Объект.КаталогФич     = Параметр.ПутьКСценариям;
		
		Объект.НадоВыполнитьСценарииПослеЗагрузкиФичОдинРаз = Ложь;
		
		Если Параметр.Свойство(""ОстановкаПриВозникновенииОшибки"") Тогда
			Объект.ОстановкаПриВозникновенииОшибки = Параметр.ОстановкаПриВозникновенииОшибки;
		КонецЕсли;
		
		НадоВыполнитьСценарийСоСтрокиПереданнойИзвне = Ложь;
		
		Если Параметр.Свойство(""СТекущегоШага"") Тогда
			Если Параметр.СТекущегоШага Тогда
				НадоВыполнитьСценарийСоСтрокиПереданнойИзвне = Истина;
				НомерСтрокиСценарияПереданныйИзвне           = Параметр.НомерСтрокиДляЗапускаСТекущегоШагаСценария;
				ЗагрузитьФичи();
				ПодключитьОбработчикОжидания(""ЗапуститьСценарийСоСтрокиПрисланнойИзвне"",0.1,Истина);
				Возврат;
			КонецЕсли;
		КонецЕсли;
		
		Если Найти(ИмяСобытия, ""ВыполнитьСценарий"") > 0 Тогда
			Объект.НадоВыполнитьСценарииПослеЗагрузкиФичОдинРаз = Истина;
		ИначеЕсли Найти(ИмяСобытия, ""ЗагрузитьСценарий"") > 0 Тогда
			ТекущиеДанныеДерева = Элементы.ДеревоТестов.ТекущиеДанные;
			Если ТекущиеДанныеДерева <> Неопределено И НЕ Объект.РежимСамотестирования Тогда
				НадоПерейтиКСтрокеДерева = ТекущиеДанныеДерева.ИДСтроки;
			КонецЕсли;
		КонецЕсли;
		
		Объект.ВыполнениеСценарияИзОбработкиОповещения = Истина;
		ЗагрузитьФичи();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти //ОбработкаСобытийФормы

#Область ОбработкаСобытийЭлементовФормы

#Область ВыборКаталогов
&НаКлиенте
Процедура КаталогПроектаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	Если ЗначениеЗаполнено(Объект.КаталогПроекта) Тогда
		ДиалогВыбораКаталога.ПолноеИмяФайла = Объект.КаталогПроекта;
	КонецЕсли;
	ПараметрыОбъекта = Новый Структура(""МножественныйВыбор, ИмяРеквизитаОбъекта, ИмяРеквизитаФормы"", ДиалогВыбораКаталога.МножественныйВыбор, ""КаталогПроекта"", """");
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогВыборЗавершение"""", ЭтаФорма, ПараметрыОбъекта)""));
	Иначе
		Если ДиалогВыбораКаталога.Выбрать() Тогда
			МассивВыбранныхФайлов = Новый Массив;
			МассивВыбранныхФайлов.Добавить(ДиалогВыбораКаталога.Каталог);
			КаталогВыборЗавершение(МассивВыбранныхФайлов, ПараметрыОбъекта);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогВыборЗавершение(ВыбранныеФайлы, ПараметрыОбъекта) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	ВыборОбъектаМножественный = Ложь;
	Если ПараметрыОбъекта.Свойство(""МножественныйВыбор"") Тогда
		ВыборОбъектаМножественный = ПараметрыОбъекта[""МножественныйВыбор""];
	КонецЕсли;
	
	ИмяРеквизитаОбъекта = """"; ИмяРеквизитаФормы = """";
	Если ПараметрыОбъекта.Свойство(""ИмяРеквизитаОбъекта"", ИмяРеквизитаОбъекта) И ЗначениеЗаполнено(ИмяРеквизитаОбъекта) Тогда
		Объект[ИмяРеквизитаОбъекта] =  ?(ВыборОбъектаМножественный, ВыбранныеФайлы, ВыбранныеФайлы[0]);
	КонецЕсли;
	
	Если ПараметрыОбъекта.Свойство(""ИмяРеквизитаФормы"", ИмяРеквизитаФормы) И ЗначениеЗаполнено(ИмяРеквизитаФормы) Тогда
		Объект[ИмяРеквизитаФормы] =  ?(ВыборОбъектаМножественный, ВыбранныеФайлы, ВыбранныеФайлы[0]);
	КонецЕсли;
	
	КомандаСохранитьНастройки(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогиБиблиотекЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.КаталогиБиблиотек.ТекущиеДанные;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогиБиблиотекЗначениеНачалоВыбораЗавершение"""", ЭтаФорма, ТекущиеДанные)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогиБиблиотекЗначениеНачалоВыбораЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из Объект.КаталогиБиблиотек Цикл
		Если Строка.Значение = Элементы.КаталогиБиблиотек.ТекущиеДанные.Значение Тогда
			Строка.Значение = ВыбранныеФайлы[0];
			СохранитьНастройкиВХранилище(""КаталогиБиблиотек"", Объект.КаталогиБиблиотек);
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputAllureНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputAllureНачалоВыбораЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputAllureНачалоВыбораЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогOutputAllure = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputСкриншотыНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputСкриншотыЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputСкриншотыЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогOutputСкриншоты = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputjUnitНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputjUnitНачалоВыбораЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputjUnitНачалоВыбораЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогOutputjUnit = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputCucumberJsonНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputCucumberJsonНачалоВыбораЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputCucumberJsonНачалоВыбораЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогOutputCucumberJson = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputВнутреннийФорматНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputВнутреннийФорматНачалоВыбораЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputВнутреннийФорматНачалоВыбораЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.ИмяФайлаЛогВыполненияСценариев = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура ИмяКаталогаЛогОшибокНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""ИмяКаталогаЛогОшибокНачалоВыбораЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура ИмяКаталогаЛогОшибокНачалоВыбораЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.ИмяКаталогаЛогОшибок = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputИнструкцияHTMLНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputИнструкцияHTMLЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputИнструкцияMarkdownНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputИнструкцияMarkdownЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputИнструкцияHTMLЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогOutputИнструкцияHTML = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputИнструкцияMarkdownЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогOutputИнструкцияMarkdown = ВыбранныеФайлы[0];
КонецПроцедуры


&НаКлиенте
Процедура КаталогOutputИнструкцияВидеоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогOutputИнструкцияВидеоЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогOutputИнструкцияВидеоЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогOutputИнструкцияВидео = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьВидеоКаталогМузыкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""ЗаписьВидеоКаталогМузыкиЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьВидеоКаталогМузыкиЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.ЗаписьВидеоКаталогМузыки = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьВидеоПутьКДвижкуTTSНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""ЗаписьВидеоПутьКДвижкуTTSЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьВидеоПутьКДвижкуTTSЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.ЗаписьВидеоПутьКДвижкуTTS = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьВидеоСловарьЗаменНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""ЗаписьВидеоСловарьЗаменЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьВидеоСловарьЗаменЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.ЗаписьВидеоСловарьЗамен = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьВидеоФайлКурсораМышкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""ЗаписьВидеоФайлКурсораМышкиЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьВидеоФайлКурсораМышкиЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.ЗаписьВидеоФайлКурсораМышки = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьВидеоФайлВодянойЗнакНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""ЗаписьВидеоФайлВодянойЗнакЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьВидеоФайлВодянойЗнакЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.ЗаписьВидеоФайлВодянойЗнак = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура VanessaStackCommonsНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""VanessaStackCommonsЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура VanessaStackCommonsЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.VanessaStackCommons = ВыбранныеФайлы[0];
КонецПроцедуры


&НаКлиенте
Процедура КаталогИнструментовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""КаталогИнструментовЗавершение"""", ЭтаФорма)""));
КонецПроцедуры

&НаКлиенте
Процедура КаталогИнструментовЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.КаталогИнструментов = ВыбранныеФайлы[0];
КонецПроцедуры

&НаКлиенте
Процедура ВерсияПлатформыДляГенерацииEPFНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.КаталогиБиблиотек.ТекущиеДанные;
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.ВыборКаталога);
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""ВерсияПлатформыДляГенерацииEPFНачалоВыбораЗавершение"""", ЭтаФорма, ТекущиеДанные)""));
КонецПроцедуры

&НаКлиенте
Процедура ВерсияПлатформыДляГенерацииEPFНачалоВыбораЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Объект.ВерсияПлатформыДляГенерацииEPF = ВыбранныеФайлы[0];
	КомандаСохранитьНастройки(Неопределено)
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьВидеоСловарьЗаменЗначениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = Элементы.ЗаписьВидеоСловарьЗамен.ТекущиеДанные;
	
	ДиалогВыбораКаталога = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораКаталога.МножественныйВыбор = Ложь;
	ДиалогВыбораКаталога.Показать(Вычислить(""Новый ОписаниеОповещения(""""ЗаписьВидеоСловарьЗаменНачалоВыбораЗавершение"""", ЭтаФорма, ТекущиеДанные)""));
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьВидеоСловарьЗаменНачалоВыбораЗавершение(ВыбранныеФайлы, ТекущиеДанные) Экспорт
	Если Ложь
		Или ВыбранныеФайлы = Неопределено
		Или ВыбранныеФайлы.Количество() = 0
		Тогда
		
		Возврат;
	КонецЕсли;
	
	Для Каждого Строка Из Объект.ЗаписьВидеоСловарьЗамен Цикл
		Если Строка.Значение = Элементы.ЗаписьВидеоСловарьЗамен.ТекущиеДанные.Значение Тогда
			Строка.Значение = ВыбранныеФайлы[0];
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ПрочиеЭлементыФормы

&НаКлиенте
Процедура ПроверкаРаботыVanessaBehaviorВРежимеTestClientПриИзменении(Элемент)
	УстановитьВидимостьСлужебныхЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура КаталогИнструментовСлужебныйПриИзменении(Элемент)
	Если Версия836ИлиВыше Тогда
		Обрабочик_ПодключитьБиблиотекуРаботыСВидео = Вычислить(""Новый ОписаниеОповещения(""""Обрабочик_ПодключитьБиблиотекуРаботыСВидео"""", ЭтаФорма)"");
		ЗагрузитьПлагины(Истина, Обрабочик_ПодключитьБиблиотекуРаботыСВидео);
	Иначе
		ЗагрузитьПлагины(Истина);
		ПодключитьБиблиотекуРаботыСВидео();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздаватьИнструкциюВидеоПриИзменении(Элемент)
	НастройкаДоступностиВидимостиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура СоздаватьИнструкциюHTMLПриИзменении(Элемент)
	НастройкаДоступностиВидимостиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура СоздаватьИнструкциюMarkdownПриИзменении(Элемент)
	НастройкаДоступностиВидимостиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ДелатьСкриншотПриВозникновенииОшибкиПриИзменении(Элемент)
	НастройкаДоступностиВидимостиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ДелатьОтчетВФорматеАллюрПриИзменении(Элемент)
	Если Не Объект.ДелатьОтчетВФорматеАллюр Тогда
		
		Объект.ОтображатьОтчетAllureВБраузере = Ложь;
		
	КонецЕсли; 
	НастройкаДоступностиВидимостиЭлементов();
	
КонецПроцедуры

&НаКлиенте
Процедура ДелатьОтчетВФорматеxUnitПриИзменении(Элемент)
	НастройкаДоступностиВидимостиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ДелатьОтчетВФорматеCucumberJsonПриИзменении(Элемент)
	НастройкаДоступностиВидимостиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ДелатьЛогВыполненияСценариевВТекстовыйФайлПриИзменении(Элемент)
	НастройкаДоступностиВидимостиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ДелатьЛогОшибокВТекстовыйФайлПриИзменении(Элемент)
	НастройкаДоступностиВидимостиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписьВидеоДелатьНаложениеTTSПриИзменении(Элемент)
	НастройкаДоступностиВидимостиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура ЗапускатьТестКлиентВРежимеОтладкиПриИзменении(Элемент)
	НастройкаДоступностиВидимостиЭлементов();
КонецПроцедуры

&НаКлиенте
Процедура РежимСамотестированияПриИзменении(Элемент)
	ОбновитьЗаголовокФормы();
КонецПроцедуры

&НаКлиенте
Процедура КаталогиБиблиотекПослеУдаления(Элемент)
	СохранитьНастройкиВХранилище(""КаталогиБиблиотек"", Объект.КаталогиБиблиотек);
КонецПроцедуры

&НаКлиенте
Процедура ДанныеКлиентовТестированияПередНачаломИзменения(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.ДанныеКлиентовТестирования.ТекущиеДанные;
	
	Если ТекущиеДанные.Имя = ""Этот клиент""
		И Элементы.ДанныеКлиентовТестирования.ТекущийЭлемент.Имя <> ""ДанныеКлиентовТестированияДопПараметры""
		И Элементы.ДанныеКлиентовТестирования.ТекущийЭлемент.Имя <> ""ДанныеКлиентовТестированияТипКлиента""
		И Элементы.ДанныеКлиентовТестирования.ТекущийЭлемент.Имя <> ""ДанныеКлиентовТестированияПорт""
		И Элементы.ДанныеКлиентовТестирования.ТекущийЭлемент.Имя <> ""ДанныеКлиентовТестированияПутьКИнфобазе""
		Тогда
		Сообщить(""Нельзя изменять текущее поле у зарезервированного подключения <Этот клиент>."");
		Отказ = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеКлиентовТестированияПередОкончаниемРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования, Отказ)
	
	// проверка на дубли в колонке ""Имя""
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить(""Имя"", Элемент.ТекущиеДанные.Имя);
	
	НайденныеСтроки = ДанныеКлиентовТестирования.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() > 1 Тогда
		ТекстСообщения = ""В таблице подключений уже есть подключение с именем <%1>"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Элемент.ТекущиеДанные.Имя);
		Сообщить(ТекстСообщения);
		Отказ = Истина;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Элемент.ТекущиеДанные.ИмяКомпьютера) Тогда
		Элемент.ТекущиеДанные.ИмяКомпьютера = ""localhost"";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеКлиентовТестированияПослеУдаления(Элемент)
	
	Если ДанныеКлиентовТестирования.Количество() = 0 Тогда
		Сообщить(""Должна оставаться строка подключения текущего клиента"");
		ЗаполнитьДанныеТекущейИнфобазы();
	КонецЕсли;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить(""Имя"", ""Этот клиент"");
	
	НайденныеСтроки = ДанныеКлиентовТестирования.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() = 0 Тогда
		СделатьСообщение(""Данные по основному подключению Testclient перезаполнены."");
		ЗаполнитьДанныеТекущейИнфобазы();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДанныеКлиентовТестированияТипКлиентаПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ДанныеКлиентовТестирования.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ТипКлиента = ""Web"" Тогда
		Если НРег(ТекущиеДанные.ИмяКомпьютера) = ""localhost"" Тогда
			ТекущиеДанные.ПортЗапускаТестКлиента = 1538;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДанныеКлиентовТестированияИмяКомпьютераПриИзменении(Элемент)
	ТекущиеДанные = Элементы.ДанныеКлиентовТестирования.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ТипКлиента = ""Web"" Тогда
		Если НРег(ТекущиеДанные.ИмяКомпьютера) <> ""localhost"" Тогда
			Если ТекущиеДанные.ПортЗапускаТестКлиента = 1538 Тогда
				ТекущиеДанные.ПортЗапускаТестКлиента = 1541;
			КонецЕсли;
		Иначе
			Если ТекущиеДанные.ПортЗапускаТестКлиента = 1541 Тогда
				ТекущиеДанные.ПортЗапускаТестКлиента = 1538;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЯзыкГенератораGherkinПриИзменении(Элемент)
	ОбновитьВидимостьЭлементовСвязанныхСПереводомТекста();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКодНаКлиенте(Команда)
	Перем Ванесса;
	Ванесса = ЭтаФорма;
	Выполнить(Объект.СгенерированныйСценарийКод);
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКодНаСервере(Команда)
	ВыполнитьКодНаСервереНаСервере();
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область ЭкспортныеПроцедурыИФункции

#Область ВыполнениеШагов

&НаКлиенте
Процедура Шаг(Стр, ВыполнятьЧерезВременнуюФичу = Ложь) Экспорт
	Перем РезультатПрохожденияШага, Поз, ДвДанныеvbFeatureReader, ТекШаг;
	Поз = Найти(Стр, Символы.ПС);
	Если (Поз > 0) или ВыполнятьЧерезВременнуюФичу Тогда //значит это многострочный текст - для него будем работать через временную фичу
		ВыполнитьМетодШагЧерезВременныйФичаФайл(Стр);
	Иначе
		ДвДанныеvbFeatureReader = Новый ДвоичныеДанные(ПолучитьПутьКFeatureReader());
		ТекШаг                  = ПолучитьДанныеДляВыполненияОдногоШага(Стр, ДвДанныеvbFeatureReader, Объект.КаталогИнструментов);
		
		Если НЕ ТекШаг.ШагНайден Тогда
			ВыполнитьМетодШагЧерезВременныйФичаФайл(Стр);
			Возврат;
		КонецЕсли;
		
		РезультатПрохожденияШага = ОписаниеВложенногоШага(Стр);
		ОбработкаТеста                     = ПолучитьКонтекстТестаПоАдресСнипета(ТекШаг.ИмяФайла);
		ОбработкаТеста.Контекст            = ОбъектКонтекст;
		ОбработкаТеста.КонтекстСохраняемый = ОбъектКонтекстСохраняемый;
		
		СписокАргументов = ТекШаг.ЗначенияПараметров;
		МассивПараметров = ПолучитьМассивПараметровИзСписокАргументов(СписокАргументов);
		
		ИмяПроцедуры = ТекШаг.ИмяПроцедуры;
		ВызватьМетод(ОбработкаТеста, ИмяПроцедуры, МассивПараметров);
		
		РезультатПрохожденияШага.Вставить(""Статус"", ""Success"");
		РезультатПрохожденияШага.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
		//это одна строка. для неё будем вызывать преобразование строки Gherkin
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСостояниеVanessaBehavior() Экспорт
	Рез        = Новый Структура;
	
	ТекущаяФича = Новый Структура;
	ТекущаяФича.Вставить(""Имя"", Неопределено);
	ТекущаяФича.Вставить(""ПолныйПуть"", Неопределено);
	
	
	ТекущийСценарий = Новый Структура;
	ТекущийСценарий.Вставить(""Имя"", Неопределено);
	ТекущийСценарий.Вставить(""ИдСценария"", Неопределено);
	ИДСтрокиСценария                   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
	РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
	ТекущийСценарий.Вставить(""ОписаниеСценария"", МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве]);
	ТекущийСценарий.Вставить(""РезультатПрохожденияТестовСценария"", РезультатПрохожденияТестовСценария);
	
	ТекущийШаг = Новый Структура;
	ТекущийШаг.Вставить(""Имя"", Неопределено);
	ТекущийШаг.Вставить(""ЗначенияПараметров"", Неопределено);
	ТекущийШаг.Вставить(""ИдСтроки"", Неопределено);
	
	Рез.Вставить(""ТекущаяФича"", ТекущаяФича);
	Рез.Вставить(""ТекущийСценарий"", ТекущийСценарий);
	Рез.Вставить(""ТекущийШаг"", ТекущийШаг);
	
	Если ВсеСценарииВыполнены() Тогда
		Возврат Рез;
	КонецЕсли;
	
	ТекущийСценарий.Вставить(""Имя"", МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Имя);
	ТекущийСценарий.Вставить(""ИдСценария"", ТекИД_СценарияВМассиве);
	
	ТекущаяФича.Вставить(""Имя"", МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ИмяФичи);
	ТекущаяФича.Вставить(""ПолныйПуть"", МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ПолныйПутьКФиче);
	
	Шаги   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
	
	Если (Шаги.Количество() - 1) < ТекИД_ШагаВМассиве Тогда
		Возврат Рез;
	КонецЕсли;
	
	Если ТекИД_ШагаВМассиве < 0 Тогда
		Возврат Рез;
	КонецЕсли;
	
	ТекШаг = Шаги[ТекИД_ШагаВМассиве];
	ТекущийШаг.Вставить(""Имя"", ТекШаг.Имя);
	ТекущийШаг.Вставить(""ИдСтроки"", ТекШаг.СтрокаШага);
	ТекущийШаг.Вставить(""ЗначенияПараметров"", ТекШаг.ЗначенияПараметров.Скопировать());
	
	Возврат Рез;
	
КонецФункции

&НаКлиенте
Процедура ЗапретитьВыполнениеШагов() Экспорт
	Объект.ОстановитьВыполнениеШагов = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПродолжитьВыполнениеШагов(ШагУпал = Ложь, ОписаниеОшибки = """") Экспорт
	Объект.ОстановитьВыполнениеШагов = Ложь;
	
	Если ШагУпал Тогда
		УстановитьТекущемуШагуФлагЧтоОнДолженСчитатьсяУпавшим(ОписаниеОшибки);
	КонецЕсли;
	
	Если ВсёЕщёИдётВыполнениеШагов  > 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если МассивСценариевДляВыполнения <> Неопределено Тогда
		Если ВсеСценарииВыполнены() Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ИдСледующегоШага = Неопределено;
	Если ТекИД_ШагаВМассиве >= 0 Тогда
		Если (МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги.Количество()-1) >= ТекИД_ШагаВМассиве Тогда
			ТекШаг = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги[ТекИД_ШагаВМассиве];
			ИдСледующегоШага = ПолучитьИдСледующегоШага(ТекШаг);
		КонецЕсли;
	КонецЕсли;
	
	ПерейтиКВыполнениюСледующегоШага(Истина, Истина,ИдСледующегоШага);
КонецПроцедуры

&НаКлиенте
Процедура УстановитьРезультатУсловия(Результат) Экспорт
	Если ТипЗнч(Результат) <> Тип(""Булево"") Тогда
		ТекстСообщения = ""В процедуру <УстановитьРезультатУсловия> передан неверный тип параметра <%1>. Ожидаемый тип: Булево."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Результат);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Объект.РезультатУсловия = Результат;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьСценарии(ТекСценарий = Неопределено, ДопПараметры = Неопределено) Экспорт
	Если Объект.ИдетВыполнениеСценариев Тогда
		ПрекратитьВыполнениеВсехСценариев = Истина;
		Возврат;
	КонецЕсли;
	
	Оповестить(""ЗапускСценариевVB"");
	
	ОчиститьСообщения();
	
	ФлагСценарииВыполнены             = Ложь;
	ВозниклаОшибкаПодключенияTestClient = Ложь;
	ВозниклаОшибкаВШагеКонтекста        = Ложь;
	
	Объект.ИдетВыполнениеСценариев    = Истина;
	ОбновитьСтатусКнопкиВыполнитьСценарии();
	
	БылаОшибкаСкриптовСборкиВидео     = Ложь;
	Объект.ОстановитьВыполнениеШагов  = Ложь;
	Объект.ИдетЗаписьВидео            = Ложь;
	
	СтатусЗапускаСценариев            = Истина;
	ПрекратитьВыполнениеВсехСценариев = Ложь;
	ПрекратитьВыполнениеДанногоСценария = Ложь;
	ТекущийИсполняемыйФичаФайл        = Неопределено;
	
	СчетчикШаговБезТаймера = 0;
	
	ЭтоПример   = Ложь;
	ЭтоКонтекст = Ложь;
	ИдСценарияПоСтрокеШага = ОпределитьИдСценарияПоСтрокеШагаКлиент(Элементы.ДеревоТестов.ТекущиеДанные,
		ЭтоПример, ЭтоКонтекст);
	
	ЭтоПример   = Ложь;
	ЭтоКонтекст = Ложь;
	ИдСценарияПоСтрокеШага = ОпределитьИдСценарияПоСтрокеШагаКлиент(Элементы.ДеревоТестов.ТекущиеДанные,
		ЭтоПример, ЭтоКонтекст);
	
	ТекущаяСтрокаДереваИдСтроки = Неопределено;
	Если Элементы.ДеревоТестов.ТекущиеДанные <> Неопределено Тогда
		НужнаяСтрока = Неопределено;
		ТекущаяСтрокаДереваИдСтроки = ОпределитьИдИсполняемойСтрокиДерева(Элементы.ДеревоТестов.ТекущиеДанные,НужнаяСтрока);
		Если Объект.РежимВыполненияОдногоШага Тогда
			Если ТекущаяСтрокаДереваИдСтроки <> Элементы.ДеревоТестов.ТекущиеДанные.ИдСтроки Тогда
				Элементы.ДеревоТестов.ТекущаяСтрока = НужнаяСтрока.ПолучитьИдентификатор();
			КонецЕсли;
			СоздатьСтруктуруПоискаДляСтрокиДерева(Элементы.ДеревоТестов.ТекущиеДанные);
		КонецЕсли;
	КонецЕсли;
	
	МассивИДСтрокиДерева                     = Новый Массив;
	МассивРезультатПрохожденияТестовСценария = Новый Массив;
	
	МассивСценариевДляВыполнения             = Новый Массив;
	МассивСтрокДереваДанныеФормы             = Новый Массив;
	
	ЕстьСохранённыйКонтекст = Ложь;
	Если (ТекСценарий = Неопределено) и (Объект.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов) Тогда
		ТекСценарий = Новый Массив;
		ТекСценарий.Добавить(ИдСценарияПоСтрокеШага);
		
		СохраненнаяСтруктура   = ПолучитьСостоянияКонтекстовПоИдСтроки(СтрокаШагаСКоторогоНадоВыполнятьСценарий.ИдСтроки);
		Если СохраненнаяСтруктура <> Неопределено Тогда //значит есть сохранённый контекст
			ЕстьСохранённыйКонтекст = Истина;
		КонецЕсли;
		
	ИначеЕсли (ТекСценарий = Неопределено) и (Объект.РежимВыполненияДанногоСценарияСТекущегоШага) Тогда
		ТекСценарий = Новый Массив;
		ТекСценарий.Добавить(ИдСценарияПоСтрокеШага);
	ИначеЕсли (ТекСценарий = Неопределено) и (Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением) Тогда
		ТекСценарий = Новый Массив;
		ТекСценарий.Добавить(ИдСценарияПоСтрокеШага);
	КонецЕсли;
	
	Если ДопПараметры = Неопределено Тогда
		ДопПараметры = Новый Структура;
	КонецЕсли;
	Если Не ДопПараметры.Свойство(""ЭтоПример"") Тогда
		ДопПараметры.Вставить(""ЭтоПример"", ЭтоПример);
	КонецЕсли;
	
	ДопПараметры.Вставить(""ЭтоLinux"", ЭтоLinux);
	
	ДопПараметры.Вставить(""РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов"", Объект.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов и ЕстьСохранённыйКонтекст);
	ДопПараметры.Вставить(""РежимВыполненияДанногоСценарияСТекущегоШага"", Объект.РежимВыполненияДанногоСценарияСТекущегоШага);
	ДопПараметры.Вставить(""РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением"", Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением);
	ДопПараметры.Вставить(""РежимВыполненияОдногоШага"", Объект.РежимВыполненияОдногоШага);
	ДопПараметры.Вставить(""ДобавитьСценарииПослеНайденного"", Ложь);
	ДопПараметры.Вставить(""ИдСтрокиШагаСКоторогоВыполнятьСценарийСДанногоШага"", Неопределено);
	Если Объект.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов Тогда
		ДопПараметры.Вставить(""ИдСтрокиШагаСКоторогоВыполнятьСценарийССохранениемКонтекстов"", СтрокаШагаСКоторогоНадоВыполнятьСценарий.ИдСтроки);
	ИначеЕсли Объект.РежимВыполненияДанногоСценарияСТекущегоШага Тогда
		ДопПараметры.Вставить(""ИдСтрокиШагаСКоторогоВыполнятьСценарийСДанногоШага"", ТекущаяСтрокаДереваИдСтроки);
		ДопПараметры.Вставить(""НашелСценарий"", Ложь);
	ИначеЕсли Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением Тогда
		ДопПараметры.Вставить(""ИдСтрокиШагаСКоторогоВыполнятьСценарийСДанногоШага"", ТекущаяСтрокаДереваИдСтроки);
		ДопПараметры.Вставить(""ДобавитьСценарииПослеНайденного"", Истина);
		ДопПараметры.Вставить(""НашелСценарий"", Ложь);
	ИначеЕсли Объект.РежимВыполненияОдногоШага Тогда
		ДопПараметры.Вставить(""ИдСтрокиШагаСКоторогоВыполнятьСценарийСДанногоШага"", ТекущаяСтрокаДереваИдСтроки);
	КонецЕсли;
	
	Если Объект.РежимВыполненияОдногоШага Тогда
		ЗаполнитьМассивСценариевДляВыполненияКлиент(МассивСценариевДляВыполнения);
	Иначе
		ЗаполнитьМассивСценариевДляВыполненияСервер(МассивСценариевДляВыполнения, МассивСтрокДереваДанныеФормы, ТекСценарий, 
			МассивИменКонтекстовОбработок, ДопПараметры);
	КонецЕсли;
	
	ЗапомнитьСтрокиДереваДанныеФормы();
	//ниже не должно быть серверных вызовов, которые бы изменили ДеревоТестов, иначе кеш данных формы надо будет строить заново
	
	ТекущаяФичаИнструкцииHTML     = """";
	ТекущаяФичаИнструкцииMarkdown = """";
	Если НЕ ПроверитьНаличиеИнструментаДляСозданияСкриншотов() Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
		Если Не ЗначениеЗаполнено(Объект.КомандаСделатьСкриншот) Тогда
			СделатьСообщение(""Не указана команада для выполнения скриншотов. Например <""""C:\Program Files (x86)\IrfanView\i_view32.exe"""" /capture=1 /convert=>"");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.СоздаватьИнструкциюВидео Тогда
		Если Не ЗначениеЗаполнено(Объект.КаталогOutputИнструкцияВидео) Тогда
			ТекстСообщения = ""Не указан каталог для формирования видео инструкции."";
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		ОчиститьСодержимоеКаталога(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияВидео), ""*.mp4"");
		ОчиститьСодержимоеКаталога(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.ЗаписьВидеоКаталогДляВременныхФайлов));
		ВыполнитьПодготовкуКЗаписиВидео();
	КонецЕсли;
	
	Если Объект.СоздаватьИнструкциюHTML Тогда
		ОчиститьСодержимоеКаталога(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияHTML));
	КонецЕсли;
	
	Если Объект.СоздаватьИнструкциюMarkdown Тогда
		ОчиститьСодержимоеКаталога(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияMarkdown));
	КонецЕсли;
	
	Если Объект.ДелатьОтчетВФорматеАллюр Тогда
		СоздатьКаталогЕслиЕгоНет(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputAllure));
	КонецЕсли;
	
	Если Объект.ДелатьОтчетВФорматеjUnit Тогда
		СоздатьКаталогЕслиЕгоНет(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputjUnit));
	КонецЕсли;
	
	Если Объект.ДелатьОтчетВФорматеCucumberJson Тогда
		СоздатьКаталогЕслиЕгоНет(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputCucumberJson));
	КонецЕсли;
	
	ПодготовитьВыводЛогаВФайл();
	
	Если Объект.ДелатьЛогОшибокВТекстовыйФайл Тогда
		Если ФайлСуществуетКомандаСистемы(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.ИмяКаталогаЛогОшибок)) Тогда
			ОчиститьСодержимоеКаталога(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.ИмяКаталогаЛогОшибок));
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.СоздаватьИнструкциюВидео Тогда
		ПрочитатьИзФичиПараметрыСборкиВидео();
	КонецЕсли;
	
	Если ВыполнятьСценарииАсинхронно Тогда
		ТекИД_СценарияВМассиве = -1;
		ПерейтиКВыполнениюСледующегоСценария();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДанныйСценарийСТекущегоШага() Экспорт
	ТекущиеДанные = Элементы.ДеревоТестов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтуСтрокуМожноИсполнитьИлиВНейЕстьПодчиненныеИсполняемыеСтроки(ТекущиеДанные) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.РежимВыполненияДанногоСценарияСТекущегоШага              = Истина;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением = Ложь;
	Объект.РежимВыполненияОдногоШага                                = Ложь;
	ВыполнитьСценарии();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьДанныйСценарийСТекущегоШагаСПродолжением() Экспорт
	ТекущиеДанные = Элементы.ДеревоТестов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	Если НЕ ЭтуСтрокуМожноИсполнитьИлиВНейЕстьПодчиненныеИсполняемыеСтроки(ТекущиеДанные) Тогда
		Возврат;
	КонецЕсли;
	
	Объект.РежимВыполненияДанногоСценарияСТекущегоШага              = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением = Истина;
	Объект.РежимВыполненияОдногоШага                                = Ложь;
	ВыполнитьСценарии();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОдинШаг() Экспорт
	ТекущиеДанные = Элементы.ДеревоТестов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЭтуСтрокуМожноИсполнитьИлиВНейЕстьПодчиненныеИсполняемыеСтроки(ТекущиеДанные) Тогда
		Возврат;
	КонецЕсли;
	
	
	Объект.РежимВыполненияДанногоСценарияСТекущегоШага              = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением = Ложь;
	Объект.РежимВыполненияОдногоШага                                = Истина;
	
	ВыполнитьСценарии();
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьВыделенныйСценарий() Экспорт
	Объект.РежимВыполненияДанногоСценарияСТекущегоШага              = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением = Ложь;
	Объект.РежимВыполненияОдногоШага                                = Ложь;
	
	СтрокаСценария = Элементы.ДеревоТестов.ТекущиеДанные;
	Если СтрокаСценария = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоПример = Ложь;
	Если СтрокаСценария.Тип <> ""Сценарий"" Тогда
		ЭтоШагКонтекста = Ложь;
		СтрокаСценария = НайтиСтрокуСценарияЧерезРодителя(СтрокаСценария, ЭтоПример,ЭтоШагКонтекста);
		Если СтрокаСценария = Неопределено Тогда
			Сообщить(""Не найден строка сценария."");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить(""ЭтоПример"", ЭтоПример);
	
	Массив = Новый Массив;
	Массив.Добавить(СтрокаСценария.ИДСтроки);
	ВыполнитьСценарии(Массив, ДопПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПерезагрузитьИВыполнитьДанныйСценарий() Экспорт
	Объект.РежимВыполненияДанногоСценарияСТекущегоШага              = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением = Ложь;
	Объект.РежимВыполненияОдногоШага                                = Ложь;
	
	СтрокаСценария = Элементы.ДеревоТестов.ТекущиеДанные;
	Если СтрокаСценария = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭтоПример = Ложь;
	Если СтрокаСценария.Тип <> ""Сценарий"" Тогда
		ЭтоШагКонтекста = Ложь;
		СтрокаСценария = НайтиСтрокуСценарияЧерезРодителя(СтрокаСценария, ЭтоПример,ЭтоШагКонтекста);
		Если СтрокаСценария = Неопределено Тогда
			Сообщить(""Не найден строка сценария."");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ИмяСценарияКоторыйНадоВыполнитьПослеПереазгрузки             = СтрокаСценария.Имя;
	СтрокаСценарияКоторыйНадоВыполнитьПослеПереазгрузкиЭтоПример = ЭтоПример;
	Объект.НадоВыполнитьСценарииПослеЗагрузкиФичОдинРаз = Истина;
	
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура ПроцУстановитьПометкуВыполнятьСценарийСЭтогоШага() Экспорт
	ТекущиеДанные = Элементы.ДеревоТестов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Тип <> ""Шаг"" Тогда
		Сообщить(""Это возможно только для шага."");
		Возврат;
	КонецЕсли;
	
	Если СтрокаШагаСКоторогоНадоВыполнятьСценарий <> Неопределено Тогда
		Если СтрокаШагаСКоторогоНадоВыполнятьСценарий.Тип = ""Шаг"" Тогда
			ПромСтрока = Неопределено;
			НайтиСтрокуДереваПоИдСтроки(СтрокаШагаСКоторогоНадоВыполнятьСценарий.ИдСтроки, Объект.ДеревоТестов.ПолучитьЭлементы(), ПромСтрока);
			СтрокаШагаСКоторогоНадоВыполнятьСценарий = ПромСтрока;
			
			СтрокаШагаСКоторогоНадоВыполнятьСценарий.ВыполнятьСценарийСЭтогоШага = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	СтрокаШагаСКоторогоНадоВыполнятьСценарий  = ТекущиеДанные;
	ТекущиеДанные.ВыполнятьСценарийСЭтогоШага = Истина;
	
	АктивироватьСоседнююСтрокуДерева(СтрокаШагаСКоторогоНадоВыполнятьСценарий);
	
	Объект.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов = Истина;
	Если НЕ Объект.СохранятьКонтекстыПередВыполнениемШагов Тогда
		Объект.СохранятьКонтекстыПередВыполнениемШагов = Истина;
		СделатьСообщение(""Флаг <Сохранять контексты перед выполнением шагов> установлен в <Истина>."");
	КонецЕсли;
	
	
	
	Элементы.ДеревоТестовКонтекстноеМенюВыполнятьСценарииСначала.Видимость   = Истина;
	
	Сообщить(""Пометка для шаг установлена."");
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагОстановкиВыполненияШаговВсехСценариев() Экспорт
	ПрекратитьВыполнениеВсехСценариев = Истина;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагОстановкиВыполненияШаговОдногоСценария() Экспорт
	ПрекратитьВыполнениеДанногоСценария = Истина;
КонецПроцедуры

#КонецОбласти //ВыполнениеШагов

#Область СообщенияПользователю


//Делает сообщение пользователю
&НаКлиенте
Процедура СделатьСообщение(Знач Сообщение, ТипСообщения = ""Информация"") Экспорт
	ТекстСообщения = ПолучитьТекстСообщения(Сообщение);
	НовыйСтатусСообщения = ?(ТипСообщения = ""Информация"", СтатусСообщения.Обычное, СтатусСообщения.ОченьВажное);
	
	Сообщить(ТекстСообщения, НовыйСтатусСообщения);
	
	Если ТипСообщения <> ""Информация"" Тогда
		ЗаписатьСтрокуВТекстовыйЛог(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

//Показать предупреждение пользователю
&НаКлиенте
Процедура ВывестиПредупреждение(Знач Событие, Знач Сообщение) Экспорт
	ТекстСообщения = ПолучитьТекстСообщения(Сообщение);
	
	Сообщить(ТекстСообщения, СтатусСообщения.ОченьВажное);
	ЗаписатьЛогВТекстПредупреждение(Событие, ТекстСообщения);
КонецПроцедуры

//Делает сообщение пользователю, если установлен флаг ""Включить отладочные сообщения""
&НаКлиенте
Процедура Отладка(Знач Сообщение) Экспорт
	Если Объект.DebugLog Тогда
		СделатьСообщение(Сообщение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТекстСообщения(Знач Сообщение)
	Если Лев(Сообщение,1) = ""$"" и Прав(Сообщение,1) = ""$"" Тогда
		РасшифровкаСлужебногоСообщения = ТекстСообщенийПользователю[Сообщение];
		Если ЗначениеЗаполнено(РасшифровкаСлужебногоСообщения) Тогда
			Сообщение = РасшифровкаСлужебногоСообщения;
		КонецЕсли;
	КонецЕсли;
	
	ТекстСообщения = Строка(ТекущаяДата()) + "" "" + Сообщение;
	Возврат ТекстСообщения;
КонецФункции

#КонецОбласти //СообщенияПользователю

#Область TestClient

//Возвращает переменную типа ТестируемоеПриложение
&НаКлиенте
Функция ПолучитьТестовоеПриложение() Экспорт
	Если Не ОбъектКонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
		ВызватьИсключение ПолучитьТекстСообщенияПользователю(""$TestClient НЕ подключен.$"");
	КонецЕсли;
	
	Если ОбъектКонтекстСохраняемый.ТестовоеПриложение = Неопределено Тогда
		ВызватьИсключение ПолучитьТекстСообщенияПользователю(""$TestClient НЕ подключен.$"");
	КонецЕсли;
	
	Возврат ОбъектКонтекстСохраняемый.ТестовоеПриложение;
КонецФункции

//фиксирует форму TestClient, с которой будет происходить работа
//в ней будет происходить поиск элементов формы
&НаКлиенте
Процедура ЗафиксироватьФормуTestClient(ФормаПриложения) Экспорт
	ЗафиксированнаяФормаTestClient = ФормаПриложения;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСменуАктивногоОкна(ДопПараметры = Неопределено) Экспорт
	ОчиститьКешАктивнойТаблицыTestClient();
	
	СбрасыватьЗафиксированнуюФорму = Истина;
	Если ТипЗнч(ДопПараметры) = Тип(""Структура"") Тогда
		Если ДопПараметры.Свойство(""СбрасыватьЗафиксированнуюФорму"") Тогда
			СбрасыватьЗафиксированнуюФорму = ДопПараметры.СбрасыватьЗафиксированнуюФорму;
		КонецЕсли;
	КонецЕсли;
	
	Если СбрасыватьЗафиксированнуюФорму Тогда
		//убираем фиксацию формы, т.к. окно сменилось
		ЗафиксироватьФормуTestClient(Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКешАктивнойТаблицыTestClient() Экспорт
	ОбъектКонтекст.Вставить(""АктивнаяТаблицаTestClient"",Новый Структура(""ИмяТаблицы,Значение"",Неопределено,Неопределено));
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВКешТаблицуTestClient(ИмяТаблицы,Таблица) Экспорт
	Если ТипЗнч(Таблица) = Тип(""ТестируемаяТаблицаФормы"") Тогда
		ОбъектКонтекст.Вставить(""АктивнаяТаблицаTestClient"",Новый Структура(""ИмяТаблицы,Значение"",ИмяТаблицы,Таблица));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКорректноеЗначениеДляРаботыСПолем(Знач Значение) Экспорт
	Если Лев(Значение,2) = ""$$"" и  Прав(Значение,2) = ""$$"" Тогда
		ИмяПеременной = Сред(Значение,3,СтрДлина(Значение)-4);
		
		Попытка
			ЕстьТакаяПеременная = ОбъектКонтекстСохраняемый.Свойство(ИмяПеременной);
		Исключение
			ЕстьТакаяПеременная = Ложь;
		КонецПопытки;
		
		Если ЕстьТакаяПеременная Тогда
			Возврат ОбъектКонтекстСохраняемый[ИмяПеременной];
		КонецЕсли;
		
		СохраненноеЗначение = ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого(ИмяПеременной);
		
		Если СохраненноеЗначение = Неопределено Тогда
			ТекстСообщения = ""Не смог найти сохранненное значение по переменой <%1>"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяПеременной);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		Возврат СохраненноеЗначение;
	Иначе
		Возврат Значение;
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция СтрокиОжидаемойТаблицыСодержатсяВТаблицеTestclient(ОжидаемаяТаблица,ТаблицаTestClient,СтрокаОшибки) Экспорт
	Возврат СтрокиОжидаемойТаблицыСодержатсяВТаблицеTestclientСервер(ОжидаемаяТаблица,ТаблицаTestClient,СтрокаОшибки);
КонецФункции

&НаКлиенте
Функция НайтиВсеОкнаTestClient() Экспорт
	Возврат ОбъектКонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип(""ТестируемоеОкноКлиентскогоПриложения""));
КонецФункции

&НаКлиенте
Функция НайтиОкноTestClientПоЗаголовку(ЗаголовокОкна) Экспорт
	Возврат ОбъектКонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип(""ТестируемоеОкноКлиентскогоПриложения""),ЗаголовокОкна);
КонецФункции

&НаКлиенте
Функция НайтиОкноVB() Экспорт
	МассивОкон = НайтиВсеОкнаTestClient();
	ОкноVB = Неопределено;
	
	Для Каждого ОкноИзМассива Из МассивОкон Цикл
		Если Найти(ОкноИзМассива.Заголовок,""autotest"") > 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если Найти(ОкноИзМассива.Заголовок,""Vanessa Behavior"") > 0 Тогда
			ОкноVB = ОкноИзМассива;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОкноVB;
КонецФункции

&НаКлиенте
Функция НайтиТаблицыФормыTestClient(ТекущаяФорма) Экспорт
	Возврат  ТекущаяФорма.НайтиОбъекты(Тип(""ТестируемаяТаблицаФормы""));
КонецФункции

&НаКлиенте
Функция НайтиРеквизитОткрытойФормыПоЗаголовку(ИмяРеквизита, ИскатьПоИмени = Ложь,
	ВызыватьИсключение = Истина, ТипПоля = Неопределено,ДопПараметры = Неопределено) Экспорт
	
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкнаTestClient();
	
	ПолеРеквизит = Неопределено;
	НайтиРеквизитВМассивеФорм(МассивФорм,ПолеРеквизит,ИмяРеквизита,ИскатьПоИмени,ТипПоля,ДопПараметры);
	
	Если НЕ Версия8311ИлиВыше И ПолеРеквизит = Неопределено Тогда
		//проверим, что возможно есть окно, которое некорректно определяется как активное окно
		МассивФорм = НайтиФормыОкнаИзКонтекста();
		Если МассивФорм <> Неопределено Тогда
			НайтиРеквизитВМассивеФорм(МассивФорм,ПолеРеквизит,ИмяРеквизита,ИскатьПоИмени,ТипПоля,ДопПараметры);
		КонецЕсли;
	КонецЕсли;
	
	Если ПолеРеквизит <> Неопределено Тогда
		Возврат ПолеРеквизит;
	КонецЕсли;
	
	Если ВызыватьИсключение Тогда
		Если НЕ Нашли Тогда
			Если ИскатьПоИмени Тогда
				ТекстСообщения = ""Элемента формы с именем <%1> не найдено."";
			Иначе
				ТекстСообщения = ""Элемента формы с заголовком <%1> не найдено."";
			КонецЕсли;
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяРеквизита);
			
			Сообщить(ТекстСообщения);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Функция ПолучитьПредставлениеДанныхЭлементаФормы(ПолеРеквизит) Экспорт
	Тип = ТипЗнч(ПолеРеквизит);
	
	Если Тип = Тип(""ТестируемоеПолеФормы"") Тогда
		Если ПолеРеквизит.Вид = ВидПоляФормы.ПолеВвода Тогда
			Попытка
				Возврат ПолеРеквизит.ПолучитьТекстРедактирования();
			Исключение
				//если поле невидимое - тогда получим представление данных
				Возврат ПолеРеквизит.ПолучитьПредставлениеДанных();
			КонецПопытки;
		КонецЕсли;
		Попытка
			ПредставлениеДанных = ПолеРеквизит.ПолучитьПредставлениеДанных();
		Исключение
			ПредставлениеДанных = Неопределено;
			СделатьСообщение(ОписаниеОшибки());
		КонецПопытки;
		
		Возврат ПредставлениеДанных;
	ИначеЕсли Тип = Тип(""ТестируемаяДекорацияФормы"") Тогда
		Стр = ПолеРеквизит.ПолучитьПредставлениеДанных();
		Если Не ЗначениеЗаполнено(Стр) Тогда
			Стр = ПолеРеквизит.ТекстЗаголовка;
		КонецЕсли;
		Возврат Стр;
	ИначеЕсли Тип = Тип(""ТестируемаяТаблицаФормы"") Тогда
		ТабДок = ПолучитьЗначениеТестируемаяТаблицаФормы(ПолеРеквизит);
		Возврат ТабДок;
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция ПолучитьЗначениеРеквизитаОткрытойФормыПоЗаголовку(ИмяРеквизита, ИскатьПоИмени = Ложь,ДопПараметры = Неопределено) Экспорт
	ПолеРеквизит = ПолучитьЭлементФормыИзКешЕслиЭтоВозможно(ИмяРеквизита);
	Если ПолеРеквизит <> Неопределено Тогда
		Возврат ПолучитьПредставлениеДанныхЭлементаФормы(ПолеРеквизит);
	КонецЕсли;
	
	ВызыватьИсключение = Истина;
	Если ТипЗнч(ДопПараметры) = Тип(""Структура"") Тогда
		Если ДопПараметры.Свойство(""ВызыватьИсключение"") Тогда
			ВызыватьИсключение = ДопПараметры.ВызыватьИсключение;
		КонецЕсли;
	КонецЕсли;
	
	Нашли = Ложь;
	МассивФорм = НайтиФормыТекущегоОкнаTestClient();
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		
		Попытка
			Если ИскатьПоИмени Тогда
				МассивЭлементов        = ТекущаяФорма.НайтиОбъекты(, , ИмяРеквизита);
			Иначе
				МассивЭлементов        = ТекущаяФорма.НайтиОбъекты(, ИмяРеквизита);
			КонецЕсли;
			
		Исключение
			//это возможно, если форма закрылась по ходу выполнения сценария
			Продолжить;
		КонецПопытки;
		
		Если МассивЭлементов = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если МассивЭлементов.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если МассивЭлементов.Количество() > 1  Тогда
			ВывестиСообщениеОТомЧтоПоЗаголовкуНайденоБольшеОдногоЭлемента(МассивЭлементов, ИмяРеквизита);
			ТекстСообщения = ""Найдено более одного поля формы с заголовком <%1>. Рекомендуется искать элемент по имени."";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяРеквизита);
			Сообщить(ТекстСообщения);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		ПолеРеквизит = МассивЭлементов[0];
		СохранитьВКешТаблицуTestClient(ИмяРеквизита,ПолеРеквизит);
		
		Возврат ПолучитьПредставлениеДанныхЭлементаФормы(ПолеРеквизит);
	КонецЦикла;
	
	
	Если Не ВызыватьИсключение Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если НЕ Нашли Тогда
		Если ИскатьПоИмени Тогда
			ТекстСообщения = ""Элемента формы с именем <%1> не найдено."";
		Иначе
			ТекстСообщения = ""Элемента формы с заголовком <%1> не найдено."";
		КонецЕсли;
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяРеквизита);
		
		Сообщить(ТекстСообщения);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция НайтиРеквизитТаблицы(ИмяТЧ,ИмяРеквизита,ИскатьПоИмени = Ложь) Экспорт
	ТЧ = НайтиТЧПоИмени(ИмяТЧ);
	
	Если ИскатьПоИмени Тогда
		ПолеРеквизит = ТЧ.НайтиОбъект(Тип(""ТестируемоеПолеФормы""),, ИмяРеквизита);
	Иначе
		ПолеРеквизит = ТЧ.НайтиОбъект(Тип(""ТестируемоеПолеФормы""), ИмяРеквизита);
	КонецЕсли;
	
	Возврат ПолеРеквизит;
КонецФункции

&НаКлиенте
Функция ПолучитьЗначениеРеквизитаОткрытойФормыПоИмени(ИмяРеквизита) Экспорт
	Возврат ПолучитьЗначениеРеквизитаОткрытойФормыПоЗаголовку(ИмяРеквизита, Истина);
КонецФункции

&НаКлиенте
Функция НайтиТЧПоИмени(ИмяТЧ, НужнаяФорма = Неопределено, ИскатьПоИмени = Истина,ВызыватьИсключение = Истина) Экспорт
	Если ОбъектКонтекст.Свойство(""АктивнаяТаблицаTestClient"") Тогда
		Если ОбъектКонтекст.АктивнаяТаблицаTestClient <> Неопределено Тогда
			Если ОбъектКонтекст.АктивнаяТаблицаTestClient.ИмяТаблицы = ИмяТЧ Тогда
				Возврат ОбъектКонтекст.АктивнаяТаблицаTestClient.Значение;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если НужнаяФорма = Неопределено Тогда
		
		Если ЗафиксированнаяФормаTestClient = Неопределено Тогда
			ОкноПриложения = ПолучитьАктивноеОкноИзТестовоеПриложение();
			Если ОкноПриложения <> Неопределено Тогда
				НужнаяФорма           = ОкноПриложения.НайтиОбъект(Тип(""ТестируемаяФорма""));
			КонецЕсли;
		Иначе
			НужнаяФорма = ЗафиксированнаяФормаTestClient;
		КонецЕсли;
		
		
		Если НужнаяФорма = Неопределено Тогда
			//это бывает когда ОкноПриложения это начальная страница и на ней нет форм
			ОкноПриложения = ПолучитьАктивноеОкноИзКонтекста();
			Если ОкноПриложения <> Неопределено Тогда
				НужнаяФорма    = ОкноПриложения.НайтиОбъект(Тип(""ТестируемаяФорма""));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	
	ТЧ = НайтиТЧВДаннойФорме(ИмяТЧ,НужнаяФорма,ИскатьПоИмени);
	
	Если НужнаяФорма = Неопределено или ТЧ = Неопределено Тогда
		//иногда 1С некорректно отдаёт текущее окно, тогда будем искать во всех окнах
		//сначала поищем в недавно открытом окне
		
		Попытка
			ОкноПриложения = ПолучитьАктивноеОкноИзКонтекста();
			НужнаяФорма    = ОкноПриложения.НайтиОбъект(Тип(""ТестируемаяФорма""));
			ТЧ             = НайтиТЧВДаннойФорме(ИмяТЧ,НужнаяФорма,ИскатьПоИмени);
		Исключение
			
		КонецПопытки;
	КонецЕсли;
	
	Если НужнаяФорма = Неопределено Тогда
		ТекстСообщения = ""Не найдена активная форма."";
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Если ТЧ = Неопределено и ВызыватьИсключение Тогда
		ТекстСообщения = ""Таблица формы с именем <%1> не найдена."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяТЧ);
		Сообщить(ТекстСообщения);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Если ТЧ <> Неопределено Тогда
		ОбъектКонтекст.Вставить(""ТекущаяТЧ"",ТЧ);
	КонецЕсли;
	
	СохранитьВКешТаблицуTestClient(ИмяТЧ,ТЧ);
	
	Возврат ТЧ;
КонецФункции

&НаКлиенте
Процедура ЗапомнитьАктивноеОкно(АктивноеОкно,ДопПараметры = Неопределено) Экспорт
	Если ТипЗнч(ДопПараметры) = Тип(""Структура"") Тогда
		Если ДопПараметры.Свойство(""ЗапомнитьАктивноеОкно"") Тогда
			Если Не ДопПараметры.ЗапомнитьАктивноеОкно Тогда
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	
	Если АктивноеОкно <> Неопределено Тогда
		Если ОбъектКонтекст.Свойство(""АктивноеОкно"") Тогда
			ОбъектКонтекст.Вставить(""ПредыдущееАктивноеОкно"",ОбъектКонтекст.АктивноеОкно);
		КонецЕсли;
		ОбъектКонтекст.Вставить(""АктивноеОкно"",АктивноеОкно);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьАктивноеОкноИзТестовоеПриложение(ДопПараметры = Неопределено) Экспорт
	Если Не ОбъектКонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
		ВызватьИсключение ПолучитьТекстСообщенияПользователю(""$TestClient НЕ подключен.$"");
	КонецЕсли;
	
	
	Если НЕ Версия8311ИлиВыше Тогда
		//обход ошибки платформы определения активного окна, когда открыт модальный диалог
		ИскатьМодальныйДиалог = Ложь;
		Если ДопПараметры <> Неопределено Тогда
			Если ДопПараметры.Свойство(""ИскатьМодальныйДиалог"") Тогда
				ИскатьМодальныйДиалог = ДопПараметры.ИскатьМодальныйДиалог;
			КонецЕсли;
		КонецЕсли;
		
		Если ИскатьМодальныйДиалог Тогда
			//если в платформе не исправлена ошибка определения активного окна
			//указать версию
			ОкноМодальногоДиалога = НайтиОкноМодальногоДиалога();
			Если ОкноМодальногоДиалога <> Неопределено Тогда
				Возврат ОкноМодальногоДиалога;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	АктивноеОкно = ОбъектКонтекстСохраняемый.ТестовоеПриложение.ПолучитьАктивноеОкно();
	ЗапомнитьАктивноеОкно(АктивноеОкно,ДопПараметры);
	Возврат АктивноеОкно;
КонецФункции

&НаКлиенте
Функция ПолучитьГлавноеОкноИзТестовоеПриложение() Экспорт
	Если Не ОбъектКонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
		ВызватьИсключение ПолучитьТекстСообщенияПользователю(""$TestClient НЕ подключен.$"");
	КонецЕсли;
	
	ОкнаПриложения = ОбъектКонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип(""ТестируемоеОкноКлиентскогоПриложения""));
	
	Для Каждого ОкноПриложения Из ОкнаПриложения Цикл
		Если ОкноПриложения.Основное Тогда
			Возврат ОкноПриложения;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Функция НайтиТекущееОкноTestClient() Экспорт
	Возврат ПолучитьАктивноеОкноИзТестовоеПриложение();
КонецФункции

&НаКлиенте
Функция НайтиФормыТекущегоОкнаTestClient(ДопПараметры = Неопределено) Экспорт
	Если ЗафиксированнаяФормаTestClient <> Неопределено Тогда
		Массив = Новый Массив;
		Массив.Добавить(ЗафиксированнаяФормаTestClient);
		Возврат Массив;
	КонецЕсли;
	
	ОкноПриложения         = ПолучитьАктивноеОкноИзТестовоеПриложение(ДопПараметры);
	Если ОкноПриложения = Неопределено Тогда
		ТекстСообщения = ""Не получилось определить активное окно TestClient."";
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	МассивФорм             = ОкноПриложения.НайтиОбъекты(Тип(""ТестируемаяФорма""));
	Если ДопПараметры <> Неопределено Тогда
		ДопПараметры.Вставить(""АктивноеОкно"",ОкноПриложения);
	КонецЕсли;
	Возврат МассивФорм;
КонецФункции

&НаКлиенте
Функция НайтиФормыОкнаИзКонтекста(ДопПараметры = Неопределено) Экспорт
	ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
	Если ОкноПриложения = Неопределено Тогда
		ТекстСообщения = ""Не получилось определить активное окно TestClient из Контекста."";
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Попытка
		МассивФорм             = ОкноПриложения.НайтиОбъекты(Тип(""ТестируемаяФорма""));
	Исключение
		//Скорее всего окно уже закрылось, но пока ещё есть в контексте.
		Возврат Неопределено;
	КонецПопытки;
	
	Возврат МассивФорм;
КонецФункции

&НаКлиенте
Функция НайтиОкноМодальногоДиалога(ТолькоПредупреждение = Ложь) Экспорт
	НужноеОкно = Неопределено;
	
	ОкнаПриложения = ОбъектКонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип(""ТестируемоеОкноКлиентскогоПриложения""));
	Для Каждого ОкноПриложения Из ОкнаПриложения Цикл
		Если ЭтоЗаголовокОкнаМодальногоДиалога(ОкноПриложения.Заголовок)
			или ((ОкноПриложения.Заголовок = ""Выбор типа данных"") и НЕ ТолькоПредупреждение)
			или ((ОкноПриложения.Заголовок = ""Список значений"") и НЕ ТолькоПредупреждение)
			Тогда
			НужноеОкно = ОкноПриложения;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если НужноеОкно <> Неопределено Тогда
		ЗапомнитьАктивноеОкно(НужноеОкно);
	КонецЕсли;
	
	Возврат НужноеОкно;
КонецФункции

&НаКлиенте
Функция НайтиОкноПредупреждения() Экспорт
	Возврат НайтиОкноМодальногоДиалога(Истина);
КонецФункции

&НаКлиенте
Функция ЭтоЗаголовокОкнаМодальногоДиалога(Заголовок) Экспорт
	Если Заголовок = ""1С:Предприятие"" Тогда
		Возврат Истина;
	ИначеЕсли Заголовок = ""1C:Enterprise"" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция ПолучитьТекстОкнаПредупреждения(НужноеОкно) Экспорт
	ПоляФормы = НужноеОкно.НайтиОбъекты(Тип(""ТестируемоеПолеФормы""));
	Если ПоляФормы.Количество() = 0 Тогда
		ТекстСообщения = ""У окна <%1> не найдено ни одного элемента с типом <ТестируемоеПолеФормы>."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",НужноеОкно.Заголовок);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ПолеФормы = ПоляФормы[0];
	
	Возврат ПолеФормы.ТекстЗаголовка;
КонецФункции

&НаКлиенте
Функция НайтиФормуПоЗаголовку(ИмяФормы) Экспорт
	ОкноПриложения = ПолучитьАктивноеОкноИзТестовоеПриложение();
	НужнаяФорма = Неопределено;
	Если ОкноПриложения <> Неопределено Тогда
		НужнаяФорма = ОкноПриложения.НайтиОбъект(Тип(""ТестируемаяФорма""), ИмяФормы);
	КонецЕсли;
	Если НужнаяФорма = Неопределено Тогда
		//иногда 1С некорректно отдаёт текущее окно, тогда будем искать во всех окнах
		//сначала поищем в недавно открытом окне
		
		Попытка
			ОкноПриложения = ПолучитьАктивноеОкноИзКонтекста();
			НужнаяФорма    = ОкноПриложения.НайтиОбъект(Тип(""ТестируемаяФорма""), ИмяФормы);
			Если НужнаяФорма <> Неопределено Тогда
				ЗапомнитьАктивноеОкно(ОкноПриложения); //произошла неявная смена активного окна
				Возврат НужнаяФорма;
			КонецЕсли;
		Исключение
			
		КонецПопытки;
		
		
		//затем будем искать во всех окнах
		МассивОкон = ОбъектКонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип(""ТестируемоеОкноКлиентскогоПриложения""));
		Для каждого ТекОкно Из МассивОкон Цикл
			
			НужнаяФорма    = ТекОкно.НайтиОбъект(Тип(""ТестируемаяФорма""), ИмяФормы);
			Если НужнаяФорма <> Неопределено Тогда
				ЗапомнитьАктивноеОкно(ТекОкно); //произошла неявная смена активного окна
				Возврат НужнаяФорма;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	Если НужнаяФорма = Неопределено Тогда
		ТекстСообщения = ""Форма с заголовком <%1> не найдена."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяФормы);
		Сообщить(ТекстСообщения);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ЗапомнитьАктивноеОкно(ОкноПриложения); //произошла неявная смена активного окна
	Возврат НужнаяФорма;
КонецФункции

&НаКлиенте
Функция НайтиТекущуюФормуTestClient() Экспорт
	//НайтиТекущуюФормуTestClient() надо использовать, когда известно, что у текущего окна только одна форма, иначе надо использовать НайтиФормыТекущегоОкна()
	Получилось = Истина;
	Попытка
		ОкноПриложения         = ПолучитьАктивноеОкноИзКонтекста();
		ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип(""ТестируемаяФорма""));
	Исключение
		Получилось = Ложь;
	КонецПопытки;
	
	Если Не Получилось Тогда
		ОкноПриложения         = ПолучитьАктивноеОкноИзТестовоеПриложение();
		ТекущаяФорма           = ОкноПриложения.НайтиОбъект(Тип(""ТестируемаяФорма""));
		ЗапомнитьАктивноеОкно(ОкноПриложения); //произошла неявная смена активного окна
	КонецЕсли;
	
	Возврат ТекущаяФорма;
КонецФункции

&НаКлиенте
Процедура ПолучитьПараметрыОбластиМакета(Знач ИмяОбласти,НачСтр,НачКол,КолСтр,КолКол) Экспорт
	ИмяОбластиОригинал = ИмяОбласти;
	
	ИмяОбласти = СокрЛП(ВРег(ИмяОбласти));
	Поз = Найти(ИмяОбласти,""R"");
	Если Поз = 0 Тогда
		ТекстСообщения = ""Неверный формат области <%1>"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяОбластиОригинал);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ИмяОбласти = Сред(ИмяОбласти,Поз+1);
	Поз = Найти(ИмяОбласти,""C"");
	Если Поз = 0 Тогда
		ТекстСообщения = ""Неверный формат области <%1>"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяОбластиОригинал);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	НачСтр = Число(Лев(ИмяОбласти,Поз-1));
	
	ИмяОбласти = Сред(ИмяОбласти,Поз+1);
	Поз = Найти(ИмяОбласти,"":"");
	Если Поз = 0 Тогда
		КолСтр = НачСтр;
		Поз = Найти(ИмяОбластиОригинал,""C"");
		НачКол = Число(Сред(ИмяОбластиОригинал,Поз+1));
		КолКол = НачКол;
		Возврат;
	КонецЕсли;
	НачКол = Число(Лев(ИмяОбласти,Поз-1));
	
	ИмяОбласти = Сред(ИмяОбласти,Поз+1);
	
	ИмяОбласти = СокрЛП(ВРег(ИмяОбласти));
	Поз = Найти(ИмяОбласти,""R"");
	Если Поз = 0 Тогда
		ТекстСообщения = ""Неверный формат области <%1>"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяОбластиОригинал);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	//вторая часть, после символа :
	
	ИмяОбласти = Сред(ИмяОбласти,Поз+1);
	Поз = Найти(ИмяОбласти,""C"");
	Если Поз = 0 Тогда
		ТекстСообщения = ""Неверный формат области <%1>"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяОбластиОригинал);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	КолСтр = Число(Лев(ИмяОбласти,Поз-1))-НачСтр+1;
	
	ИмяОбласти = Сред(ИмяОбласти,Поз+1);
	КолКол = Число(ИмяОбласти)-НачКол+1;
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗаписьДействийПользователя(ОдинКлиентТестирования = Истина) Экспорт
	Если ОдинКлиентТестирования Тогда
		ОткрытьНовыйСеансTestClientИлиПодключитьУжеСуществующий();
	КонецЕсли;
	
	Если ТекущийTestclientЭтоWebКлиент Тогда
		СделатьСообщение(""Web клиент не поддерживает запись действий пользователя."");
		Возврат;
	КонецЕсли;
	
	Если Элементы.кнНачатьЗаписьДействийПользователя.Видимость = Истина Тогда
		Попытка
			ОбъектКонтекстСохраняемый.ТестовоеПриложение.НачатьЗаписьЖурналаДействийПользователя();
			СделатьСообщение(""Запись действий пользователя начата."");
		Исключение
			ТекстСообщения = ""НачатьЗаписьДействийПользователя:%1"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ОписаниеОшибки());
			СделатьСообщение(ТекстСообщения);
			Возврат;
		КонецПопытки;
		
	ИначеЕсли Элементы.кнПриостановитьЗаписьДействийПользователя.Видимость = Истина Тогда
		Элементы.кнНачатьЗаписьДействийПользователя.Заголовок = ""Продолжить запись поведения"";
		
		Попытка
			ОбъектКонтекстСохраняемый.ТестовоеПриложение.ПриостановитьЗаписьЖурналаДействийПользователя();
			СделатьСообщение(""Запись действий пользователя приостановлена."");
		Исключение
			ТекстСообщения = ""НачатьЗаписьДействийПользователя:%1"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ОписаниеОшибки());
			СделатьСообщение(ТекстСообщения);
			Возврат;
			Возврат;
		КонецПопытки;
		
	ИначеЕсли Элементы.кнПродолжитьЗаписьДействийПользователя.Видимость = Истина Тогда
		
		Попытка
			ОбъектКонтекстСохраняемый.ТестовоеПриложение.ПродолжитьЗаписьЖурналаДействийПользователя();;
			СделатьСообщение(""Запись действий пользователя продолжена."");
		Исключение
			ТекстСообщения = ""НачатьЗаписьДействийПользователя:%1"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ОписаниеОшибки());
			СделатьСообщение(ТекстСообщения);
			Возврат;
			Возврат;
		КонецПопытки;
	КонецЕсли;
	
	ИдетОпросЭлементовФормTestClient = Ложь;
	МассивСостояниеФормTestClient    = Новый Массив;
	ПодключитьОбработчикОжидания(""ОпросЭлементовФормTestClient"", 1);
КонецПроцедуры

&НаКлиенте
Процедура ФорматироватьТаблицуGherkin(МассивТаблицы) Экспорт
	МассивПараметров = ОпределитьПараметрыВСтрокеПримера(МассивТаблицы[0]);
	КолПараметров = МассивПараметров.Количество();
	МассивДлин = Новый Массив;
	Для каждого Элем Из МассивПараметров Цикл
		МассивДлин.Добавить(0);
	КонецЦикла;
	
	Для каждого СтрТзн Из МассивТаблицы Цикл
		МассивПараметров = ОпределитьПараметрыВСтрокеПримера(СтрТзн);
		
		Для Ккк = 0 По МассивДлин.Количество() - 1 Цикл
			ДлинаСтроки = СтрДлина(СокрЛП(МассивПараметров.Получить(Ккк)));
			Если ДлинаСтроки > МассивДлин[Ккк] Тогда
				МассивДлин[Ккк] = ДлинаСтроки;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для Ррр = 0 по (МассивТаблицы.Количество()-1) Цикл
		СтрТзн = МассивТаблицы[Ррр];
		МассивПараметров = ОпределитьПараметрыВСтрокеПримера(СтрТзн);
		СтрПараметров = ""| "";
		Для Ккк = 0 По МассивДлин.Количество() - 1 Цикл
			Зн = СокрЛП(МассивПараметров[Ккк]);
			Пока СтрДлина(Зн) < МассивДлин[Ккк] Цикл
				Зн = Зн + "" "";
			КонецЦикла;
			СтрПараметров = СтрПараметров + Зн + "" | "";
		КонецЦикла;
		
		СтрПараметров = СокрЛП(СтрПараметров);
		
		МассивТаблицы[Ррр] = СтрПараметров;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьЗаписьДействийПользователя() Экспорт
	
	Элементы.кнНачатьЗаписьДействийПользователя.Заголовок = ""Начать запись поведения"";
	
	ОтключитьОбработчикОжидания(""ОпросЭлементовФормTestClient"");
	Попытка
		Стр = ОбъектКонтекстСохраняемый.ТестовоеПриложение.ЗавершитьЗаписьЖурналаДействийПользователя();
		СделатьСообщение(""Запись действий пользователя закончена."");
	Исключение
		ТекстСообщения = ""ЗавершитьЗаписьДействийПользователя:%1"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ОписаниеОшибки());
		Сообщить(ТекстСообщения);
		Возврат;
	КонецПопытки;
	
	Текст = Новый ТекстовыйДокумент;
	Текст.ДобавитьСтроку(Стр);
	
	Объект.СгенерированныйXML = Текст.ПолучитьТекст();
	
	ОбработатьXMLВUILogToScript(Стр);
	
	СделатьПереводСгенерированногоТекстаGherkin();
	
КонецПроцедуры

&НаКлиенте
Процедура ПреобразоватьИсходныйXML() Экспорт
	Стр = Объект.СгенерированныйXML;
	ОбработатьXMLВUILogToScript(Стр);
	СделатьПереводСгенерированногоТекстаGherkin();
	
	ЭтаФорма.ТекущийЭлемент = Элементы.СценарийПоведения;
КонецПроцедуры

&НаКлиенте
Функция НаЭкранеОкноПредупреждения()
	Если Не ОбъектКонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		МассивОкон = ОбъектКонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип(""ТестируемоеОкноКлиентскогоПриложения""));
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Для Каждого ТекущееОкно Из МассивОкон Цикл
		Если ЭтоЗаголовокОкнаМодальногоДиалога(ТекущееОкно.Заголовок) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция НаЭкранеДиалогАвторизации() Экспорт
	Если Не ОбъектКонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		НужноеОкно = ОбъектКонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект(Тип(""ТестируемоеОкноКлиентскогоПриложения"")
		,""1С:Предприятие. Доступ к информационной базе"");
	Исключение
		Возврат Ложь;
	КонецПопытки;
	
	Если НужноеОкно = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция ПроверитьПортНаЗанятость(Знач Порт = 1538) Экспорт
	
	Если Порт < 0 Или Порт > 65536 Тогда
		Порт = 1538;
	КонецЕсли;
	
	НачалоДиапазонаПортов    = 48000;
	ОкончаниеДиапазонаПортов = 50000;
	
	Если ЗначениеЗаполнено(Объект.ДиапазонПортовTestclient) Тогда
		//там должна быть строка вида 48000-48020
		МассивЗначений = РазложитьСтрокуВМассивПодстрокКлиент(Объект.ДиапазонПортовTestclient,""-"");
		Если МассивЗначений.Количество() <> 2 Тогда
			ТекстСообщения = ""Указан неверный диапазон портов: <%1>"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Объект.ДиапазонПортовTestclient);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		НачалоДиапазонаПортов = Число(МассивЗначений[0]);
		ОкончаниеДиапазонаПортов = Число(МассивЗначений[1]);
	КонецЕсли;
	
	МассивЗанятыхПортов = ПолучитьМассивЗанятыхПортов();
	Если МассивЗанятыхПортов.Найти(Порт) <> Неопределено Тогда
		// найти свободный порт в диапазоне
		Для Счетчик = НачалоДиапазонаПортов По ОкончаниеДиапазонаПортов Цикл
			Если МассивЗанятыхПортов.Найти(Счетчик) = Неопределено Тогда
				СвободныйПорт = Счетчик;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Возврат СвободныйПорт;
	КонецЕсли;
	
	Возврат Порт;
	
КонецФункции // ПолучитьСвободныйПорт()

&НаКлиенте
Функция ОткрытьНовыйСеансTestClientИлиПодключитьУжеСуществующий(ДопПараметр = """",СтрокаОшибки = Неопределено) Экспорт
	
	ТекущиеДанные = Элементы.ДанныеКлиентовТестирования.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить(""Имя"", ""Этот клиент"");
	Иначе
		ПараметрыОтбора = Новый Структура;
		ПараметрыОтбора.Вставить(""Имя"", ТекущиеДанные.Имя);
	КонецЕсли;
	
	
	НайденныеСтроки = ДанныеКлиентовТестирования.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() > 0 Тогда
		ДанныеЗапускаКлиентаТестирования = НайденныеСтроки[0];
	КонецЕсли;
	
	ДанныеЗапускаКлиентаТестирования.ДопПараметры = ДопПараметр;
	
	РезультатПодключения = ОткрытьНовыйСеансTestClientИлиПодключитьУжеСуществующийДляНесколькихКлиентов(ДанныеЗапускаКлиентаТестирования,СтрокаОшибки);
	
	Возврат РезультатПодключения;
	
КонецФункции

//возвращает массив
//каждая строка массива - массив значений исходного табличного документа
//если возможно используется ЗаписатьСодержимоеВФайл
//для web клиента и для платформы меньше 8.3.8 - считывает макет по ячейкам, согласно указанных параметров
//если использовался метод ЗаписатьСодержимоеВФайл - будет взята только часть макета, согласно указанных параметров чтения макета
//параметры чтения макета задаются через шаг: Тогда Я задаю системные параметры считывания макета НачСтр 1 НачКол 1 КолСтр 5 КолКол 3
&НаКлиенте
Функция ПолучитьТабДокИзTestClientКакМассив(ЭлементФормы,ДопПараметры = Неопределено) Экспорт
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Если НЕ ТекущийTestclientЭтоWebКлиент И ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(СистемнаяИнформация.ВерсияПриложения, ""8.3.8.0"") Тогда
		//значит можно сохранить макет в файл и пробросить в TestManager
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(""mxl"");
		
		ТекущаяДоступность = Истина;
		Попытка
			ТекущаяДоступность = ЭлементФормы.ТекущаяДоступность();
		Исключение
		КонецПопытки;
		
		Если ТекущаяДоступность Тогда
			ОбъектКонтекстСохраняемый.ТестовоеПриложение.УстановитьРезультатДиалогаВыбораФайла(Истина, ИмяВременногоФайла);
			ЭлементФормы.ЗаписатьСодержимоеВФайл();
			
			КоличествоПопытокПроверкиСуществованияФайла     = 0;
			МаксКоличествоПопытокПроверкиСуществованияФайла = ЗначениеТаймаутаДляАсинхронногоШага(10);
			Пока Истина Цикл
				КоличествоПопытокПроверкиСуществованияФайла = КоличествоПопытокПроверкиСуществованияФайла + 1;
				Если КоличествоПопытокПроверкиСуществованияФайла > МаксКоличествоПопытокПроверкиСуществованияФайла Тогда
					Прервать;
				КонецЕсли;	 
				
				Если ФайлСуществуетКомандаСистемы(ИмяВременногоФайла) Тогда
					Прервать;
				КонецЕсли;	 
				
				Sleep(1);
			КонецЦикла;	
		Иначе
			Возврат МакетTestClientПоЯчейкеКакМассив(ЭлементФормы,ДопПараметры);
		КонецЕсли;
		
		Если Не ФайлСуществуетКомандаСистемы(ИмяВременногоФайла) Тогда
			//значит либо файл не успел сохраниться, либо ТабличныйДокумент не доступен для редактирования, и просто не может сохранить файл
			//значит надо считать ТабличныйДокумент по ячейкам
			Возврат МакетTestClientПоЯчейкеКакМассив(ЭлементФормы,ДопПараметры);
		КонецЕсли;
		
		КоличествоПопытокПолученияДвоичныхДанных     = 0;
		МаксКоличествоПопытокПолученияДвоичныхДанных = ЗначениеТаймаутаДляАсинхронногоШага(10);
		Пока Истина Цикл
			КоличествоПопытокПолученияДвоичныхДанных = КоличествоПопытокПолученияДвоичныхДанных + 1;
			
			Попытка
				ФайлМакета = Новый ДвоичныеДанные(ИмяВременногоФайла);
				Прервать;
			Исключение
				
			КонецПопытки;
			
			Если КоличествоПопытокПолученияДвоичныхДанных > МаксКоличествоПопытокПолученияДвоичныхДанных Тогда
				ТекстСообщения = ""Не смог получить данные файла <%1>"";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяВременногоФайла);
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
			
			Sleep(1);
		КонецЦикла;
		
		
		ТабДок = ПреобразоватьФайлМакетаВМассив(ФайлМакета,ДопПараметры);
		
		УдалятьПустыеСтрокиИзМакета = Истина;
		Если ДопПараметры <> Неопределено Тогда
			Если ДопПараметры.Свойство(""УдалятьПустыеСтрокиИзМакета"") Тогда
				УдалятьПустыеСтрокиИзМакета = ДопПараметры.УдалятьПустыеСтрокиИзМакета;
			КонецЕсли;
		КонецЕсли;
		
		Если УдалятьПустыеСтрокиИзМакета Тогда
			УбратьПустыеСтрокиИКолонкиСКраёвМакета(ТабДок);
		КонецЕсли;
		
		Возврат ТабДок;
	Иначе
		//значит надо считывать макет по каждой ячейке
		Возврат МакетTestClientПоЯчейкеКакМассив(ЭлементФормы,ДопПараметры);
	КонецЕсли;
КонецФункции

//возвращает ТабличныйДокумент
//для тонкого клиента, если возможно - использует ЗаписатьСодержимоеВФайл, при этом макет сохраняется целиком как есть
//для web клиента и для платформы меньше 8.3.8 - считывает макет по ячейкам, согласно указанных параметров чтения макета
//параметры чтения макета задаются через шаг: Тогда Я задаю системные параметры считывания макета НачСтр 1 НачКол 1 КолСтр 5 КолКол 3
&НаКлиенте
Функция ПолучитьТабличныйДокументTestClient(ЭлементФормы,ДопПараметры = Неопределено) Экспорт
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Если НЕ ТекущийTestclientЭтоWebКлиент И ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(СистемнаяИнформация.ВерсияПриложения, ""8.3.8.0"") Тогда
		//значит можно сохранить макет в файл и пробросить в TestManager
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(""mxl"");
		
		ТекущаяДоступность = Истина;
		Попытка
			ТекущаяДоступность = ЭлементФормы.ТекущаяДоступность();
		Исключение
		КонецПопытки;
		
		Если ТекущаяДоступность Тогда
			ОбъектКонтекстСохраняемый.ТестовоеПриложение.УстановитьРезультатДиалогаВыбораФайла(Истина, ИмяВременногоФайла);
			ЭлементФормы.ЗаписатьСодержимоеВФайл();
			
			КоличествоПопытокПроверкиСуществованияФайла     = 0;
			МаксКоличествоПопытокПроверкиСуществованияФайла = ЗначениеТаймаутаДляАсинхронногоШага(10);
			Пока Истина Цикл
				КоличествоПопытокПроверкиСуществованияФайла = КоличествоПопытокПроверкиСуществованияФайла + 1;
				Если КоличествоПопытокПроверкиСуществованияФайла > МаксКоличествоПопытокПроверкиСуществованияФайла Тогда
					Прервать;
				КонецЕсли;	 
				
				Если ФайлСуществуетКомандаСистемы(ИмяВременногоФайла) Тогда
					Прервать;
				КонецЕсли;	 
				
				Sleep(1);
			КонецЦикла;	
		Иначе
			Возврат ТабличныйДокументTestClientПоЯчейкам(ЭлементФормы,ДопПараметры);
		КонецЕсли;
		
		Если Не ФайлСуществуетКомандаСистемы(ИмяВременногоФайла) Тогда
			//значит либо файл не успел сохраниться, либо ТабличныйДокумент не доступен для редактирования, и просто не может сохранить файл
			//значит надо считать ТабличныйДокумент по ячейкам
			Возврат ТабличныйДокументTestClientПоЯчейкам(ЭлементФормы,ДопПараметры);
		КонецЕсли;
		
		КоличествоПопытокПолученияДвоичныхДанных     = 0;
		МаксКоличествоПопытокПолученияДвоичныхДанных = ЗначениеТаймаутаДляАсинхронногоШага(10);
		Пока Истина Цикл
			КоличествоПопытокПолученияДвоичныхДанных = КоличествоПопытокПолученияДвоичныхДанных + 1;
			
			Попытка
				ФайлМакета = Новый ДвоичныеДанные(ИмяВременногоФайла);
				Прервать;
			Исключение
				
			КонецПопытки;
			
			Если КоличествоПопытокПолученияДвоичныхДанных > МаксКоличествоПопытокПолученияДвоичныхДанных Тогда
				ТекстСообщения = ""Не смог получить данные файла <%1>"";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяВременногоФайла);
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
			
			Sleep(1);
		КонецЦикла;
		
		НадоСчитатьОбласть = Ложь;
		Если ДопПараметры <> Неопределено Тогда
			Если ДопПараметры.Свойство(""НадоСчитатьОбласть"") Тогда
				НадоСчитатьОбласть = ДопПараметры.НадоСчитатьОбласть;
			КонецЕсли;
		КонецЕсли;
		
		Если НадоСчитатьОбласть Тогда
			ТабДок = ОставитьЧастьМакетаСогласноПараметровЧтенияМакета(ФайлМакета,ДопПараметры.НачСтр,ДопПараметры.НачКол,ДопПараметры.КолСтр,ДопПараметры.КолКол);
		Иначе
			ТабДок = ТабличныйДокументИзДвоичныхДанных(ФайлМакета);
		КонецЕсли;
		
		Возврат ТабДок;
	Иначе
		//значит надо считывать макет по ячейке
		Возврат ТабличныйДокументTestClientПоЯчейкам(ЭлементФормы,ДопПараметры);
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция ПолучитьЗначениеТестируемаяТаблицаФормы(ЭлементФормы,ДопПараметры = Неопределено) Экспорт
	ВыделятьВсеСтроки = Истина;
	Если ТипЗнч(ДопПараметры) = Тип(""Структура"") Тогда
		Если ДопПараметры.Свойство(""ВыделятьВсеСтроки"") Тогда
			ВыделятьВсеСтроки = ДопПараметры.ВыделятьВсеСтроки;
		КонецЕсли;
	КонецЕсли;
	
	
	ТекущийРежимРедактирование = Ложь;
	Попытка
		ТекущийРежимРедактирование = ЭлементФормы.ТекущийРежимРедактирование();
	Исключение
	КонецПопытки;
	
	Если ТекущийРежимРедактирование Тогда
		Попытка
			ЭлементФормы.ЗакончитьРедактированиеСтроки();
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	НадоПолучатьСтроки = Истина;
	ЗначениеТЧ         = Новый Массив;
	
	Попытка
		Если ВыделятьВсеСтроки Тогда
			ЭлементФормы.ПерейтиКПервойСтроке();
		КонецЕсли;
	Исключение
		//значит это не таблица
		НадоПолучатьСтроки = Ложь;
		ЗначениеТЧ         = Неопределено;
	КонецПопытки;
	
	Если НадоПолучатьСтроки  Тогда
		Попытка
			ТекЭлемент         = ЭлементФормы.ПолучитьТекстЯчейки();
			Если ВыделятьВсеСтроки Тогда
				ЭлементФормы.ВыделитьВсеСтроки();
				Если ТекущийTestclientЭтоWebКлиент Тогда
					//чтобы дать web клиенту успеть выделить строки
					sleep(1);
				КонецЕсли;
			КонецЕсли;
			ЗначениеТЧ         = ЭлементФормы.ПолучитьВыделенныеСтроки();
			НадоПолучатьСтроки = Ложь;
		Исключение
		КонецПопытки;
	КонецЕсли;
	
	Если НадоПолучатьСтроки Тогда
		//для случая когда в таблице нет строк
		Попытка
			ЗначениеТЧ = ЭлементФормы.ПолучитьВыделенныеСтроки();
		Исключение
			СделатьСообщение(ОписаниеОшибки());
		КонецПопытки;
	КонецЕсли;
	
	Возврат ЗначениеТЧ;
КонецФункции

&НаКлиенте
Процедура ЗапомнитьСостояниеФормыTestClient() Экспорт
	ДопПараметры = Новый Структура;
	СохраненноеСостояниеФормыTestClient = ПолучитьСостояниеФормыTestClient(ДопПараметры);
	Элементы.ПолучитьИзмененияФормыGherkin.Заголовок = ПолучитьТекстСообщенияПользователю(""$Получить изменения формы$"");
КонецПроцедуры

&НаКлиенте
Процедура ЗабытьСостояниеФормыTestClient() Экспорт
	СохраненноеСостояниеФормыTestClient = Неопределено;
	Элементы.ПолучитьИзмененияФормыGherkin.Заголовок = ПолучитьТекстСообщенияПользователю(""$Получить состояние всей формы$"");
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСостояниеТекущегоЭлементаФормы() Экспорт
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить(""ТолькоАктивныйЭлемент"",Истина);
	ПолучитьИзмененияФормы(""Gherkin"",ДопПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьИзмененияФормыGherkin() Экспорт
	ДопПараметры = Новый Структура;
	ПолучитьИзмененияФормы(""Gherkin"",ДопПараметры);
КонецПроцедуры

&НаКлиенте
Функция ПодключитьПрофильTestClientПоИмени(ИмяКлиентаТестирования) Экспорт
	РазорватьСоединениеTestClient();
	
	
	// отключить существующий сеанс, если это не повторный запуск
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить(""Подключен"", Истина);
	
	НайденныеСтроки = ДанныеКлиентовТестирования.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() > 0 Тогда
		ОбъектКонтекстСохраняемый.Удалить(""ТестовоеПриложение"");
		ОбъектКонтекстСохраняемый.Удалить(""ГлавноеОкноТестируемого"");
	КонецЕсли;
	
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить(""Имя"", ИмяКлиентаТестирования);
	НайденныеСтроки = ДанныеКлиентовТестирования.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() = 0 Тогда
		ТекстСообщения = ""Не найден профиль TestClient <%1>"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяКлиентаТестирования);
		Сообщить(ТекстСообщения);
		Возврат Ложь;
	КонецЕсли;
	
	СтрокаПрофиля = НайденныеСтроки[0];
	
	ЕстьПодключение = ПолучитьКлиентаТестирования(ИмяКлиентаТестирования);
	Если Не ЕстьПодключение Тогда
		СтрокаПрофиля.Подключен = Ложь;
	Иначе
		Для Каждого НайденнаяСтрока Из ДанныеКлиентовТестирования Цикл
			НайденнаяСтрока.Подключен = Ложь;
		КонецЦикла;
		
		СтрокаПрофиля.Подключен = Истина;
	КонецЕсли;
	
	Возврат ЕстьПодключение;
КонецФункции

&НаКлиенте
Функция ПолучитьКлиентаТестирования(ИмяКлиентаТестирования, ДопПараметр = """",СтрокаОшибки = Неопределено) Экспорт
	
	// отключаем существующее подключение
	РазорватьСоединениеTestClient();
	
	ДанныеЗапускаКлиентаТестирования = НайтиДанныеЗапускаКлиентаТестирования(ИмяКлиентаТестирования);
	ДанныеЗапускаКлиентаТестирования.ДопПараметры = ДопПараметр + ДанныеЗапускаКлиентаТестирования.ДопПараметры;
	ЕстьПодключение = ОткрытьНовыйСеансTestClientИлиПодключитьУжеСуществующийДляНесколькихКлиентов(ДанныеЗапускаКлиентаТестирования,СтрокаОшибки);
	
	Если ЕстьПодключение Тогда
		СохранитьКлиентовТестирования();
	КонецЕсли;
	
	Возврат ЕстьПодключение;
	
КонецФункции

&НаКлиенте
Функция НайтиДанныеЗапускаКлиентаТестирования(ИмяКлиентаТестирования) Экспорт
	Результат = Неопределено;
	
	ПараметрыОтбора = Новый Структура;
	
	ПараметрыОтбора.Вставить(""Имя"", ИмяКлиентаТестирования);
	
	НайденныеСтроки = ДанныеКлиентовТестирования.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() > 0 Тогда
		Результат = НайденныеСтроки[0];
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

//Делает переход к нужной строке таблицы
&НаКлиенте
Функция СделатьПереход(ТаблицаСписок,ОписаниеСтроки,ОшибкаПереходВниз,ОшибкаПереходВверх) Экспорт
	ПолучилосьПерейти = Ложь;
	Попытка
		ПолучилосьПерейти = ТаблицаСписок.ПерейтиКСтроке(ОписаниеСтроки, Вычислить(""НаправлениеПереходаКСтроке.Вниз""));
	Исключение
		ОшибкаПереходВниз = ОписаниеОшибки();
	КонецПопытки;
	
	
	Если НЕ ПолучилосьПерейти Тогда
		Попытка
			ПолучилосьПерейти = ТаблицаСписок.ПерейтиКСтроке(ОписаниеСтроки, Вычислить(""НаправлениеПереходаКСтроке.Вверх""));
		Исключение
			ОшибкаПереходВверх = ОписаниеОшибки();
		КонецПопытки;
	КонецЕсли;
	
	Возврат ПолучилосьПерейти;
КонецФункции

//пытается получить значения таблицы Gherkin из Контекста
&НаКлиенте
Функция ПолучитьЗначенияТаблицыGherkinИзКонтекста(ТабПарам) Экспорт
	Для Каждого СтрокаТабПарам Из ТабПарам Цикл
		Для Каждого Колонка Из СтрокаТабПарам Цикл
			СтрокаТабПарам[Колонка.Ключ] = ПолучитьЗначениеИзКонтекстаЕслиЭтоВозможно(Колонка.Значение);
		КонецЦикла;	
	КонецЦикла;	
	Возврат ТабПарам;
КонецФункции	 

//проверяет значение на спецсимволы
//Если значение вида $ИмяПеременной$, тогда будет возвращено ОбъектКонтекст.ИмяПеременной
//ИначеЕсли значение вида $$ИмяПеременной$$, тогда будет возвращено ОбъектКонтекстСохраняемый.ИмяПеременной
//ИначеЕсли значение вида $$$ИмяПеременной$$$, это значит, что надо отбросить $$ слева и справа, т.е. символ $ экранирован
//Иначе будет возвращено просто значение
&НаКлиенте
Функция ПолучитьЗначениеИзКонтекстаЕслиЭтоВозможно(Знач Значение) Экспорт
	Если (Лев(Значение,1) = ""$"") Тогда
		Если (Лев(Значение,3) = ""$$$"") и (Прав(Значение,3) = ""$$$"") Тогда
			//это значит, что надо отбросить $$ слева и справа
			ЗначениеДляПерехода = Сред(Значение,3);
			ЗначениеДляПерехода = Лев(ЗначениеДляПерехода,СтрДлина(ЗначениеДляПерехода)-2);
			
			Значение = ЗначениеДляПерехода;
		ИначеЕсли (Лев(Значение,2) = ""$$"") и (Прав(Значение,2) = ""$$"") Тогда
			ИмяПеременной = Сред(Значение,3);
			ИмяПеременной = Лев(ИмяПеременной,СтрДлина(ИмяПеременной)-2);
			
			Попытка
				ЕстьТакаяПеременная = ОбъектКонтекстСохраняемый.Свойство(ИмяПеременной);
			Исключение
				ЕстьТакаяПеременная = Ложь;
			КонецПопытки;
			
			Если НЕ ЕстьТакаяПеременная Тогда
				//попробуем найти значение по ключу
				Значение = ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого(ИмяПеременной);
				Если Значение = Неопределено Тогда
					ТекстСообщения = ""Не смог по переменной <%1> найти сохраненное значение."";
					ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяПеременной); 
					ВызватьИсключение ТекстСообщения;
				КонецЕсли;	 
			Иначе	
				Значение = ОбъектКонтекстСохраняемый[ИмяПеременной];
			КонецЕсли;	 
			
		ИначеЕсли (Лев(Значение,1) = ""$"") и (Прав(Значение,1) = ""$"") Тогда
			ИмяПеременной = Сред(Значение,2);
			ИмяПеременной = Лев(ИмяПеременной,СтрДлина(ИмяПеременной)-1);
			
			Если НЕ ОбъектКонтекст.Свойство(ИмяПеременной) Тогда
				Значение = ПолучитьСохраненноеЗначениеИзКонтекста(ИмяПеременной);
				Если Значение = Неопределено Тогда
					ТекстСообщения = ""Не смог по переменной <%1> найти сохраненное значение."";
					ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяПеременной); 
					ВызватьИсключение ТекстСообщения;
				КонецЕсли;
			Иначе
				Значение = ОбъектКонтекст[ИмяПеременной];
			КонецЕсли;	 
		КонецЕсли;	 
	КонецЕсли;	 
	
	Возврат Значение; 
КонецФункции	 

&НаКлиенте
Функция ПолучитьОписаниеСтрокиИзТаблицы(ТабПарам,ИмяТаблицы = Неопределено) Экспорт
	ОписаниеСтроки = Новый Соответствие();
	
	Строка1    = ТабПарам[0];
	Строка2    = ТабПарам[1];
	КолКолонок = Строка1.Количество();
	
	Для Ккк = 1 По КолКолонок Цикл
		Ключ     = Строка1[""Кол""+XMlСтрока(Ккк)];
		Значение = Строка2[""Кол""+XMlСтрока(Ккк)];
		Если ТипЗнч(Значение) = Тип(""Число"") Тогда
			Значение = СтрЗаменить(Значение,Символы.НПП,"""");
		КонецЕсли;	 
		
		Значение = СтрЗаменить(Значение,""\n"",Символы.ПС);
		Значение = ПолучитьЗначениеИзКонтекстаЕслиЭтоВозможно(Значение);
		
		Если ИмяТаблицы = ""TypeTree"" И Ключ = ""Значение"" Тогда
			//обход бага разного представления таблицы выбора типа в тонком клиенте и в web клиенте
			Ключ = """";
		ИначеЕсли ИмяТаблицы = ""TypeTree"" И Ключ = ""Колонка1"" и НЕ (ТекущийTestclientЭтоWebКлиент) Тогда
			//обход бага разного представления таблицы выбора типа в тонком клиенте и в web клиенте
			Ключ = """";
		ИначеЕсли ИмяТаблицы = ""ValueList"" И Ключ = """" Тогда
			//обход бага разного представления таблицы выбора типа в тонком клиенте и в web клиенте
			Ключ = ""Значение"";
		КонецЕсли;
		
		ОписаниеСтроки.Вставить(Ключ,Значение);
	КонецЦикла;
	
	Возврат ОписаниеСтроки;
КонецФункции

&НаКлиенте
Процедура АктивизироватьЭлементформы(ЭлементФормы) Экспорт
	Попытка
		ЭлементФормы.Активизировать();
	Исключение
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура РазорватьСоединениеTestClient() Экспорт
	Если ОбъектКонтекстСохраняемый <> Неопределено Тогда
		Если ОбъектКонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
			ТестовоеПриложение = ОбъектКонтекстСохраняемый.ТестовоеПриложение;
			Попытка
				ТестовоеПриложение.РазорватьСоединение();
			Исключение
			КонецПопытки;
		КонецЕсли;
	КонецЕсли;
	
	ТекущийTestclientЭтоWebКлиент = Ложь;
	
	ОбъектКонтекстСохраняемый.Удалить(""ТестовоеПриложение"");
	ОбъектКонтекстСохраняемый.Удалить(""ГлавноеОкноТестируемого"");
	
	СброситьФлагПодключенияКлиентаТестирования();
КонецПроцедуры

&НаКлиенте
Функция ПолучитьКорректоеЗначениеДляСравненияТекста(Знач Стр) Экспорт
	Стр = СтрЗаменить(Стр,Символы.НПП,"" "");
	Возврат Стр;
КонецФункции

//проверяет значение флага по его представлению
&НаКлиенте
Функция ЗначениеФлагаСоответствуетИстина(ПредставлениеДанных) Экспорт
	Если Найти(ПредставлениеДанных, Строка(Истина)) = 1 Тогда
		Возврат Истина;
	ИначеЕсли НРег(ПредставлениеДанных) = ""да"" Тогда
		Возврат Истина;
	ИначеЕсли НРег(ПредставлениеДанных) = ""yes"" Тогда
		Возврат Истина;
	ИначеЕсли НРег(ПредставлениеДанных) = ""1"" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

//преобразует переданное значение в макет.
//например массив структур или массив соответствий
&НаКлиенте
Функция ПреобразоватьЗначениеВМакет(Значение,МассивКлючей = Неопределено,ТолькоТекстЯчеек = Ложь) Экспорт
	ПереданМассивКлючей = Ложь;
	Если МассивКлючей <> Неопределено Тогда
		ПереданМассивКлючей = Истина;
	КонецЕсли;
	
	ТипЗначения = Неопределено;
	Если ТипЗнч(Значение) = Тип(""Структура"") Тогда
		ТипЗначения = Значение.Тип;
		Значение    = Значение.Значение;
	КонецЕсли;
	
	Если ТипЗнч(Значение) = Тип(""Массив"") или ТипЗнч(Значение) = Тип(""ФиксированныйМассив"") Тогда
		Если Значение.Количество() = 0 Тогда
			Возврат Новый ТабличныйДокумент;
		КонецЕсли;
		
		ЧитаемИзМассиваСтруктур = Ложь;
		ПерваяСтрокаСлужебная = Ложь;
		ПерваяСтрока = Значение[0];
		Если ТипЗнч(ПерваяСтрока) = Тип(""Структура"") и ТипЗначения <> ""Макет"" Тогда
			ЧитаемИзМассиваСтруктур = Истина;
			//из первой строки берём массив ключей
			ПерваяСтрокаСлужебная = Истина;
			
			Если Не ПереданМассивКлючей Тогда
				МассивКлючей = Новый Массив;
				Для Каждого Элем Из ПерваяСтрока Цикл
					МассивКлючей.Добавить(Элем.Значение);
				КонецЦикла;
			КонецЕсли;
		ИначеЕсли ТипЗнч(ПерваяСтрока) = Тип(""Соответствие"") и ТипЗначения <> ""Макет"" Тогда
			Если Не ПереданМассивКлючей  Тогда
				МассивКлючей = Новый Массив;
				Для Каждого Элем Из ПерваяСтрока Цикл
					МассивКлючей.Добавить(Элем.Ключ);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		
		НовоеЗначение = Новый ТабличныйДокумент;
		
		ИдСтроки = 1;
		
		ИдКолонки = 0;
		Если МассивКлючей <> Неопределено Тогда
			Для Каждого Ключ Из МассивКлючей Цикл
				ИдКолонки = ИдКолонки + 1;
				НовоеЗначение.Область(ИдСтроки,ИдКолонки,ИдСтроки,ИдКолонки).Текст = Ключ;
			КонецЦикла;
			ИдСтроки = ИдСтроки + 1;
		КонецЕсли;
		
		Если ЧитаемИзМассиваСтруктур Тогда
			Для Ккк = (ИдСтроки-1) По Значение.Количество()-1 Цикл
				СтрокаЗначение = Значение[Ккк];
				
				ИдКолонки = 0;
				Если МассивКлючей <> Неопределено Тогда
					Для Каждого Элем Из МассивКлючей Цикл
						ИдКолонки = ИдКолонки + 1;
						НовоеЗначение.Область(ИдСтроки,ИдКолонки,ИдСтроки,ИдКолонки).Текст = СтрокаЗначение[""Кол"" + XMlСтрока(ИдКолонки)];
					КонецЦикла;
				КонецЕсли;
				
				ИдСтроки = ИдСтроки + 1;
			КонецЦикла;
		Иначе
			Если ИдСтроки = 2 Тогда
				НачЗначениеСчетчика = ИдСтроки-1-1;
			Иначе
				НачЗначениеСчетчика = ИдСтроки-1;
			КонецЕсли;
			
			Для Ккк = НачЗначениеСчетчика По Значение.Количество()-1 Цикл
				СтрокаЗначение = Значение[Ккк];
				
				ИдКолонки = 0;
				Если МассивКлючей <> Неопределено Тогда
					Для Каждого Ключ Из МассивКлючей Цикл
						ИдКолонки = ИдКолонки + 1;
						НовоеЗначение.Область(ИдСтроки,ИдКолонки,ИдСтроки,ИдКолонки).Текст = СтрокаЗначение[Ключ];
					КонецЦикла;
				Иначе
					Если ТипЗнч(СтрокаЗначение) = Тип(""Структура"") Тогда
						Для СчетчикКолонок = 1 По СтрокаЗначение.Количество() Цикл
							НовоеЗначение.Область(ИдСтроки,СчетчикКолонок,ИдСтроки,СчетчикКолонок).Текст = СтрокаЗначение[""Кол"" + XMlСтрока(СчетчикКолонок)];
						КонецЦикла;
					Иначе
						Для СчетчикКолонок = 0 По СтрокаЗначение.Количество()-1 Цикл
							НовоеЗначение.Область(ИдСтроки,СчетчикКолонок+1,ИдСтроки,СчетчикКолонок+1).Текст = СтрокаЗначение[СчетчикКолонок];
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
				
				ИдСтроки = ИдСтроки + 1;
			КонецЦикла;
		КонецЕсли;
		
		Возврат НовоеЗначение;
	ИначеЕсли ТипЗнч(Значение) = Тип(""ТабличныйДокумент"") Тогда
		Если ТолькоТекстЯчеек Тогда
			НовоеЗначение = Новый ТабличныйДокумент;
			
			Для ИдСтроки = 1 По Значение.ВысотаТаблицы Цикл
				Для ИдКолонки = 1 По Значение.ШиринаТаблицы Цикл
					НовоеЗначение.Область(ИдСтроки,ИдКолонки,ИдСтроки,ИдКолонки).Текст = Значение.Область(ИдСтроки,ИдКолонки,ИдСтроки,ИдКолонки).Текст;
				КонецЦикла;
			КонецЦикла;
			
			Возврат НовоеЗначение;
		Иначе
			Возврат Значение;
		КонецЕсли;
	Иначе
		Возврат Значение;
	КонецЕсли;
КонецФункции

//определяет как надо искать элемент формы
//если ИмяПоля начинается с символа !, тогда поиск будет по имени поля
//иначе по заголовку
//если заголовок поля начинается с символа !, тогда в значении ИмяПоля он должен быть проэкранирован \!
&НаКлиенте
Процедура ОпределитьРежимПоискаЭлементаНаФорме(ИмяПоля,ИскатьПоИмени) Экспорт
	Если Лев(ИмяПоля,2) = ""\!"" Тогда
		ИмяПоля = Сред(ИмяПоля,2);
		ИскатьПоИмени = Ложь;
		Возврат;
	ИначеЕсли Лев(ИмяПоля,1) = ""!"" Тогда
		ИмяПоля = Сред(ИмяПоля,2);
		ИскатьПоИмени = Истина;
		Возврат;
	КонецЕсли;
	ИскатьПоИмени = Ложь;
КонецПроцедуры

&НаКлиенте
Функция ЗначениеТаймаутаДляАсинхронногоШага(Знач КолСекунд) Экспорт
	Попытка
		КолСекунд = Число(КолСекунд);
	Исключение
		ТекстСообщения = ""Значение параметра таймаута ожидания должно быть числом. Переданное значение: %1"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",КолСекунд); 
		ВызватьИсключение ТекстСообщения;
	КонецПопытки;
	
	Возврат Макс(Объект.ТаймаутДляАсинхронныхШагов,КолСекунд); 
КонецФункции	 

#КонецОбласти //TestClient

#Область ОбщегоНазначения

//Возвращает текст сообщения пользователю с учетом языка
&НаКлиенте
Функция ПолучитьТекстСообщенияПользователю(Текст) Экспорт
	Значение = ТекстСообщенийПользователю[Текст];
	Если ЗначениеЗаполнено(Значение) Тогда
		Возврат Значение;
	КонецЕсли;
	
	Возврат Текст;
КонецФункции

//Делает паузу во время исполнения кода на указанное число секунд
//Для реализации используется команда ping
//Кроссплатформено
&НаКлиенте
Процедура Sleep(КолСекунд) Экспорт
	
	Попытка
		Если ЭтоLinux Тогда
			Команда = ""ping -i "" + Строка(КолСекунд) + "" 127.0.0.1 -c 2"";
			КомандаСистемы(Команда);
		Иначе
			Команда = ""ping 127.0.0.1 -n "" + СокрЛП(КолСекунд + 1); // +1 нужен, т.к. в реальности происходит на один пинг меньше
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(Команда, Истина, Ложь);
		КонецЕсли;
	Исключение
		ТекстСообщения = ""Sleep:%1"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ОписаниеОшибки());
		Сообщить(ТекстСообщения);
	КонецПопытки;
	
КонецПроцедуры

//Делает преобразование русской строки в английскую с помощью транслита
&НаКлиенте
Функция Транслит(Стр) Экспорт
	Рез = СокрЛП(Стр);
	Рез = СтрЗаменить(Рез,""а"",""a"");
	Рез = СтрЗаменить(Рез,""б"",""b"");
	Рез = СтрЗаменить(Рез,""в"",""v"");
	Рез = СтрЗаменить(Рез,""г"",""g"");
	Рез = СтрЗаменить(Рез,""д"",""d"");
	Рез = СтрЗаменить(Рез,""е"",""e"");
	Рез = СтрЗаменить(Рез,""ё"",""e"");
	Рез = СтрЗаменить(Рез,""ж"",""zh"");
	Рез = СтрЗаменить(Рез,""з"",""z"");
	Рез = СтрЗаменить(Рез,""и"",""i"");
	Рез = СтрЗаменить(Рез,""к"",""k"");
	Рез = СтрЗаменить(Рез,""л"",""l"");
	Рез = СтрЗаменить(Рез,""м"",""m"");
	Рез = СтрЗаменить(Рез,""н"",""n"");
	Рез = СтрЗаменить(Рез,""о"",""o"");
	Рез = СтрЗаменить(Рез,""п"",""p"");
	Рез = СтрЗаменить(Рез,""р"",""r"");
	Рез = СтрЗаменить(Рез,""с"",""s"");
	Рез = СтрЗаменить(Рез,""т"",""t"");
	Рез = СтрЗаменить(Рез,""у"",""u"");
	Рез = СтрЗаменить(Рез,""ф"",""f"");
	Рез = СтрЗаменить(Рез,""х"",""h"");
	Рез = СтрЗаменить(Рез,""ч"",""ch"");
	Рез = СтрЗаменить(Рез,""ш"",""sh"");
	Рез = СтрЗаменить(Рез,""щ"",""sch"");
	Рез = СтрЗаменить(Рез,""ъ"","""");
	Рез = СтрЗаменить(Рез,""ь"","""");
	Рез = СтрЗаменить(Рез,""э"",""e"");
	Рез = СтрЗаменить(Рез,""ю"",""yu"");
	Рез = СтрЗаменить(Рез,""й"",""i"");
	Рез = СтрЗаменить(Рез,""ц"",""c"");
	Рез = СтрЗаменить(Рез,""я"",""ya"");
	Рез = СтрЗаменить(Рез,""ы"",""i"");
	Рез = СтрЗаменить(Рез,""А"",""A"");
	Рез = СтрЗаменить(Рез,""Б"",""B"");
	Рез = СтрЗаменить(Рез,""В"",""V"");
	Рез = СтрЗаменить(Рез,""Г"",""G"");
	Рез = СтрЗаменить(Рез,""Д"",""D"");
	Рез = СтрЗаменить(Рез,""Е"",""E"");
	Рез = СтрЗаменить(Рез,""Ё"",""E"");
	Рез = СтрЗаменить(Рез,""Ж"",""ZH"");
	Рез = СтрЗаменить(Рез,""З"",""Z"");
	Рез = СтрЗаменить(Рез,""И"",""I"");
	Рез = СтрЗаменить(Рез,""К"",""K"");
	Рез = СтрЗаменить(Рез,""Л"",""L"");
	Рез = СтрЗаменить(Рез,""М"",""M"");
	Рез = СтрЗаменить(Рез,""Н"",""N"");
	Рез = СтрЗаменить(Рез,""О"",""O"");
	Рез = СтрЗаменить(Рез,""П"",""P"");
	Рез = СтрЗаменить(Рез,""Р"",""R"");
	Рез = СтрЗаменить(Рез,""С"",""S"");
	Рез = СтрЗаменить(Рез,""Т"",""T"");
	Рез = СтрЗаменить(Рез,""У"",""U"");
	Рез = СтрЗаменить(Рез,""Ф"",""F"");
	Рез = СтрЗаменить(Рез,""Х"",""H"");
	Рез = СтрЗаменить(Рез,""Ч"",""CH"");
	Рез = СтрЗаменить(Рез,""Ш"",""SH"");
	Рез = СтрЗаменить(Рез,""Щ"",""SCH"");
	Рез = СтрЗаменить(Рез,""Ъ"","""");
	Рез = СтрЗаменить(Рез,""Ь"","""");
	Рез = СтрЗаменить(Рез,""Ы"",""I"");
	Рез = СтрЗаменить(Рез,""Ц"",""C"");
	Рез = СтрЗаменить(Рез,""Э"",""E"");
	Рез = СтрЗаменить(Рез,""Ю"",""YU"");
	Рез = СтрЗаменить(Рез,""Я"",""YA"");
	Рез = СтрЗаменить(Рез,""Й"",""I"");
	Возврат(Рез);
КонецФункции

// Выполняет SikuliX-скрипт
//
// Параметры:
//  СтрокаКоманды		 - Строка 	 - путь к Sikuli-скрипту и аргументы
//  ЖдатьОкончания		 - Число	 - флаг ожидания окончания выполнения Sikuli-скрипта:
//									   -1	 - ожидать окончания выполнения скрипта;
//									   0	 - не ожидать окончания выполнения скрипта.
//  ЗапускЧерезСкрипт	 - Булево	 - флаг способа запуска Sikuli-скриптов:
//									   Ложь	 - устаревший способ запуска для Windows,
//											   используется по умолчанию для совместимости
//									   Истина	 - запуск через скрипт runsikulix
//
// Возвращаемое значение:
//   - Результат выполнения скрипта. 0 - если не было ошибок.
//
&НаКлиенте
Функция ВыполнитьSikuliСкрипт(СтрокаКоманды, ЖдатьОкончания = -1, ЗапускЧерезСкрипт = Истина) Экспорт
	
	Стр = ПолучитьСтрокуВызоваSikuli(ЗапускЧерезСкрипт) + "" "" + СтрокаКоманды;
	Отладка(Стр);
	Возврат ВыполнитьКомандуОСБезПоказаЧерногоОкна(Стр, ЖдатьОкончания);//TODO проверить без вывода UTF-8
	
КонецФункции

// Выполняет команду системы, при этом на экране не будет показано окно cmd
// Использует WshShell.
//
// Параметры:
//  СтрокаКоманды		 - Строка - выполняемая команда
//  ЖдатьОкончания		 - Булево, Число  - флаг ожидания окончания выполнения команды:
//		Если ЖдатьОкончания = Истина (или -1), тогда будет ожидания окончания работы приложения
//		Если ЖдатьОкончания = Ложь (или 0), тогда нет ожидания
//  ИспользоватьКодировкуТекстаUTF8	 - Булево - командный файл будет запущен с кодировкой консоли UTF8 через chcp 65001
//
// Возвращаемое значение:
//   - Результат выполнения скрипта. 0 - если не было ошибок.
//
&НаКлиенте
Функция ВыполнитьКомандуОСБезПоказаЧерногоОкна(Знач ТекстКоманды, Знач ЖдатьОкончания = Истина, 
	Знач ИспользоватьКодировкуТекстаUTF8 = Истина) Экспорт
	
	УправлениеПриложениями = Плагин(""УправлениеПриложениями"");
	Возврат УправлениеПриложениями.ВыполнитьКомандуОСБезПоказаЧерногоОкна(ТекстКоманды, ЖдатьОкончания, 
		ИспользоватьКодировкуТекстаUTF8);
	
КонецФункции

// Выполняет запись строки в текстовый лог.
//
// Параметры:
//  Стр - Строка - нужная строка для записи в лог
//
// Запись в лог будет работать если выставлен флаг ДелатьЛогВыполненияСценариевВТекстовыйФайл
//
// Возможно задать параметр при запуске VB через командную строку.
//
// Скрипты, которые входят в комплект VB позволяют читать этот файл на CI в реальном времени.
// Это позволяет видеть на CI какой сценарий сейчас выполняется.
//
// Параметры:
//   Сообщение - Строка - выводимое сообщение
//
&НаКлиенте
Процедура ЗаписатьСтрокуВТекстовыйЛог(Знач Сообщение) Экспорт
	Если Не Объект.ДелатьЛогВыполненияСценариевВТекстовыйФайл Тогда
		Возврат;
	КонецЕсли;
	
	ПлагинВыводВЛогФайл = Плагин(""ВыводВЛогФайл"");
	ПлагинВыводВЛогФайл.Вывести(Сообщение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодготовитьВыводЛогаВФайл() 
	Если Объект.ДелатьЛогВыполненияСценариевВТекстовыйФайл Тогда
		ПутьФайлаЛогВыполненияСценариев = ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.ИмяФайлаЛогВыполненияСценариев);
		Если ФайлСуществуетКомандаСистемы(ПутьФайлаЛогВыполненияСценариев) Тогда
			УдалитьФайлыКомандаСистемы(ПутьФайлаЛогВыполненияСценариев);
		КонецЕсли;
		
		ПлагинВыводВЛогФайл = Плагин(""ВыводВЛогФайл"");
		ПлагинВыводВЛогФайл.ОткрытьФайл(ПутьФайлаЛогВыполненияСценариев);
		
	КонецЕсли;
КонецПроцедуры

// Позволяет в отладке посмотреть значение переменной
//
// Параметры:
//  Парам - Произвольный - нужная переменная
//  ПараметрВызватьИсключение - Булево - флаг того, что надо вызвать исключение
//
// Процедура полезна, когда нужно из внешней обработки посмотреть значение переменной, не перезапуская сеанс TestManager.
// Нужна для отладки кода внешних обработок.
&НаКлиенте
Процедура ПосмотретьЗначение(Парам, ПараметрВызватьИсключение = Истина) Экспорт
	Если ПараметрВызватьИсключение Тогда
		Попытка
			//Эта попытка/исключение нужна, чтобы можно было выставить флаг ""Останавливаться по ошибке"".
			//Тогда будет остановка на данном исключении, но сценарий продолжит свою работу.
			ВызватьИсключение ""Исключение для просмотра значения."";
		Исключение
			Отладка(""Вызов процедуры """"ПосмотретьЗначение""""."");
		КонецПопытки;
	КонецЕсли;
КонецПроцедуры

// Аналог СтрРазделить() для старых версий платформы
// Описание параметров аналогично описанию параметров для СтрРазделить()
&НаСервереБезКонтекста
Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = "","", Знач ПропускатьПустыеСтроки = Неопределено) Экспорт
	
	Результат = Новый Массив;
	
	// для обеспечения обратной совместимости
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = "" "", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда
			Если Разделитель = "" "" Тогда
				Результат.Добавить("""");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Результат.Добавить(Строка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция РазложитьСтрокуВМассивПодстрокБезКонтекста(Знач Строка, Знач Разделитель = "","", Знач ПропускатьПустыеСтроки = Неопределено) Экспорт
	
	Результат = Новый Массив;
	
	// для обеспечения обратной совместимости
	Если ПропускатьПустыеСтроки = Неопределено Тогда
		ПропускатьПустыеСтроки = ?(Разделитель = "" "", Истина, Ложь);
		Если ПустаяСтрока(Строка) Тогда
			Если Разделитель = "" "" Тогда
				Результат.Добавить("""");
			КонецЕсли;
			Возврат Результат;
		КонецЕсли;
	КонецЕсли;
	
	Позиция = Найти(Строка, Разделитель);
	Пока Позиция > 0 Цикл
		Подстрока = Лев(Строка, Позиция - 1);
		Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Подстрока) Тогда
			Результат.Добавить(Подстрока);
		КонецЕсли;
		Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
		Позиция = Найти(Строка, Разделитель);
	КонецЦикла;
	
	Если Не ПропускатьПустыеСтроки Или Не ПустаяСтрока(Строка) Тогда
		Результат.Добавить(Строка);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

//Обертка для функции РазложитьСтрокуВМассивПодстрок()
//Нужна, т.к. не работет вызов Ванесса.РазложитьСтрокуВМассивПодстрок() из других обработок
&НаКлиенте
Функция РазложитьСтрокуВМассивПодстрокКлиент(Знач Строка, Знач Разделитель = "","", Знач ПропускатьПустыеСтроки = Неопределено) Экспорт
	Возврат РазложитьСтрокуВМассивПодстрокБезКонтекста(Строка, Разделитель, ПропускатьПустыеСтроки);
КонецФункции

&НаКлиенте
Функция СтрСоединить_(МассивЭлементов, Символ = """") Экспорт
	СтрокаРезультат = """";
	Если МассивЭлементов.Количество() > 0 Тогда
		СтрокаРезультат = МассивЭлементов.Получить(0) + Символ;
		Для сч = 0 по МассивЭлементов.ВГраница() Цикл
			Элемент = МассивЭлементов.Получить(сч);
			Если ЗначениеЗаполнено(Элемент) Тогда
				СтрокаРезультат = МассивЭлементов.Получить(сч) + Символ;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат СтрокаРезультат;
	
КонецФункции

// Замена функции СтрШаблон на конфигурациях с режимом совместимости < 8.3.6
// При внедрении в конфигурацию с режимом совместимости >= 8.3.6 данную функцию необходимо удалить
//
&НаКлиенте
Функция СтрШаблон_(Знач СтрокаШаблон, Знач Парам1 = Неопределено, Знач Парам2 = Неопределено, Знач Парам3 = Неопределено, Знач Парам4 = Неопределено) Экспорт
	
	МассивПараметров = Новый Массив;
	МассивПараметров.Добавить(Парам1);
	МассивПараметров.Добавить(Парам2);
	МассивПараметров.Добавить(Парам3);
	МассивПараметров.Добавить(Парам4);
	
	Для Сч = 1 По МассивПараметров.Количество() Цикл
		ТекЗначение = МассивПараметров[Сч-1];
		СтрокаШаблон = СтрЗаменить(СтрокаШаблон, ""%""+Сч, Строка(ТекЗначение));
	КонецЦикла;
	Возврат СтрокаШаблон;
КонецФункции

// Позволяет программно подключить внешнюю обработку
&НаКлиенте
Функция ПодключитьВнешнююОбработкуКлиент(ИмяФайла) Экспорт
	Если Не Объект.ИспользоватьПрямыеПутиФайлов Тогда
		Попытка
			ДополнительныеПараметры = Новый Структура;
			Если ЕстьПоддержкаНемодальныхФорм Тогда
				Оповещение = Вычислить(""Новый ОписаниеОповещения(""""ОбработкаПослеПомещенияФайла"""", ЭтаФорма, ДополнительныеПараметры)"");
				Выполнить(""НачатьПомещениеФайла(Оповещение, , ИмяФайла, Ложь, УникальныйИдентификатор);"");
				
				Возврат ДополнительныеПараметры.ИмяОбработки;
			Иначе
				АдресХранилища = """";
				ПоместитьФайл(АдресХранилища, ИмяФайла, , Ложь, УникальныйИдентификатор);
				Результат = Неопределено;
				ИмяОбработки = ПодключитьВнешнююОбработкуСервер(АдресХранилища,ЕстьЗащитаОтОпасныхДействий);
				Возврат ИмяОбработки;
			КонецЕсли;
			
		Исключение
			ЗаписатьЛогВЖРИнформация(""Загрузка"", 
			СтрШаблон_(""Не удалось подключить внешнюю обработку на клиенте:
			|Имя файла %1
			|%2"", ИмяФайла, ИнформацияОбОшибке().Описание));
			
			Возврат Неопределено;
		КонецПопытки;
	Иначе
		ФайлОбработки = Новый Файл(ИмяФайла);
		ИмяОбработки = ФайлОбработки.ИмяБезРасширения;
		СоздатьФайлОбработки(ФайлОбработки.ПолноеИмя, ИмяОбработки);
		Возврат ИмяОбработки;
	КонецЕсли;
КонецФункции

// Возвращает путь к парсеру фича файлов
&НаКлиенте
Функция ПолучитьПутьКFeatureReader() Экспорт
	ПутьКФайлу = ДополнитьСлешВПуть(Объект.КаталогИнструментов) + ""lib/featurereader/vbFeatureReader.epf"";
	
	Возврат ПутьКФайлу;
КонецФункции

&НаКлиенте
Функция ПреобразоватьПутьСТочкамиКНормальномуПути(Знач ОригСтр="""") Экспорт
	
	Если ПустаяСтрока(ОригСтр) Тогда
		Возврат ОригСтр;
	КонецЕсли;
	
	Если Найти(ОригСтр, ""$workspaceRoot"") > 0 Тогда
		ОригСтр = СтрЗаменить(ОригСтр, ""$workspaceRoot"", ДополнитьСлешВПуть(Объект.КаталогПроекта));
	КонецЕсли;
	
	Если Найти(ОригСтр, ""$instrumentsRoot"") > 0 И НЕ ПустаяСтрока(Объект.КаталогИнструментов) Тогда
		ОригСтр = СтрЗаменить(ОригСтр, ""$instrumentsRoot"", ДополнитьСлешВПуть(Объект.КаталогИнструментов));
	КонецЕсли;
	
	ФайлПути = Новый Файл(ОригСтр);
	Если Лев(ОригСтр, 1) = ""."" Тогда
		//Для совместимости со старым кодом оставим пока КаталогИнструментов, правильней было-бы использовать КаталогПроекта
		ФайлПути = Новый Файл(ДополнитьСлешВПуть(Объект.КаталогИнструментов) + ОригСтр);
	КонецЕсли;
	
	Возврат ФайлПути.ПолноеИмя;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(Версия1, Версия2) Экспорт
	Массив1 = РазложитьСтрокуВМассивПодстрокБезКонтекста(Версия1, ""."");
	Массив2 = РазложитьСтрокуВМассивПодстрокБезКонтекста(Версия2, ""."");
	
	Версия1БольшеИлиРавно = Истина;
	Для Ккк = 0 По Массив1.Количество() - 1 Цикл
		Элем1 = Массив1.Получить(Ккк);
		Элем2 = Массив2.Получить(Ккк);
		
		Если Число(Элем2) > Число(Элем1) Тогда
			Версия1БольшеИлиРавно = Ложь;
		ИначеЕсли Число(Элем2) < Число(Элем1) Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Версия1БольшеИлиРавно;
КонецФункции

&НаКлиенте
Функция ВерсияПриложенияБольшеИлиРавнаЧемЗаданнаяКлиент(Версия1, Версия2) Экспорт
	
	Возврат ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(Версия1, Версия2);
	
КонецФункции

&НаКлиенте
Функция ПолучитьМакетОбработки(ИмяМакета) Экспорт
	Шаги = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
	
	Если (ТекИД_ШагаВМассиве >= 0) и (ТекИД_ШагаВМассиве <= (Шаги.Количество() - 1)) Тогда
		ТекШаг       = Шаги[ТекИД_ШагаВМассиве];
		ИДСтрокиШага = ТекШаг.СтрокаШага;
		СтрокаШага   = ПолучитьСтрокуШагаИзДанныхФормы(ИДСтрокиШага);
		
		ИмяФичи = ПолучитьИмяФичиИзПолногоПути(СтрокаШага.ПолныйПуть);
		ИмяШага = СтрокаШага.ИмяШагаБезКлючевогоСлова;
		
		Макет = Неопределено;
		Попытка
			Обработка = ПолучитьОбработкаСвязаннаяСИсполняемойФичей(ИмяФичи);
			
			//Далее будет попытка получить макет из обработки, которая относистся к данному шагу (это либо обработка подчиненного сценария, либо обработка связанная с основной фичей).
			//Его может не быть, если это подчиненный сценарий, а хотели получить макет из основной фичи.
			//Если макет не был получен - значит далее будет попытка получить макет из обработки связанной с основной фичей, если такая обработка существует.
			Макет     = Обработка.ПолучитьМакетОбработки(ИмяМакета);
			Возврат Макет;
		Исключение
			ИнфоОшибки = ИнформацияОбОшибке();
			СообщениеОшибки = СтрШаблон(""Не удалось найти макет <%1> в фиче <%2>
			|%3"", ИмяМакета, ИмяФичи, ПодробноеПредставлениеОшибки(ИнфоОшибки));
			ЗаписатьЛогВЖРИнформация(""Макеты"", СообщениеОшибки);
		КонецПопытки;
	КонецЕсли;
	
	ИДСтрокиСценария = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
	СтрокаСценария   = ПолучитьСтрокуСценарияИзДанныхФормы(ИДСтрокиСценария);
	Если СтрокаСценария.ФичаИмеетСвоюEPF Тогда
		СтрокаФичи = НайтиСтрокуФичиЧерезРодителя(СтрокаСценария);
		ПутьФайлаСтрокиФичи = СтрокаФичи.ПолныйПуть;
		Если УниверсальноеПолноеИмяФайла(ПутьФайлаСтрокиФичи) <> УниверсальноеПолноеИмяФайла(ИмяФичи) Тогда
			
			Обработка  = ПолучитьОбработкаСвязаннаяСИсполняемойФичей(ПутьФайлаСтрокиФичи);
			
			Попытка
				Макет      = Обработка.ПолучитьМакетОбработки(ИмяМакета);
				Возврат Макет;
			Исключение
				ИнфоОшибки = ИнформацияОбОшибке();
				СообщениеОшибки = СтрШаблон(""Не удалось найти макет <%1> в файле шагов фичи <%2>
				|%3"", ИмяМакета, ПутьФайлаСтрокиФичи, ПодробноеПредставлениеОшибки(ИнфоОшибки));
				ЗаписатьЛогВЖРИнформация(""Макеты"", СообщениеОшибки);
			КонецПопытки;
		КонецЕсли;
		
	КонецЕсли;
	
	Попытка
		Макет = НайтиМакетВКаталогеПроекта(ИмяМакета);
		Возврат Макет;
	Исключение
		ИнфоОшибки = ИнформацияОбОшибке();
		СообщениеОшибки = СтрШаблон(""Не удалось найти макет <%1> в каталоге проекта <%2>
		|%3"", ИмяМакета, Объект.КаталогПроекта, ПодробноеПредставлениеОшибки(ИнфоОшибки));
		ЗаписатьЛогВЖРИнформация(""Макеты"", СообщениеОшибки);
		Сообщить(СообщениеОшибки + Символы.ПС + ИнфоОшибки.Описание);
	КонецПопытки;
	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Функция НайтиМакетВКаталогеПроекта(ИмяМакета) Экспорт
	Если НЕ ЗначениеЗаполнено(Объект.КаталогПроекта) Тогда
		ТекстСообщения = ""Не найден эталон макета <%1>. Реквизит """"Каталог проекта"""" не заполнен."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяМакета);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Нашли = Ложь;
	
	ИмяМакетаДляПоиска = ИмяМакета;
	ИмяФайла           = Неопределено;
	Нашли              = НайтиМакетВКаталогеПроектаСлужебный(ИмяМакетаДляПоиска, ИмяФайла);
	
	
	
	Если Не Нашли Тогда
		ТекстСообщения = ""Не найден файл макета <%1> в каталоге проекта <%2>"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяМакета);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",Объект.КаталогПроекта);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ДвоичныеДанные = Новый ДвоичныеДанные(ИмяФайла);
	АдресВременногоХранилища = ПоместитьВоВременноеХранилище(ДвоичныеДанные);
	ТабДок = ПолучитьТабличныйДокументНаСервере(АдресВременногоХранилища);
	Возврат Табдок;
КонецФункции

&НаСервере
Функция Объект() Экспорт
	Возврат РеквизитФормыВЗначение(""Объект"");
КонецФункции

&НаКлиенте
Функция УстановленOneScript() Экспорт
	
	УправлениеПриложениями = Плагин(""УправлениеПриложениями"");
	Возврат УправлениеПриложениями.УстановленOneScript();
	
КонецФункции // УстановленOneScript()

&НаКлиенте
Процедура СоздатьШаблоныОбработок() Экспорт
	
	Если Не ЗначениеЗаполнено(Объект.ВерсияПлатформыДляГенерацииEPF) Тогда
		СделатьСообщение(""Не указан каталог с нужной версией платформы 8.3.10 или выше."");
		Возврат;
	КонецЕсли;
	
	ИмяФайла = ДополнитьСлешВПуть(Объект.ВерсияПлатформыДляГенерацииEPF) + ""1cv8.exe"";
	Если ЭтоLinux Тогда
		ИмяФайла = ДополнитьСлешВПуть(Объект.ВерсияПлатформыДляГенерацииEPF) + ""1cv8"";
	КонецЕсли;
	
	Если Не ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
		СтрокаСообщения = ""Не найден файл <%1>"";
		СтрокаСообщения = СтрЗаменить(СтрокаСообщения,""%1"",ИмяФайла);
		СделатьСообщение(СтрокаСообщения);
		Возврат;
	КонецЕсли;
	
	МассивДействий = Новый Массив;
	ДобавитьМассивСостоянийФайлов(МассивДействий);
	ДобавитьСканированиеКаталогов(МассивДействий);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить(""ТекИдМассива"", 0);
	ДопПараметры.Вставить(""МассивДействий"", МассивДействий);
	ДопПараметры.Вставить(""НадоЗагрузитьФичи"", Ложь);
	ДопПараметры.Вставить(""НадоГенерироватьEPF"", Истина);
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ПолучитьАсинхроноСостоянияОбъектовФайловойСистемы(ДопПараметры);
	Иначе
		ПолучитьСинхроноСостоянияОбъектовФайловойСистемы(ДопПараметры);
		СоздатьШаблоныОбработокПродолжение();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивPIDПроцессов(ИмяОбраза) Экспорт
	
	УправлениеПриложениями = Плагин(""УправлениеПриложениями"");
	Возврат УправлениеПриложениями.ПолучитьМассивPIDПроцессов(ИмяОбраза);
	
КонецФункции

&НаКлиенте
Процедура ЗавершитьСеансыTestClientПринудительно() Экспорт
	
	УправлениеПриложениями = Плагин(""УправлениеПриложениями"");
	УправлениеПриложениями.ЗавершитьСеансыTestClientПринудительно();
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивPIDОкон1С() Экспорт
	
	УправлениеПриложениями = Плагин(""УправлениеПриложениями"");
	Возврат УправлениеПриложениями.ПолучитьМассивPIDОкон1С();
	
КонецФункции

&НаКлиенте
Процедура СделатьОкноПроцессаАктивным(PID) Экспорт
	
	УправлениеПриложениями = Плагин(""УправлениеПриложениями"");
	УправлениеПриложениями.СделатьОкноПроцессаАктивным(PID);
	
КонецПроцедуры

&НаКлиенте
Процедура TASKKILL(ИмяПриложения) Экспорт
	
	УправлениеПриложениями = Плагин(""УправлениеПриложениями"");
	УправлениеПриложениями.TASKKILL(ИмяПриложения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьШагВМассивТестов(МассивТестов, Снипет, ИмяПроцедуры, ПредставлениеТеста = Неопределено, ОписаниеШага = Неопределено, ТипШагаДляОписания = Неопределено, ТипШагаВДереве = Неопределено) Экспорт
	Структура = Новый Структура;
	
	Структура.Вставить(""Снипет"", Снипет);
	Структура.Вставить(""ИмяПроцедуры"", ИмяПроцедуры);
	Структура.Вставить(""ПредставлениеТеста"", ПредставлениеТеста);
	Структура.Вставить(""ОписаниеШага"", ОписаниеШага);
	Структура.Вставить(""ТипШага"", ТипШагаДляОписания);
	Структура.Вставить(""ТипШагаВДереве"", ТипШагаВДереве);
	Структура.Вставить(""Транзакция"", Неопределено);
	МассивТестов.Добавить(Структура);
КонецПроцедуры

&НаКлиенте
Процедура ВывестиНаЭкранЗначениеСтруктуры(Значение) Экспорт
	Стр = """";
	Стр = Стр + ""Количество значений = "" + Значение.Количество() + Символы.ПС;
	Для Каждого Элем Из Значение Цикл
		Стр = Стр + ""Ключ="" + Элем.Ключ + "", Значение="" + Элем.Значение + Символы.ПС;
	КонецЦикла;
	
	Предупреждение(Стр, 5);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьКлиентовТестирования() Экспорт
	СохранитьНастройкиВХранилище(""ДанныеКлиентовТестирования"", ДанныеКлиентовТестирования);
КонецПроцедуры

//Преобразует строки вида ""больше или равно"" в "">=""
//Это нужно для работы ""Вычислить""
&НаКлиенте
Функция ПолучитьОператорПоТексту(Знач Стр) Экспорт
	Стр = СокрЛП(НРег(Стр));
	
	Если Стр = ""больше"" Тогда
		Стр = "">"";
	ИначеЕсли Стр = ""меньше"" Тогда
		Стр = ""<"";
	ИначеЕсли Стр = ""больше или равно"" Тогда
		Стр = "">="";
	ИначеЕсли Стр = ""меньше или равно"" Тогда
		Стр = ""<="";
	ИначеЕсли Стр = ""равно"" Тогда
		Стр = ""="";
	ИначеЕсли Стр = ""неравно"" Тогда
		Стр = ""<>"";
	ИначеЕсли Стр = ""не равно"" Тогда
		Стр = ""<>"";
	КонецЕсли;
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Процедура ВычислитьPIDЭтогоСеансаСлужебный() Экспорт
	Попытка
		PIDЭтогоСеанса = """";
		
		oLocator = Новый COMObject(""WbemScripting.SWbemLocator"");
		oService = oLocator.ConnectServer(""."", ""root\CIMV2"");
		
		oShell = Новый COMObject(""WScript.Shell"");
		oApp = oShell.Exec(""rundll32.exe kernel32,Sleep"");
		
		oChildProcess = oService.Get(""Win32_Process.Handle="" + XMlСтрока(oApp.ProcessID));
		
		PIDЭтогоСеанса = XMlСтрока(oChildProcess.ParentProcessID);
		
		oChildProcess.Terminate();
	Исключение
		СделатьСообщение(ОписаниеОшибки());
	КонецПопытки;
КонецПроцедуры

// метод используется только в служебном шаге ""Когда я загружаю список фича файлов из указанных настроек и фильтров""
&НаКлиенте
Функция ПолучитьМассивФичаФайловИзКаталогаСогласноНастроек(КаталогСФичами) Экспорт
	СписокКаталогов = Новый СписокЗначений;
	СписокФайлов    = Новый СписокЗначений;
	НайтиФайлыКомандаСистемы(КаталогСФичами,СписокКаталогов,СписокФайлов,Истина);
	
	Массив = Новый Массив;
	
	Массив.Добавить(Новый Структура(""Каталог,Фича,Уровень,Имя,ПолныйПуть,ДвоичныеДанные"",Истина,Ложь,1,
	КаталогСФичами,КаталогСФичами,Неопределено));
	
	Для Каждого ЭлементСпискаФайлов Из СписокФайлов Цикл
		Если НРег(Прав(ЭлементСпискаФайлов.Значение.ПолноеИмя,8)) <> "".feature"" Тогда
			Продолжить;
		КонецЕсли;
		
		Массив.Добавить(Новый Структура(""Каталог,Фича,Уровень,Имя,ПолныйПуть,ДвоичныеДанные"",Ложь,Истина,2,
		ЭлементСпискаФайлов.Значение.Имя,ЭлементСпискаФайлов.Значение.ПолноеИмя,Новый ДвоичныеДанные(ЭлементСпискаФайлов.Значение.ПолноеИмя)));
	КонецЦикла;
	МассивРезультатОбходаКаталогов = Массив;
	
	ДвДанныеvbFeatureReader = Новый ДвоичныеДанные(ПолучитьПутьКFeatureReader());
	
	МассивФичДляПослеНаложенияФильтров = Новый Массив;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить(""DebugLog"",Ложь);
	СтруктураПараметров.Вставить(""Брейкпоинты"",Новый Массив);
	СтруктураПараметров.Вставить(""ДополнительныеПараметры"",Неопределено);
	СтруктураПараметров.Вставить(""ИдетЗагрузкаИзКаталога"",Истина);
	СтруктураПараметров.Вставить(""КаталогИнструментов"",Объект.КаталогИнструментов);
	СтруктураПараметров.Вставить(""КаталогФич"",Объект.КаталогФич);
	СтруктураПараметров.Вставить(""КаталогиБиблиотек"",Объект.КаталогиБиблиотек);
	СтруктураПараметров.Вставить(""МассивРезультатОбходаКаталогов"",Новый Массив);
	СтруктураПараметров.Вставить(""МассивСообщений"",Новый Массив);
	СтруктураПараметров.Вставить(""ПутьКОбработке"",Неопределено);
	СтруктураПараметров.Вставить(""СписокТеговИсключение"",Объект.СписокТеговИсключение);
	СтруктураПараметров.Вставить(""СписокТеговОтбор"",Объект.СписокТеговОтбор);
	СтруктураПараметров.Вставить(""ТаблицаУжеСуществующихСценариевУФ"",Новый Массив);
	СтруктураПараметров.Вставить(""ТолькоДляПолученияСпискаФич"",Истина);
	СтруктураПараметров.Вставить(""МассивФичДляПослеНаложенияФильтров"",МассивФичДляПослеНаложенияФильтров);
	СтруктураПараметров.Вставить(""ЭтоLinux"",ЭтоLinux);
	
	СтруктураПараметров.Вставить(""РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов"", 
		Объект.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов);
	СтруктураПараметров.Вставить(""МассивИменКонтекстовОбработок"", МассивИменКонтекстовОбработок);
	Если Объект.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов Тогда
		СтруктураПараметров.Вставить(""ИдСтрокиШагаСКоторогоВыполнятьСценарийССохранениемКонтекстов"", 
			СтрокаШагаСКоторогоНадоВыполнятьСценарий.ИдСтроки);
	КонецЕсли;
	
	ЗаполнитьДеревоЗначенийПоМассивуСервер(МассивРезультатОбходаКаталогов, ДвДанныеvbFeatureReader, СтруктураПараметров);
	
	Возврат СтруктураПараметров.МассивФичДляПослеНаложенияФильтров;
КонецФункции

&НаКлиенте
Функция ЗаменитьСлужебныеСимволыВВыраженииДляВычисления(Знач Текст) Экспорт
	Текст = СтрЗаменить(Текст,""$$"",""~Экранирование$$~"");
	
	МассивСтрок = РазложитьСтрокуВМассивПодстрок(Текст,""~Экранирование$$~"");
	ЭтоВыражение = Ложь;
	
	Если Лев(Текст,СтрДлина(""~Экранирование$$~"")) = ""~Экранирование$$~"" Тогда
		ЭтоВыражение = Истина;
	КонецЕсли;
	
	Результат = """";
	Для Каждого Стр Из МассивСтрок Цикл
		Если Стр = """" Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭтоВыражение Тогда
			Результат = Результат + ""ОбъектКонтекстСохраняемый."" + Стр;
		Иначе
			Результат = Результат + Стр;
		КонецЕсли;
		
		ЭтоВыражение = Не ЭтоВыражение;
	КонецЦикла;
	
	
	
	Текст = СтрЗаменить(Результат,""$"",""~Экранирование$~"");
	
	МассивСтрок = РазложитьСтрокуВМассивПодстрок(Текст,""~Экранирование$~"");
	ЭтоВыражение = Ложь;
	
	Если Лев(Текст,СтрДлина(""~Экранирование$~"")) = ""~Экранирование$~"" Тогда
		ЭтоВыражение = Истина;
	КонецЕсли;
	
	Результат = """";
	Для Каждого Стр Из МассивСтрок Цикл
		Если Стр = """" Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭтоВыражение Тогда
			Результат = Результат + ""ОбъектКонтекст."" + Стр;
		Иначе
			Результат = Результат + Стр;
		КонецЕсли;
		
		ЭтоВыражение = Не ЭтоВыражение;
	КонецЦикла;
	
	
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ВычислитьВнутреннееВыражение(Знач Выражение) Экспорт
	Выражение           = ЗаменитьСлужебныеСимволыВВыраженииДляВычисления(Выражение);
	Контекст            = ОбъектКонтекст;
	КонтекстСохраняемый = ОбъектКонтекстСохраняемый;
	Возврат Вычислить(Выражение);
КонецФункции

&НаКлиенте
Функция ПолучитьСтрокуВычисливВнутренниеВыражения(Знач Текст) Экспорт
	Результат = """";
	
	Текст = СтрЗаменить(Текст,""Ванесса."",""ЭтаФорма."");
	Текст = СтрЗаменить(Текст,""Контекст."",""ОбъектКонтекст."");
	Текст = СтрЗаменить(Текст,""КонтекстСохраняемый."",""ОбъектКонтекстСохраняемый."");
	
	МассивСтрок = РазложитьСтрокуВМассивПодстрок(Текст,""$"");
	ЭтоВыражение = Ложь;
	Если Лев(Текст,1) = ""$"" Тогда
		ЭтоВыражение = Истина;
	КонецЕсли;
	
	Результат = """";
	Для Каждого Стр Из МассивСтрок Цикл
		Если ЭтоВыражение Тогда
			Результат = Результат + Вычислить(Стр);
		Иначе
			Результат = Результат + Стр;
		КонецЕсли;
		
		ЭтоВыражение = Не ЭтоВыражение;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ПолучитьЗначениеДополнительногоПараметра(ИмяПараметра) Экспорт
	Значение = Неопределено;
	Объект.ДополнительныеПараметры.Свойство(ИмяПараметра,Значение);
	
	Возврат Значение;
КонецФункции

&НаКлиенте
Процедура УстановитьЗначениеДополнительногоПараметра(ИмяПараметра, Значение) Экспорт
	Объект.ДополнительныеПараметры.Вставить(ИмяПараметра, Значение);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСтрокуСтатуса(Стр) Экспорт
	Если НЕ Элементы.СтрокаСтатуса.Видимость Тогда
		Элементы.СтрокаСтатуса.Видимость = Истина;
	КонецЕсли;
	
	СтрокаСтатуса = Стр;
КонецПроцедуры

//позволяет сделать поиск в строке ""ПроверяемаяСтрока"" подстроки ""Шаблон""
//при этом подстрока ""Шаблон"" может содержать символы *
//например СтрокаСоответствуетШаблону(""Привет"",""*вет"")
&НаКлиенте
Функция СтрокаСоответствуетШаблону(ПроверяемаяСтрока, Знач Шаблон) Экспорт
	
	РегулярныеВыражения = Плагин(""РегулярныеВыражения"");
	Нашли = РегулярныеВыражения.СтрокаСоответствуетШаблону(ПроверяемаяСтрока, Шаблон);
	Возврат Нашли;
	
КонецФункции

//Делает склейку параметров в одну строку, если они переданы.
&НаКлиенте
Процедура СоеденитьСтрокиЕслиЭтоВозможно(Стр,Стр2,Стр3,Стр4,Стр5,Стр6,Стр7) Экспорт
	Если Стр2 <> Неопределено Тогда
		Стр = Стр + Стр2;
	КонецЕсли;
	Если Стр3 <> Неопределено Тогда
		Стр = Стр + Стр3;
	КонецЕсли;
	Если Стр4 <> Неопределено Тогда
		Стр = Стр + Стр4;
	КонецЕсли;
	Если Стр5 <> Неопределено Тогда
		Стр = Стр + Стр5;
	КонецЕсли;
	Если Стр6 <> Неопределено Тогда
		Стр = Стр + Стр6;
	КонецЕсли;
	Если Стр7 <> Неопределено Тогда
		Стр = Стр + Стр7;
	КонецЕсли;
КонецПроцедуры

//позволяет указать значения таблиц или макетов, которые потом можно будет сравнить между собой
//также эти значения потом будут прикреплены к отчету Allure
//Если Тип = Неопределено, тогда считается, что переданы таблицы
&НаКлиенте
Процедура УстановитьЗначенияТаблицДляСравнения(Эталон,ТекущееЗначение,Тип = Неопределено) Экспорт
	Если Тип = Неопределено Тогда
		ГлобальныеЗначенияТаблиц.Вставить(""ТаблицаЭталон"",Эталон);
		ГлобальныеЗначенияТаблиц.Вставить(""ТаблицаТекущееЗначение"",ТекущееЗначение);
	Иначе
		ЗначениеЭталон = Новый Структура;
		ЗначениеЭталон.Вставить(""Тип"",Тип);
		ЗначениеЭталон.Вставить(""Значение"",Эталон);
		ГлобальныеЗначенияТаблиц.Вставить(""ТаблицаЭталон"",ЗначениеЭталон);
		
		ЗначениеТекущееЗначение = Новый Структура;
		ЗначениеТекущееЗначение.Вставить(""Тип"",Тип);
		ЗначениеТекущееЗначение.Вставить(""Значение"",ТекущееЗначение);
		ГлобальныеЗначенияТаблиц.Вставить(""ТаблицаТекущееЗначение"",ЗначениеТекущееЗначение);
	КонецЕсли;
КонецПроцедуры

//преобразует табличный документ в массив структур
//в первой строке макета должна быть строка с именами колонок
&НаКлиенте
Функция ПреобразоватьТабличныйДокументВМассивСтруктур(ТабДок) Экспорт
	Массив = Новый Массив;
	
	Если Ложь Тогда
		ТабДок = Новый ТабличныйДокумент;
	КонецЕсли;	 
	
	Если ТабДок.ВысотаТаблицы = 0 Тогда
		Возврат Массив;
	КонецЕсли;	 
	
	СтрокаТаблицы = Новый Структура;
	Для Ррр = 1 По ТабДок.ШиринаТаблицы Цикл
		СтрокаТаблицы.Вставить(""Кол"" + XMlСтрока(Ррр),ТабДок.Область(1,Ррр,1,Ррр).Текст);
	КонецЦикла;	
	Массив.Добавить(СтрокаТаблицы);
	
	Для Ккк = 2 По ТабДок.ВысотаТаблицы Цикл
		СтрокаТаблицы = Новый Структура;
		Для Ррр = 1 По ТабДок.ШиринаТаблицы Цикл
			СтрокаТаблицы.Вставить(""Кол"" + XMlСтрока(Ррр),ТабДок.Область(Ккк,Ррр,Ккк,Ррр).Текст);
		КонецЦикла;	
		Массив.Добавить(СтрокаТаблицы);
	КонецЦикла;	
	
	Возврат Массив;
КонецФункции	 

//прикрепляет к строке сценария макет
&НаКлиенте
Процедура ПрикрепитьМакетКСценарию(Макет,Имя) Экспорт
	Если ВсеСценарииВыполнены() Тогда
		ВызватьИсключение ""Не смог получить строку сценария."";
	КонецЕсли;
	
	ИДСтрокиСценария = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
	ОбновитьКешДанныхФормыЕслиЭтоНеобходимо(Неопределено,ИДСтрокиСценария,Истина);
	СтрокаСценария   = ПолучитьСтрокуСценарияИзДанныхФормы(ИДСтрокиСценария);
	
	Если СтрокаСценария = Неопределено Тогда
		ВызватьИсключение ""Не смог получить строку сценария."";
	КонецЕсли;
	
	Если СтрокаСценария.ПроизвольныеЗначения = Неопределено Тогда
		СтрокаСценария.ПроизвольныеЗначения = Новый Структура;
	КонецЕсли;
	
	ПроизвольныеЗначения = СтрокаСценария.ПроизвольныеЗначения;
	Если Не ПроизвольныеЗначения.Свойство(""ПрикрепленныеМакеты"") Тогда
		ПроизвольныеЗначения.Вставить(""ПрикрепленныеМакеты"",Новый Массив);
	КонецЕсли;
	
	ПрикрепленныеМакеты = ПроизвольныеЗначения.ПрикрепленныеМакеты;
	
	ПрикрепленныеМакеты.Добавить(Новый Структура(""Макет,Имя"",Макет,Имя));
КонецПроцедуры

#КонецОбласти //ОбщегоНазначения

#Область РаботаСПеременнымиКонтекста

&НаКлиенте
Процедура СохранитьЗначениеВКонтекст(ИмяПеременной,Значение) Экспорт
	Если НЕ ОбъектКонтекст.Свойство(""СохраняемыеЗначения"") Тогда
		ОбъектКонтекст.Вставить(""СохраняемыеЗначения"",Новый Соответствие);
	КонецЕсли;
	
	ОбъектКонтекст.СохраняемыеЗначения.Вставить(ИмяПеременной,Значение);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьЗначениеВКонтекстСохраняемый(Знач ИмяПеременной,Значение) Экспорт
	Если НЕ ОбъектКонтекстСохраняемый.Свойство(""СохраняемыеЗначения"") Тогда
		ОбъектКонтекстСохраняемый.Вставить(""СохраняемыеЗначения"",Новый Соответствие);
	КонецЕсли;
	
	//уберём служебные символы
	Если Лев(ИмяПеременной,2) = ""$$"" и Прав(ИмяПеременной,2) = ""$$"" Тогда
		ИмяПеременной = Сред(ИмяПеременной,3,СтрДлина(ИмяПеременной)-4);
	КонецЕсли;
	
	Если Лев(ИмяПеременной,1) = ""$"" и Прав(ИмяПеременной,1) = ""$"" Тогда
		ИмяПеременной = Сред(ИмяПеременной,2,СтрДлина(ИмяПеременной)-2);
	КонецЕсли;
	
	ОбъектКонтекстСохраняемый.СохраняемыеЗначения.Вставить(ИмяПеременной,Значение);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСохраненноеЗначениеИзКонтекста(ИмяПеременной) Экспорт
	Если НЕ ОбъектКонтекст.Свойство(""СохраняемыеЗначения"") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ОбъектКонтекст.СохраняемыеЗначения[ИмяПеременной];
КонецФункции

&НаКлиенте
Функция ПолучитьСохраненноеЗначениеИзКонтекстаСохраняемого(ИмяПеременной) Экспорт
	Если НЕ ОбъектКонтекстСохраняемый.Свойство(""СохраняемыеЗначения"") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ОбъектКонтекстСохраняемый.СохраняемыеЗначения[ИмяПеременной];
КонецФункции

#КонецОбласти //РаботаСПеременнымиКонтекста

#Область РаботаСФайлами

&НаКлиенте
Процедура УдалитьФайлыКомандаСистемы(Знач ИмяФайла) Экспорт
	Отладка(СтрШаблон_(""УдалитьФайлыКомандаСистемы - %1"", ИмяФайла));
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если ЭтоLinux Тогда
			ИмяФайла = СтрЗаменить(ИмяФайла, ""\"", ""/"");
			КомандаСистемы(""rm -Rf """""" + ИмяФайла + """""""");
		Иначе
			ИмяФайла = СтрЗаменить(ИмяФайла, ""/"", ""\"");
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(""DEL /Q """""" + ИмяФайла + """""""", Истина, Ложь);
		КонецЕсли;
	Иначе
		УдалитьФайлы(ИмяФайла);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьКаталогКомандаСистемы(Знач ИмяФайла) Экспорт
	Отладка(СтрШаблон_(""УдалитьКаталогКомандаСистемы - %1"", ИмяФайла));
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если ЭтоLinux Тогда
			ИмяФайла = СтрЗаменить(ИмяФайла, ""\"", ""/"");
			КомандаСистемы(""rm -Rf """""" + ИмяФайла + """""""");
		Иначе
			
			ИмяФайла = СтрЗаменить(ИмяФайла, ""/"", ""\"");
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(""RD /S /Q """""" + ИмяФайла + """""""", Истина, Ложь);
		КонецЕсли;
		
	Иначе
		УдалитьФайлы(ИмяФайла);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьФайлКомандаСистемы(Знач Откуда, Знач Куда) Экспорт
	Отладка(СтрШаблон_(""ПереместитьФайлКомандаСистемы - из %1 в %2 "", Откуда, Куда));
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		//КомандаСистемы(""MOVE """""" + Откуда + """""" """""" + Куда + """""""");
		Если ЭтоLinux Тогда
			Откуда = СтрЗаменить(Откуда, ""\"", ""/"");
			Куда   = СтрЗаменить(Куда, ""\"", ""/"");
			КомандаСистемы(""mv -f """""" + Откуда + """""" """""" + Куда + """""""");
		Иначе
			
			Откуда = СтрЗаменить(Откуда, ""/"", ""\"");
			Куда   = СтрЗаменить(Куда, ""/"", ""\"");
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(""MOVE /Y """""" + Откуда + """""" """""" + Куда + """""""", Истина, Ложь);
		КонецЕсли;
	Иначе
		ПереместитьФайл(Откуда, Куда);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ВремяИзмененияФайлаКомандаСистемы(ИмяФайла) Экспорт
	Отладка(СтрШаблон_(""ВремяИзмененияФайлаКомандаСистемы - %1"", ИмяФайла));
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если ЭтоLinux Тогда
			//FIXME:
			Возврат ТекущаяДата();
			//ВызватьИсключение ""TODO: Сделать для Linux."";
		КонецЕсли;
		
		Файл = Новый Файл(ИмяФайла);
		Путь = Файл.Путь;
		Если Прав(Путь, 1) = ""\"" или Прав(Путь, 1) = ""/"" Тогда
			Путь = Лев(Путь, СтрДлина(Путь) - 1);
		КонецЕсли;
		ТолькоИмяФайла = Файл.Имя;
		
		ИмяФайлаЛога = ПолучитьИмяВременногоФайла(""txt"");
		Команда = ""forfiles /p """""" + Путь + """""" /m """""" + ТолькоИмяФайла + """""" /c """"cmd /c echo @fdate @ftime"""" > """""" + ИмяФайлаЛога + """""""";
		ВыполнитьКомандуОСБезПоказаЧерногоОкна(Команда, Истина, Истина);//TODO проверить быстрое использование ВыполнитьКомандуОСБезПоказаЧерногоОкна(Команда, Истина, Ложь);
		
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(ИмяФайлаЛога, ""UTF-8"");
		ТекстЛога = СокрЛП(Текст.Прочитать());
		Текст.Закрыть();
		
		УдалитьФайлыКомандаСистемы(ИмяФайлаЛога);
		
		ТекстЛога = СтрЗаменить(ТекстЛога, "" "", "":"");
		ТекстЛога = СтрЗаменить(ТекстЛога, ""."", "":"");
		МассивЗначений = РазложитьСтрокуВМассивПодстрокКлиент(ТекстЛога, "":"");
		
		День    = Число(МассивЗначений[0]);
		Месяц   = Число(МассивЗначений[1]);
		Год     = Число(МассивЗначений[2]);
		Часы    = Число(МассивЗначений[3]);
		Минуты  = Число(МассивЗначений[4]);
		Секунды = Число(МассивЗначений[5]);
		
		Возврат Дата(Год, Месяц, День, Часы, Минуты, Секунды);
		
	Иначе
		Файл = Новый Файл(ИмяФайла);
		Возврат Файл.ПолучитьВремяИзменения();
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура НайтиФайлыКомандаСистемы(Путь, СписокКаталогов, СписокФайлов, ИскатьВПодкаталогах, 
		Знач КаталогДляВременныхФайлов = """") Экспорт
	
	Отладка(СтрШаблон_(""НайтиФайлыКомандаСистемы - %1, ИскатьВПодкаталогах %2"", Путь, ИскатьВПодкаталогах));
	
	Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
		Файлы = НайтиФайлы(Путь, ""*"", ИскатьВПодкаталогах);
		
		Для Каждого Файл Из Файлы Цикл
			Если Файл.ЭтоКаталог() Тогда
				СписокКаталогов.Добавить(Файл, Файл.ПолноеИмя);
			Иначе
				СписокФайлов.Добавить(Файл, Файл.ПолноеИмя);
			КонецЕсли;
		КонецЦикла;
	Иначе
		
		//получение каталогов
		Если Не ЗначениеЗаполнено(КаталогДляВременныхФайлов) Тогда
			ИмяФайлаЛога = ПолучитьИмяВременногоФайла(""txt""); // имя этого временного файла буду переиспользовать для ускорения
		Иначе
			ИмяФайлаЛога = ПолучитьПутьВременногоФайла(КаталогДляВременныхФайлов);
		КонецЕсли;
		
		Если ЭтоLinux Тогда
			
			КомандаКаталоги = ""find """""" + Путь + """""" ""+ ?(ИскатьВПодкаталогах, """", ""-maxdepth 1"") + ""-type d -name '*'"" + "" > """""" + ИмяФайлаЛога + """""""";
			КомандаСистемы(КомандаКаталоги);
		Иначе
			
			КомандаКаталоги = ""DIR """""" + Путь + """""" /A:D /B "" + ?(ИскатьВПодкаталогах, ""/S"", """") + "" > """""" + ИмяФайлаЛога + """""""";
			//последний параметр важен для правильного чтения русских имен файлов
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(КомандаКаталоги, Истина, Истина);
			
		КонецЕсли;
		
		МассивСтрокИзФайла = ЗагрузитьФайлВМассив(ИмяФайлаЛога);
		Для каждого Стр Из МассивСтрокИзФайла Цикл
			СписокКаталогов.Добавить(Новый Файл(Стр), Стр);
		КонецЦикла;
		
		//получение файлов
		
		Если ЭтоLinux Тогда
			
			КомандаКаталоги = ""find """""" + Путь + """""" ""+ ?(ИскатьВПодкаталогах, """", ""-maxdepth 1"") + ""-type f -name '*'"" + "" > """""" + ИмяФайлаЛога + """""""";
			КомандаСистемы(КомандаКаталоги);
		Иначе
			
			КомандаФайлы = ""DIR """""" + Путь + """""" /A:-D /B "" + ?(ИскатьВПодкаталогах, ""/S"", """") + "" > """""" + ИмяФайлаЛога + """""""";
			
			//последний параметр важен для правильного чтения русских имен файлов
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(КомандаФайлы, Истина, Истина);
		КонецЕсли;
		
		МассивСтрокИзФайла = ЗагрузитьФайлВМассив(ИмяФайлаЛога);
		Для каждого Стр Из МассивСтрокИзФайла Цикл
			СписокФайлов.Добавить(Новый Файл(Стр), Стр);
		КонецЦикла;

		Если Не ЗначениеЗаполнено(КаталогДляВременныхФайлов) Тогда
			УдалитьФайлыКомандаСистемы(ИмяФайлаЛога);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьКаталогКомандаСистемы(Знач Откуда, Знач Куда, Знач КаталогДляВременныхФайлов = """")
	Отладка(СтрШаблон_(""КопироватьКаталогКомандаСистемы - из %1 в %2 "", Откуда, Куда));

	Куда = СтрЗаменить(Куда, ""\"", ""/"");
	Если Прав(Куда, 1) = ""/"" Тогда
		Куда = Лев(Куда, СтрДлина(Куда) - 1);
	КонецЕсли;
	
	СписокКаталогов = Новый СписокЗначений;
	СписокФайлов    = Новый СписокЗначений;
	
	НайтиФайлыКомандаСистемы(Откуда, СписокКаталогов, СписокФайлов, Истина, КаталогДляВременныхФайлов);
	
	СписокКаталогов.СортироватьПоПредставлению();
	
	Позиция = СтрДлина(Откуда) + 1 + 1;
	
	Для Каждого Каталог Из СписокКаталогов Цикл
		ВтораяЧастьПути = СтрЗаменить(Сред(Каталог.Значение.ПолноеИмя, Позиция), ""\"", ""/"");
		НовыйКаталогИмя = Куда + ""/"" + ВтораяЧастьПути;
		
		СоздатьКаталогКомандаСистемы(НовыйКаталогИмя);
	КонецЦикла;
	
	Для Каждого ЭлементФайл Из СписокФайлов Цикл
		Файл            = ЭлементФайл.Значение;
		ВтораяЧастьПути = СтрЗаменить(Сред(Файл.ПолноеИмя, Позиция), ""\"", ""/"");
		НовоеИмяФайла   = Куда + ""/"" + ВтораяЧастьПути;
		
		КопироватьФайлКомандаСистемы(Файл.ПолноеИмя, НовоеИмяФайла);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КопироватьФайлКомандаСистемы(Знач Откуда, Знач Куда) Экспорт
	Отладка(СтрШаблон_(""КопироватьФайлКомандаСистемы - из %1 в %2 "", Откуда, Куда));
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Команда = """";
		Если ЭтоLinux Тогда
			Откуда = СтрЗаменить(Откуда, ""\"", ""/"");
			Куда   = СтрЗаменить(Куда, ""\"", ""/"");
			Команда = ""cp -r """""" + Откуда + """""" """""" + Куда + """""""";
		Иначе
			Откуда = СтрЗаменить(Откуда, ""/"", ""\"");
			Куда   = СтрЗаменить(Куда, ""/"", ""\"");
			Команда = ""COPY """""" + Откуда + """""" """""" + Куда + """""""";
		КонецЕсли;
		
		Попытка
			Если ЭтоLinux Тогда
				КомандаСистемы(Команда);
			Иначе
				ВыполнитьКомандуОСБезПоказаЧерногоОкна(Команда, Истина, Ложь);
			КонецЕсли;
		Исключение
			ТекстСообщения = ""КопироватьФайлКомандаСистемы:%1 команда:%2"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ОписаниеОшибки());
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",Команда);
			Сообщить(ТекстСообщения);
		КонецПопытки;
	Иначе
		КопироватьФайл(Откуда, Куда);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКаталогКомандаСистемы(Знач ИмяФайла, ДополнительныеПараметрыАсинхронности = Неопределено) Экспорт
	Отладка(СтрШаблон_(""СоздатьКаталогКомандаСистемы - %1"", ИмяФайла));

	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ИмяФайла = СтрЗаменить(ИмяФайла, ""/"", ""\"");
		Если НЕ ЭтоLinux Тогда
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(""MKDIR """""" + ИмяФайла + """""""", Истина, Ложь);
		Иначе
			ИмяФайла = СтрЗаменить(ИмяФайла, ""\"", ""/"");
			КомандаСистемы(""mkdir -p """""" + ИмяФайла + """""""");
		КонецЕсли;
	Иначе
		СоздатьКаталог(ИмяФайла);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ФайлСуществуетКомандаСистемы(Знач ИмяФайла, ДопПараметры = Неопределено) Экспорт
	Отладка(СтрШаблон_(""ФайлСуществуетКомандаСистемы - %1"", ИмяФайла));
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда

		Если НЕ ЭтоLinux Тогда
			ИмяФайла = СтрЗаменить(ИмяФайла, ""/"", ""\"");
			Статус = ВыполнитьКомандуОСБезПоказаЧерногоОкна(
				""If Exist """""" + ИмяФайла + """""" (exit /b 10) Else (exit /b 20)"",
				Истина, Ложь);//TODO проверить запуск
			УспешныйКодВозврата = 10;
			Возврат Статус = УспешныйКодВозврата;

		КонецЕсли;

		ИмяВременногоЛог = ПолучитьИмяВременногоФайла(""log"");

		ИмяВременнгоФайла = ПолучитьИмяВременногоФайла(""sh"");
		ЗТ = Новый ЗаписьТекста(ИмяВременнгоФайла, ""UTF-8"", Символы.ПС, Истина, Символы.ПС);
		
		ЗТ.ЗаписатьСтроку(""#!/bin/sh"");
		
		Если Найти(ИмяФайла, "" "") > 0 Тогда
			ИмяФайла = СтрЗаменить(ИмяФайла, "" "", ""\ "");
		КонецЕсли;
		
		СтрокаКоманды = ""sh -c 'test -f "" + ИмяФайла + "" && echo yes || echo no' > "" + ИмяВременногоЛог + """";
		ЗТ.ЗаписатьСтроку(СтрокаКоманды);
		СтрокаКоманды = ""sh -c 'test -d "" + ИмяФайла + "" && echo yes || echo no' >> "" + ИмяВременногоЛог + """";
		ЗТ.ЗаписатьСтроку(СтрокаКоманды);
		ЗТ.Закрыть();
		
		КомандаСистемы(""sh "" + ИмяВременнгоФайла);
		
		ФайлСуществует = Ложь;
		
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(ИмяВременногоЛог, ""UTF-8"");
		
		Пока Истина Цикл
			Стр = Текст.ПрочитатьСтроку();
			Если Стр = Неопределено Тогда
				Прервать;
			КонецЕсли;
			
			Если Стр = ""yes"" Тогда
				ФайлСуществует = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Текст.Закрыть();
		
		Возврат ФайлСуществует;
	КонецЕсли;

	ФайлПроверкаСуществования = Новый Файл(ИмяФайла);
	Возврат ФайлПроверкаСуществования.Существует();
КонецФункции

&НаКлиенте
Процедура ОчиститьСодержимоеКаталога(Знач ИмяКаталога, ТипФайлов = ""*.*"") Экспорт
	Отладка(СтрШаблон_(""ОчиститьСодержимоеКаталога - %1, тип файлов %2"", ИмяКаталога, ТипФайлов));
	Если НЕ ФайлСуществуетКомандаСистемы(ИмяКаталога, ""ОчиститьСодержимоеКаталога"") Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрДлина(ИмяКаталога) <= 3 Тогда
		Возврат;
	КонецЕсли;
	
	Если Найти(Прав(ИмяКаталога, 1), ""\/"") > 0 Тогда
		ИмяКаталога = Лев(ИмяКаталога, СтрДлина(ИмяКаталога) - 1);
	КонецЕсли;
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		УдалитьКаталогКомандаСистемы(ИмяКаталога);
		СоздатьКаталогКомандаСистемы(ИмяКаталога);
	Иначе
		МассивФайлов = НайтиФайлы(ИмяКаталога, ТипФайлов, Ложь);
		Для каждого Файл Из МассивФайлов Цикл
			
			Попытка
				УдалитьФайлыКомандаСистемы(Файл.ПолноеИмя);
			Исключение
				СтрокаСообщения = ""Не смог удалить файл %1"";
				СтрокаСообщения = СтрЗаменить(СтрокаСообщения,""%1"",Файл.ПолноеИмя);
				СделатьСообщение(СтрокаСообщения);
			КонецПопытки;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти //РаботаСФайлами

#Область ЗагрузкаФич

&НаКлиенте
Процедура ЗагрузитьФичи() Экспорт
	Если Не Объект.РежимСамотестирования Тогда
		СохранитьНастройкиВХранилище(""КаталогФич"", Объект.КаталогФич);
	КонецЕсли;
	
	ФлагСценарииЗагружены                                               = Ложь;
	Объект.ИдетВыполнениеСценариев                                      = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШага                  = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением     = Ложь;
	Объект.РежимВыполненияОдногоШага                                    = Ложь;
	
	ОбновитьСтатусКнопкиВыполнитьСценарии();
	
	ДобавитьФичуВСписокНедавноЗагруженныхФич(Объект.КаталогФич);
	
	МассивДействий = Новый Массив;
	ДобавитьМассивСостоянийФайлов(МассивДействий);
	ДобавитьСканированиеКаталогов(МассивДействий);
	
	ПреобразоватьПутиБиблиотек();
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить(""ТекИдМассива"", 0);
	ДопПараметры.Вставить(""МассивДействий"", МассивДействий);
	ДопПараметры.Вставить(""НадоЗагрузитьФичи"", Истина);
	ДопПараметры.Вставить(""НадоГенерироватьEPF"", Ложь);
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ПолучитьАсинхроноСостоянияОбъектовФайловойСистемы(ДопПараметры);
	Иначе
		ПолучитьСинхроноСостоянияОбъектовФайловойСистемы(ДопПараметры);
		ЗагрузитьФичиПродолжение();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область АвтоИнструкции

&НаКлиенте
Процедура ЭтотШагНеНадоМасштабироватьВВидео() Экспорт
	Если ТекИД_СценарияВМассиве >= 0 Тогда
		Шаги = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		
		Если ТекИД_ШагаВМассиве >= 0 Тогда
			ТекШаг = Шаги[ТекИД_ШагаВМассиве];
			
			ТекШаг.Вставить(""МасштабироватьВВидео"", Ложь);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекстИнструкции(Стр) Экспорт
	Если ТекИД_СценарияВМассиве >= 0 Тогда
		Шаги = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		
		Если ТекИД_ШагаВМассиве >= 0 Тогда
			ТекШаг = Шаги[ТекИД_ШагаВМассиве];
			
			ТекШаг.Вставить(""ТекстИнструкция"", Стр);
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЭтоПрерывающйВидеоШаг(ТекШаг) Экспорт
	Поз = Найти(ТекШаг.Снипет, ""("");
	Стр = НРег(Лев(ТекШаг.Снипет, Поз - 1));
	
	Если МассивСнипетовПрерывающихЗаписьСценария.Найти(Стр) = Неопределено Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
КонецФункции

//рисует рамку вокруг активного элемента формы
&НаКлиенте
Процедура ПодсветитьАктивноеОкно(Длительность, ЖдатьЗавершения = Истина) Экспорт
	Если Не Объект.ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм Тогда
		Возврат;
	КонецЕсли;
	
	ПутьКПриложению = Объект.КаталогИнструментов + ""\tools\VideoTools\FrameShow.exe"";
	Если Не ФайлСуществуетКомандаСистемы(ПутьКПриложению) Тогда
		Возврат;
	КонецЕсли;
	
	Путь = ПутьКПриложению + "" -showframeofactivecontrol timeshowframe="" + СтрЗаменить(СтрЗаменить(Формат(Длительность, ""ND=10; NGS=*""), Символы.НПП, """"), ""*"", """");
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если ЖдатьЗавершения Тогда
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(Путь, Истина, Ложь);
		Иначе
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(Путь, Ложь, Ложь);
		КонецЕсли;
	Иначе
		ЗапуститьПриложение(Путь, , ЖдатьЗавершения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодсветитьАктивныйЭлементФормы() Экспорт
	Если Не Объект.ИдетЗаписьВидео Тогда
		Возврат;
	КонецЕсли;
	
	ПодсветитьАктивноеОкно(2000, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПодсветитьАктивныйЭлементФормыHTML() Экспорт
	Если Не Объект.СоздаватьИнструкциюHTML и Не Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат;
	КонецЕсли;
	
	ПодсветитьАктивноеОкно(20000, Ложь);
	
	Sleep(3);
КонецПроцедуры

&НаКлиенте
Процедура УбратьПодсветкуАктвиногоЭлемента() Экспорт
	TASKKILL(""FrameShow.exe"");
КонецПроцедуры

//перемещает курсор у активному объекту
&НаКлиенте
Процедура СделатьДействияПриЗаписиИнструкции(ПарамСтр = """")Экспорт
	СделатьДействияПриЗаписиHTML(ПарамСтр);
	СделатьДействияПриЗаписиВидео(ПарамСтр);
КонецПроцедуры

&НаКлиенте
Процедура СделатьДействияПриЗаписиВидео(ПарамСтр = """") Экспорт
	Если Объект.ИдетЗаписьВидео Тогда
		Если ПарамСтр = ""толькофрейм"" Тогда
			ПодсветитьАктивныйЭлементФормы();
		ИначеЕсли ПарамСтр = ""толькомышь"" Тогда
			ПереместитьКурсорМышиКАктивномуОбъекту();
		ИначеЕсли ПарамСтр = ""толькоскриншот"" Тогда
		Иначе
			ПереместитьКурсорМышиКАктивномуОбъекту();
			ПодсветитьАктивныйЭлементФормы();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СделатьДействияПриЗаписиHTML(ПарамСтр = """") Экспорт
	
	Попытка
		Шаги   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		ТекШаг = Шаги[ТекИД_ШагаВМассиве];
		Если ТекШаг.ЭтоШагКонтекста Тогда
			Возврат;
		КонецЕсли;
	Исключение
		
	КонецПопытки;
	
	
	Если Объект.СоздаватьИнструкциюHTML Тогда
		Если ПарамСтр = ""толькофрейм"" Тогда
			ПодсветитьАктивныйЭлементФормыHTML();
		ИначеЕсли ПарамСтр = ""толькомышь"" Тогда
			ПереместитьКурсорМышиКАктивномуОбъектуHTML();
		ИначеЕсли ПарамСтр = ""толькоскриншот"" Тогда
		Иначе
			ПереместитьКурсорМышиКАктивномуОбъектуHTML();
			ПодсветитьАктивныйЭлементФормыHTML();
		КонецЕсли;
		
		ДобавитьВЛогИнструкцииHTMLВыполненияШага();
		СкриншотСделанВСценарии = Истина;
		УбратьПодсветкуАктвиногоЭлемента();
	КонецЕсли;
	
	Если Объект.СоздаватьИнструкциюMarkdown Тогда
		Если ПарамСтр = ""толькофрейм"" Тогда
			ПодсветитьАктивныйЭлементФормыHTML();
		ИначеЕсли ПарамСтр = ""толькомышь"" Тогда
			ПереместитьКурсорМышиКАктивномуОбъектуHTML();
		ИначеЕсли ПарамСтр = ""толькоскриншот"" Тогда
		Иначе
			ПереместитьКурсорМышиКАктивномуОбъектуHTML();
			ПодсветитьАктивныйЭлементФормыHTML();
		КонецЕсли;
		
		ДобавитьВЛогИнструкцииMarkdownВыполненияШага();
		СкриншотСделанВСценарии = Истина;
		УбратьПодсветкуАктвиногоЭлемента();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьКурсорМышиКАктивномуОкну(Скорость, ЖдатьЗавершения = Истина) Экспорт
	Если Не Объект.ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы Тогда
		Возврат;
	КонецЕсли;
	
	ПутьКПриложению = Объект.КаталогИнструментов + ""\tools\VideoTools\MouseMove.exe"";
	Если Не ФайлСуществуетКомандаСистемы(ПутьКПриложению) Тогда
		Возврат;
	КонецЕсли;
	
	Путь = ПутьКПриложению + "" -movemousetoactivecontrol mousespeed="" + СтрЗаменить(Скорость, Символы.НПП, """");
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если ЖдатьЗавершения Тогда
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(Путь, Истина, Ложь);
		Иначе
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(Путь, Ложь, Ложь);
		КонецЕсли;
	Иначе
		ЗапуститьПриложение(Путь, , ЖдатьЗавершения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьКурсорМышиКАктивномуОбъекту() Экспорт
	Если Не Объект.ИдетЗаписьВидео Тогда
		Возврат;
	КонецЕсли;
	
	ПереместитьКурсорМышиКАктивномуОкну(500);
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьКурсорМышиКАктивномуОбъектуHTML() Экспорт
	Если Не Объект.СоздаватьИнструкциюHTML И НЕ Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат;
	КонецЕсли;
	
	ПереместитьКурсорМышиКАктивномуОкну(50);
КонецПроцедуры

#КонецОбласти

#Область Ассерты
//портирован блок генерации данных из проекта xUnitFor1C (https://github.com/xDrivenDevelopment/xUnitFor1C)
//взят релиз 3.0.0.3

&НаКлиенте
Процедура Проверить(_Истина, ДопСообщениеОшибки = """") Экспорт
	Если Не _Истина Тогда
		СообщениеОшибки = ""Переданный параметр ("" + Формат(_Истина, ""БЛ=ложь; БИ=истина"") + "") не является Истиной, а хотели, чтобы являлся."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИстину(_Истина, ДопСообщениеОшибки = """") Экспорт
	Проверить(_Истина, ДопСообщениеОшибки);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЛожь(_Ложь, ДопСообщениеОшибки = """") Экспорт
	Если _Ложь Тогда
		СообщениеОшибки = ""Переданный параметр ("" + Формат(_Ложь, ""БЛ=ложь; БИ=истина"") + "") не является Ложью, а хотели, чтобы являлся."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьДату(_Дата, _Период, ДопСообщениеОшибки = """") Экспорт
	Если _Дата < _Период.ДатаНачала или _Дата > _Период.ДатаОкончания Тогда
		представление = ПредставлениеПериода(_Период.ДатаНачала, _Период.ДатаОкончания, ""ФП = Истина"");
		СообщениеОшибки = ""Переданный параметр ("" + Формат(_Дата, ""ДФ='dd.MM.yyyy HH:mm:ss'"") + "") не входит в период "" + представление + "", а хотели, чтобы являлся."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьРавенствоДатСТочностью2Секунды(_Дата, _Дата2, ДопСообщениеОшибки = """") Экспорт
	Если _Дата < _Дата2 - 2 или _Дата > _Дата2 + 2 Тогда
		СообщениеОшибки = ""Переданная дата ("" + Формат(_Дата, ""ДФ='dd.MM.yyyy HH:mm:ss'"") + "") не равна дате ("" + Формат(_Дата2, ""ДФ='dd.MM.yyyy HH:mm:ss'"") + "") с точностью до 2-х секунд, а хотели, чтобы они равнялись."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьРавенство(_1, _2, ДопСообщениеОшибки = """") Экспорт
	Если _1 <> _2 Тогда
		СообщениеОшибки = ""Сравниваемые значения ("" + _1 + ""; "" + _2 + "") не равны, а хотели, чтобы были равны."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНеРавенство(_1, _2, ДопСообщениеОшибки = """") Экспорт
	Если _1 = _2 Тогда
		СообщениеОшибки = ""Сравниваемые значения ("" + _1 + ""; "" + _2 + "") равны, а хотели, чтобы были не равны."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьБольше(_Больше, _Меньше, ДопСообщениеОшибки = """") Экспорт
	Если _Больше <= _Меньше Тогда
		СообщениеОшибки = ""Первый параметр ("" + _Больше + "") меньше или равен второму ("" + _Меньше + "") а хотели, чтобы был больше."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьБольшеИлиРавно(_Больше, _Меньше, ДопСообщениеОшибки = """") Экспорт
	Если _Больше < _Меньше Тогда
		СообщениеОшибки = ""Первый параметр ("" + _Больше + "") меньше второго ("" + _Меньше + "") а хотели, чтобы был больше или равен."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьМеньше(проверяемоеЗначение1, проверяемоеЗначение2, СообщениеОбОшибке = """") Экспорт
	Если проверяемоеЗначение1 >= проверяемоеЗначение2 Тогда
		СообщениеОшибки = ""Значение <"" + проверяемоеЗначение1 + ""> больше или равно, чем <"" + проверяемоеЗначение2 + "">, а ожидалось меньше"" +
		ФорматДСО(СообщениеОбОшибке);
		ВызватьОшибкуПроверки(СообщениеОшибки)
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьМеньшеИлиРавно(проверяемоеЗначение1, проверяемоеЗначение2, СообщениеОбОшибке = """") Экспорт
	Если проверяемоеЗначение1 > проверяемоеЗначение2 Тогда
		СообщениеОшибки = ""Значение <"" + проверяемоеЗначение1 + ""> больше, чем <"" + проверяемоеЗначение2 + "">, а ожидалось меньше или равно"" +
		ФорматДСО(СообщениеОбОшибке);
		ВызватьОшибкуПроверки(СообщениеОшибки)
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыполнилось(Знач СтрокаАлгоритм, ПараметрыИлиДопСообщениеОшибки = Неопределено, Знач ДопСообщениеОшибки = """") Экспорт
	Перем Параметры;
	
	Если ТипЗнч(ПараметрыИлиДопСообщениеОшибки) = Тип(""Строка"") Тогда
		ДопСообщениеОшибки = ПараметрыИлиДопСообщениеОшибки;
	Иначе
		Параметры = ПараметрыИлиДопСообщениеОшибки;
	КонецЕсли;
	Попытка
		Выполнить(СтрокаАлгоритм);
	Исключение
		ПолученноеОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		СообщениеОшибки = ""Хотели, чтобы алгоритм """""" + СтрокаАлгоритм + """""" выполнился, а он упал с ошибкой """""" + ПолученноеОписаниеОшибки + """"""."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьМетодВыполнился(Объект, Знач ИмяМетода, ПараметрыИлиДопСообщениеОшибки = Неопределено, Знач ДопСообщениеОшибки = """") Экспорт
	Перем Параметры;
	
	Если ТипЗнч(ПараметрыИлиДопСообщениеОшибки) = Тип(""Строка"") Тогда
		ДопСообщениеОшибки = ПараметрыИлиДопСообщениеОшибки;
	Иначе
		Параметры = ПараметрыИлиДопСообщениеОшибки;
		Если Параметры <> Неопределено Тогда
			ТипПараметра = ТипЗнч(Параметры);
			Если ТипПараметра <> Тип(""Массив"") Тогда
				ТекстСообщения = ""Ожидали, что вторым параметром будет передан массив параметров для метода <%1>, а получили другой объект с типом <%2>"";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяМетода);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",ТипПараметра);
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыСтрока = ПараметрыСтрокой(Параметры);
	
	СтрокаВыполнения = ""Объект."" + ИмяМетода + ""("" + ПараметрыСтрока + "")"";
	
	Попытка
		Выполнить(СтрокаВыполнения);
	Исключение
		ПолученноеОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		СообщениеОшибки = ""Хотели, чтобы код """""" + СтрокаВыполнения + """""" выполнился, а он упал с ошибкой """""" + ПолученноеОписаниеОшибки + """"""."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНеВыполнилось(Знач СтрокаАлгоритм, ПараметрыИлиОжидаемоеОписаниеОшибки, Знач ОжидаемоеОписаниеОшибкиИлиДопСообщениеОшибки = """", Знач ДопСообщениеОшибки = """") Экспорт
	Перем Параметры, ОжидаемоеОписаниеОшибки;
	Если ТипЗнч(ПараметрыИлиОжидаемоеОписаниеОшибки) = Тип(""Строка"") Тогда
		ОжидаемоеОписаниеОшибки = ПараметрыИлиОжидаемоеОписаниеОшибки;
		ДопСообщениеОшибки = ОжидаемоеОписаниеОшибкиИлиДопСообщениеОшибки;
	Иначе
		Параметры = ПараметрыИлиОжидаемоеОписаниеОшибки;
		ОжидаемоеОписаниеОшибки = ОжидаемоеОписаниеОшибкиИлиДопСообщениеОшибки;
	КонецЕсли;
	Попытка
		Выполнить(СтрокаАлгоритм);
	Исключение
		ПолученноеОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Если Найти(ПолученноеОписаниеОшибки, ОжидаемоеОписаниеОшибки) = 0 Тогда
			ВызватьОшибкуПроверки(""Хотели, чтобы алгоритм """""" + СтрокаАлгоритм + """""" упал с сообщением об ошибке """""" + ОжидаемоеОписаниеОшибки + """""", а он упал с сообщением """""" + ПолученноеОписаниеОшибки + """"""."" + ФорматДСО(ДопСообщениеОшибки));
		КонецЕсли;
		Возврат;
	КонецПопытки;
	
	ВызватьОшибкуПроверки(""Хотели, чтобы алгоритм """""" + СтрокаАлгоритм + """""" упал, а он выполнился"" + ФорматДСО(ДопСообщениеОшибки));
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьМетодНеВыполнился(Объект, ИмяМетода, ПараметрыИлиОжидаемоеОписаниеОшибки, Знач ОжидаемоеОписаниеОшибкиИлиДопСообщениеОшибки = """", Знач ДопСообщениеОшибки = """") Экспорт
	Перем Параметры, ОжидаемоеОписаниеОшибки;
	
	Если ТипЗнч(ПараметрыИлиОжидаемоеОписаниеОшибки) = Тип(""Строка"") Тогда
		ОжидаемоеОписаниеОшибки = ПараметрыИлиОжидаемоеОписаниеОшибки;
		ДопСообщениеОшибки = ОжидаемоеОписаниеОшибкиИлиДопСообщениеОшибки;
	Иначе
		Параметры = ПараметрыИлиОжидаемоеОписаниеОшибки;
		Если Параметры <> Неопределено Тогда
			ТипПараметра = ТипЗнч(Параметры);
			Если ТипПараметра <> Тип(""Массив"") Тогда
				ТекстСообщения = ""Ожидали, что третьим параметром будет передан массив параметров для метода <%1>, а получили другой объект с типом <%2>"";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяМетода);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",ТипПараметра);
				ВызватьИсключение ТекстСообщения;
			КонецЕсли;
		КонецЕсли;
		ОжидаемоеОписаниеОшибки = ОжидаемоеОписаниеОшибкиИлиДопСообщениеОшибки;
	КонецЕсли;
	
	ПараметрыСтрока = ПараметрыСтрокой(Параметры);
	
	СтрокаВыполнения = ""Объект."" + ИмяМетода + ""("" + ПараметрыСтрока + "")"";
	
	Попытка
		Выполнить(СтрокаВыполнения);
	Исключение
		ПолученноеОписаниеОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		Если Найти(ПолученноеОписаниеОшибки, ОжидаемоеОписаниеОшибки) = 0 Тогда
			ВызватьОшибкуПроверки(""Хотели, чтобы код """""" + СтрокаВыполнения + """""" упал с сообщением об ошибке """""" + ОжидаемоеОписаниеОшибки + """""", а он упал с сообщением """""" + ПолученноеОписаниеОшибки + """"""."" + ФорматДСО(ДопСообщениеОшибки));
		КонецЕсли;
		Возврат;
	КонецПопытки;
	
	ВызватьОшибкуПроверки(""Хотели, чтобы код """""" + СтрокаВыполнения + """""" упал, а он выполнился"" + ФорматДСО(ДопСообщениеОшибки));
	
КонецПроцедуры

// проверка идет через ЗначениеЗаполнено, но мутабельные значение всегда считаем заполненными
&НаКлиенте
Процедура ПроверитьЗаполненность(ПроверяемоеЗначение, ДопСообщениеОшибки = """") Экспорт
	Попытка
		фЗаполнено = ЗначениеЗаполнено(ПроверяемоеЗначение);
	Исключение
		Возврат;
	КонецПопытки;
	Если НЕ фЗаполнено Тогда
		ВызватьОшибкуПроверки(""Значение ("" + ПроверяемоеЗначение + "") не заполнено, а ожидалась заполненность"" + ФорматДСО(ДопСообщениеОшибки));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьНеЗаполненность(ПроверяемоеЗначение, ДопСообщениеОшибки = """") Экспорт
	СообщениеОшибки = ""Значение ("" + ПроверяемоеЗначение + "") заполнено, а ожидалась незаполненность"" + ФорматДСО(ДопСообщениеОшибки);
	Попытка
		фЗаполнено = ЗначениеЗаполнено(ПроверяемоеЗначение);
	Исключение
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецПопытки;
	Если фЗаполнено Тогда
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьТип(значение, ТипИлиИмяТипа, ДопСообщениеОшибки = """") Экспорт
	Если ТипЗнч(ТипИлиИмяТипа) = Тип(""Строка"") Тогда
		искомыйТип = Тип(ТипИлиИмяТипа);
	ИначеЕсли ТипЗнч(ТипИлиИмяТипа) = Тип(""Тип"") Тогда
		искомыйТип = ТипИлиИмяТипа;
	Иначе
		ТекстСообщения = ""ПроверитьТип: Тип значения параметра ТипИлиИмяТипа должен быть <Тип> или <Строка>, а получили <%1>%2"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ТипЗнч(ТипИлиИмяТипа));
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",ФорматДСО(ДопСообщениеОшибки));
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	Если ТипЗнч(значение) <> искомыйТип Тогда
		ВызватьОшибкуПроверки(""Типом значения <"" + значение + ""> является <"" + ТипЗнч(значение) + "">, а ожидался тип <"" + ТипИлиИмяТипа + "">."" + ФорматДСО(ДопСообщениеОшибки));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВхождение(строка, подстрокаПоиска, ДопСообщениеОшибки = """") Экспорт
	Если Найти(строка, подстрокаПоиска) = 0 Тогда
		ПредставлениеСтроки = ""<"" + строка + "">"";
		Если СтрДлина(строка) > 20 Тогда
			ПредставлениеСтроки = ПредставлениеСтроки + Символы.ПС;
		КонецЕсли;
		ПредставлениеПодСтроки = ""<"" + подстрокаПоиска + "">"";
		Если СтрДлина(подстрокаПоиска) > 20 Тогда
			ПредставлениеПодСтроки = ПредставлениеПодСтроки + Символы.ПС;
		КонецЕсли;
		СообщениеОшибки = ""Искали в "" + ПредставлениеСтроки + "" подстроку "" + ПредставлениеПодСтроки + "", но не нашли."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

//Коллекция - Массив, Структура, Соответствие, ФиксированныйМассив, ФиксированнаяСтруктура, ФиксированноеСоответствие, СписокЗначений
&НаКлиенте
Процедура ПроверитьВхождениеВКоллекцию(Элемент, Коллекция, ДопСообщениеОшибки = """") Экспорт
	Нашли = Неопределено;
	ТипКоллекции = ТипЗнч(Коллекция);
	Если ТипКоллекции = Тип(""Массив"") или ТипКоллекции = Тип(""ФиксированныйМассив"") Тогда
		Нашли = Коллекция.Найти(Элемент) <> Неопределено;
	ИначеЕсли ТипКоллекции = Тип(""Структура"") или ТипКоллекции = Тип(""Соответствие"")
		или ТипКоллекции = Тип(""ФиксированнаяСтруктура"") или ТипКоллекции = Тип(""ФиксированноеСоответствие"") Тогда
		Для каждого КлючЗначение Из Коллекция Цикл
			Нашли = КлючЗначение.Значение = Элемент;
			Если Нашли Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ТипКоллекции = Тип(""СписокЗначений"") Тогда
		Нашли = Коллекция.НайтиПоЗначению(Элемент) <> Неопределено;
	КонецЕсли;
	Если Нашли = Неопределено Тогда
		СообщениеОшибки = ""Утверждение """"ПроверитьВхождениеВКоллекцию"""" не умеет работать с типом коллекции <"" + ТипКоллекции + "">."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьИсключение СообщениеОшибки;
	КонецЕсли;
	Если Не Нашли Тогда
		СообщениеОшибки = ""Не нашли элемент <"" + Элемент + ""> в коллекции, а хотели, чтобы он был в коллекции."" + ФорматДСО(ДопСообщениеОшибки);
		ВызватьОшибкуПроверки(СообщениеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВалидностьЗапросаСКД(ТекстЗапроса, ДопСообщениеОшибки = """") Экспорт
	ПроверитьВалидностьЗапросаСКДНаСервере(ТекстЗапроса, ДопСообщениеОшибки);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(ТабДок1, ТабДок2, УчитыватьТолькоВидимыеКолонкиИлиДопСообщениеОшибки = Ложь, УчитыватьТолькоВидимыеСтрокиИлиДопСообщениеОшибки = Ложь, Знач ДопСообщениеОшибки = """",ДопПараметры = Неопределено) Экспорт
	УтвержденияПроверкаТаблиц = Плагин(""УтвержденияПроверкаТаблиц"");
	УтвержденияПроверкаТаблиц.ПроверитьРавенствоТабличныхДокументовТолькоПоЗначениям(
	ТабДок1, ТабДок2, УчитыватьТолькоВидимыеКолонкиИлиДопСообщениеОшибки, УчитыватьТолькоВидимыеСтрокиИлиДопСообщениеОшибки,
	ДопСообщениеОшибки,ДопПараметры);
КонецПроцедуры

// количествоСозданныхОбъектов учитывает только созданные элементы справочников, документы и пользователей ИБ. Записи регистров сведений не считаются.
&НаКлиенте
Функция СоздатьДанныеПоТабличномуДокументу(ТабличныйДокумент, РежимыЗагрузкиИлиИмяКолонкиЗамещения = Неопределено, ИмяКолонкиЗамещения = Неопределено) Экспорт
	Перем Сериализатор;
	Сериализатор = Плагин(""СериализаторMXL"");
	Данные 		= Сериализатор.СоздатьДанныеПоТабличномуДокументу(ТабличныйДокумент, РежимыЗагрузкиИлиИмяКолонкиЗамещения, ИмяКолонкиЗамещения);
	Возврат Данные;
КонецФункции

#КонецОбласти

#Область Плагины
// Плагины
// портировано из xUnitFor1C 4.1.1.0

&НаКлиенте
Процедура ОбработчикПоискаКлиентскихПлагинов(Знач НайденныеФайлы, Знач ДополнительныеПараметры) Экспорт
	
	ПомещаемыеФайлы = Новый Массив;
	ИдентификаторыПлагинов = Новый Соответствие;
	ИдентификаторыИменПлагинов = Новый Соответствие;
	
	Если Объект.ИспользоватьПрямыеПутиФайлов Тогда
		ПомещенныеФайлы = Новый Массив;
		Для каждого ФайлОбработки Из НайденныеФайлы Цикл
			
			ОписаниеПередаваемогоФайла = Новый Структура(""Имя"", ФайлОбработки.ПолноеИмя);
			ПомещенныеФайлы.Добавить(ОписаниеПередаваемогоФайла);
			
			ИмяПлагина = ФайлОбработки.ИмяБезРасширения;
			ИдентификаторыПлагинов.Вставить(ФайлОбработки.ПолноеИмя, ИмяПлагина);
			ИдентификаторыИменПлагинов.Вставить(ИмяПлагина, ФайлОбработки.ПолноеИмя);
			
		КонецЦикла;
		
		ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ИдентификаторыПлагинов, ДополнительныеПараметры);
	Иначе
		
		Для каждого ФайлОбработки Из НайденныеФайлы Цикл
			
			ПомещаемыйФайл = Новый ОписаниеПередаваемогоФайла(ФайлОбработки.ПолноеИмя);
			ПомещаемыеФайлы.Добавить(ПомещаемыйФайл);
			
			ИмяПлагина = ФайлОбработки.ИмяБезРасширения;
			ИдентификаторыПлагинов.Вставить(ФайлОбработки.ПолноеИмя, ИмяПлагина);
			ИдентификаторыИменПлагинов.Вставить(ИмяПлагина, ФайлОбработки.ПолноеИмя);
			
		КонецЦикла;
		
		Если ПомещаемыеФайлы.Количество() Тогда
			ПараметрыЗавершения = Новый Структура;
			ПараметрыЗавершения.Вставить(""ИдентификаторыПлагинов"", ИдентификаторыПлагинов);
			ПараметрыЗавершения.Вставить(""ОбработчикОповещения"", ДополнительныеПараметры.ОбработчикОповещения);
			Если Версия836ИлиВыше Тогда
				Выполнить(""НачатьПомещениеФайлов(Новый ОписаниеОповещения(""""ОбработчикПоискаКлиентскихПлагиновЗавершение"""", ЭтаФорма, ПараметрыЗавершения),
				|ПомещаемыеФайлы, , Ложь, ЭтаФорма.УникальныйИдентификатор)"");
			Иначе
				ПомещенныеФайлы = Новый Массив;
				ПоместитьФайлы(ПомещаемыеФайлы, ПомещенныеФайлы, , Ложь, ЭтаФорма.УникальныйИдентификатор);
				ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ИдентификаторыПлагинов, ДополнительныеПараметры);
			КонецЕсли;
		Иначе
			ПодключитьНайденныеКлиентскиеПлагины(Новый Массив, ИдентификаторыПлагинов, ДополнительныеПараметры);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикПоискаКлиентскихПлагиновЗавершение(Знач ПомещенныеФайлы, Знач ДополнительныеПараметры) Экспорт
	
	ПодключитьНайденныеКлиентскиеПлагины(ПомещенныеФайлы, ДополнительныеПараметры.ИдентификаторыПлагинов, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодключитьНайденныеКлиентскиеПлагины(Знач ЗагруженныеФайлы, Знач ИдентификаторыПлагинов, ДополнительныеПараметры)
	Перем ЗагруженныйФайл, ИмяПлагина, ОписаниеПлагина, ОписанияПлагинов;
	Перем ОбъектПлагина, ОписанияПлагиновКлиент, ПодключенныеРанее, МассивФормПлагинов;
	
	ОписанияПлагиновКлиент = Новый Соответствие;
	ПодключенныеРанее = Новый Соответствие;
	
	МассивПодключенныхПлагинов = Новый Массив();
	Если Не Объект.ИспользоватьПрямыеПутиФайлов Тогда
		ПодключитьВнешниеОбработкиДляОтладки(Истина, МассивПодключенныхПлагинов);
	КонецЕсли;
	
	//Подключим на клиенте для отладки
	Для каждого ОбъектПлагина Из МассивПодключенныхПлагинов Цикл
		Попытка
			ОбъектПлагина.Инициализация(ЭтаФорма);
			ОписаниеПлагина = ОбъектПлагина.ОписаниеПлагина(Объект.ТипыПлагинов);
			ИмяПлагина = ОписаниеПлагина.Идентификатор;
			
			ПодключенныеРанее.Вставить(ОписаниеПлагина.Идентификатор, Истина);
			Объект.ПлагиныЗагружены = Истина;
			Объект.Плагины.Вставить(ОписаниеПлагина.Идентификатор, ИмяПлагина);
			КэшФормПлагинов.Вставить(ОписаниеПлагина.Идентификатор, Истина);
			СделатьСообщение(""Подключен плагин "" + ИмяПлагина + "" в режиме отладки"");
		Исключение
			ИнфоОшибки = ИнформацияОбОшибке();
			Если ОбъектПлагина <> Неопределено Тогда
				СделатьСообщение(""Ошибка подключения плагина ""+ОбъектПлагина.Заголовок + "":
				|"" + ИнфоОшибки.Описание);
			Иначе
				СделатьСообщение(""Ошибка подключения неопределенного плагина:
				|"" + ИнфоОшибки.Описание);
			КонецЕсли;
		КонецПопытки;
		
	КонецЦикла;
	
	ОписанияПлагинов = ПодключитьПлагиныНаСервере(ЗагруженныеФайлы, ПодключенныеРанее);
	
	Для Каждого ЗагруженныйФайл Из ЗагруженныеФайлы Цикл
		Объект.ПлагиныЗагружены = Истина;
		
		ИмяПлагина = ИдентификаторыПлагинов[ЗагруженныйФайл.Имя];
		
		ОписаниеПлагина = ОписанияПлагинов.Получить(ЗагруженныйФайл.Имя);
		Если ОписаниеПлагина = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		Объект.Плагины.Вставить(ОписаниеПлагина.Идентификатор, ИмяПлагина);
		КэшФормПлагинов.Вставить(ОписаниеПлагина.Идентификатор, Истина);
		
	КонецЦикла;
	
	ЗагрузкаПлагиновЗавершение(ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Функция Плагин(Знач Идентификатор) Экспорт
	
	ОбъектПлагин = Неопределено;
	ИдентификаторБезПрефиксовПодсистемы = Идентификатор;
	//ИдентификаторБезПрефиксовПодсистемы = ПолучитьИдентификаторБезПрефиксаПодсистемы(Идентификатор, Объект.ИспользуемыйПрефиксПодсистемы);
	Если КэшФормПлагинов.Свойство(ИдентификаторБезПрефиксовПодсистемы) Тогда
		ОбъектПлагин = КэшФормПлагинов[ИдентификаторБезПрефиксовПодсистемы];
	КонецЕсли;
	
	Если ОбъектПлагин = Неопределено Тогда
		ТекстСообщения = ""ru = 'Неизвестный идентификатор плагина: <%1>'"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Идентификатор);
		ВызватьИсключение НСтр(ТекстСообщения);
	ИначеЕсли ОбъектПлагин = Истина Тогда
		// загрузка клиентского плагина ""По требованию""
		ИмяПлагина = Объект.Плагины[Идентификатор];
		Попытка
			//Если Объект.ЭтоВстроеннаяОбработка Тогда
			//ОбъектПлагин = ПолучитьФорму(""Обработка."" + ДополнитьИдентификаторПрефиксомПодсистемы(ИмяПлагина, Объект.ИспользуемыйПрефиксПодсистемы) + "".Форма"", , ЭтаФорма);
			//Иначе
			ОбъектПлагин = ПолучитьФорму(""ВнешняяОбработка."" + ИмяПлагина + "".Форма"", , ЭтаФорма);
			ОбъектПлагин.Инициализация(ЭтаФорма);
			//КонецЕсли;
			КэшФормПлагинов.Вставить(ИдентификаторБезПрефиксовПодсистемы, ОбъектПлагин);
		Исключение
			// TODO добавить поведение при отсутствии управляемой формы у плагина
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЕсли;
	
	Возврат ОбъектПлагин;
КонецФункции

&НаКлиенте
Функция ПолучитьОписанияПлагиновПоТипу(Знач ТипПлагина) Экспорт
	Результат = ПолучитьОписанияПлагиновПоТипуНаСервере(ТипПлагина);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ЗагрузкаПлагиновЗавершение(Знач ДополнительныеПараметры) Экспорт
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОбработчикОповещения);
КонецПроцедуры

#КонецОбласти

#Область ДляАвтотестирования

//Позволяет получить доступ к переменной КонтекстСохраняемый тестируемой формы VB
&НаКлиенте
Функция ПолучитьКонтекстСохраняемый() Экспорт
	Возврат ОбъектКонтекстСохраняемый;
КонецФункции

&НаКлиенте
Процедура ПолучитьТекстШагаИзТекстаФичиЕслиОнТамЗадан(Текст,Шаг,Сценарий) Экспорт
	МассивТекстФичи = Сценарий.МассивТекстФичи;
	
	СлужебнаяСтрока = НайтиСлужебнуюСтрокуВФичеДляЭтогоШага(МассивТекстФичи,""[autodoc.text]"",Шаг.НомерСтрокиВФиче);
	Если Не ЗначениеЗаполнено(СлужебнаяСтрока) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыОбработки = Новый Структура;
	ПараметрыОбработки.Вставить(""ОбработкаПараметровШага"",Истина);
	ПараметрыОбработки.Вставить(""ВычислитьВыражения"",Истина);
	ПараметрыОбработки.Вставить(""Шаг"",Шаг);
	ОбработатьУправляющуюСтрокуИнструкции(СлужебнаяСтрока,ПараметрыОбработки);
	
	Текст = СлужебнаяСтрока;
КонецПроцедуры

&НаКлиенте
Процедура СделатьСлужебноеОповещение()Экспорт
	ПодключитьОбработчикОжидания(""ДляСлужебногоОповещения"", 1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьСлужебныеБазыЕслиИхНет() Экспорт
	ИмяФайла = Объект.КаталогИнструментов + ""/tools/ServiceBases/v83ServiceBase836/1Cv8.1CD"";
	Если НЕ ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
		ИмяВременногоBat = ПолучитьИмяВременногоФайла(""bat"");
		
		ЗТ = Новый ЗаписьТекста(ИмяВременногоBat, ""UTF-8"", , Истина);
		ЗТ.ЗаписатьСтроку(""cd "" + Объект.КаталогИнструментов);
		ЗТ.ЗаписатьСтроку(""oscript """""" + Объект.КаталогИнструментов + ""\tools\onescript\build-service-conf.os"""""");
		ЗТ.Закрыть();
		
		Команда = ИмяВременногоBat;
		//TODO неверное получение статуса, т.к. ВыполнитьКомандуОСБезПоказаЧерногоОкна не возвращает код возврата 
		Статус = ВыполнитьКомандуОСБезПоказаЧерногоОкна(Команда, Истина, Ложь);
		Если Статус <> 0 Тогда
			ВызватьИсключение ""Не смог создать сервисные базы. Статус="" + Статус;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьСеансСлужебнойБазы(Имябазы, ТипЗапуска, Ключи) Экспорт
	СисИнфо = Новый СистемнаяИнформация;
	ВерсияПриложения = СисИнфо.ВерсияПриложения;
	ПутьК1С = ""C:\Program Files (x86)\1cv8\"" + ВерсияПриложения + ""\bin\1cv8.exe"";
	СтрокаЗапускаКонфигуратора = """""""" + ПутьК1С + """""" "" + ТипЗапуска + "" /F"""""" + Объект.КаталогИнструментов + ""\tools\ServiceBases\"" + Имябазы + """""" "" + Ключи;
	//TODO неверное получение статуса, т.к. ВыполнитьКомандуОСБезПоказаЧерногоОкна не возвращает код возврата 
	Статус = ВыполнитьКомандуОСБезПоказаЧерногоОкна(СтрокаЗапускаКонфигуратора, Ложь, Ложь);//не ждём окончания работы конфигуратора
	Если Статус <> 0 Тогда
		ВызватьИсключение ""Не смог запустить конфигуратор. СтрокаЗапускаКонфигуратора=<"" + СтрокаЗапускаКонфигуратора + "">"";
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ПрочиеЭкспортные

&НаКлиенте
Процедура ОбработкаПослеПомещенияФайла(Результат, АдресХранилища, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	ИмяОбработки = ПодключитьВнешнююОбработкуСервер(АдресХранилища,ЕстьЗащитаОтОпасныхДействий);
	ДополнительныеПараметры.Вставить(""ИмяОбработки"", ИмяОбработки);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикНачатьПолучитьВремяИзмененияФайла(ВерсияФайла, ДополнительныеПараметры) Экспорт
	ТекИдМассива   = ДополнительныеПараметры.ТекИдМассива;
	МассивДействий = ДополнительныеПараметры.МассивДействий;
	СтруктураФайла = МассивДействий[ТекИдМассива];
	СтруктураФайла.Вставить(""ВерсияФайла"", ВерсияФайла);
	
	ОбработатьАсинхроноСледующийФайл(ДополнительныеПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикНачатьПроверкуЭтоКаталог(ЭтоКаталог, ДополнительныеПараметры) Экспорт
	
	ТекИдМассива   = ДополнительныеПараметры.ТекИдМассива;
	МассивДействий = ДополнительныеПараметры.МассивДействий;
	СтруктураФайла = МассивДействий[ТекИдМассива];
	СтруктураФайла.Вставить(""ЭтоКаталог"", ЭтоКаталог);
	
	Отладка(""ОбработчикНачатьПроверкуЭтоКаталог. "" + СтруктураФайла.ИмяПараметра + "": "" + СтруктураФайла.ИмяФайла + "". ЭтоКаталог="" + ЭтоКаталог);
	
	Если ЭтоКаталог Тогда
		ОбработатьАсинхроноСледующийФайл(ДополнительныеПараметры);
	Иначе
		Файл = Новый Файл(СтруктураФайла.ИмяФайла);
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработчикНачатьПолучитьВремяИзмененияФайла"""", ЭтаФорма, ДополнительныеПараметры)"");
		Выполнить(""Файл.НачатьПолучениеВремениИзменения(ОписаниеОповещения)"");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикНачатьПроверкуСуществования(Существует, ДополнительныеПараметры) Экспорт
	ТекИдМассива   = ДополнительныеПараметры.ТекИдМассива;
	МассивДействий = ДополнительныеПараметры.МассивДействий;
	СтруктураФайла = МассивДействий[ТекИдМассива];
	СтруктураФайла.Вставить(""Существует"", Существует);
	
	Отладка(""ОбработчикНачатьПроверкуСуществования. "" + СтруктураФайла.ИмяПараметра + "": "" + СтруктураФайла.ИмяФайла + "". Существует="" + Существует);
	
	Если Существует Тогда
		Файл = Новый Файл(СтруктураФайла.ИмяФайла);
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработчикНачатьПроверкуЭтоКаталог"""", ЭтаФорма, ДополнительныеПараметры)"");
		Выполнить(""Файл.НачатьПроверкуЭтоКаталог(ОписаниеОповещения)"");
	Иначе
		ОбработатьАсинхроноСледующийФайл(ДополнительныеПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикНачатьПолучитьВремяИзмененияФайлаМассив(ВерсияФайла, ДополнительныеПараметры) Экспорт
	ТекИдМассива   = ДополнительныеПараметры.ТекИдМассива;
	МассивДействий = ДополнительныеПараметры.МассивДействий;
	СтруктураФайла = МассивДействий[ТекИдМассива];
	НайденныеФайлы = СтруктураФайла.НайденныеФайлы;
	
	ИДФайлаДляОбработки = СтруктураФайла.ИДФайлаДляОбработки;
	НайденныеФайлы[ИДФайлаДляОбработки].Вставить(""ВерсияФайла"", ВерсияФайла);
	
	ПолучитьВерсиюФайловАссинхронно(ДополнительныеПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ОбработчикНачатьПоискФайлов(НайденныеФайлы, ДополнительныеПараметры) Экспорт
	ТекИдМассива   = ДополнительныеПараметры.ТекИдМассива;
	МассивДействий = ДополнительныеПараметры.МассивДействий;
	СтруктураФайла = МассивДействий[ТекИдМассива];
	
	НайденныеФайлыМассив = Новый Массив;
	Для Каждого Элем Из НайденныеФайлы Цикл
		НайденныеФайлыМассив.Добавить(Новый Структура(""Файл"", Элем));
	КонецЦикла;
	СтруктураФайла.Вставить(""НайденныеФайлы"", НайденныеФайлыМассив);
	
	СтруктураФайла.Вставить(""ИДФайлаДляОбработки"", - 1);
	ПолучитьВерсиюФайловАссинхронно(ДополнительныеПараметры);

КонецПроцедуры

&НаКлиенте
Процедура ПослеОтветаНаВопросНадоЛиЗагружатьФичи(Результат, Параметры) Экспорт
	Если Результат = КодВозвратаДиалога.ОК Тогда
		ЗагрузитьФичи();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайлаЗагрузкаФичи(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Объект.КаталогФич = ВыбранныеФайлы[0];
	
	СохранитьНастройкиВХранилище(""КаталогФич"", Объект.КаталогФич);
	
	//очистим кеш при смене фичи
	КешStepDefinition.Очистить();
	КешТаблицGherkin.Очистить();
	
	ЗагрузитьФичи();
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОткрытьКаталогФичи(КодВозврата, ДополнительныеПараметры) Экспорт
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВнешнийСписокПроцедур(МассивСнипетовИзОбработки, ПолноеИмя, ФормаОбработки) Экспорт
	
	СтрТаблицаКонтекстовОбработок = Новый Структура;
	СтрТаблицаКонтекстовОбработок.Вставить(""ИмяФайла"", ПолноеИмя);
	СтрТаблицаКонтекстовОбработок.Вставить(""Обработка"", ФормаОбработки);
	ТаблицаКонтекстовОбработок.Добавить(СтрТаблицаКонтекстовОбработок);
	
	УниверсальноеПолноеИмя = УниверсальноеПолноеИмяФайла(ПолноеИмя);
	МассивИменКонтекстовОбработок.Добавить(Нрег(УниверсальноеПолноеИмя));
	БылиОшибки = Ложь;
	Для каждого Снипет из МассивСнипетовИзОбработки Цикл
		ОписаниеШага = Новый Структура(""ИмяПроцедуры, Обработка, ИмяФайла"", Снипет.ИмяПроцедуры, ФормаОбработки, 
			УниверсальноеПолноеИмя);
		ТаблицаОбработокДляОтладки.Вставить(СокрЛП(Снипет.ИмяПроцедуры), ОписаниеШага);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция МетаданныеИмя() Экспорт
	Возврат МетаданныеИмяСервер();
КонецФункции

&НаКлиенте
Процедура ПодготовитьСценарийКВыполнению() Экспорт
	Если ЭтоLinux Тогда
		Разделитель = ""/"";
	Иначе
		Разделитель = ""\"";
	КонецЕсли;
	
	ИмяВременногоFeature = ПолучитьИмяВременногоФайла(""feature"");
	ВременныйФайл = Новый Файл(ИмяВременногоFeature);
	КаталогВременногоFeature = ВременныйФайл.Путь + ""vanessa-behavior"";
	
	УдалитьКаталогКомандаСистемы(КаталогВременногоFeature);
	СоздатьКаталогКомандаСистемы(КаталогВременногоFeature);
	
	ИмяВременногоFeature = КаталогВременногоFeature + Разделитель + ""temp.feature"";
	
	ЗТ = Новый ЗаписьТекста(ИмяВременногоFeature, КодировкаТекста.UTF8, , Истина);
	Если Лев(Объект.СгенерированныйСценарий,1) <> ""#"" Тогда
		//надо дописать заголовок сценария
		Если Объект.ЯзыкГенератораGherkin = ""en"" Тогда
			СтрокаЗаголовка = ""#language: en
			|
			|@tree
			|
			|Functionality: <description features>
			|
			|As <Role>
			|I want <functional description>
			|To <business effect>
			|
			|Scenario: <description of the scenario>
			|
			|"";
		Иначе
			СтрокаЗаголовка = ""#language: ru
			|
			|@tree
			|
			|Функционал: <описание фичи>
			|
			|Как <Роль> я хочу
			|<описание функционала>
			|чтобы <бизнес-эфект>
			|
			|Сценарий: <описание сценария>
			|
			|"";
		КонецЕсли;
		
		ЗТ.ЗаписатьСтроку(СтрокаЗаголовка);
	КонецЕсли;
	ЗТ.ЗаписатьСтроку(Объект.СгенерированныйСценарий);
	ЗТ.Закрыть();
	
	Объект.КаталогФич = ИмяВременногоFeature;
	ЗагрузитьФичи();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьУстановкуСнятиеБрейкпоинта() Экспорт
	ТекущаяСтрокаДереваИдСтроки = Неопределено;
	Если Элементы.ДеревоТестов.ТекущиеДанные <> Неопределено Тогда
		ТекущаяСтрокаДереваИдСтроки = Элементы.ДеревоТестов.ТекущиеДанные.ИдСтроки;
	КонецЕсли;
	
	Если ТекущаяСтрокаДереваИдСтроки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	
	Если НЕ ЭтуСтрокуМожноИсполнить(Элементы.ДеревоТестов.ТекущиеДанные) Тогда
		Возврат;
	КонецЕсли;
	
	Элементы.ДеревоТестов.ТекущиеДанные.Брейкпоинт = Не Элементы.ДеревоТестов.ТекущиеДанные.Брейкпоинт;
	Брейкпоинт                                     = Элементы.ДеревоТестов.ТекущиеДанные.Брейкпоинт;
	
	Если Брейкпоинт Тогда
		ДобавитьБрейкПоинт(Элементы.ДеревоТестов.ТекущиеДанные.ПолныйПуть);
	Иначе
		УдалитьБрейкПоинт(Элементы.ДеревоТестов.ТекущиеДанные.ПолныйПуть);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьОшибкуПодключенияTestClient() Экспорт
	ВозниклаОшибкаПодключенияTestClient = Истина;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТаблицуGherkinИзМакета(Макет) Экспорт
	Если Ложь Тогда
		Макет = Новый ТабличныйДокумент;
	КонецЕсли;
	
	ТаблицаGherkin = Новый Массив;
	
	Для Ккк = 1 По Макет.ВысотаТаблицы Цикл
		СтрокаТаблицы = Новый Структура;
		Для Ррр = 1 По Макет.ШиринаТаблицы Цикл
			СтрокаТаблицы.Вставить(""Кол"" + XMlСтрока(Ррр),Макет.Область(Ккк,Ррр,Ккк,Ррр).Текст);
		КонецЦикла;
		
		ТаблицаGherkin.Добавить(СтрокаТаблицы);
	КонецЦикла;
	
	Возврат ТаблицаGherkin;
КонецФункции

#КонецОбласти

#Область ПереводТекста

&НаКлиенте
Функция ПеревестиТекст(Текст) Экспорт
	ДанныеПеревода = Новый Структура;
	ДанныеПеревода.Вставить(""ЯзыкПеревода"",Объект.ЯзыкГенератораGherkin);
	ДанныеПеревода.Вставить(""ДвоичныеДанныеФайлПеревода"",ПолучитьФайлыПеревода());
	ДанныеПеревода.Вставить(""ТекстДляПеревода"",Текст);
	ДанныеПеревода.Вставить(""КешДанныеПеревода"",КешДанныеПеревода);
	ДвДанныеvbFeatureReader = Новый ДвоичныеДанные(ПолучитьПутьКFeatureReader());
	ДанныеПеревода.Вставить(""ДвДанныеvbFeatureReader"",ДвДанныеvbFeatureReader);
	ДанныеПеревода.Вставить(""Перевод"",Неопределено);
	
	СделатьПереводСгенерированногоТекстаGherkinСервер(ДанныеПеревода);
	Если ДанныеПеревода.Перевод <> Неопределено Тогда
		КешДанныеПеревода.Вставить(""Язык"",Объект.ЯзыкГенератораGherkin);
		КешДанныеПеревода.Вставить(""ТаблицаПеревода"",ДанныеПеревода.ТаблицаПеревода);
		
		Возврат ДанныеПеревода.Перевод;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции
#КонецОбласти


#КонецОбласти //ЭкспортныеПроцедурыИФункции

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ТекстСообщенийПользователю(МакетПереводСообщений)
	ЗначенияПереводов = Новый Соответствие;
	
	Для Ккк = 2 По МакетПереводСообщений.ВысотаТаблицы Цикл
		ЗначениеСтрокиПоиска = МакетПереводСообщений.Область(Ккк,1,Ккк,1).Текст;
		Если Не ЗначениеЗаполнено(ЗначениеСтрокиПоиска) Тогда
			Продолжить;
		КонецЕсли;
		
		ЗначениеПеревода = МакетПереводСообщений.Область(Ккк,2,Ккк,2).Текст;
		
		ЗначенияПереводов.Вставить(""$"" + ЗначениеСтрокиПоиска + ""$"",ЗначениеПеревода)
	КонецЦикла;
	
	Возврат ЗначенияПереводов;
КонецФункции

// Функция - Получить строку вызова Sikuli
//
// Параметры:
//  ЗапускЧерезСкрипт	 - Булево	 - флаг способа запуска Sikuli-скриптов:
//									   Ложь	 - устаревший способ запуска для Windows,
//											   используется по умолчанию для совместимости
//									   Истина	 - запуск через скрипт runsikulix
// Возвращаемое значение:
//  Строка - строка для запуска Sikuli-скриптов
//
&НаКлиенте
Функция ПолучитьСтрокуВызоваSikuli(ЗапускЧерезСкрипт = Ложь)
	
	Если ЗапускЧерезСкрипт Тогда
		Если ЭтоLinux Тогда
			Возврат ""runsikulix -r "";
		Иначе
			Возврат ""call runsikulix -r "";
		КонецЕсли;
	Иначе
		Возврат """"""C:\Program Files (x86)\Java\jre6\bin\java.exe"""" -Xms64M -Xmx512M -Dfile.encoding=UTF-8 -Dpython.path=""""C:\Program Files (x86)\Sikuli X\sikuli-script.jar/"""" -jar """"C:\Program Files (x86)\Sikuli X\sikuli-ide.jar"""" -r "";
	КонецЕсли;
	
КонецФункции

// далее переменная WshShell будет закеширована, чтобы не создавать ComObject каждый раз
&НаКлиенте
Функция ПолучитьWshShell()
	
	УправлениеПриложениями = Плагин(""УправлениеПриложениями"");
	Возврат УправлениеПриложениями.ПолучитьWshShell();
	
КонецФункции

&НаКлиенте
Функция СкопироватьСтруктуру(Оригинал)
	Результат = Новый Структура();
	Для каждого Элем Из Оригинал Цикл
		Результат.Вставить(Элем.Ключ, Элем.Значение);
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Процедура ЗаписатьЛогВЖРПередВыполнениемШагаСервер(ИмяШага)
	ЗаписьЖурналаРегистрации(""VanessaBehavior.ПередВыполнениемШага"", УровеньЖурналаРегистрации.Информация, , , ИмяШага);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьЛогВЖРОшибка(ИмяСобытия, Стр)
	ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Ошибка, , , Стр);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьЛогВЖРИнформация(ИмяСобытия, Стр)
	ЗаписьЖурналаРегистрации(""VanessaBehavior."" + ИмяСобытия, УровеньЖурналаРегистрации.Информация, , , Стр);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЛогВТекстИнформация(ИмяСобытия, Стр)
	ЗаписатьСтрокуВТекстовыйЛог(Символы.Таб + Символы.Таб + ИмяСобытия + "":"" + Стр);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЛогВТекстПредупреждение(ИмяСобытия, Стр)
	ЗаписатьСтрокуВТекстовыйЛог(Символы.Таб + ""ПРЕДУПРЕЖДЕНИЕ:"" + Символы.Таб + ИмяСобытия + "":"" + Стр);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЛогВЖРПередВыполнениемШага(ИмяШага)
	ЗаписатьЛогВЖРПередВыполнениемШагаСервер(ИмяШага);
КонецПроцедуры


&НаКлиенте
Функция ПолучитьИмяФормыИзПоследнегоАктивногоОкна()
	Если ОбъектКонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
		Если ОбъектКонтекст.Свойство(""АктивноеОкно"") Тогда
			Если ОбъектКонтекст.АктивноеОкно <> Неопределено Тогда
				Попытка
					АктивноеОкно = ОбъектКонтекст.АктивноеОкно;
					Если ЭтоЗаголовокОкнаМодальногоДиалога(АктивноеОкно.Заголовок) Тогда
						Если ОбъектКонтекст.Свойство(""ПредыдущееАктивноеОкно"") Тогда
							АктивноеОкно = ОбъектКонтекст.ПредыдущееАктивноеОкно;
						КонецЕсли;
					КонецЕсли;
					
					ТестируемаяФорма = АктивноеОкно.НайтиОбъект(Тип(""ТестируемаяФорма""));
					
					Возврат ТестируемаяФорма.ИмяФормы;
				Исключение
					
				КонецПопытки;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура ЗаписатьЛогОшибки(СтрокаСценария,СтрокаШага,ТекстОшибки,ИнфоОбОшибке,ОписаниеОшибкиШага)
	Если Не Объект.ДелатьЛогОшибокВТекстовыйФайл Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ИмяКаталогаЛогОшибок) Тогда
		ВызватьИсключение ""Не указано имя файла лога в параметре <ИмяКаталогаЛогОшибок>"";
	КонецЕсли;
	
	ЭтоПример          = Ложь;
	ЭтоШагКонтекста    = Ложь;
	СтрокаРодителяШага = НайтиСтрокуСценарияЧерезРодителя(СтрокаШага, ЭтоПример,ЭтоШагКонтекста);
	
	
	ТекущаяУниверсальнаяДатаСтрока = СтрЗаменить(ТекущаяУниверсальнаяДатаВМиллисекундах(),Символы.НПП,"""");
	ВтораяЧастьФайла = ""Ошибка_"" + ТекущаяУниверсальнаяДатаСтрока + "".json"";
	УбратьВсеЗапрещенныеСимволыИзИмениФайла(ВтораяЧастьФайла);
	
	ИмяФайла = ДополнитьСлешВПуть(Объект.ИмяКаталогаЛогОшибок) + ВтораяЧастьФайла;
	
	ЗаписьJson = Вычислить(""Новый ЗаписьJson()"");
	ЗаписьJson.ОткрытьФайл(ИмяФайла);
	
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	
	ЗаписьJSON.ЗаписатьИмяСвойства(""ИмяСценария"");
	ЗаписьJSON.ЗаписатьЗначение(СтрокаСценария.Имя);
	
	ЗаписьJSON.ЗаписатьИмяСвойства(""ИмяШага"");
	ЗаписьJSON.ЗаписатьЗначение(СтрокаШага.Имя);
	
	ЗаписьJSON.ЗаписатьИмяСвойства(""НомерСтрокиВФиче"");
	ЗаписьJSON.ЗаписатьЗначение(СтрокаШага.НомерСтрокиВФиче);
	
	ЗаписьJSON.ЗаписатьИмяСвойства(""СтрокаДерева"");
	ЗаписьJSON.ЗаписатьЗначение(СтрокаШага.ИдСтроки);
	
	ЗаписьJSON.ЗаписатьИмяСвойства(""ТекстОшибки"");
	ЗаписьJSON.ЗаписатьЗначение(ТекстОшибки);
	
	ЗаписьJSON.ЗаписатьИмяСвойства(""ОписаниеОшибкиШага"");
	ЗаписьJSON.ЗаписатьЗначение(ОписаниеОшибкиШага);
	
	ЗаписьJSON.ЗаписатьИмяСвойства(""ЭтоШагКонтекста"");
	ЗаписьJSON.ЗаписатьЗначение(ЭтоШагКонтекста);
	
	
	ЗаписьJSON.ЗаписатьИмяСвойства(""МассивФайлов"");
	ЗаписьJSON.ЗаписатьНачалоМассива();
	Если ТипЗнч(СтрокаРодителяШага.ПроизвольныеЗначения) = Тип(""Структура"") Тогда
		Если СтрокаРодителяШага.ПроизвольныеЗначения.Свойство(""ПрикрепленныеМакеты"") Тогда
			ПрикрепленныеМакеты = СтрокаРодителяШага.ПроизвольныеЗначения.ПрикрепленныеМакеты;
			Для Каждого ДанныеФайла Из ПрикрепленныеМакеты Цикл
				ИмяМакета = ДанныеФайла.Имя + ""_"" + ТекущаяУниверсальнаяДатаСтрока;
				УбратьВсеЗапрещенныеСимволыИзИмениФайла(ИмяМакета);
				
				ИмяПрикрепленногоФайла = ДополнитьСлешВПуть(Объект.ИмяКаталогаЛогОшибок) + ИмяМакета + "".mxl"";
				ЗаписьJSON.ЗаписатьЗначение(ИмяПрикрепленногоФайла);
				
				Попытка
					ДанныеФайла.Макет.Записать(ИмяПрикрепленногоФайла);
				Исключение
					Сообщить(ОписаниеОшибки());
				КонецПопытки;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	ЗаписьJSON.ЗаписатьКонецМассива();
	
	
	
	ТекИмяФормы = """";
	Если ИнфоОбОшибке <> Неопределено Тогда
		ТекИмяФормы = ПолучитьИмяФормыИзПоследнегоАктивногоОкна();
		Если ТекИмяФормы = Неопределено Тогда
			ТекИмяФормы = """";
		КонецЕсли;
	КонецЕсли;
	ЗаписьJSON.ЗаписатьИмяСвойства(""ФормаВКоторойВозниклоИсключение"");
	ЗаписьJSON.ЗаписатьЗначение(ТекИмяФормы);
	
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	ЗаписьJson.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЛогВТекстПередВыполнениемШага(ИмяШага)
	ЗаписатьСтрокуВТекстовыйЛог(Символы.Таб + ""ПередВыполнениемШага: "" + ИмяШага);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаписатьЛогВЖРПередВыполнениемСценарияСервер(ИмяСценария)
	ЗаписьЖурналаРегистрации(""VanessaBehavior.ПередВыполнениемСценария"", УровеньЖурналаРегистрации.Информация, , ,ИмяСценария);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЛогВЖРПередВыполнениемСценария(ИмяСценария)
	ЗаписатьЛогВЖРПередВыполнениемСценарияСервер(ИмяСценария);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьЛогВТекстПередВыполнениемСценария(ИмяСценария)
	ЗаписатьСтрокуВТекстовыйЛог(Символы.Таб + ""Сценарий: "" + ИмяСценария);
КонецПроцедуры

&НаСервереБезКонтекста
Функция УзнатьЕстьПоддержкаНемодальныхФорм()
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Массив1 = РазложитьСтрокуВМассивПодстрок(СистемнаяИнформация.ВерсияПриложения, ""."");
	Массив2 = РазложитьСтрокуВМассивПодстрок(""8.3.3.641"", ""."");
	
	Версия1БольшеИлиРавно = Истина;
	Для Ккк = 0 По Массив1.Количество() - 1 Цикл
		Элем1 = Массив1.Получить(Ккк);
		Элем2 = Массив2.Получить(Ккк);
		
		Если Число(Элем2) > Число(Элем1) Тогда
			Версия1БольшеИлиРавно = Ложь;
		ИначеЕсли Число(Элем2) < Число(Элем1) Тогда
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Версия1БольшеИлиРавно;
КонецФункции

&НаСервереБезКонтекста
Функция УзнатьЕстьЗащитаОтОпасныхДействий()
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Массив1 = РазложитьСтрокуВМассивПодстрок(СистемнаяИнформация.ВерсияПриложения, ""."");
	Массив2 = РазложитьСтрокуВМассивПодстрок(""8.3.9.2033"", ""."");
	
	Версия1БольшеИлиРавно = Истина;
	Для Ккк = 0 По Массив1.Количество() - 1 Цикл
		Элем1 = Массив1.Получить(Ккк);
		Элем2 = Массив2.Получить(Ккк);
		
		Если Число(Элем2) > Число(Элем1) Тогда
			Версия1БольшеИлиРавно = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Версия1БольшеИлиРавно;
КонецФункции

&НаКлиенте
Функция УзнатьРежимСовместимостиКлиент(ЗначениеПоУмолчанию)
	Если Не ЗначениеЗаполнено(КешРежимСовместимости) Тогда
		КешРежимСовместимости = УзнатьРежимСовместимости(ЗначениеПоУмолчанию);
	КонецЕсли;
	
	Возврат КешРежимСовместимости;
КонецФункции

&НаСервереБезКонтекста
Функция УзнатьРежимСовместимости(ЗначениеПоУмолчанию)
	Значение = ЗначениеПоУмолчанию;
	
	Попытка
		Значение = Строка(Вычислить(""Метаданные.РежимСовместимости""));
	Исключение
		Возврат Значение;
	КонецПопытки;
	
	Возврат Значение;
	
КонецФункции

&НаСервереБезКонтекста
Функция УзнатьЕстьПоддержкаАсинхронныхВызовов()
	СистемнаяИнформация = Новый СистемнаяИнформация;
	
	Версия1БольшеИлиРавно = ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(СистемнаяИнформация.ВерсияПриложения,""8.3.5.1383"");
	
	Рез = Версия1БольшеИлиРавно;
	
	Возврат Рез;
КонецФункции

&НаКлиенте
Функция УзнатьЕстьПоддержкаНемодальныхФормКлиент()
	Возврат УзнатьЕстьПоддержкаНемодальныхФорм();
КонецФункции

&НаКлиенте
Процедура ОбновитьКнопкуЗагрузитьФичи()
	Если Объект.текЗначениеОперации = ""ЗагрузитьФичиИзКаталога"" Тогда
		//Элементы.ПодменюЗагрузитьФичи.Заголовок = ""Загрузить фичи из каталога"";
	ИначеЕсли Объект.текЗначениеОперации = ""ЗагрузитьОднуФичу"" Тогда
		//Элементы.ПодменюЗагрузитьФичи.Заголовок = ""Загрузить одну фичу"";
	ИначеЕсли Объект.текЗначениеОперации = """" Тогда
	Иначе
		Стр = ""Ошибка. Неизвестное значение параметра текЗначениеОперации = "" + Объект.текЗначениеОперации;
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТестыЗагрузитьФичиИзКаталога()
	ОчиститьСообщения();
	
	Режим = РежимДиалогаВыбораФайла.ВыборКаталога;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработатьВыборФайлаЗагрузкаФичи"""", ЭтаФорма)"");
		Выполнить(""ДиалогОткрытияФайла.Показать(ОписаниеОповещения)"");
	Иначе
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			Объект.КаталогФич = ДиалогОткрытияФайла.Каталог;
			//очистим кеш при смене фичи
			КешStepDefinition.Очистить();
			КешТаблицGherkin.Очистить();
			ЗагрузитьФичи();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПутьКОбработкеСервер()
	Если СокрЛП(Объект.КаталогИнструментов) <> """" Тогда
		Возврат Объект.КаталогИнструментов;
	КонецЕсли;
	
	Объект1 = РеквизитФормыВЗначение(""Объект"");
	ИспользуемоеИмяФайла = Объект1.ИспользуемоеИмяФайла;
	Если (Лев(НРег(ИспользуемоеИмяФайла), 6) <> ""e1cib/"") и (Лев(НРег(ИспользуемоеИмяФайла), 6) <> ""e1cib\"") Тогда
		Файл = Новый Файл(ИспользуемоеИмяФайла);
		КаталогИнструментовПуть = Файл.Путь;
		Если Прав(КаталогИнструментовПуть, 1) =  ""\"" Тогда
			КаталогИнструментовПуть = Лев(КаталогИнструментовПуть, СтрДлина(КаталогИнструментовПуть) - 1);
		ИначеЕсли Прав(КаталогИнструментовПуть, 1) =  ""/"" Тогда
			КаталогИнструментовПуть = Лев(КаталогИнструментовПуть, СтрДлина(КаталогИнструментовПуть) - 1);
		КонецЕсли;
		Возврат КаталогИнструментовПуть;
	Иначе
		Возврат """";
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция ПолучитьПутьКОбработкеКлиент() Экспорт
	Если СокрЛП(Объект.КаталогИнструментов) <> """" Тогда
		Возврат Объект.КаталогИнструментов;
	КонецЕсли;
	
	Возврат ПолучитьПутьКОбработкеСервер();
КонецФункции

&НаКлиенте
Процедура ВосстановитьНастройкиКлиент() Экспорт
	Перем Настройки;
	
	Если Объект.РежимСамотестирования Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = Плагин(""LoadSettings"");
	
	Объект.ТаймаутЗапуска1С = 25;
	СтрЗапуска = СокрЛП(ПараметрЗапуска);
	Если СтрЗапуска <> """" Тогда
		СтруктураПараметров = Настройки.ПолучитьСтруктуруПараметров(СтрЗапуска);
		StartFeaturePlayer = Настройки.ПолучитьЗначение(СтруктураПараметров, ""StartFeaturePlayer"");
		Если StartFeaturePlayer = Истина Тогда
			ЭтоЗапускВРежимеКоманднойСтроки = Истина;
			//значит мы в режиме ЗапускВРежимеКоманднойСтроки
			Возврат;
		КонецЕсли;
		
		NoLoadConfig = Настройки.ПолучитьЗначение(СтруктураПараметров, ""NoLoadConfig"");
		Если NoLoadConfig = Истина Тогда
			ЭтоЗапускВРежимеКоманднойСтроки    = Истина;
			ЭтоЗапускВРежимеБезЗагрукиНастроек = Истина;
			//значит нам сообщили, что не надо загружать настройки
			Возврат;
		КонецЕсли;
		
		LibsOnly = Настройки.ПолучитьЗначение(СтруктураПараметров, ""LibsOnly"");
		Если LibsOnly = Истина Тогда
			ЭтоЗапускВРежимеКоманднойСтроки    = Истина;
			ЭтоЗапускВРежимеБезЗагрукиНастроек = Истина;
			Объект.DebugLog                    = Истина;
			//значит нам сообщили, что не надо загружать настройки, но надо добавить стандартные библиотеки
			
			Если СокрЛП(Объект.КаталогИнструментов) <> """" Тогда
				Объект.КаталогиБиблиотек.Добавить(Объект.КаталогИнструментов + ""/features/libraries"");
				Объект.СписокТеговИсключение.Добавить(""IgnoreOnCIMainBuild"");
			КонецЕсли;
			
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	КаталогИнструментовСохр = Объект.КаталогИнструментов;
	
	Настройки.ВосстановитьНастройки(ЭтаФорма);
	
	Объект.КаталогИнструментов = КаталогИнструментовСохр;
	
	//ВосстановитьНастройки(ЭтоLinux);
	ВосстановитьВсеНастройкиИзХранилища();
	ВостановитьНедавноЗагруженныеФичи(НедавноЗагруженныеФичи);
	СкопироватьНедавноЗагруженныеФичиВИнтерфейс(НедавноЗагруженныеФичи);
КонецПроцедуры

&НаСервере
Функция ПолучитьИДДляОбщегоСохраненияНастроек()
	Стр = ""VanessaBehaviorUF"";
	Если Объект.РежимСамотестирования Тогда
		Стр = ""VanessaBehaviorUF_autotest"";
	КонецЕсли;
	
	Возврат Стр;
	
КонецФункции


&НаСервереБезКонтекста
Процедура ПроверитьОбработкуНаВозможностьПодключения(ИмяОбработки)
	Обработка = ВнешниеОбработки.Создать(ИмяОбработки,Ложь);
	Попытка
		ПараметрыОбработки = Обработка.ПараметрыОбработки();
	Исключение
		//значит параметры не указаны
		Возврат;
	КонецПопытки;
	
	IgnoreOn82 = Ложь;
	ПараметрыОбработки.Свойство(""IgnoreOn82"",IgnoreOn82);
	
	Если IgnoreOn82 Тогда
		СистемнаяИнформация = Новый СистемнаяИнформация;
		Если Лев(СистемнаяИнформация.ВерсияПриложения,4) = ""8.2."" Тогда
			ИмяОбработки = Неопределено;
		Иначе
			Попытка
				ТекущийРежимСовместимости = Вычислить(""Метаданные.РежимСовместимости"");
				РежимыСовестимости = Метаданные.СвойстваОбъектов.РежимСовместимости;
			Исключение
				Возврат;
			КонецПопытки;
			
			Если ТекущийРежимСовместимости = РежимыСовестимости.Версия8_1 Тогда
				ИмяОбработки = Неопределено;
			ИначеЕсли ТекущийРежимСовместимости = РежимыСовестимости.Версия8_2_13 Тогда
				ИмяОбработки = Неопределено;
			ИначеЕсли ТекущийРежимСовместимости = РежимыСовестимости.Версия8_2_16 Тогда
				ИмяОбработки = Неопределено;
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПодключитьВнешнююОбработкуСервер(АдресХранилища,ИспользуетсяЗащитаОтОпасныхДействий)
	Если ИспользуетсяЗащитаОтОпасныхДействий Тогда
		ОписаниеЗащитыОтОпасныхДействий = Вычислить(""Новый ОписаниеЗащитыОтОпасныхДействий"");
		ОписаниеЗащитыОтОпасныхДействий.ПредупреждатьОбОпасныхДействиях = Ложь;
		
		ИмяОбработки = ВнешниеОбработки.Подключить(АдресХранилища, , Ложь, ОписаниеЗащитыОтОпасныхДействий);
		
		ПроверитьОбработкуНаВозможностьПодключения(ИмяОбработки);
		
		Возврат ИмяОбработки;
	Иначе
		ИмяОбработки = ВнешниеОбработки.Подключить(АдресХранилища, , Ложь);
		ПроверитьОбработкуНаВозможностьПодключения(ИмяОбработки);
		Возврат ИмяОбработки;
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ДобавитьПустойСнипетВТаблицуИзвестныхStepDefinition(ИмяФайла, ВерсияФайла)
	ДобавитьСнипетВТаблицуИзвестныхStepDefinitionВызовСКлиента(""ПустойСнипет"" + ИмяФайла, """", ИмяФайла, Новый Массив, 
		НРег(""ПустойСнипет"" + ИмяФайла), """", """", ВерсияФайла, """", """", Неопределено);
КонецПроцедуры

&НаСервере
Процедура ДобавитьСнипетВТаблицуИзвестныхStepDefinitionВызовСКлиента(ID, СтрокаРеальнойПроцедуры, ИмяФайла, 
		МассивПараметров, СтрокаДляПоиска, ПредставлениеТеста, Транзакция, ВерсияФайла, 
		ОписаниеШага, ТипШага, ТипШагаВДереве)
	
	ТзнТаблицаИзвестныхStepDefinition = РеквизитФормыВЗначение(""ТаблицаИзвестныхStepDefinition"");//TODO ?? обойтись без РеквизитФормыВЗначение
	
	СтрТзнТаблицаИзвестныхStepDefinition = ТзнТаблицаИзвестныхStepDefinition.Найти(СтрокаДляПоиска, ""СтрокаДляПоиска"");
	Если СтрТзнТаблицаИзвестныхStepDefinition = Неопределено Тогда
		ДобавитьСнипетВТаблицуИзвестныхStepDefinitionССервера(ТзнТаблицаИзвестныхStepDefinition, ID, 
			СтрокаРеальнойПроцедуры, ИмяФайла, МассивПараметров, СтрокаДляПоиска, ПредставлениеТеста, Транзакция, 
			ВерсияФайла, ОписаниеШага, ТипШага, ТипШагаВДереве);
		ЗначениеВРеквизитФормы(ТзнТаблицаИзвестныхStepDefinition, ""ТаблицаИзвестныхStepDefinition"");
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьСнипетВТаблицуИзвестныхStepDefinitionССервера(ТзнТаблицаИзвестныхStepDefinition, ID, 
		СтрокаРеальнойПроцедуры, ИмяФайла, МассивПараметров, СтрокаДляПоиска, ПредставлениеТеста, Транзакция, 
		ВерсияФайла, ОписаниеШага, ТипШага, ТипШагаВДереве)

	СтрТаблицаИзвестныхStepDefinition                         = ТзнТаблицаИзвестныхStepDefinition.Добавить();
	СтрТаблицаИзвестныхStepDefinition.ID                      = ID;
	СтрТаблицаИзвестныхStepDefinition.СтрокаРеальнойПроцедуры = СтрокаРеальнойПроцедуры;
	
	УниверсальноеПолноеИмя = ИмяФайла;
	
	Попытка
		Файл = Новый Файл(ИмяФайла);
		УниверсальноеПолноеИмя = УниверсальноеПолноеИмяФайла(Файл);
	Исключение
	КонецПопытки;
	
	СтрТаблицаИзвестныхStepDefinition.ИмяФайла                = УниверсальноеПолноеИмя;
	
	СтрТаблицаИзвестныхStepDefinition.Параметры               = МассивПараметров;
	СтрТаблицаИзвестныхStepDefinition.СтрокаДляПоиска         = СтрокаДляПоиска;
	СтрТаблицаИзвестныхStepDefinition.ПредставлениеТеста      = ПредставлениеТеста;
	СтрТаблицаИзвестныхStepDefinition.Транзакция              = Транзакция;
	СтрТаблицаИзвестныхStepDefinition.ВерсияФайла             = ВерсияФайла;
	СтрТаблицаИзвестныхStepDefinition.ОписаниеШага            = ОписаниеШага;
	СтрТаблицаИзвестныхStepDefinition.ТипШага                 = ТипШага;
	СтрТаблицаИзвестныхStepDefinition.ТипШагаВДереве          = ТипШагаВДереве;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СравнитьПутиФайлов(Знач Путь1, Знач Путь2)
	
	Возврат УниверсальноеПолноеИмяФайла(Путь1, Истина) = УниверсальноеПолноеИмяФайла(Путь2, Истина);
	
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СравнитьОбычныйПутьФайлаСУниверсальнымПутемДругогоФайла(Знач Путь1, Знач УниверсальныйПуть2)
	
	Возврат УниверсальноеПолноеИмяФайла(Путь1, Истина) = УниверсальныйПуть2;
	
	
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьСнипет(Знач Снипет, Знач ИмяФайла, ВерсияФайла, БылиОшибки, ТзнТаблицаИзвестныхStepDefinition, 
	МассивВажныхСообщений)
	
	ИмяФайла                = УниверсальноеПолноеИмяФайла(ИмяФайла);
	ИмяФайлаНРег = НРег(ИмяФайла);

	СтрокаРеальнойПроцедуры = СокрЛП(Снипет.ИмяПроцедуры);
	ID                      = СокрЛП(Снипет.Снипет);
	
	//уберем слово ""Экспорт""
	Если Прав(НРег(СтрокаРеальнойПроцедуры), 7) = ""экспорт"" Тогда
		СтрокаРеальнойПроцедуры = Лев(СтрокаРеальнойПроцедуры, СтрДлина(СтрокаРеальнойПроцедуры) - 7);
		СтрокаРеальнойПроцедуры = СокрЛП(СтрокаРеальнойПроцедуры);
	КонецЕсли;
	
	Если Лев(НРег(СтрокаРеальнойПроцедуры), 9) = ""процедура"" Тогда
		СтрокаРеальнойПроцедуры = СокрЛП(Сред(СтрокаРеальнойПроцедуры, 10));
	КонецЕсли;
	
	Поз = Найти(ID, ""("");
	СтрПараметры = Сред(ID, Поз + 1);
	СтрПараметры = Лев(СтрПараметры, СтрДлина(СтрПараметры) - 1);
	
	МассивПром = РазложитьСтрокуВМассивПодстрок(СтрПараметры, "","");
	МассивПараметров = Новый Массив;
	Для Каждого Элем Из МассивПром Цикл
		СтруктураПарам = Новый Структура;
		Тип = ""Строка"";
		Если Найти(НРег(Элем), ""число"") > 0 Тогда
			Тип = ""Число"";
		КонецЕсли;
		Если Найти(НРег(Элем), ""дата"") > 0 Тогда
			Тип = ""Дата"";
		КонецЕсли;
		СтруктураПарам.Вставить(""Тип"", Тип);
		МассивПараметров.Добавить(СтруктураПарам);
	КонецЦикла;
	
	ПромСтр = ТзнТаблицаИзвестныхStepDefinition.Найти(ID, ""ID"");
	Если ПромСтр <> Неопределено Тогда
		Если СравнитьОбычныйПутьФайлаСУниверсальнымПутемДругогоФайла(ПромСтр.ИмяФайла, ИмяФайлаНРег) Тогда 
			//значит этот снипет из того же файла
			Возврат;//TODO возврат посередине процедуры не читабелен!
		КонецЕсли;
	КонецЕсли;
	Если ПромСтр <> Неопределено Тогда
		БылиОшибки = Истина;
		ТекстСообщения = ""Ошибка в файле %1, снипет %2 уже был в %3"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"", ИмяФайла);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"", ID);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%3"", ПромСтр.ИмяФайла);
		МассивВажныхСообщений.Добавить(ТекстСообщения);
		//Возврат; //TODO: почему закоментированно...
	КонецЕсли;
	
	Если Не Снипет.Свойство(""ОписаниеШага"") Тогда
		ОписаниеШага        = """";
	Иначе
		ОписаниеШага        = Снипет.ОписаниеШага;
	КонецЕсли;
	Если Не Снипет.Свойство(""ТипШага"") Тогда
		ТипШага             = """";
	Иначе
		ТипШага             = Снипет.ТипШага;
	КонецЕсли;
	
	ТипШагаВДереве = Неопределено;
	Если Снипет.Свойство(""ТипШагаВДереве"") Тогда
		ТипШагаВДереве = Снипет.ТипШагаВДереве;
	КонецЕсли;
	
	ДобавитьСнипетВТаблицуИзвестныхStepDefinitionССервера(ТзнТаблицаИзвестныхStepDefinition, ID, 
		СтрокаРеальнойПроцедуры, ИмяФайла, МассивПараметров, НРег(Лев(ID, Найти(ID, ""("") - 1)), 
		Снипет.ПредставлениеТеста, Снипет.Транзакция, ВерсияФайла, ОписаниеШага, ТипШага, ТипШагаВДереве);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСнипетыСервер(МассивСнипетовИзОбработки, ИмяФайла, ВерсияФайла, БылиОшибки, МассивВажныхСообщений)
	ТзнТаблицаИзвестныхStepDefinition = РеквизитФормыВЗначение(""ТаблицаИзвестныхStepDefinition"");//TODO ?? обойтись без РеквизитФормыВЗначение
	
	Для каждого Снипет Из МассивСнипетовИзОбработки Цикл
		ДобавитьСнипет(Снипет, ИмяФайла, ВерсияФайла, БылиОшибки, ТзнТаблицаИзвестныхStepDefinition, 
			МассивВажныхСообщений);
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(ТзнТаблицаИзвестныхStepDefinition, ""ТаблицаИзвестныхStepDefinition"");
	
КонецПроцедуры

&НаСервере
Процедура УдалитьИзТаблицаИзвестныхStepDefinitionДанныеПоФайлуСервер(ИмяФайла)
	ТзнТаблицаИзвестныхStepDefinition = ТаблицаИзвестныхStepDefinition;
	
	Отбор = Новый Структура;
	Отбор.Вставить(""ИмяФайла"", ИмяФайла);
	МассивСтрок = ТзнТаблицаИзвестныхStepDefinition.НайтиСтроки(Отбор);
	
	Для каждого СтрокаТаблицы Из МассивСтрок Цикл
		ТзнТаблицаИзвестныхStepDefinition.Удалить(СтрокаТаблицы);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьТаблицуКонтекстовОбработокНеПодключаяОбработки(Файл)
	СтрТаблицаКонтекстовОбработок = Новый Структура;
	УниверсальноеПолноеИмя = УниверсальноеПолноеИмяФайла(Файл.ПолноеИмя);
	СтрТаблицаКонтекстовОбработок.Вставить(""ИмяФайла"", УниверсальноеПолноеИмя);
	СтрТаблицаКонтекстовОбработок.Вставить(""Обработка"", Неопределено);
	
	ТаблицаКонтекстовОбработок.Добавить(СтрТаблицаКонтекстовОбработок);
	МассивИменКонтекстовОбработок.Добавить(Нрег(УниверсальноеПолноеИмя));
КонецПроцедуры

&НаКлиенте
Функция ПодключитьКонтекстОбработкиКлиент(Файл, ВерсияФайла = Неопределено)
	Перем  ФормаОбработки, ИмяОбработки, УниверсальноеПолноеИмя, МассивСнипетовИзОбработки;
	ФормаОбработки = Неопределено;
	Попытка
		ИмяОбработки = ПодключитьВнешнююОбработкуКлиент(Файл.ПолноеИмя);
		ФормаОбработки = ПолучитьФорму(""ВнешняяОбработка."" + ИмяОбработки + "".Форма.Форма"");
		Если ФормаОбработки = Неопределено Тогда
			Возврат Ложь;
		КонецЕсли;
	Исключение
		Отладка(""Не смог получить список шагов в обработке: "" + Файл.ПолноеИмя);
		Отладка(""ПодключитьКонтекстОбработкиКлиент:"" + ОписаниеОшибки());
		
		Если ВерсияФайла = Неопределено Тогда
			Возврат Ложь;//значит просто не получилось подключить обработку
		Иначе
			//значит передали ВерсиюФайла, тогда добавим обработку в кеш, чтобы она не пыталась загрузиться в следующий раз.
		КонецЕсли;
		
	КонецПопытки;
	
	УниверсальноеПолноеИмя = УниверсальноеПолноеИмяФайла(Файл.ПолноеИмя);
	УниверсальноеПолноеИмяНРег = Нрег(УниверсальноеПолноеИмя);

	СтрТаблицаКонтекстовОбработок = Новый Структура;
	СтрТаблицаКонтекстовОбработок.Вставить(""ИмяФайла"", УниверсальноеПолноеИмя);
	СтрТаблицаКонтекстовОбработок.Вставить(""Обработка"", ФормаОбработки);
	
	ИД = МассивИменКонтекстовОбработок.Найти(УниверсальноеПолноеИмяНРег);
	Если ИД = Неопределено Тогда
		ТаблицаКонтекстовОбработок.Добавить(СтрТаблицаКонтекстовОбработок);
		МассивИменКонтекстовОбработок.Добавить(УниверсальноеПолноеИмяНРег);
	Иначе
		ТаблицаКонтекстовОбработок[ИД] = СтрТаблицаКонтекстовОбработок;
	КонецЕсли;
	
	МассивСнипетовИзОбработки = Новый Массив();
	//этот вызов нужен чтобы передать контекст vanessa-behavior внутрь обработки
	Если ФормаОбработки <> Неопределено Тогда
		Попытка
			МассивСнипетовИзОбработки = ФормаОбработки.ПолучитьСписокТестов(ЭтаФорма);
		Исключение
			ПодробноеПредставление = ""Не смог загрузить снипеты из "" + Файл.ПолноеИмя + "" "" +ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ЗаписатьЛогВЖРОшибка(""VanessaBehavior.ПолучитьСписокТестов"", ПодробноеПредставление);
			СделатьСообщение(ПодробноеПредставление, ""Важное"");
			
			Возврат Ложь;
		КонецПопытки;
	Иначе
		ДобавитьПустойСнипетВТаблицуИзвестныхStepDefinition(Файл.ПолноеИмя, ВерсияФайла);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ПодключитьСнипетыИзОбработкиКлиент(Файл, ВерсияФайла, БылиОшибки)
	УниверсальноеПолноеИмяНРег = УниверсальноеПолноеИмяФайла(Файл.ПолноеИмя, Истина);
	
	ИД = МассивИменКонтекстовОбработок.Найти(УниверсальноеПолноеИмяНРег);
	Если ИД = Неопределено Тогда
		БылиОшибки = Ложь;
		Файл = Новый Файл(Файл.ПолноеИмя);
		Если НЕ ПодключитьКонтекстОбработкиКлиент(Файл, ВерсияФайла) Тогда
			Возврат;
		КонецЕсли;
		
		ИД = МассивИменКонтекстовОбработок.Найти(УниверсальноеПолноеИмяНРег);
	КонецЕсли;
	
	ФормаОбработки = ТаблицаКонтекстовОбработок[ИД].Обработка;
	Если ФормаОбработки = Неопределено Тогда
		ПодключитьКонтекстОбработкиКлиент(Файл);
		ФормаОбработки = ТаблицаКонтекстовОбработок[ИД].Обработка;
	КонецЕсли;
	
	Попытка
		МассивСнипетовИзОбработки = ФормаОбработки.ПолучитьСписокТестов(ЭтаФорма);
	Исключение
		ТекстСообщения = ""Не смог загрузить снипеты из %1"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Файл.ПолноеИмя);
		Сообщить(ТекстСообщения);
		ТекстСообщения = ""ПодключитьСнипетыИзОбработкиКлиент:%1"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ОписаниеОшибки());
		Сообщить(ТекстСообщения);
		Возврат;
	КонецПопытки;
	
	Если МассивСнипетовИзОбработки.Количество() = 0 Тогда
		//добавим пустой снипет, чтобы обработка попала в кэш
		ДобавитьПустойСнипетВТаблицуИзвестныхStepDefinition(Файл.ПолноеИмя, ВерсияФайла);
	Иначе
		МассивВажныхСообщений = Новый Массив;
		ДобавитьСнипетыСервер(МассивСнипетовИзОбработки, Файл.ПолноеИмя, ВерсияФайла, БылиОшибки, МассивВажныхСообщений);
		
		Если ЗначениеЗаполнено(МассивВажныхСообщений) Тогда
			Для каждого ТекстСообщения Из МассивВажныхСообщений Цикл
				ВывестиПредупреждение(""Проблемные шаги"", ТекстСообщения);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьВсеСуществующиеСнипетыИзОбработок(Знач ПутьКаталогаФич, Знач КаталогиБиблиотек, 
		Знач ДанныеПоВерсиямОбработок, Знач ДополнительныеПараметры)
	
	КоллекцийПутейФайловКоторыеСовпалиСКеш = Новый Соответствие;
	
	ПолучитьУжеСуществующиеСнипетыИзОбработок(ПутьКаталогаФич, ДополнительныеПараметры,
		ДанныеПоВерсиямОбработок.КоллекцияВерсийФайловШагов, КоллекцийПутейФайловКоторыеСовпалиСКеш);
	
	Для каждого Элем Из КаталогиБиблиотек Цикл
		КаталогБиблиотеки = ПреобразоватьПутьСТочкамиКНормальномуПути(Элем.Значение);
		ПолучитьУжеСуществующиеСнипетыИзОбработок(КаталогБиблиотеки, ДополнительныеПараметры,
			ДанныеПоВерсиямОбработок.КоллекцияВерсийФайловШагов, КоллекцийПутейФайловКоторыеСовпалиСКеш);
	КонецЦикла;

	Возврат КоллекцийПутейФайловКоторыеСовпалиСКеш;
КонецФункции

&НаКлиенте
Процедура ПолучитьУжеСуществующиеСнипетыИзОбработок(Знач КаталогФич, Знач ДополнительныеПараметры, 
		Знач КоллекцияВерсийФайловШагов, Знач КоллекцийПутейФайловКоторыеСовпалиСКеш)
	
	Файл = Новый Файл(КаталогФич);
	
	БылиОшибки = Ложь;
	НачальныйКаталог = КаталогФич;
	КаталогПоиска    = НачальныйКаталог;
	
	Файл = Новый Файл(НачальныйКаталог);
	Если НРег(Файл.Расширение) = "".feature"" Тогда
		КаталогПоиска = Файл.Путь;
	КонецЕсли;
	
	Отладка(ПолучитьТекстСообщенияПользователю(""$Ищу снипеты в каталоге$"") + "" "" + КаталогПоиска);
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		МассивФайлов = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, КаталогФич, ""НайденныеФайлы""); //это файлы по данной библиотеке
		Если МассивФайлов = Неопределено Тогда
			МассивФайлов = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, ""ПоискEPF"", ""НайденныеФайлы"");
		КонецЕсли;
	Иначе
		МассивФайлов = НайтиФайлы(КаталогПоиска, ""*.epf"", Истина);
	КонецЕсли;
	
	НомерФайла  = 0;
	ВсегоФайлов = МассивФайлов.Количество();
	Для Каждого ОбъектФайл Из МассивФайлов Цикл
		
		Если Не ЕстьПоддержкаАсинхронныхВызовов Тогда
			Файл = ОбъектФайл;
		Иначе
			Файл = ОбъектФайл.Файл;
		КонецЕсли;
		
		НомерФайла = НомерФайла + 1;
		ДелительДляПоказаСтатистики = 10;
		Если НомерФайла % ДелительДляПоказаСтатистики = 0 Тогда
			Состояние(""Файл №"" + НомерФайла + "" из "" + ВсегоФайлов, Окр((НомерФайла / ВсегоФайлов)*100), СокрЛП(КаталогФич));
		КонецЕсли;
		
		Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
			ВерсияФайла = Файл.ПолучитьВремяИзменения();
		Иначе
			ВерсияФайла = ОбъектФайл.ВерсияФайла;
		КонецЕсли;
		
		ПолноеИмяФайла = Файл.ПолноеИмя;
		УниверсальноеПолноеИмя = УниверсальноеПолноеИмяФайла(ПолноеИмяФайла);
		
		Если КоллекцийПутейФайловКоторыеСовпалиСКеш.Получить(УниверсальноеПолноеИмя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;

		ПрежняяВерсия = КоллекцияВерсийФайловШагов.Получить(УниверсальноеПолноеИмя);
		Если ПрежняяВерсия <> Неопределено Тогда
			Если ПрежняяВерсия <> ВерсияФайла Тогда
				//значит в кеше уже есть нужные снипеты обработок
				УдалитьИзТаблицаИзвестныхStepDefinitionДанныеПоФайлуСервер(УниверсальноеПолноеИмя);
				
				ИДМассивИменКонтекстовОбработок = МассивИменКонтекстовОбработок.Найти(Нрег(УниверсальноеПолноеИмя));
				Если ИДМассивИменКонтекстовОбработок <> Неопределено Тогда
					МассивИменКонтекстовОбработок.Удалить(ИДМассивИменКонтекстовОбработок);
					ТаблицаКонтекстовОбработок[ИДМассивИменКонтекстовОбработок].Обработка = Неопределено;
					ТаблицаКонтекстовОбработок.Удалить(ИДМассивИменКонтекстовОбработок);
				КонецЕсли;
				
				Отладка(ПолучитьТекстСообщенияПользователю(""$Загрузил новую версию$"") + "": "" + ПолноеИмяФайла);
			Иначе
				Отладка(ПолучитьТекстСообщенияПользователю(""$Загрузил снипеты из кеш$"") + "": "" + ПолноеИмяФайла);
					
				КоллекцийПутейФайловКоторыеСовпалиСКеш.Вставить(УниверсальноеПолноеИмя, Истина);
							
				ЗаполнитьТаблицуКонтекстовОбработокНеПодключаяОбработки(Файл);
				
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		ПодключитьСнипетыИзОбработкиКлиент(Файл, ВерсияФайла, БылиОшибки);

		КоллекцийПутейФайловКоторыеСовпалиСКеш.Вставить(УниверсальноеПолноеИмя, Истина);
		
	КонецЦикла;
	
	Если БылиОшибки Тогда
		Сообщить(""Были ошибки в ПросканироватьИсходникиИНайтиВсеStepDefinition."");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбходКаталогов(ПутьКаталога, МассивРезультатОбходаКаталогов, Уровень, ДополнительныеПараметры, ТекРодитель, КолЭлементовДобавлено)
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ФайлПутьКаталога = Новый Файл(ПутьКаталога);
		Если НРег(ФайлПутьКаталога.Расширение) = "".feature"" Тогда
			НайденныеФайлы = Новый Массив;//вернём одну фичу
			НайденныеФайлы.Добавить(ФайлПутьКаталога);
			ТекРодитель = НайденныеФайлы[0].Путь;
		Иначе
			НайденныеФайлы = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, ""ПоискFeature"", ""НайденныеФайлы"");
			Если ТекРодитель = Неопределено Тогда
				Если НайденныеФайлы.Количество() > 0 Тогда
					Если ТипЗнч(НайденныеФайлы[0]) = Тип(""Структура"") Тогда
						ТекРодитель = НайденныеФайлы[0].Файл.Путь;
					Иначе
						ТекРодитель = НайденныеФайлы[0].Путь;
					КонецЕсли;
					
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	Иначе
		ФайлПутьКаталога = Новый Файл(ПутьКаталога);
		Если ФайлПутьКаталога.ЭтоКаталог() Тогда
			НайденныеФайлы = НайтиФайлы(ПутьКаталога, ""*"");
		Иначе
			НайденныеФайлы = Новый Массив;//вернём одну фичу
			НайденныеФайлы.Добавить(ФайлПутьКаталога);
		КонецЕсли;
	КонецЕсли;
	
	Для каждого ОбъектФайл из НайденныеФайлы цикл
		Ф = ОбъектФайл;
		Если ТипЗнч(ф) = Тип(""Структура"") Тогда
			Ф = ОбъектФайл.Файл;//т.к. для режима запрета синхронных вызовов там будет структура
		КонецЕсли;
		
		Если ЕстьПоддержкаАсинхронныхВызовов Тогда
			Если ф.Путь <> ТекРодитель Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если Не ЕстьПоддержкаАсинхронныхВызовов Тогда
			ЭтоКаталог = ф.ЭтоКаталог();
		Иначе
			ЭтоКаталог = Ложь;
			Если ф.Расширение = """" Тогда
				ЭтоКаталог = Истина;
			Иначе
				// TODO определение ЭтоКаталог для асинхронных действий не очень точно. https://xdd.silverbulleters.org/t/add-ne-zagruzhayutsya-fichi-esli-raspolagayutsya-v-kataloge-v-imeni-kotorogo-est-tochka/2156
				РасширениеНормализованное = НРег(ф.Расширение);
				Если РасширениеНормализованное <> "".feature"" И РасширениеНормализованное <> "".epf"" Тогда
					ЭтоКаталог = Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЭтоКаталог тогда //это каталог
			СтруткураФайла = Новый Структура;
			СтруткураФайла.Вставить(""Уровень"", Уровень);
			СтруткураФайла.Вставить(""Каталог"", Истина);
			СтруткураФайла.Вставить(""Фича"", Ложь);
			СтруткураФайла.Вставить(""Имя"", ф.Имя);
			СтруткураФайла.Вставить(""ПолныйПуть"", ф.ПолноеИмя);
			МассивРезультатОбходаКаталогов.Добавить(СтруткураФайла);
			ТекИД = МассивРезультатОбходаКаталогов.Количество() - 1;
			
			ТекКолЭлементовДобавлено = 0;
			Уровень = Уровень + 1;
			ОбходКаталогов(ДополнитьСлешВПуть(ПутьКаталога) + ф.Имя, МассивРезультатОбходаКаталогов, Уровень, ДополнительныеПараметры, ДополнитьСлешВПуть(ф.ПолноеИмя), ТекКолЭлементовДобавлено);
			Уровень = Уровень - 1;
			
			Если ТекКолЭлементовДобавлено = 0 Тогда
				МассивРезультатОбходаКаталогов.Удалить(ТекИД);
			КонецЕсли;
			КолЭлементовДобавлено = КолЭлементовДобавлено + ТекКолЭлементовДобавлено;
			
		ИначеЕсли НРег(ф.Расширение) = "".feature"" Тогда
			
			ДвоичныеДанные = Новый ДвоичныеДанные(ф.ПолноеИмя);
			СтруткураФайла = ПолучитьСтруткураФайлаФичи(Уровень, ф.ИмяБезРасширения, ф.ПолноеИмя, ДвоичныеДанные);
			
			МассивРезультатОбходаКаталогов.Добавить(СтруткураФайла);
			КолЭлементовДобавлено = КолЭлементовДобавлено + 1;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруткураФайлаФичи(Уровень, ИмяБезРасширения, ПолноеИмя, ДвоичныеДанные)
	СтруткураФайла = Новый Структура;
	СтруткураФайла.Вставить(""Уровень"", Уровень);
	СтруткураФайла.Вставить(""Каталог"", Ложь);
	СтруткураФайла.Вставить(""Фича"", Истина);
	СтруткураФайла.Вставить(""Имя"", ИмяБезРасширения);
	СтруткураФайла.Вставить(""ПолныйПуть"", ПолноеИмя);
	СтруткураФайла.Вставить(""ДвоичныеДанные"", ДвоичныеДанные);
	
	Возврат СтруткураФайла;
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьПустыеКаталогиИзДерева(Дерево)
	КолСтрок = Дерево.Строки.Количество();
	Для Ккк = 0 По КолСтрок - 1 Цикл
		Строка = Дерево.Строки[КолСтрок - 1 - Ккк];
		Если Строка.Тип = ""Каталог"" Тогда
			Если Строка.Строки.Количество() = 0 Тогда
				Дерево.Строки.Удалить(Строка);
			Иначе
				УдалитьПустыеКаталогиИзДерева(Строка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПреобразоватьМассивТаблицаУжеСуществующихСценариевВТаблицуЗначений(ИсходныйМассив)
	Тзн = Новый ТаблицаЗначений;
	Тзн.Колонки.Добавить(""ИмяСценария"");
	Тзн.Колонки.Добавить(""ИмяФайла"");
	Тзн.Колонки.Добавить(""ТаблицаШагов"");
	Тзн.Колонки.Добавить(""ПолноеИмя"");
	Тзн.Колонки.Добавить(""ДвоичныеДанные"");
	Тзн.Колонки.Добавить(""ЭтоСтруктураСценария"");
	Тзн.Колонки.Добавить(""Снипет"");
	Для каждого Элем Из ИсходныйМассив Цикл
		СтрТзн = Тзн.Добавить();
		
		СтрТзн.ИмяСценария          = Элем.ИмяСценария;
		СтрТзн.ИмяФайла             = Элем.ИмяФайла;
		СтрТзн.ПолноеИмя            = Элем.ПолноеИмя;
		СтрТзн.ТаблицаШагов         = Элем.ТаблицаШагов;
		СтрТзн.ДвоичныеДанные       = Элем.ДвоичныеДанные;
		СтрТзн.ЭтоСтруктураСценария = Элем.ЭтоСтруктураСценария;
		СтрТзн.Снипет               = Элем.Снипет;
	КонецЦикла;
	
	Возврат Тзн;
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьПустыеКаталоги(МассивКаталоговДляПроверкиНаПустоту)
	Массив = Новый Массив;
	
	Для каждого ВеткаСтроки Из МассивКаталоговДляПроверкиНаПустоту Цикл
		Если ВеткаСтроки.Количество() = 0 Тогда
			ВеткаРодитель = ВеткаСтроки.Родитель.Родитель;//так определяется родитель на один уровень вверх, когда в переменной лежат строки дерева
			Если ВеткаРодитель = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если Массив.Найти(ВеткаРодитель) = Неопределено Тогда
				Массив.Добавить(ВеткаРодитель.Строки);
			КонецЕсли;
			
			ВеткаРодитель.Строки.Удалить(ВеткаСтроки.Родитель);
		КонецЕсли;
	КонецЦикла;
	
	Если Массив.Количество() > 0 Тогда
		УдалитьПустыеКаталоги(Массив);
	КонецЕсли;
КонецПроцедуры

&НаСервере
//Нельзя менять директиву на &НаСервереБезКонтекста, т.к. тогда перестанет присваиваться переменная ТекущийЗагружаемыйФичаФайл.
//Также надо понимать, что ЗаполнитьСтрокиДереваФичамиСервер вызывается из ЗаполнитьДеревоЗначенийПоМассивуСервер, которая вызывается &НаСервере
Процедура ЗаполнитьСтрокиДереваФичамиСервер(Дерево, FeatureReader, ТзнТаблицаИзвестныхStepDefinition, СтруктураПараметров)
	МассивСтрокДляУдаления = Новый Массив;
	Для каждого Строка Из Дерево.Строки Цикл
		Если Строка.Тип = ""Фича"" Тогда
			СтруктураПараметров.Вставить(""УдалитьСтрокуФичиИзДерева"", Ложь);
			
			ТекущийЗагружаемыйФичаФайл = Строка.ПолныйПуть;
			FeatureReader.ЗагрузитьФичу(Строка.ПолныйПуть, Строка.Строки, ТзнТаблицаИзвестныхStepDefinition, СтруктураПараметров);
			
			Если СтруктураПараметров.УдалитьСтрокуФичиИзДерева Тогда
				СтуктураРодительПотомок = Новый Структура;
				СтуктураРодительПотомок.Вставить(""СтрокиГдеНаходитсяФича"", Дерево.Строки);
				СтуктураРодительПотомок.Вставить(""СтрокаФичи"", Строка);
				МассивСтрокДляУдаления.Добавить(СтуктураРодительПотомок);
			КонецЕсли;
			
			Если СтруктураПараметров.Свойство(""ДопДанныеФичи"") Тогда
				ДопДанныеФичи = СтруктураПараметров[""ДопДанныеФичи""];
				Строка[""ДополнительныеДанные""] = ДопДанныеФичи;
			КонецЕсли;
			
		Иначе
			ЗаполнитьСтрокиДереваФичамиСервер(Строка, FeatureReader, ТзнТаблицаИзвестныхStepDefinition, СтруктураПараметров);
		КонецЕсли;
	КонецЦикла;
	
	
	МассивКаталоговДляПроверкиНаПустоту = СтруктураПараметров.МассивКаталоговДляПроверкиНаПустоту;
	Для каждого Элем Из МассивСтрокДляУдаления Цикл
		Элем.СтрокиГдеНаходитсяФича.Удалить(Элем.СтрокаФичи);
		
		Если МассивКаталоговДляПроверкиНаПустоту.Найти(Элем.СтрокиГдеНаходитсяФича) = Неопределено Тогда
			МассивКаталоговДляПроверкиНаПустоту.Добавить(Элем.СтрокиГдеНаходитсяФича);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроставитьОтметкуБрейкпоинтовРекурсивно(Дерево, Брейкпоинты)
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		Если СтрокаДерева.Тип = ""Шаг"" Тогда
			Если Брейкпоинты.Найти(СтрокаДерева.ПолныйПуть) <> Неопределено Тогда
				СтрокаДерева.Брейкпоинт = Истина;
			КонецЕсли;
		КонецЕсли;
		
		ПроставитьОтметкуБрейкпоинтовРекурсивно(СтрокаДерева, Брейкпоинты);
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроставитьОтметкуБрейкпоинтов(Дерево, СтруктураПараметров)
	ПроставитьОтметкуБрейкпоинтовРекурсивно(Дерево, СтруктураПараметров.Брейкпоинты);
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоздатьFeatureReader(КаталогИнструментов, ДвДанныеvbFeatureReader, ВременноеИмяФайла)
	ФайлvbFeatureReader = Новый Файл(КаталогИнструментов + ""/lib/featurereader/vbFeatureReader.epf"");
	ВременноеИмяФайла = Неопределено;
	Если Не ФайлvbFeatureReader.Существует() Тогда
		ВременноеИмяФайла = ПолучитьИмяВременногоФайла(""epf"");
		ДвДанныеvbFeatureReader.Записать(ВременноеИмяФайла);
		FeatureReader = ВнешниеОбработки.Создать(ВременноеИмяФайла, Ложь);
	Иначе
		FeatureReader = ВнешниеОбработки.Создать(ФайлvbFeatureReader.ПолноеИмя, Ложь);
	КонецЕсли;
	
	Возврат FeatureReader;
КонецФункции


&НаСервереБезКонтекста
Процедура ПолучитьКоличествоШаговИзДереваПоСтрокеРекурсивно(Дерево,КоличествоШагов)
	Для Каждого СтрокаДерева Из Дерево.Строки Цикл
		Если СтрокаДерева.Тип = ""Шаг"" Тогда
			КоличествоШагов = КоличествоШагов + 1;
		КонецЕсли;
		
		ПолучитьКоличествоШаговИзДереваПоСтрокеРекурсивно(СтрокаДерева,КоличествоШагов);
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьКоличествоШаговИзДереваПоСтроке(Дерево)
	КоличествоШагов = 0;
	ПолучитьКоличествоШаговИзДереваПоСтрокеРекурсивно(Дерево,КоличествоШагов);
	Возврат КоличествоШагов;
КонецФункции

&НаСервере
Процедура ЗаполнитьДеревоЗначенийПоМассивуСервер(МассивРезультатОбходаКаталогов, ДвДанныеvbFeatureReader, СтруктураПараметров)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	ТзнТаблицаИзвестныхStepDefinition = РеквизитФормыВЗначение(""ТаблицаИзвестныхStepDefinition"");//TODO ?? обойтись без РеквизитФормыВЗначение
	ТзнТаблицаИзвестныхStepDefinition.Индексы.Добавить(""СтрокаДляПоиска"");
	
	ТзнКешStepDefinition = РеквизитФормыВЗначение(""КешStepDefinition"");//TODO ?? обойтись без РеквизитФормыВЗначение
	ТзнКешStepDefinition.Индексы.Добавить(""ИмяШагаБезКлючевогоСлова"");
	СтруктураПараметров.Вставить(""КешStepDefinition"",ТзнКешStepDefinition);
	
	ТзнКешТаблицGherkin = РеквизитФормыВЗначение(""КешТаблицGherkin"");//TODO ?? обойтись без РеквизитФормыВЗначение
	ТзнКешТаблицGherkin.Индексы.Добавить(""Строка"");
	СтруктураПараметров.Вставить(""КешТаблицGherkin"",ТзнКешТаблицGherkin);
	
	ТолькоДляПолученияСпискаФич = Ложь;
	СтруктураПараметров.Свойство(""ТолькоДляПолученияСпискаФич"",ТолькоДляПолученияСпискаФич);
	Если ТолькоДляПолученияСпискаФич = Истина Тогда
		Дерево = ОбъектСервер.ДеревоТестов.Скопировать();
	Иначе
		Дерево = ОбъектСервер.ДеревоТестов;
	КонецЕсли;
	Дерево.Строки.Очистить();
	ТекДерево  = Дерево;
	ТекУровень = 0;
	
	Для каждого Элем Из МассивРезультатОбходаКаталогов Цикл
		Если Элем.Уровень > ТекУровень Тогда
			ТекУровень = Элем.Уровень;
			НовСтр     = ТекДерево.Строки.Добавить();
			ТекДерево  = НовСтр;
		ИначеЕсли Элем.Уровень < ТекУровень Тогда
			Разн = ТекУровень - Элем.Уровень;
			Для Ккк = 1 По Разн Цикл
				НовСтр = НовСтр.Родитель;
			КонецЦикла;
			НовСтр     = НовСтр.Родитель.Строки.Добавить();
			ТекУровень = Элем.Уровень;
			ТекДерево  = НовСтр;
		Иначе
			НовСтр     = ТекДерево.Родитель.Строки.Добавить();
			ТекДерево  = НовСтр;
		КонецЕсли;
		
		Если Элем.Каталог Тогда
			НовСтр.Тип        = ""Каталог"";
			НовСтр.ПолныйПуть = Элем.ПолныйПуть;
			НовСтр.Имя        = Элем.Имя;
		ИначеЕсли Элем.Фича Тогда
			НовСтр.Тип         = ""Фича"";
			НовСтр.ТипКартинки = 1;
			НовСтр.ПолныйПуть  = Элем.ПолныйПуть;
			НовСтр.Имя         = Элем.Имя;
		КонецЕсли;
		
	КонецЦикла;
	
	УдалитьПустыеКаталогиИзДерева(Дерево);
	
	Дерево.Строки.Сортировать(""ПолныйПуть"", Истина);
	
	ВременноеИмяФайла = Неопределено;
	FeatureReader     = СоздатьFeatureReader(Объект.КаталогИнструментов, ДвДанныеvbFeatureReader, ВременноеИмяФайла);
	
	Если Не СтруктураПараметров.Свойство(""ТаблицаУжеСуществующихСценариев"") Тогда
		ТаблицаУжеСуществующихСценариевСервер = ПреобразоватьМассивТаблицаУжеСуществующихСценариевВТаблицуЗначений(
				СтруктураПараметров.ТаблицаУжеСуществующихСценариевУФ);
		СтруктураПараметров.Вставить(""ТаблицаУжеСуществующихСценариев"", ТаблицаУжеСуществующихСценариевСервер);
	КонецЕсли;
	
	МассивКаталоговДляПроверкиНаПустоту = Новый Массив;
	СтруктураПараметров.Вставить(""МассивКаталоговДляПроверкиНаПустоту"", МассивКаталоговДляПроверкиНаПустоту);
	
	ЗаполнитьСтрокиДереваФичамиСервер(Дерево, FeatureReader, ТзнТаблицаИзвестныхStepDefinition, СтруктураПараметров);
	
	Для Каждого Элем Из СтруктураПараметров.ТаблицаУжеСуществующихСценариевУФ Цикл
		СтрокаТаблицаУжеСуществующихСценариев = СтруктураПараметров.ТаблицаУжеСуществующихСценариев.Найти(
				Элем.ИмяСценария,""ИмяСценария"");
		Если СтрокаТаблицаУжеСуществующихСценариев <> Неопределено Тогда
			//обновим снипеты для сценариев, которые описаны в фича файлах как экспортные
			Элем.Снипет = СтрокаТаблицаУжеСуществующихСценариев.Снипет;
		КонецЕсли;
	КонецЦикла;
	
	УдалитьПустыеКаталоги(МассивКаталоговДляПроверкиНаПустоту);
	СтруктураПараметров.МассивКаталоговДляПроверкиНаПустоту = Неопределено;
	СтруктураПараметров.ТаблицаУжеСуществующихСценариев = Неопределено;
	Если СтруктураПараметров.Свойство(""КешФич"") Тогда
		СтруктураПараметров.КешФич = Неопределено;
	КонецЕсли;
	
	Если СтруктураПараметров.Брейкпоинты.Количество() > 0 Тогда
		ПроставитьОтметкуБрейкпоинтов(Дерево, СтруктураПараметров);
	КонецЕсли;
	
	Если ВременноеИмяФайла <> Неопределено Тогда
		УдалитьФайлы(ВременноеИмяФайла);
	КонецЕсли;
	
	ЗаполнитьИДСтрокиДереваСервер(СтруктураПараметров, Дерево);
	
	Если ТолькоДляПолученияСпискаФич = Истина Тогда
		ТаблицаФич = Новый ТаблицаЗначений;
		ТаблицаФич.Колонки.Добавить(""Фича"");
		ТаблицаФич.Колонки.Добавить(""КоличествоШагов"");
		ТаблицаФич.Колонки.Добавить(""МассивТегов"");
		СтрокиСФичами = Дерево.Строки.НайтиСтроки(Новый Структура(""Тип"",""Фича""),Истина);
		Для Каждого СтрокаДерева Из СтрокиСФичами Цикл
			СтрокаТаблицаФич                 = ТаблицаФич.Добавить();
			СтрокаТаблицаФич.Фича            = СтрокаДерева.ПолныйПуть;
			СтрокаТаблицаФич.КоличествоШагов = ПолучитьКоличествоШаговИзДереваПоСтроке(СтрокаДерева);
			СтрокаТаблицаФич.МассивТегов     = СтрокаДерева.МассивТегов;
		КонецЦикла;
		
		Массив = Новый Массив;
		ТаблицаФич.Сортировать(""КоличествоШагов убыв"");
		Для Каждого СтрокаТаблицаФич Из ТаблицаФич Цикл
			Массив.Добавить(Новый Структура(""Фича,МассивТегов"",СтрокаТаблицаФич.Фича,СтрокаТаблицаФич.МассивТегов));
		КонецЦикла;
		СтруктураПараметров.МассивФичДляПослеНаложенияФильтров = Массив;
	Иначе
		ЗначениеВРеквизитФормы(ТзнТаблицаИзвестныхStepDefinition, ""ТаблицаИзвестныхStepDefinition"");
		ЗначениеВРеквизитФормы(ТзнКешStepDefinition, ""КешStepDefinition"");
		ЗначениеВРеквизитФормы(ТзнКешТаблицGherkin, ""КешТаблицGherkin"");
		ЗначениеВРеквизитФормы(ОбъектСервер, ""Объект"");
		
		СохранитьНастройкиВХранилище(""ТаблицаИзвестныхStepDefinition"", ТаблицаИзвестныхStepDefinition);
		СохранитьНастройкиВХранилище(""КешStepDefinition"", КешStepDefinition);
		СохранитьНастройкиВХранилище(""КешТаблицGherkin"", КешТаблицGherkin);
	КонецЕсли;
	
	СтруктураПараметров.Вставить(""КешStepDefinition"", Неопределено);
	СтруктураПараметров.Вставить(""КешТаблицGherkin"", Неопределено);
	СтруктураПараметров.Вставить(""ТаблицаОбластей"", Неопределено);
	СтруктураПараметров.Вставить(""ТаблицаПеревода"", Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДерево(Каталог, ДополнительныеПараметры, СтруктураПараметров)
	Файл = Новый Файл(Каталог);
	МассивРезультатОбходаКаталогов = Новый Массив;
	
	СтруткураФайла = Новый Структура;
	СтруткураФайла.Вставить(""Каталог"", Истина);
	СтруткураФайла.Вставить(""Имя"", Файл.Имя);
	СтруткураФайла.Вставить(""ПолныйПуть"", Каталог);
	СтруткураФайла.Вставить(""Уровень"", 1);
	
	МассивРезультатОбходаКаталогов.Добавить(СтруткураФайла);
	
	Уровень = 2;
	ТекРодитель = Неопределено;
	КолЭлементовДобавлено = 0;
	ОбходКаталогов(Каталог, МассивРезультатОбходаКаталогов, Уровень, ДополнительныеПараметры, ТекРодитель, КолЭлементовДобавлено);
	
	ДвДанныеvbFeatureReader = Новый ДвоичныеДанные(ПолучитьПутьКFeatureReader());
	
	СтруктураПараметров.Вставить(""МассивРезультатОбходаКаталогов"", МассивРезультатОбходаКаталогов);
	ЗаполнитьДеревоЗначенийПоМассивуСервер(МассивРезультатОбходаКаталогов, ДвДанныеvbFeatureReader, СтруктураПараметров);
	
	//Обновим снипеты в таблице известных сценариев.
	ИдСтроки = -1;
	Для Каждого СтрокаТаблицаУжеСуществующихСценариев Из СтруктураПараметров.ТаблицаУжеСуществующихСценариевУФ Цикл
		ИдСтроки = ИдСтроки + 1;
		ТаблицаУжеСуществующихСценариев[ИдСтроки].Снипет = СтрокаТаблицаУжеСуществующихСценариев.Снипет;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройкиВХранилищеКеш(ТаблицаИзвестныхStepDefinition,КешStepDefinition,КешТаблицGherkin)
	СохранитьНастройкиВХранилище(""ТаблицаИзвестныхStepDefinition"", ТаблицаИзвестныхStepDefinition);
	СохранитьНастройкиВХранилище(""КешStepDefinition"", КешStepDefinition);
	СохранитьНастройкиВХранилище(""КешТаблицGherkin"", КешТаблицGherkin);
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиИзХранилищаКеш()
	ВосстановитьНастройкиИзХранилища(""ТаблицаИзвестныхStepDefinition"", ""ТаблицаИзвестныхStepDefinition"");
	ВосстановитьНастройкиИзХранилища(""КешStepDefinition"", ""КешStepDefinition"");
	ВосстановитьНастройкиИзХранилища(""КешТаблицGherkin"", ""КешТаблицGherkin"");
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицыПоТаблицаИзвестныхStepDefinition()
	
	ДанныеПоВерсиямОбработок = Новый Структура;
	КоллекцияВерсийФайловШагов = Новый Соответствие;
	
	Для Каждого Стр Из ТаблицаИзвестныхStepDefinition Цикл
		КоллекцияВерсийФайловШагов.Вставить(Стр.ИмяФайла, Стр.ВерсияФайла);
		Стр.СтрокаОбрабатывалась = Ложь;
	КонецЦикла;
	
	ДанныеПоВерсиямОбработок.Вставить(""КоллекцияВерсийФайловШагов"", КоллекцияВерсийФайловШагов);
	
	Возврат ДанныеПоВерсиямОбработок;
КонецФункции

&НаКлиенте
Процедура УдалитьСтрокиТаблицаИзвестныхStepDefinitionКоторыеНеОбрабатывались(Знач КоллекцийПутейФайловКоторыеСовпалиСКеш)
	СтрокиТаблицы = Новый Массив;
	Для Каждого Стр Из ТаблицаИзвестныхStepDefinition Цикл
		ИмяФайла = Стр.ИмяФайла;
		Если КоллекцийПутейФайловКоторыеСовпалиСКеш.Получить(УниверсальноеПолноеИмяФайла(ИмяФайла)) <> Неопределено Тогда
			Стр.СтрокаОбрабатывалась = Истина;
		Иначе
			Если Не Стр.СтрокаОбрабатывалась Тогда
				СтрокиТаблицы.Добавить(Стр);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из СтрокиТаблицы Цикл
		ТаблицаИзвестныхStepDefinition.Удалить(Стр);
	КонецЦикла;
	
	ТаблицаИзвестныхStepDefinition.Сортировать(""СтрокаДляПоиска"");
КонецПроцедуры

&НаСервере
Функция ПолучитьМассивФайловИзТаблицы_ТаблицаИзвестныхStepDefinition()
	ТзнТаблицаИзвестныхStepDefinition = ТаблицаИзвестныхStepDefinition;
	ТзнТаблицаИзвестныхStepDefinition = ТзнТаблицаИзвестныхStepDefinition.Выгрузить(, ""ИмяФайла""); 
	ТзнТаблицаИзвестныхStepDefinition.Свернуть(""ИмяФайла"");
	Возврат ТзнТаблицаИзвестныхStepDefinition.ВыгрузитьКолонку(""ИмяФайла"");
КонецФункции

&НаСервере
Процедура УдалитьИз_ТаблицаИзвестныхStepDefinition_Файлы(МассивФайловДляОбработки)
	ТзнТаблицаИзвестныхStepDefinition = ТаблицаИзвестныхStepDefinition;
	
	Для Каждого ИмяФайла Из МассивФайловДляОбработки Цикл
		МассивСтрок = ТзнТаблицаИзвестныхStepDefinition.НайтиСтроки(Новый Структура(""ИмяФайла"", ИмяФайла));
		Для Каждого СтрокаТаблицы Из МассивСтрок Цикл
			ТзнТаблицаИзвестныхStepDefinition.Удалить(СтрокаТаблицы);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьДанныеФайлаПоСобраннойРанееИнформации(ИмяФайла, ДополнительныеПараметры)
	УниверсальноеПолноеИмяФайла = УниверсальноеПолноеИмяФайла(ИмяФайла, Истина);

	ДанныеФайла = НайтиДанныеФайлаПоСобраннойРанееИнформации(""ПоискEPF"", УниверсальноеПолноеИмяФайла,
		ДополнительныеПараметры);
	
	Возврат ДанныеФайла;
	
КонецФункции

&НаКлиенте
Функция НайтиДанныеФайлаПоСобраннойРанееИнформации(Знач ГдеИщем, Знач УниверсальноеПолноеИмяФайла, Знач ДополнительныеПараметры)
	МассивФайлов = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, ГдеИщем, ""НайденныеФайлы"");
	Если ЗначениеЗаполнено(МассивФайлов) Тогда
		Для Каждого ЭлементМассива Из МассивФайлов Цикл
			Если СравнитьОбычныйПутьФайлаСУниверсальнымПутемДругогоФайла(
					ЭлементМассива.Файл.ПолноеИмя, УниверсальноеПолноеИмяФайла) Тогда
				Возврат ЭлементМассива;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

&НаКлиенте
// Процедура УдалитьСтрокиИз_ТаблицаИзвестныхStepDefinition_ДляКоторыхНетФайловИСтрокиИзмененныхФайлов(ДанныеПоВерсиямОбработок,
Процедура УдалитьСтрокиИз_ТаблицаИзвестныхStepDefinition_ДляКоторыхНетФайловИСтрокиИзмененныхФайлов(
		КоллекцияВерсийФайловШагов, ДополнительныеПараметры, МассивФайлов)
	
	МассивФайловДляОбработки = Новый Массив;
	
	КаталогИнструментовУниверсальный = УниверсальноеПолноеИмяФайла(объект.КаталогИнструментов);
	Для Каждого ИмяФайла Из МассивФайлов Цикл
		ПропуститьФайлИзКаталогаШтатныхБиблиотек = Найти(ИмяФайла, КаталогИнструментовУниверсальный) <> 0;
		Если ПропуститьФайлИзКаталогаШтатныхБиблиотек Тогда
			Продолжить;
		КонецЕсли;

		Если НЕ ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
			МассивФайловДляОбработки.Добавить(ИмяФайла);
		Иначе
			Если ЕстьПоддержкаАсинхронныхВызовов Тогда
				
				ДанныеФайла = ПолучитьДанныеФайлаПоСобраннойРанееИнформации(ИмяФайла, ДополнительныеПараметры);
				Если ДанныеФайла = Неопределено Тогда
					ТекВерсия = Неопределено;
				Иначе
					ТекВерсия   = ДанныеФайла.ВерсияФайла;
				КонецЕсли;
				
			Иначе
				ТекВерсия = ВремяИзмененияФайлаКомандаСистемы(ИмяФайла);
			КонецЕсли;
			
			ПрежняяВерсия = КоллекцияВерсийФайловШагов.Получить(ИмяФайла);
			Если ПрежняяВерсия <> Неопределено И ТекВерсия <> ПрежняяВерсия Тогда
				МассивФайловДляОбработки.Добавить(ИмяФайла);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивФайловДляОбработки.Количество() > 0 Тогда
		УдалитьИз_ТаблицаИзвестныхStepDefinition_Файлы(МассивФайловДляОбработки);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаДоПостроенияДереваСервер(ДанныеПоВерсиямОбработок,МассивФайлов)
	ВосстановитьНастройкиИзХранилищаКеш();
	ДанныеПоВерсиямОбработок = ПолучитьТаблицыПоТаблицаИзвестныхStepDefinition();
	
	МассивФайлов = ПолучитьМассивФайловИзТаблицы_ТаблицаИзвестныхStepDefinition();
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДеревоФич(СтруктураПараметров)
	КаталогИнструментов     = СтруктураПараметров.КаталогИнструментов;
	КаталогФич              = СтруктураПараметров.КаталогФич;
	МассивСообщений         = СтруктураПараметров.МассивСообщений;
	DebugLog                = СтруктураПараметров.DebugLog;
	КаталогиБиблиотек       = СтруктураПараметров.КаталогиБиблиотек;
	ДополнительныеПараметры = СтруктураПараметров.ДополнительныеПараметры;
	
	СтруктураПараметров.ДополнительныеПараметры = Неопределено;//они не могут быть сериализованы в поздних версиях платформы
	
	ПутьКФичам = Новый Файл(КаталогФич);
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если Не ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, ""КаталогФич"", ""Существует"") Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Если Не ПутьКФичам.Существует() Тогда
			МассивСообщений.Добавить(""Не найден путь "" + КаталогФич);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ТаблицаКонтекстовОбработок = Новый Массив;
		ТаблицаИзвестныхStepDefinition.Очистить();
		МассивИменКонтекстовОбработок.Очистить();
	КонецЕсли;
	
	Путь = ПутьКФичам.ПолноеИмя;
	СтруктураПараметров.Вставить(""ИдетЗагрузкаИзКаталога"", Истина);
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если Не ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, ""КаталогФич"", ""ЭтоКаталог"") Тогда //это файл
			Путь = ПутьКФичам.Путь;
			СтруктураПараметров.Вставить(""ИдетЗагрузкаИзКаталога"", Ложь);
		КонецЕсли;
	Иначе
		Если ПутьКФичам.ЭтоФайл() Тогда
			Путь = ПутьКФичам.Путь;
			СтруктураПараметров.Вставить(""ИдетЗагрузкаИзКаталога"", Ложь);
		КонецЕсли;
	КонецЕсли;
	
	ПодготовитьВыводЛогаВФайл();	
	
	ДанныеПоВерсиямОбработок = Неопределено;
	МассивФайлов             = Неопределено;
	
	ОбработкаДоПостроенияДереваСервер(ДанныеПоВерсиямОбработок,МассивФайлов);
	
	УдалитьСтрокиИз_ТаблицаИзвестныхStepDefinition_ДляКоторыхНетФайловИСтрокиИзмененныхФайлов(
		ДанныеПоВерсиямОбработок.КоллекцияВерсийФайловШагов, ДополнительныеПараметры, МассивФайлов);
	
	КоллекцийПутейФайловКоторыеСовпалиСКеш = ПолучитьВсеСуществующиеСнипетыИзОбработок(Путь, КаталогиБиблиотек, 
		ДанныеПоВерсиямОбработок, ДополнительныеПараметры);
	
	Состояние(ПолучитьТекстСообщенияПользователю(""$Построение дерева.$""));
	
	УдалитьСтрокиТаблицаИзвестныхStepDefinitionКоторыеНеОбрабатывались(КоллекцийПутейФайловКоторыеСовпалиСКеш);
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ТаблицаУжеСуществующихСценариев = Новый Массив();
	КонецЕсли;
	
	МассивОбработанныхФайлов    = Новый Массив;
	ПолучитьУжеСуществующиеСценарииИзФич(Путь, ДополнительныеПараметры, МассивОбработанныхФайлов);
	Для каждого Элем Из КаталогиБиблиотек Цикл
		ПолучитьУжеСуществующиеСценарииИзФич(Элем.Значение, ДополнительныеПараметры, МассивОбработанныхФайлов);
	КонецЦикла;
	
	СтруктураПараметров.Вставить(""ТаблицаУжеСуществующихСценариевУФ"", ТаблицаУжеСуществующихСценариев);
	СтруктураПараметров.Вставить(""ЭтоLinux"",ЭтоLinux);
	СтруктураПараметров.Вставить(""ЯзыкГенератораGherkin"",Объект.ЯзыкГенератораGherkin);
	СтруктураПараметров.Вставить(""ДвоичныеДанныеФайлПеревода"",ПолучитьФайлыПеревода());
	
	ТаблицаУжеСуществующихСценариев = СтруктураПараметров.ТаблицаУжеСуществующихСценариевУФ;
	
	ЗаполнитьДерево(ПутьКФичам.ПолноеИмя, ДополнительныеПараметры, СтруктураПараметров);
	
КонецПроцедуры

&НаКлиенте
Функция КоллекцияДляПоискаДублейФайлов(МассивФайлов)
	Коллекция = Новый Соответствие;
	
	Для каждого Элем Из МассивФайлов Цикл
		Если ТипЗнч(Элем) = Тип(""Структура"") Тогда
			Коллекция.Вставить(Элем.Файл.ПолноеИмя, """");
		Иначе
			Коллекция.Вставить(Элем.ПолноеИмя, """");
		КонецЕсли;
	КонецЦикла;
	
	Возврат Коллекция;
КонецФункции

&НаКлиенте
Процедура ПолучитьУжеСуществующиеСценарииИзФич(Знач КаталогФич, ДополнительныеПараметры, МассивУжеОбработанныхаФайлов)
	Перем ПутьФайла;
	Файл = Новый Файл(КаталогФич);
	
	НачальныйКаталог = КаталогФич;
	КаталогПоиска    = НачальныйКаталог;
	
	Файл = Новый Файл(НачальныйКаталог);
	Если НРег(Файл.Расширение) = "".feature"" Тогда
		КаталогПоиска = Файл.Путь;
	КонецЕсли;
	
	Отладка(ПолучитьТекстСообщенияПользователю(""$Ищу сценарии в каталоге$"") + "" "" + КаталогПоиска);
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		МассивФайлов = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, КаталогФич, ""НайденныеФайлы""); //это файлы по данной библиотеке
		Если МассивФайлов = Неопределено Тогда
			МассивФайлов = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, ""ПоискFeature"", ""НайденныеФайлы"");
		КонецЕсли;
		
		КоллекцияДляПоискаДублейФайлов = КоллекцияДляПоискаДублейФайлов(МассивФайлов);

		Ном = 0;
		Для каждого Библ Из Объект.КаталогиБиблиотек Цикл
			Ном = Ном + 1;
			
			МассивФайловБиблиотека = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, ""БиблиотекаФич"" + Ном, ""НайденныеФайлы"");
			Для каждого Элем Из МассивФайловБиблиотека Цикл
				ПутьФайла = Элем.Файл.ПолноеИмя;
				Если КоллекцияДляПоискаДублейФайлов.Получить(ПутьФайла) <> Неопределено Тогда
					Продолжить;
				КонецЕсли;
				
				МассивФайлов.Добавить(Элем);
				КоллекцияДляПоискаДублейФайлов.Вставить(ПутьФайла, """");
				
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		МассивФайлов = НайтиФайлы(КаталогПоиска, ""*.feature"", Истина);
	КонецЕсли;
	
	Для Каждого ФайлОбъект Из МассивФайлов Цикл
		Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
			Файл = ФайлОбъект;
		Иначе
			Файл = ФайлОбъект.Файл;
		КонецЕсли;
		
		Если НРег(Файл.Расширение) <> "".feature"" Тогда
			Продолжить;
		КонецЕсли;
		
		ПолноеИмяФайла = Файл.ПолноеИмя;
		УниверсальноеИмяФайла = УниверсальноеПолноеИмяФайла(ПолноеИмяФайла);
		УниверсальноеИмяФайлаНРег = НРег(УниверсальноеИмяФайла);
		
		Если МассивУжеОбработанныхаФайлов.Найти(УниверсальноеИмяФайлаНРег) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		МассивУжеОбработанныхаФайлов.Добавить(УниверсальноеИмяФайлаНРег);
		
		Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
			ВерсияФайла = Файл.ПолучитьВремяИзменения();
			
			ИДВерсииФайла = МассивВерсийFeatureИмяФайла.Найти(УниверсальноеИмяФайла);
			Если ИДВерсииФайла = Неопределено Тогда
				МассивВерсийFeatureИмяФайла.Добавить(УниверсальноеИмяФайла);
				МассивВерсийFeatureВерсия.Добавить(ВерсияФайла);
			Иначе
				Если МассивВерсийFeatureВерсия[ИДВерсииФайла] <> ВерсияФайла Тогда
					//значит файл изменился
					//обновляем версию и удаляем старые снипеты
					МассивВерсийFeatureВерсия[ИДВерсииФайла] = ВерсияФайла;
					
					МассивИД = Новый Массив;
					Ном = -1;
					Для каждого Элем Из ТаблицаУжеСуществующихСценариев Цикл
						Ном = Ном + 1;
						Если СравнитьОбычныйПутьФайлаСУниверсальнымПутемДругогоФайла(Элем.ИмяФайла, УниверсальноеИмяФайлаНРег) Тогда
							МассивИД.Добавить(Ном);
						КонецЕсли;
						
					КонецЦикла;
					
					Для Ккк = 0 По МассивИД.Количество() - 1 Цикл
						ИД = МассивИД[МассивИД.Количество() - 1 - Ккк];
						ТаблицаУжеСуществующихСценариев.Удалить(ИД);
					КонецЦикла;
					
					Отладка(""Загрузил новую версию: "" + ПолноеИмяФайла);
				Иначе
					//значит уже актуальная версия файла загружена
					Продолжить;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		ТипШага  = """";
		Описание = """";
		Пример   = """";
		
		НашлиТегExportScenarios = Ложь;
		ДобавлятьШаги = Ложь;

		Текст = Новый ЧтениеТекста;
		Текст.Открыть(ПолноеИмяФайла, ""UTF-8"");

		Пока Истина Цикл
			Стр = Текст.ПрочитатьСтроку();
			Если Стр = Неопределено Тогда
				Прервать;
			КонецЕсли;
			
			Стр = СокрЛП(Стр);
			Если Стр = """" Тогда
				Продолжить;
			КонецЕсли;

			СтрНРег = НРег(Стр);
			
			Если СтрНРег = ""@exportscenarios"" Тогда
				НашлиТегExportScenarios = Истина;
			КонецЕсли;
			
			Если Лев(СтрНРег, 1) = ""@"" Тогда
				Если Лев(СтрНРег, 9) = ""@типшага:"" Тогда
					ТипШага = Сред(Стр, 10);
				ИначеЕсли Лев(СтрНРег, 10) = ""@описание:"" Тогда
					Описание = Сред(Стр, 11);
				ИначеЕсли Лев(СтрНРег, 21) = ""@примериспользования:"" Тогда
					ПромСтр = Сред(Стр, 22);
					Если Пример = """" Тогда
						Пример = ПромСтр;
					Иначе
						Пример = Пример + Символы.ПС + ПромСтр;
					КонецЕсли;
				КонецЕсли;
				
				Продолжить;
			КонецЕсли;
			Если Лев(СтрНРег, 1) = ""#"" Тогда
				Продолжить;
			КонецЕсли;
			
			Если НашлиТегExportScenarios Тогда
				Если Лев(СтрНРег, 9) = ""сценарий:"" Тогда
					ДобавлятьШаги = Истина;
					ИмяСценария = СокрЛП(Сред(Стр, 10));
					ТаблицаШагов = Новый Массив;
					
					ТаблицаУжеСуществующихСценариев.Добавить(ПолучитьСтруктуруДляСценария((ИмяСценария), УниверсальноеИмяФайла, ТаблицаШагов, ПолноеИмяФайла, Ложь, ТипШага, Описание, Пример));
					
					ТипШага  = """";
					Описание = """";
					Пример   = """";
					Продолжить;
				ИначеЕсли Лев(СтрНРег, 19) = ""структура сценария:"" Тогда
					ДобавлятьШаги = Истина;
					ИмяСценария = СокрЛП(Сред(Стр, 20));
					ТаблицаШагов = Новый Массив;
					ТаблицаУжеСуществующихСценариев.Добавить(ПолучитьСтруктуруДляСценария((ИмяСценария), УниверсальноеИмяФайла, ТаблицаШагов, ПолноеИмяФайла, Истина, ТипШага, Описание, Пример));
					
					ТипШага  = """";
					Описание = """";
					Пример   = """";
					Продолжить;
				КонецЕсли;
				
				Если ДобавлятьШаги Тогда
					ТаблицаШагов.Добавить(Стр);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Текст.Закрыть();
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтруктуруДляСценария(ИмяСценария, ИмяФайла, ТаблицаШагов, ПолноеИмя, ЭтоСтруктураСценария, ТипШага, Описание, Пример)
	Структура = Новый Структура;
	Структура.Вставить(""ИмяСценария"", ИмяСценария);
	Структура.Вставить(""ИмяФайла"", ИмяФайла);
	Структура.Вставить(""ПолноеИмя"", ПолноеИмя);
	Структура.Вставить(""ТаблицаШагов"", ТаблицаШагов);
	Структура.Вставить(""ЭтоСтруктураСценария"", ЭтоСтруктураСценария);
	Структура.Вставить(""ДвоичныеДанные"", Новый ДвоичныеДанные(ИмяФайла));//TODO потенциальный пожиратель времени
	Структура.Вставить(""Снипет"", """");
	
	Структура.Вставить(""ТипШага"", СокрЛП(ТипШага));
	Структура.Вставить(""ОписаниеШага"", СокрЛП(Описание));
	Структура.Вставить(""ПримерИспользования"", СокрЛП(Пример));
	
	Возврат Структура;
КонецФункции

&НаКлиенте
Функция ПолучитьЗначениеПоРанееСобраннойИнформации(Знач ДополнительныеПараметры, Знач ИмяПараметра, Знач ЗначениеПараметра)
	МассивДействий = ДополнительныеПараметры.МассивДействий;
	Для каждого Элем Из МассивДействий Цикл
		Если Элем.ИмяПараметра = ИмяПараметра Тогда
			Возврат Элем[ЗначениеПараметра];
		КонецЕсли;
	КонецЦикла;

	Возврат Неопределено;
КонецФункции

&НаКлиенте
//Объединяем относительные пути файловой системы в один
// при передаче Путь = ../test/file.txt и ПутьОтносительно=c:\work\ возращаем c:\test\file.txt
// при передаче Путь = ./test/file.txt и ПутьОтносительно=c:\work\ возращаем c:\work\test\file.txt
// если в начале нет точки, считаем этот путь полным.
Функция ПолучитьПолныйПутьОтносительноКаталогаОбработки(Знач Путь, Знач ПутьОтносительно)
	Перем Результат;
	Результат = Путь;
	Если Лев(СокрЛП(Путь), 1) = ""."" Тогда
		ФайлОбработки = Новый Файл(ПутьОтносительно);
		КаталогОбработки = ДополнитьСлешВПуть(?(ФайлОбработки.ЭтоКаталог(), ФайлОбработки.ПолноеИмя, ФайлОбработки.Путь));
		ФайлПути = Новый Файл(КаталогОбработки + Путь);
		
		Результат = ФайлПути.ПолноеИмя;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ПроверитьСуществованиеКаталогаБиблиотек(ДополнительныеПараметры, ПутьКОбработке)
	Перем ПутьФайла;
	
	БылиОшибки = Ложь;
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Ном = 0;
		Для каждого Элем Из Объект.КаталогиБиблиотек Цикл
			Ном = Ном + 1;
			Если НЕ ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, ""КаталогиБиблиотек"" + Ном, ""Существует"") Тогда
				БылиОшибки = Истина;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Для каждого Элем Из Объект.КаталогиБиблиотек Цикл
			ПутьФайла = ПреобразоватьПутьСТочкамиКНормальномуПути(Элем.Значение);
			ФайлПроверкаСуществования = Новый Файл(ПутьФайла);
			Если НЕ ФайлПроверкаСуществования.Существует() Тогда
				ТекстСообщения = ""Не найден каталог библиотеки: %1"";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Элем.Значение);
				Сообщить(ТекстСообщения);
				БылиОшибки = Истина;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Не БылиОшибки;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьИДСтрокиДереваСервер(СтруктураПараметров,Дерево)
	МассивИменКонтекстовОбработок = СтруктураПараметров.МассивИменКонтекстовОбработок;
	
	ТзнТаблицаИзвестныхStepDefinition = РеквизитФормыВЗначение(""ТаблицаИзвестныхStepDefinition"");//TODO ?? обойтись без РеквизитФормыВЗначение
	МассивСтрокДереваДанныеФормы = Новый Массив;
	ЗаполнитьИДСтрокиВДереве(Дерево, МассивСтрокДереваДанныеФормы, МассивИменКонтекстовОбработок, 
		ТзнТаблицаИзвестныхStepDefinition, СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, Путь, ИмяПараметра, ТипПараметра)
	
	СтруктураФайла = Новый Структура;
	СтруктураФайла.Вставить(""ИмяФайла"", Путь);
	СтруктураФайла.Вставить(""ИмяПараметра"", ИмяПараметра);
	СтруктураФайла.Вставить(""ТипПараметра"", ТипПараметра);
	
	Массив.Добавить(СтруктураФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСканированиеКаталогов(Массив)
	Перем ПутьФайла, ПутьКОбработке;
	
	//FIXME: необходимо вынести в реквизит формы.
	ПутьКОбработке = ПолучитьПутьКОбработкеКлиент();
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, """", ""ПоискEPF"", ""СканированиеКаталогаПоискEPF"");
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, """", ""ПоискFeature"", ""СканированиеКаталогаПоискFeature"");
	Ном = 0;
	Для каждого Элем Из Объект.КаталогиБиблиотек Цикл
		Ном = Ном + 1;
		ПутьФайла = ПреобразоватьПутьСТочкамиКНормальномуПути(Элем.Значение);
		ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, """", ПутьФайла, ""СканированиеКаталогаПоискEPF"");
		ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, """", ""БиблиотекаФич"" + Ном, ""СканированиеКаталогаПоискFeature"");
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьМассивСостоянийФайлов(Массив)
	Перем ПутьФайла, ПутьКОбработке;
	
	//TODO удалить? ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогИнструментов), ""КаталогИнструментов"", ""РаботаСФайлом"");
	//TODO удалить? ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогИнструментов)) + ""lib/featurereader/vbFeatureReader.epf"", ""vbFeatureReader"", ""РаботаСФайлом"");
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputAllure), ""КаталогOutputAllure"", ""РаботаСФайлом"");
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputjUnit), ""КаталогOutputjUnit"", ""РаботаСФайлом"");
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputCucumberJson), ""КаталогOutputCucumberJson"", ""РаботаСФайлом"");
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияHTML), ""КаталогOutputИнструкцияHTML"", ""РаботаСФайлом"");
	ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогФич), ""КаталогФич"", ""РаботаСФайлом"");
	
	
	Ном = 0;
	Для каждого Элем Из Объект.КаталогиБиблиотек Цикл
		Ном = Ном + 1;
		ПутьФайла = ПреобразоватьПутьСТочкамиКНормальномуПути(Элем.Значение);
		ДобавитьДействиеВМассивАсинхроныхСобытий(Массив, ПутьФайла, ""КаталогиБиблиотек"" + Ном, ""РаботаСФайлом"");
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьСинхроноСостоянияОбъектовФайловойСистемы(ДопПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьАсинхроноСледующийФайл(ДополнительныеПараметры)
	ДополнительныеПараметры.ТекИдМассива = ДополнительныеПараметры.ТекИдМассива + 1;
	ПолучитьАсинхроноСостоянияОбъектовФайловойСистемы(ДополнительныеПараметры);
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьВерсиюФайловАссинхронно(ДополнительныеПараметры)
	ТекИдМассива   = ДополнительныеПараметры.ТекИдМассива;
	МассивДействий = ДополнительныеПараметры.МассивДействий;
	СтруктураФайла = МассивДействий[ТекИдМассива];
	НайденныеФайлы = СтруктураФайла.НайденныеФайлы;
	
	СтруктураФайла.ИДФайлаДляОбработки = СтруктураФайла.ИДФайлаДляОбработки + 1;
	Если СтруктураФайла.ИДФайлаДляОбработки > (НайденныеФайлы.Количество() - 1) Тогда
		ОбработатьАсинхроноСледующийФайл(ДополнительныеПараметры);
	Иначе
		Файл = НайденныеФайлы[СтруктураФайла.ИДФайлаДляОбработки].Файл;
		Отладка(""ПолучитьВерсиюФайловАссинхронно "" + Файл.ПолноеИмя);
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработчикНачатьПолучитьВремяИзмененияФайлаМассив"""", ЭтаФорма, ДополнительныеПараметры)"");
		Выполнить(""Файл.НачатьПолучениеВремениИзменения(ОписаниеОповещения)"");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьАсинхроноСостоянияОбъектовФайловойСистемы(ДополнительныеПараметры)
	ТекИдМассива   = ДополнительныеПараметры.ТекИдМассива;
	МассивДействий = ДополнительныеПараметры.МассивДействий;
	Если ТекИдМассива > (МассивДействий.Количество() - 1) Тогда
		Если ДополнительныеПараметры.НадоЗагрузитьФичи Тогда
			ЗагрузитьФичиПродолжение(ДополнительныеПараметры);
		КонецЕсли;
		Если ДополнительныеПараметры.НадоГенерироватьEPF Тогда
			СоздатьШаблоныОбработокПродолжение(ДополнительныеПараметры);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	СтруктураФайла = МассивДействий[ТекИдМассива];
	Если СтруктураФайла.ТипПараметра = ""РаботаСФайлом"" Тогда
		Файл = Новый Файл(СтруктураФайла.ИмяФайла);
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработчикНачатьПроверкуСуществования"""", ЭтаФорма, ДополнительныеПараметры)"");
		Выполнить(""Файл.НачатьПроверкуСуществования(ОписаниеОповещения)"");
	ИначеЕсли	Найти(СтруктураФайла.ТипПараметра, ""СканированиеКаталогаПоиск"") > 0 Тогда
		Если НЕ ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, ""КаталогФич"", ""Существует"") Тогда
			ОбработатьАсинхроноСледующийФайл(ДополнительныеПараметры);
			Возврат;
		КонецЕсли;
		
		Если (СтруктураФайла.ИмяПараметра = ""ПоискEPF"") или (СтруктураФайла.ИмяПараметра = ""ПоискFeature"") или (Лев(СтруктураФайла.ИмяПараметра, 13) = ""БиблиотекаФич"") Тогда
			//значит мы ищем родные epf для фич
			ПутьКФичам = Новый Файл(Объект.КаталогФич);
			Путь = ПутьКФичам.ПолноеИмя;
			Если Не ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, ""КаталогФич"", ""ЭтоКаталог"") Тогда //это файл
				Путь = ПутьКФичам.Путь;
			КонецЕсли;
			
			
			Если Лев(СтруктураФайла.ИмяПараметра, 13) = ""БиблиотекаФич"" Тогда
				Ном = СтрЗаменить(СтруктураФайла.ИмяПараметра, ""БиблиотекаФич"", """");
				Ном = СтрЗаменить(Ном, Символы.НПП, """");
				Ном = Число(Ном);
				Путь = Объект.КаталогиБиблиотек[Ном - 1].Значение;
			КонецЕсли;
			
			Путь = ПреобразоватьПутьСТочкамиКНормальномуПути(Путь);
			
		Иначе
			Путь = СтруктураФайла.ИмяПараметра;
		КонецЕсли;
		
		Маска = ""*."" + НРег(СтрЗаменить(СтруктураФайла.ТипПараметра, ""СканированиеКаталогаПоиск"", """"));
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработчикНачатьПоискФайлов"""", Этаформа, ДополнительныеПараметры)"");
		
		Если СтруктураФайла.ТипПараметра = ""СканированиеКаталогаПоискFeature"" Тогда
			Маска = ""*"";
		КонецЕсли;
		Выполнить(""НачатьПоискФайлов(ОписаниеОповещения, Путь, Маска, Истина)"");
	Иначе
		ТекстСообщения = ""Неивестный ТипПараметра в ПолучитьАсинхроноСостоянияОбъектовФайловойСистемы: %1"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",СтруктураФайла.ТипПараметра);
		Сообщить(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НайтиИДСтрокиСценарияПоИмени(Имя)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	
	Дерево = ОбъектСервер.ДеревоТестов;
	Строки = Дерево.Строки.НайтиСтроки(Новый Структура(""Имя, Тип"", Имя, ""Сценарий""), Истина);
	Если Строки.Количество() > 0 Тогда
		Возврат Строки[0].ИдСтроки;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Функция ВычестьТеги(ПервыйСписок, ВычитаемыйСписок)
	Перем Результат;
	Результат = Новый СписокЗначений;
	
	Если ВычитаемыйСписок.Количество() = 0 Тогда
		Возврат ПервыйСписок;
	КонецЕсли;
	
	СоответствиеНрег = Новый Соответствие;
	Для каждого Элемент из ВычитаемыйСписок Цикл
		СоответствиеНрег.Вставить(Нрег(Элемент.Значение), Истина);
	КонецЦикла;
	
	Для каждого Элемент из ПервыйСписок Цикл
		Если НЕ ЗначениеЗаполнено(СоответствиеНрег.Получить(Нрег(Элемент.Значение))) Тогда
			Результат.Добавить(Элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьФичиПродолжение(ДополнительныеПараметры = Неопределено)
	
	ЭтаФорма.ТекущийЭлемент = Элементы.ГруппаЗапускТестов;
	
	КаталогИнструментов = Объект.КаталогИнструментов;
	КаталогФич          = Объект.КаталогФич;
	DebugLog            = Объект.DebugLog;
	КаталогиБиблиотек   = Объект.КаталогиБиблиотек.Скопировать();
	ПутьКОбработке		= ПолучитьПутьКОбработкеКлиент();
	
	Для каждого ЭлементБиблиотеки Из КаталогиБиблиотек  Цикл
		ЭлементБиблиотеки.Значение = ПреобразоватьПутьСТочкамиКНормальномуПути(ЭлементБиблиотеки.Значение);
	КонецЦикла;
	
	Если НЕ ПроверитьСуществованиеКаталогаБиблиотек(ДополнительныеПараметры, ПутьКОбработке) Тогда
		Возврат;
	КонецЕсли;
	
	ПарсерФич = """";
	СписокИсключения = ВычестьТеги( Объект.СписокТеговИсключение, Объект.СписокТеговОтбор);
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить(""КаталогИнструментов"", КаталогИнструментов);
	СтруктураПараметров.Вставить(""КаталогФич"", КаталогФич);
	СтруктураПараметров.Вставить(""ПутьКОбработке"", ПутьКОбработке);
	СтруктураПараметров.Вставить(""ЭтоLinux"",ЭтоLinux);
	
	МассивСообщений = Новый Массив;
	СтруктураПараметров.Вставить(""МассивСообщений"", МассивСообщений);
	СтруктураПараметров.Вставить(""DebugLog"", DebugLog);
	СтруктураПараметров.Вставить(""КаталогиБиблиотек"", КаталогиБиблиотек);
	СтруктураПараметров.Вставить(""ДополнительныеПараметры"", ДополнительныеПараметры);
	
	СтруктураПараметров.Вставить(""СписокТеговИсключение"", СписокИсключения);
	СтруктураПараметров.Вставить(""СписокТеговОтбор"", Объект.СписокТеговОтбор);
	СтруктураПараметров.Вставить(""Брейкпоинты"", Брейкпоинты);
	СтруктураПараметров.Вставить(""РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов"", 
		Объект.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов);
	СтруктураПараметров.Вставить(""МассивИменКонтекстовОбработок"", МассивИменКонтекстовОбработок);
	СтруктураПараметров.Вставить(""ЭтоЗагрузкаФич"", Истина);
	
	ТекущийЗагружаемыйФичаФайл = Неопределено;
	Если Объект.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов Тогда
		СтруктураПараметров.Вставить(""ИдСтрокиШагаСКоторогоВыполнятьСценарийССохранениемКонтекстов"", 
			СтрокаШагаСКоторогоНадоВыполнятьСценарий.ИдСтроки);
	КонецЕсли;
	
	Попытка
		ЗаполнитьДеревоФич(СтруктураПараметров);
	Исключение
		ФлагСценарииЗагружены = Истина;
		ТекстСообщения = ""Ошибка при построении дерева из файла <%1>%2%3"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ТекущийЗагружаемыйФичаФайл);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",Символы.ПС);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%3"",ОписаниеОшибки());
		СделатьСообщение(ТекстСообщения);
		ПоказатьПредупреждение(,ТекстСообщения, 5);
		Возврат;
	КонецПопытки;
	
	Для каждого Элем Из МассивСообщений Цикл
		Сообщить(Элем);
	КонецЦикла;
	
	Если НЕ НадоВыполнитьСценарийСоСтрокиПереданнойИзвне и НадоПерейтиКСтрокеДерева = -1 Тогда
		ПодключитьОбработчикОжидания(""РазвернутьДерево"", 0.5, Истина);
	КонецЕсли;
	
	Если Объект.ПодключитьВнешниеОбработкиДляОтладки И Не Объект.ИспользоватьПрямыеПутиФайлов Тогда
		ПодключитьВнешниеОбработкиДляОтладки();
	КонецЕсли;
	
	Если Брейкпоинты.Количество() > 0 Тогда
		Элементы.ДеревоТестов.ПодчиненныеЭлементы.ДеревоТестовБрейкпоинт.Видимость = Истина;
	КонецЕсли;
	
	СделатьСообщение(""$Фичи загружены$"");
	Если Объект.НадоВыполнитьСценарииПослеЗагрузкиФич Тогда
		ВыполнитьСценарии();
	ИначеЕсли Объект.НадоВыполнитьСценарииПослеЗагрузкиФичОдинРаз Тогда
		Объект.НадоВыполнитьСценарииПослеЗагрузкиФичОдинРаз = Ложь;
		МассивИд = Неопределено;
		ДопПараметры = Неопределено;
		Если ЗначениеЗаполнено(ИмяСценарияКоторыйНадоВыполнитьПослеПереазгрузки) Тогда
			ИдСтроки = НайтиИДСтрокиСценарияПоИмени(ИмяСценарияКоторыйНадоВыполнитьПослеПереазгрузки);
			ИмяСценарияКоторыйНадоВыполнитьПослеПереазгрузки = """";
			Если ИдСтроки <> Неопределено Тогда
				МассивИд = Новый Массив;
				МассивИд.Добавить(ИдСтроки);
			КонецЕсли;
			
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить(""ЭтоПример"", СтрокаСценарияКоторыйНадоВыполнитьПослеПереазгрузкиЭтоПример);
		КонецЕсли;
		
		ВыполнитьСценарии(МассивИд, ДопПараметры);
	КонецЕсли;
	
	ВывестиСтатистикуКлиент();
	
	ПодключитьОбработчикОжидания(""ОбновитьФлагСценарииЗагружены"",0.1,Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьФлагСценарииЗагружены()
	ФлагСценарииЗагружены = Истина;
	Если НадоПерейтиКСтрокеДерева <> -1 Тогда
		НужнаяСтрока = Неопределено;
		НайтиСтрокуДереваПоИдСтроки(НадоПерейтиКСтрокеДерева, Объект.ДеревоТестов.ПолучитьЭлементы(), НужнаяСтрока);
		Если НужнаяСтрока <> Неопределено Тогда
			Элементы.ДеревоТестов.ТекущаяСтрока = НужнаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
		НадоПерейтиКСтрокеДерева = -1;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПреобразоватьПутиБиблиотек()
	Для Каждого Элем Из Объект.КаталогиБиблиотек Цикл
		Если Прав(Элем.Значение, 1) = ""\"" ИЛИ Прав(Элем.Значение, 1) = ""/"" Тогда
			Элем.Значение = Лев(Элем.Значение, СтрДлина(Элем.Значение) - 1);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьВерсиюОбработкиКлиент() Экспорт
	Если Не ЗначениеЗаполнено(КешВерсияОбработки) Тогда
		КешВерсияОбработки = ПолучитьВерсиюОбработкиСервер();
	КонецЕсли;
	
	Возврат КешВерсияОбработки;
КонецФункции

&НаСервере
Функция ПолучитьВерсиюОбработкиСервер(ТолькоЦифры = Ложь)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Возврат ОбъектСервер.ПолучитьВерсиюОбработки(Ложь, ТолькоЦифры);
КонецФункции

&НаСервере
Процедура ЗаполнитьКаталогИнструментовЕслиОнПустой()
	КаталогИнструментов = Объект.КаталогИнструментов;
	
	Если ПустаяСтрока(КаталогИнструментов)Тогда
		
		ИспользуемоеИмяФайла = ПолучитьПутьКОбработкеСервер();
		
		Если ЗначениеЗаполнено(ИспользуемоеИмяФайла) Тогда
			КаталогИнструментов = ИспользуемоеИмяФайла;
		Иначе
			//попытаемся восстановить из настроек. Это нужно, когда Vanessa-Behavior вызвали программно, а затем сразу открыли интерактивно. В этом случае 1С подгружает версию из кеша от первой загрузки на сервере, и Объект().ИспользуемоеИмяФайла возвращает адрес в хранилище, а не имя исходного файла.
			Настройки = ХранилищеОбщихНастроек.Загрузить(ПолучитьИДДляОбщегоСохраненияНастроек());
			
			Если ТипЗнч(Настройки) = Тип(""Структура"") Тогда
				Настройки.Свойство(""КаталогИнструментов"", КаталогИнструментов);
			КонецЕсли;
		КонецЕсли;
		
		Объект.КаталогИнструментов = КаталогИнструментов;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьКонтекстноеМеню()
	Элементы.ДеревоТестовКонтекстноеМенюВыполнятьСценарииСначала.Видимость = Ложь;
КонецПроцедуры

&НаКлиенте
Функция ПрочитатьСтруктуруИзJSONФайлаКлиент(VBParams) Экспорт
	
	ПараметрыУФ            = Новый Структура;
	VBParamsДвоичныеДанные = Новый ДвоичныеДанные(VBParams);
	ПараметрыУФ.Вставить(""VBParamsДвоичныеДанные"", VBParamsДвоичныеДанные);
	
	Рез = ПрочитатьСтруктуруИзJSONФайлаСервер(VBParams, ПараметрыУФ);
	
	Возврат Рез;
	
КонецФункции

&НаСервере
Функция ПрочитатьСтруктуруИзJSONФайлаСервер(VBParams, ПараметрыУФ)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	
	Рез = ОбъектСервер.ПрочитатьСтруктуруИзJSONФайла(VBParams, ПараметрыУФ);
	
	Рез.Вставить(""ПриоритетНастроекПользователя"", Ложь);
	Рез.Вставить(""ТаймаутДляАсинхронныхШагов"", 0);
	
	Возврат Рез;
	
КонецФункции

&НаКлиенте
Функция ПрочитатьСоответствиеИзJSONФайлаКлиент(VBParams) Экспорт
	
	ПараметрыУФ            = Новый Структура;
	VBParamsДвоичныеДанные = Новый ДвоичныеДанные(VBParams);
	ПараметрыУФ.Вставить(""VBParamsДвоичныеДанные"", VBParamsДвоичныеДанные);
	
	Рез = ПрочитатьСоответствиеИзJSONФайлаСервер(VBParams, ПараметрыУФ);
	
	Рез.Вставить(""ПриоритетНастроекПользователя"",
	Новый Структура(""Р, А"", ""ПриоритетНастроекПользователя"", ""priorityofusersettings""));
	
	Рез.Вставить(""ТаймаутДляАсинхронныхШагов"",
	Новый Структура(""Р, А"", ""ТаймаутДляАсинхронныхШагов"", ""timeoutforasynchronoussteps""));
	
	Возврат Рез;
	
КонецФункции

&НаСервере
Функция ПрочитатьСоответствиеИзJSONФайлаСервер(VBParams, ПараметрыУФ)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	
	Рез = ОбъектСервер.ПрочитатьСоответствиеИзJSONФайла(ПараметрыУФ);
	
	Возврат Рез;
	
КонецФункции


&НаКлиенте
Процедура ПреобразоватьПараметрыКоторыеНачинаютсяСТочкиКНормальнымПутям(СтруктураПараметров)
	МассивКлючей = Новый Массив;
	
	Для каждого ПараметрСборки Из СтруктураПараметров Цикл
		
		Если Лев(ПараметрСборки.Значение, 1) = ""."" Тогда
			МассивКлючей.Добавить(ПараметрСборки.Ключ);
		ИначеЕсли Найти(ПараметрСборки.Значение, ""$workspaceRoot"") > 0 ИЛИ Найти(ПараметрСборки.Значение, ""$instrumentsRoot"") > 0 Тогда
			МассивКлючей.Добавить(ПараметрСборки.Ключ);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого Ключ Из МассивКлючей Цикл
		Было  = СтруктураПараметров[Ключ];
		Стало = ПреобразоватьПутьСТочкамиКНормальномуПути(Было);
		
		СтруктураПараметров.Вставить(Ключ, Стало);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаВнешнихКоманд()
	Если НЕ ФайлСуществуетКомандаСистемы(Объект.ИмяФайлаВнешнихКомандФреймворка) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстКоманды                      = Неопределено;
	НомерСтрокиСценарияПереданныйИзвне = Неопределено;
	
	Файл = Новый Файл(Объект.ИмяФайлаВнешнихКомандФреймворка);
	Расширение = Нрег(Файл.Расширение);
	
	Если Расширение = "".json"" Тогда
		ЧтениеJSON = Вычислить(""Новый ЧтениеJSON"");
		ЧтениеJSON.ОткрытьФайл(Объект.ИмяФайлаВнешнихКомандФреймворка);
		
		ДанныеКоманды = ПрочитатьJSON(ЧтениеJSON);
		ТекстКоманды = ДанныеКоманды.ТекстКоманды;
		Если ТекстКоманды = ""ПерезагрузитьИВыполнитьСТекущегоШага"" Тогда
			НомерСтрокиСценарияПереданныйИзвне = ДанныеКоманды.НомерСтрокиДляЗапускаСТекущегоШагаСценария;
		КонецЕсли;
		ИмяФайлаНастроек = ДанныеКоманды.ИмяФайлаНастроек;
		
		ЧтениеJSON.Закрыть();
		
		
		ФайлНастроек = Новый Файл(ИмяФайлаНастроек);
		Если ФайлНастроек.Существует() Тогда
			ЧтениеJSON = Вычислить(""Новый ЧтениеJSON"");
			ЧтениеJSON.ОткрытьФайл(ИмяФайлаНастроек);
			
			ДанныеНастроек = ПрочитатьJSON(ЧтениеJSON);
			Если ДанныеНастроек.Свойство(""КлиентыТестирования"") Тогда
				Для Каждого ПараметрыКлиентаТестирования Из ДанныеНастроек.КлиентыТестирования Цикл
					ПрочитатьДанныеКлиентовТестирования(ПараметрыКлиентаТестирования);
				КонецЦикла;
			КонецЕсли;
			
			ЧтениеJSON.Закрыть();
		КонецЕсли;
		
	Иначе
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(Объект.ИмяФайлаВнешнихКомандФреймворка,""UTF-8"");
		
		ДанныеКоманды = Новый Массив;
		
		Пока Истина Цикл
			Стр = Текст.ПрочитатьСтроку();
			Если Стр = Неопределено Тогда
				Прервать;
			КонецЕсли;
			
			ДанныеКоманды.Добавить(Стр);
		КонецЦикла;
		
		ТекстКоманды = ДанныеКоманды[0];
		Если ТекстКоманды = ""ПерезагрузитьИВыполнитьСТекущегоШага"" Тогда
			НомерСтрокиСценарияПереданныйИзвне = Число(ДанныеКоманды[1]);
		КонецЕсли;
		
		Текст.Закрыть();
	КонецЕсли;
	
	
	
	
	
	НадоПерейтиКСтрокеДерева = -1;
	
	УдалитьФайлыКомандаСистемы(Объект.ИмяФайлаВнешнихКомандФреймворка);
	
	Если ТекстКоманды = ""ПерезагрузитьИВыполнить"" Тогда
		ПерезагрузитьИВыполнить("""");
	ИначеЕсли ТекстКоманды = ""ПерезагрузитьИВыполнитьСТекущегоШага"" Тогда
		НадоВыполнитьСценарийСоСтрокиПереданнойИзвне = Истина;
		ЗагрузитьФичи();
		ПодключитьОбработчикОжидания(""ЗапуститьСценарийСоСтрокиПрисланнойИзвне"",0.1,Истина);
	ИначеЕсли ТекстКоманды = ""Перезагрузить"" И НЕ Объект.РежимСамотестирования Тогда
		ТекущиеДанныеДерева = Элементы.ДеревоТестов.ТекущиеДанные;
		Если ТекущиеДанныеДерева <> Неопределено Тогда
			НадоПерейтиКСтрокеДерева = ТекущиеДанныеДерева.ИДСтроки;
		КонецЕсли;
		ЗагрузитьФичи();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьАктивныйTestClient(ИмяКлиентаТестирования)
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить(""Имя"", ИмяКлиентаТестирования);
	
	НайденныеСтроки = ДанныеКлиентовТестирования.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() > 0 Тогда
		СтрокаДанныеКлиентовТестирования = НайденныеСтроки[0];
		Элементы.ДанныеКлиентовТестирования.ТекущаяСтрока = СтрокаДанныеКлиентовТестирования.ПолучитьИдентификатор();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьДанныеКлиентовТестирования(ПараметрыКлиентаТестирования)
	ИмяКлиентаТестирования = ПараметрыКлиентаТестирования.Имя;
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить(""Имя"", ИмяКлиентаТестирования);
	
	НайденныеСтроки = ДанныеКлиентовТестирования.НайтиСтроки(ПараметрыОтбора);
	Если НайденныеСтроки.Количество() > 0 Тогда
		СтрокаДанныеКлиентовТестирования = НайденныеСтроки[0];
	Иначе
		СтрокаДанныеКлиентовТестирования     = ДанныеКлиентовТестирования.Добавить();
		СтрокаДанныеКлиентовТестирования.Имя = ИмяКлиентаТестирования;
	КонецЕсли;
	
	
	СтрокаДанныеКлиентовТестирования.ПутьКИнфобазе          = ПараметрыКлиентаТестирования.ПутьКИнфобазе;
	СтрокаДанныеКлиентовТестирования.ДопПараметры           = ПараметрыКлиентаТестирования.ДопПараметры;
	СтрокаДанныеКлиентовТестирования.ТипКлиента             = ПараметрыКлиентаТестирования.ТипКлиента;
	СтрокаДанныеКлиентовТестирования.ИмяКомпьютера          = ПараметрыКлиентаТестирования.ИмяКомпьютера;
	Если ПараметрыКлиентаТестирования.Свойство(""ПортЗапускаТестКлиента"") Тогда
		СтрокаДанныеКлиентовТестирования.ПортЗапускаТестКлиента = ПараметрыКлиентаТестирования.ПортЗапускаТестКлиента;
	КонецЕсли;
	Если ПараметрыКлиентаТестирования.Свойство(""Синоним"") Тогда
		СтрокаДанныеКлиентовТестирования.Синоним = ПараметрыКлиентаТестирования.Синоним;
	КонецЕсли;
	
	АктивизироватьСтроку = Истина;
	Если ПараметрыКлиентаТестирования.Свойство(""АктивизироватьСтроку"") Тогда
		АктивизироватьСтроку = ПараметрыКлиентаТестирования.АктивизироватьСтроку;
	КонецЕсли;
	
	Если АктивизироватьСтроку Тогда
		Элементы.ДанныеКлиентовТестирования.ТекущаяСтрока = СтрокаДанныеКлиентовТестирования.ПолучитьИдентификатор();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗапускВРежимеКоманднойСтроки()
	
	Если Объект.РежимСамотестирования Тогда
		Возврат;
	КонецЕсли;
	
	СтрЗапуска = СокрЛП(ПараметрЗапуска);
	//СтрЗапуска = ""StartFeaturePlayer;VBParams=C:\Commons\rep\vanessa-behavior\tools\JSON\VBParams8310UF_FastCheck.json"";
	Если СтрЗапуска = """" Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = Плагин(""LoadSettings"");
	СтруктураДействий = Новый Структура(""ВыполнитьСценарии, ВыполнитьСценарииСТекущегоШага, ЗавершитьРаботуСистемы, НомерСтрокиДляЗапускаСТекущегоШагаСценария, ЗагрузитьСценарии, ВыгрузитьPIDTestManager"");
	Попытка
		Настройки.ЗагрузитьНастройкиВРежимеКоманднойСтроки(Объект, СтруктураДействий);
	Исключение
		ИнфОбОшибке = ""Не удалось загрузить настройки: ""+ ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
		ЗаписатьЛогВЖРОшибка(""VanessaBehavior.ЗагрузкаНастроек"",ИнфОбОшибке);
		Сообщить(ИнфОбОшибке);
		ЗавершитьРаботуСистемы(Ложь);
	КонецПопытки;
	
	
	Если ЗначениеЗаполнено(Объект.ИмяФайлаВнешнихКомандФреймворка) Тогда
		ПодключитьОбработчикОжидания(""ПроверкаВнешнихКоманд"",1);
	КонецЕсли;
	
	ЗнВыгрузитьPIDTestManager = СтруктураДействий[""ВыгрузитьPIDTestManager""];
	Если ЗнВыгрузитьPIDTestManager = Истина Тогда
		ВычислитьPIDЭтогоСеанса(Неопределено);
		ИмяФайлаPIDTestManager = СтруктураДействий[""ИмяФайлаPIDTestManager""];
		
		Если ЗначениеЗаполнено(ИмяФайлаPIDTestManager) Тогда
			ЗТ = Новый ЗаписьТекста(ИмяФайлаPIDTestManager,""UTF-8"");
			ЗТ.ЗаписатьСтроку(PIDЭтогоСеанса);
			ЗТ.Закрыть();
		КонецЕсли;
	КонецЕсли;
	
	ВыполнитьСценарии = СтруктураДействий[""ВыполнитьСценарии""];
	ВыполнитьСценарииСТекущегоШага = СтруктураДействий[""ВыполнитьСценарииСТекущегоШага""];
	
	ЗнЗавершитьРаботуСистемы = СтруктураДействий[""ЗавершитьРаботуСистемы""];
	Если ЗнЗавершитьРаботуСистемы = Истина Тогда
		Объект.НадоЗавершитьРаботуСистемыПослеВыполненияВсехСценариев = Истина;
	КонецЕсли;
	
	Если ВыполнитьСценарии = Истина Тогда
		
		Если ЕстьПоддержкаАсинхронныхВызовов Тогда
			Объект.НадоВыполнитьСценарииПослеЗагрузкиФич = Истина;
			ЗагрузитьФичи();
		Иначе
			ЗагрузитьФичи();
			ВыполнитьСценарии();
		КонецЕсли;
	ИначеЕсли ВыполнитьСценарииСТекущегоШага = Истина Тогда
		НадоВыполнитьСценарийСоСтрокиПереданнойИзвне = Истина;
		НомерСтрокиСценарияПереданныйИзвне           = Число(СтруктураДействий[""НомерСтрокиДляЗапускаСТекущегоШагаСценария""]);
		ЗагрузитьФичи();
		ПодключитьОбработчикОжидания(""ЗапуститьСценарийСоСтрокиПрисланнойИзвне"",0.1,Истина);
	Иначе
		ЗагрузитьСценарии = СтруктураДействий[""ЗагрузитьСценарии""];
		Если ЗагрузитьСценарии = Истина Тогда
			ЗагрузитьФичи();
		КонецЕсли;
	КонецЕсли;
	
	
	
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЕстьКонстантаВКонфигурацииСервер(ИмяКонстанты)
	Зн = Метаданные.Константы.Найти(ИмяКонстанты);
	Если Зн = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗначениеКонстантыСервер(ИмяКонстанты)
	Возврат Константы[ИмяКонстанты].Получить();
КонецФункции

&НаКлиенте
Процедура УстановитьВидимостьФлагаПроверкаРаботыVanessaBehaviorВРежимеTestClient()
	ЕстьКонстантаВКонфигурации = ЕстьКонстантаВКонфигурацииСервер(""ПутьКVanessaBehavior"");
	Элементы.ПроверкаРаботыVanessaBehaviorВРежимеTestClient.Видимость = ЕстьКонстантаВКонфигурации;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьСтраницыСлужебная()
	ЕстьКонстантаВКонфигурации = ЕстьКонстантаВКонфигурацииСервер(""ПутьКVanessaBehavior"");
	Элементы.ГруппаСлужебная.Видимость = Объект.ПроверкаРаботыVanessaBehaviorВРежимеTestClient И ЕстьКонстантаВКонфигурации;
КонецПроцедуры


&НаКлиенте
Процедура УстановитьВидимостьКолонокДереваВСлужебномРежиме()
	ЕстьКонстантаВКонфигурации = ЕстьКонстантаВКонфигурацииСервер(""ПутьКVanessaBehavior"");
	Элементы.ГруппаСлужебная.Видимость = Объект.ПроверкаРаботыVanessaBehaviorВРежимеTestClient И ЕстьКонстантаВКонфигурации;
	ЭтаФорма.Элементы.ДеревоТестовСтатус.Видимость = Объект.ПроверкаРаботыVanessaBehaviorВРежимеTestClient И ЕстьКонстантаВКонфигурации;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьВидимостьСлужебныхЭлементов()
	УстановитьВидимостьФлагаПроверкаРаботыVanessaBehaviorВРежимеTestClient();
	УстановитьВидимостьСтраницыСлужебная();
	УстановитьВидимостьКолонокДереваВСлужебномРежиме();
	
	Попытка
		//при редактировании в конфигураторе старых версий платформы (8.3.6 и раньше) эти флаги слетают
		Элементы.ГруппаЗапускТестов.ВертикальнаяПрокруткаПриСжатии = Истина;
		Элементы.ГруппаГенерацияEPF.ВертикальнаяПрокруткаПриСжатии = Истина;
		Элементы.ГруппаКаталогиБиблиотек.ВертикальнаяПрокруткаПриСжатии = Истина;
		Элементы.ГруппаДополнительно.ВертикальнаяПрокруткаПриСжатии = Истина;
		Элементы.ГруппаНесколькоКлиентовТестирования.ВертикальнаяПрокруткаПриСжатии = Истина;
		Элементы.ГруппаНастройки.ВертикальнаяПрокруткаПриСжатии = Истина;
		Элементы.ГруппаСлужебная.ВертикальнаяПрокруткаПриСжатии = Истина;
		Элементы.КаталогФич.АвтоМаксимальнаяШирина = Ложь;
	Исключение
	КонецПопытки;
	
	Элементы.ФлагСценарииВыполнены.Видимость = Объект.РежимСамотестирования;
	Элементы.ФлагСценарииЗагружены.Видимость = Объект.РежимСамотестирования;
	
	Если НЕ Объект.РежимСамотестирования Тогда
		Элементы.ЧастичноеВыполнениеСценариев.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура МаксимизироватьФорму()
	Если Объект.РежимСамотестирования Тогда
		Возврат;
	КонецЕсли;
	
	WshShell = ПолучитьWshShell();
	
	WSHShell.SendKeys(""%"");
	WSHShell.SendKeys(""{LEFT}{LEFT}{ENTER}"");
КонецПроцедуры

&НаКлиенте
Процедура ПослеОткрытияФормы()
	
	Если НЕ Объект.ВыполнениеСценарияИзОбработкиОповещения Тогда
		ЗапускВРежимеКоманднойСтроки();
		Если НЕ Объект.ЗапускИзКоманднойСтроки Тогда
			Если СокрЛП(Объект.КаталогФич) <> """" Тогда
				Если Объект.ЗагрузкаФичПриОткрытии = ""Загружать"" Тогда
					ЗагрузитьФичи();
				ИначеЕсли Объект.ЗагрузкаФичПриОткрытии = ""Загружать и выполнять"" Тогда
					Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
						ЗагрузитьФичи();
						ВыполнитьСценарии();
					Иначе
						Объект.НадоВыполнитьСценарииПослеЗагрузкиФичОдинРаз = Истина;
						ЗагрузитьФичи();
					КонецЕсли;
				ИначеЕсли Объект.ЗагрузкаФичПриОткрытии = ""Задавать вопрос"" Тогда
					Если ЕстьПоддержкаНемодальныхФорм Тогда
						Оповещение = Вычислить(""Новый ОписаниеОповещения(""""ПослеОтветаНаВопросНадоЛиЗагружатьФичи"""", ЭтаФорма)"");
						Выполнить(""ПоказатьВопрос(Оповещение, """"Загрузить фичи? <"""" + СокрЛП(Объект.КаталогФич) + """">"""", РежимДиалогаВопрос.ОКОтмена, 0, КодВозвратаДиалога.ОК)"");
					Иначе
						Рез = Вопрос(""Загрузить фичи? <"" + СокрЛП(Объект.КаталогФич) + "">"", РежимДиалогаВопрос.ОКОтмена, 0, КодВозвратаДиалога.ОК);
						ПослеОтветаНаВопросНадоЛиЗагружатьФичи(Рез, Неопределено);
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НастройкаДоступностиВидимостиЭлементов();
	
	Если Не ЗначениеЗаполнено(Объект.КаталогИнструментов) Тогда
		Сообщение = ""Не удалось заполнить каталог инструментов из-за неверных настроек.
		|Установите вручную каталог инструментов, вставив путь к Vanessa-ADD.
		|И перезапустите форму bddRunner
		|"";
		СделатьСообщение(Сообщение);
		ЗаписатьСтрокуВТекстовыйЛог(Сообщение);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОпределитьМаксВерсиюПлатформы(Массив)
	Тзн = Новый ТаблицаЗначений;
	Тзн.Колонки.Добавить(""Версия"");
	Тзн.Колонки.Добавить(""Параметр"");
	
	Для Каждого Элем Из Массив Цикл
		СтрТзн = Тзн.Добавить();
		СтрТзн.Версия = Элем;
		
		Попытка
			МассивСтрок = РазложитьСтрокуВМассивПодстрок(Элем, ""."");
			СтрТзн.Параметр = Число(МассивСтрок[3]*1000);
		Исключение
			СтрТзн.Параметр = 0;
		КонецПопытки;
	КонецЦикла;
	
	Тзн.Сортировать(""Параметр"");
	
	Возврат Тзн[Тзн.Количество() - 1].Версия;
КонецФункции

&НаКлиенте
Процедура ЗаполнитьПолеВерсияПлатформыДляГенерацииEPFЕслиЭтоВозможно()
	
	СистемнаяИнформация = Новый СистемнаяИнформация;
	Версия8310ИлиВыше    = ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(СистемнаяИнформация.ВерсияПриложения, ""8.3.10.1"");
	Если Версия8310ИлиВыше Тогда
		Объект.ВерсияПлатформыДляГенерацииEPF = КаталогПрограммы();
		Возврат;
	КонецЕсли;
	
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ЗначениеЗаполнено(Объект.ВерсияПлатформыДляГенерацииEPF) Тогда
		Возврат;
	КонецЕсли;
	
	Массив = Новый Массив;
	
	Файлы = НайтиФайлы(""C:\Program Files (x86)\1cv8"", ""*.exe"", Истина);
	Для Каждого Файл Из Файлы Цикл
		Если НРег(Файл.ИмяБезРасширения) <> ""1cv8"" Тогда
			Продолжить;
		КонецЕсли;
		
		Путь = Файл.Путь;
		ФайлВерсия = Новый Файл(Путь);
		Версия = ФайлВерсия.Путь;
		
		ФайлВерсия = Новый Файл(Версия);
		Версия = ФайлВерсия.Имя;
		
		Если ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(Версия, ""8.3.10.1"") Тогда
			Массив.Добавить(Версия);
		КонецЕсли;
		
	КонецЦикла;
	
	Файлы = НайтиФайлы(""C:\Program Files\1cv8"", ""*.exe"", Истина);
	Для Каждого Файл Из Файлы Цикл
		Если НРег(Файл.ИмяБезРасширения) <> ""1cv8"" Тогда
			Продолжить;
		КонецЕсли;
		
		Путь = Файл.Путь;
		ФайлВерсия = Новый Файл(Путь);
		Версия = ФайлВерсия.Путь;
		
		ФайлВерсия = Новый Файл(Версия);
		Версия = ФайлВерсия.Имя;
		
		Если ВерсияПриложенияБольшеИлиРавнаЧемЗаданная(Версия, ""8.3.10.1"") Тогда
			Массив.Добавить(Версия);
		КонецЕсли;
		
	КонецЦикла;
	
	Если Массив.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	МаксВерсия = ОпределитьМаксВерсиюПлатформы(Массив);
	
	Файлы = НайтиФайлы(""C:\Program Files (x86)\1cv8\""+ МаксВерсия +""\bin"", ""*.exe"", Истина);
	Файлы32 = НайтиФайлы(""C:\Program Files\1cv8\""+ МаксВерсия +""\bin"", ""*.exe"", Истина);
	Если Файлы.Количество() > 0 Тогда
		Объект.ВерсияПлатформыДляГенерацииEPF = ""C:\Program Files (x86)\1cv8\"" + МаксВерсия + ""\bin"";
	ИначеЕсли Файлы32.Количество() > 0 Тогда
		Объект.ВерсияПлатформыДляГенерацииEPF = ""C:\Program Files\1cv8\"" + МаксВерсия + ""\bin"";
	КонецЕсли;
	
КонецПроцедуры


&НаКлиенте
Процедура ОбновитьЗаголовокФормы()
	ЭтаФорма.Заголовок = ПолучитьВерсиюОбработкиКлиент();
	Если Объект.РежимСамотестирования Тогда
		ЭтаФорма.Заголовок = ЭтаФорма.Заголовок + "" autotest"";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Знач НенужноеЗначение, Знач ДополнительныеПараметры) Экспорт
	
	ДопПараметры = Новый Структура;
	СерверныеВызовыПриОткрытииФормы(ДопПараметры);
	ТекстСообщенийПользователю = ТекстСообщенийПользователю(ДопПараметры.МакетПереводСообщений);
	
	МассивСнипетовПрерывающихЗаписьСценария = ПолучитьМассивСнипетовПрерывающихЗаписьСценария();
	
	ВосстановитьНастройкиКлиент();
	
	ОбновитьВидимостьЭлементовПослеЗагрузкиНастроек();
	
	ЗаполнитьДанныеТекущейИнфобазы();
	
	Объект.ИнтервалВыполненияШага = Объект.ИнтервалВыполненияШагаЗаданныйПользователем;
	Если Объект.ИнтервалВыполненияШага = 0 Тогда
		Объект.ИнтервалВыполненияШага = 0.1;
		Объект.ИнтервалВыполненияШагаЗаданныйПользователем = 0.1;
	КонецЕсли;
	
	КаталогФич          = Объект.КаталогФич;
	КаталогИнструментов = Объект.КаталогИнструментов;
	
	ОбновитьКнопкуЗагрузитьФичи();
	ОбновитьЗаголовокФормы();
	
	Объект.КаталогиБиблиотек.ТипЗначения     = Новый ОписаниеТипов(""Строка"");
	Объект.СписокТеговИсключение.ТипЗначения = Новый ОписаниеТипов(""Строка"");
	Объект.СписокТеговОтбор.ТипЗначения      = Новый ОписаниеТипов(""Строка"");
	
	ЭтаФорма.ТекущийЭлемент = Элементы.ДеревоТестов;
	
	//ДобавитьВСписокНедавноЗагруженныеФичи();
	ЗаполнитьПолеВерсияПлатформыДляГенерацииEPFЕслиЭтоВозможно();
	
	ТаймайтЗагрузкиНастроек = ?(Объект.ПлагиныЗагружены, 0.1, 1);//TODO ?? уменьшить таймаут менее 5 секунд
	
	ПодключитьОбработчикОжидания(""ПослеОткрытияФормы"", ТаймайтЗагрузкиНастроек, Истина);
	
КонецПроцедуры


&НаКлиенте
Процедура ПодключитьБиблиотекуРаботыСВидео()
	Если МодульРаботыСВидео <> Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	Если ПустаяСтрока(Объект.КаталогИнструментов) Тогда
		Объект.КаталогИнструментов = ПолучитьПутьКОбработкеКлиент();
	КонецЕсли;
	
	ИмяФайла = ДополнитьСлешВПуть(Объект.КаталогИнструментов) + ""lib/video/работасвидео.epf"";
	Если СокрЛП(Объект.КаталогИнструментов) = """" Тогда
		ЕстьКонстантаВКонфигурации = ЕстьКонстантаВКонфигурацииСервер(""ПутьКVanessaBehavior"");
		Если ЕстьКонстантаВКонфигурации Тогда
			ПутьКVanessaBehavior     = ПолучитьЗначениеКонстантыСервер(""ПутьКVanessaBehavior"");
			ФайлПутьКVanessaBehavior = Новый Файл(ПутьКVanessaBehavior);
			ИмяФайла                 = ДополнитьСлешВПуть(ФайлПутьКVanessaBehavior.Путь) + ""lib/video/работасвидео.epf"";
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
		ТекстСообщения = ""Файл %1 не существует."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяФайла);
		СделатьСообщение(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ИмяОбработки       = ПодключитьВнешнююОбработкуКлиент(ИмяФайла);
	МодульРаботыСВидео = ПолучитьФорму(""ВнешняяОбработка."" + ИмяОбработки + "".Форма.Форма"");
	
КонецПроцедуры

&НаКлиенте
Процедура Обрабочик_ПодключитьБиблиотекуРаботыСВидео(Знач НенужноеЗначение, Знач ДополнительныеПараметры) Экспорт
	ПодключитьБиблиотекуРаботыСВидео();
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТестыЗагрузитьОднуФичу()
	ОчиститьСообщения();
	
	Режим = РежимДиалогаВыбораФайла.Открытие;
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(Режим);
	ДиалогОткрытияФайла.Заголовок = ""Выберите feature файл"";
	ДиалогОткрытияФайла.Фильтр = ""Фича файл (*.feature)|*.feature"";
	Если ЕстьПоддержкаАсинхронныхВызовов Тогда
		ОписаниеОповещения = Вычислить(""Новый ОписаниеОповещения(""""ОбработатьВыборФайлаЗагрузкаФичи"""", ЭтаФорма)"");
		Выполнить(""ДиалогОткрытияФайла.Показать(ОписаниеОповещения)"");
	Иначе
		Если ДиалогОткрытияФайла.Выбрать() Тогда
			Объект.КаталогФич = ДиалогОткрытияФайла.ПолноеИмяФайла;
		Иначе
			Возврат;
		КонецЕсли;
		
		//очистим кеш при смене фичи
		КешStepDefinition.Очистить();
		КешТаблицGherkin.Очистить();
		ЗагрузитьФичи();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СделатьПараметрКорректным(СтрокаПараметр)
	Если Найти(Прав(СтрокаПараметр, 1), ""\/"") > 0 Тогда
		СтрокаПараметр = Лев(СтрокаПараметр, СтрДлина(СтрокаПараметр) - 1);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СделатьПараметрыКорректными()
	СделатьПараметрКорректным(Объект.КаталогИнструментов);
	СделатьПараметрКорректным(Объект.КаталогOutputИнструкцияHTML);
	СделатьПараметрКорректным(Объект.КаталогOutputИнструкцияMarkdown);
	СделатьПараметрКорректным(Объект.КаталогOutputСкриншоты);
	СделатьПараметрКорректным(Объект.КаталогOutputИнструкцияВидео);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОчиститьПоляВДеревеДляПостроенияОтчетов(Дерево)
	Для каждого СтрСтроки Из Дерево.Строки Цикл
		СтрСтроки.Статус     = """";
		Если СтрСтроки.Тип = ""Шаг"" Тогда
			СтрСтроки.ТипКартинки = 3;
		ИначеЕсли СтрСтроки.ДопТип = ""Цикл"" Тогда
			СтрСтроки.ТипКартинки = 3;
		ИначеЕсли СтрСтроки.ДопТип = ""Условие"" Тогда
			СтрСтроки.ТипКартинки = 3;
		ИначеЕсли СтрСтроки.ДопТип = ""УсловиеИначеЕсли"" Тогда
			СтрСтроки.ТипКартинки = 3;
		КонецЕсли;
		
		ОчиститьПоляВДеревеДляПостроенияОтчетов(СтрСтроки);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ОчиститьПоляВДеревеДляПостроенияОтчетовСервер()
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	
	Дерево = ОбъектСервер.ДеревоТестов;
	ОчиститьПоляВДеревеДляПостроенияОтчетов(Дерево);
	
	ЗначениеВРеквизитФормы(ОбъектСервер, ""Объект"");
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПоляВДеревеДляПостроенияОтчетовРекурсивно(СтрокиДерева)
	Для каждого СтрокаДерева Из СтрокиДерева Цикл
		СтрокаДерева.Статус     = """";
		Если СтрокаДерева.Тип = ""Шаг"" Тогда
			Если СтрокаДерева.ТипКартинки <> 3 Тогда
				СтрокаДерева.ТипКартинки = 3;
			КонецЕсли;
		ИначеЕсли СтрокаДерева.ДопТип = ""Цикл"" Тогда
			СтрокаДерева.ТипКартинки = 3;
		ИначеЕсли СтрокаДерева.ДопТип = ""Условие"" Тогда
			СтрокаДерева.ТипКартинки = 3;
		ИначеЕсли СтрокаДерева.ДопТип = ""УсловиеИначеЕсли"" Тогда
			СтрокаДерева.ТипКартинки = 3;
		КонецЕсли;
		
		ОчиститьПоляВДеревеДляПостроенияОтчетовРекурсивно(СтрокаДерева.ПолучитьЭлементы());
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьПоляВДеревеДляПостроенияОтчетовКлиент()
	ОчиститьПоляВДеревеДляПостроенияОтчетовРекурсивно(Объект.ДеревоТестов.ПолучитьЭлементы());
КонецПроцедуры

&НаСервереБезКонтекста
Функция ЭтоСценарий_SceanrioOutline(СтрокаДерева)
	Для каждого СтрСтроки Из СтрокаДерева.Строки Цикл
		Если СтрСтроки.Тип = ""Примеры"" Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

&НаСервереБезКонтекста
Функция ДалееВДеревеСтрокиУсловийИначе(СтрокаДерева,СтрокиРодителя)
	ИД = СтрокиРодителя.Индекс(СтрокаДерева);
	ДалееТолькоУсловия = Истина;
	
	Пока Истина Цикл
		ИД = ИД + 1;
		Если ИД > СтрокиРодителя.Количество()-1 Тогда
			Прервать;
		КонецЕсли;
		
		ТекСтрока = СтрокиРодителя[ИД];
		
		Если (ТекСтрока.ДопТип = ""УсловиеИначеЕсли"") или (ТекСтрока.ДопТип = ""УсловиеИначе"") Тогда
			Продолжить;
		КонецЕсли;
		
		ДалееТолькоУсловия = Ложь;
		Прервать;
	КонецЦикла;
	
	Возврат ДалееТолькоУсловия;
КонецФункции

&НаСервереБезКонтекста
Процедура ОбработатьСлужебныеЗначенияВСтруктуреШага(СтруктураШага,СтрСтроки,Шаги)
	ЕстьЦиклВышеПоДереву = Ложь;
	ТекСтрокаДерева      = СтрСтроки;
	ТекСтрокиРодителя    = ТекСтрокаДерева.Родитель.Строки;
	ИдЦикла              = Неопределено;
	Пока Истина Цикл
		
		Если ТекСтрокиРодителя.Индекс(ТекСтрокаДерева) <> (ТекСтрокиРодителя.Количество()-1)
			И НЕ ДалееВДеревеСтрокиУсловийИначе(ТекСтрокаДерева,ТекСтрокиРодителя)
			Тогда
			//это должна быть последняя строка в своём уровне
			Прервать;
		КонецЕсли;
		
		Если ТекСтрокаДерева.Родитель.Тип = ""Сценарий"" Тогда
			Прервать;
		КонецЕсли;
		
		Если ТекСтрокаДерева.Родитель.ДопТип = ""Цикл"" Тогда
			ЕстьЦиклВышеПоДереву = Истина;
			ИдСтрокиЦикла        = ТекСтрокаДерева.Родитель.ИдСтроки;
			Прервать;
		КонецЕсли;
		
		ТекСтрокаДерева   = ТекСтрокаДерева.Родитель;
		ТекСтрокиРодителя = ТекСтрокаДерева.Родитель.Строки;
	КонецЦикла;
	
	Если ЕстьЦиклВышеПоДереву Тогда
		СтруктураШага.Вставить(""ИдЦикла"",ИдСтрокиЦикла);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция НайтиСледующуюИсполнимуюСтрокуДерева(СтрокаДерева)
	Если СтрокаДерева.Тип = ""Область""  или СтрокаДерева.Тип = ""ШагСценарий"" Тогда
		Если ЗначениеЗаполнено(СтрокаДерева.ДопТип) и (СтрокаДерева.ДопТип <> ""УсловиеИначе"") Тогда
			Возврат СтрокаДерева;
		Иначе
			Возврат НайтиСледующуюИсполнимуюСтрокуДерева(СтрокаДерева.Строки[0]);
		КонецЕсли;
	КонецЕсли;
	
	Возврат СтрокаДерева;
КонецФункции

&НаСервере
Функция ОпределитьИдСледующейСтроки(СтрокаДерева,СтрокиРодителя)
	Если Объект.РежимВыполненияОдногоШага Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИдСледующейСтроки = СтрокиРодителя.Индекс(СтрокаДерева)+1;
	
	Если (СтрокиРодителя.Количество() - 1) >= ИдСледующейСтроки Тогда
		Возврат НайтиСледующуюИсполнимуюСтрокуДерева(СтрокиРодителя[ИдСледующейСтроки]);
	КонецЕсли;
	
	Если СтрокаДерева.Тип = ""Сценарий"" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если СтрокаДерева.Родитель.Тип = ""Сценарий"" Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если СтрокаДерева.Родитель.ДопТип = ""Цикл"" Тогда
		Возврат СтрокаДерева.Родитель;
	КонецЕсли;
	
	Возврат ОпределитьИдСледующейСтроки(СтрокиРодителя.Родитель,СтрокиРодителя.Родитель.Родитель.Строки);
КонецФункции


&НаСервере
Функция НайтиСледующуюСтрокаКогдаУсловиеИстинно(СтрокаУсловия)
	РодительСтроки = СтрокаУсловия.Родитель;
	ИДСтрокиДерева = РодительСтроки.Строки.Индекс(СтрокаУсловия);
	
	Пока Истина Цикл
		ИДСтрокиДерева = ИДСтрокиДерева + 1;
		Если (РодительСтроки.Строки.Количество()-1) >= ИДСтрокиДерева Тогда
			СледующаяСтрока = РодительСтроки.Строки[ИДСтрокиДерева];
			
			Если СледующаяСтрока.ДопТип = ""УсловиеИначеЕсли"" Тогда
				Продолжить;
			ИначеЕсли СледующаяСтрока.ДопТип = ""УсловиеИначе"" Тогда
				Продолжить;
			КонецЕсли;
			
			Возврат НайтиСледующуюИсполнимуюСтрокуДерева(СледующаяСтрока);
		Иначе
			Если (РодительСтроки.ДопТип = ""Условие"") или (РодительСтроки.ДопТип = ""УсловиеИначеЕсли"") или (РодительСтроки.ДопТип = ""УсловиеИначе"")  или (РодительСтроки.Тип = ""Область"") Тогда
				Возврат НайтиСледующуюСтрокаКогдаУсловиеИстинно(РодительСтроки);
			КонецЕсли;
			
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции

&НаСервере
Процедура ДобавитьШагиДляВыполненияСценария(Шаги, ДеревоСтроки, СтрокаДерева, СтрокаСценария,
	ЭтоШагКонтекста,ДопПараметры)
	Для каждого СтрСтроки Из ДеревоСтроки Цикл
		Если СтрСтроки.Тип = ""Шаг"" Тогда
			СтруктураШага = ПолучитьСтруктуруШага(СтрСтроки, СтрокаДерева, СтрокаДерева, ЭтоШагКонтекста);
			
			Если ДопПараметры.ЕстьЦиклы Тогда
				ОбработатьСлужебныеЗначенияВСтруктуреШага(СтруктураШага,СтрСтроки,Шаги);
			КонецЕсли;
			
			
			РодительСтроки = СтрСтроки.Родитель;
			ИДСтрокиДерева = РодительСтроки.Строки.Индекс(СтрСтроки);
			Если ИДСтрокиДерева = РодительСтроки.Строки.Количество()-1 Тогда
				Если ДопПараметры.МассивУсловий.Количество() > 0 Тогда
					СтрокаУсловия = ДопПараметры.МассивУсловий[ДопПараметры.МассивУсловий.Количество()-1];
					
					ДалееВУсловииНетСтрок = Истина;
					ИдСтроки = СтрСтроки.ИдСтроки;
					СтрокаСоСледующимИД = СтрокаУсловия.Строки.Найти(ИдСтроки+1,""ИдСтроки"",Истина);
					Если СтрокаСоСледующимИД <> Неопределено И СтрокаСоСледующимИД.СтрокаПараметровШагаВВидеТаблицы <> Истина Тогда
						ДалееВУсловииНетСтрок = Ложь;
					КонецЕсли;
					
					Если ДалееВУсловииНетСтрок Тогда
						СледующаяСтрокаКогдаУсловиеИстинно = НайтиСледующуюСтрокаКогдаУсловиеИстинно(СтрокаУсловия);
						Если СледующаяСтрокаКогдаУсловиеИстинно <> Неопределено Тогда
							СтруктураШага.Вставить(""ИдСледующегоШага"", СледующаяСтрокаКогдаУсловиеИстинно.ИдСтроки);
						Иначе
							Если ДопПараметры.ЕстьЦиклы Тогда
								//значит это последний шаг в сценарии, но он внутри условия
								ОбработатьСлужебныеЗначенияВСтруктуреШага(СтруктураШага,СтрСтроки,Шаги);
							Иначе
								СтруктураШага.Вставить(""ИдСледующегоШага"", -1);
							КонецЕсли;
							
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Шаги.Добавить(СтруктураШага);
		ИначеЕсли СтрСтроки.Тип = ""ШагСценарий"" Тогда
			Если СтрСтроки.ДопТип = ""СтруктураСценария"" Тогда //это вложенная структура сценария
				СтрокаПримеров = Неопределено;
				Для Каждого СтрокаДереваСтруктурыСценария Из СтрСтроки.Строки Цикл
					Если СтрокаДереваСтруктурыСценария.Тип = ""Примеры"" Тогда
						СтрокаПримеров = СтрокаДереваСтруктурыСценария;
					КонецЕсли;
				КонецЦикла;
				
				Если СтрокаПримеров = Неопределено Тогда
					ТекстСообщения = ""Не найдена строка примеров во вложенной структуре сценария. <%1>"";
					ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",СтрокаДерева.ПолныйПуть);
					ВызватьИсключение ТекстСообщения;
				КонецЕсли;
				
				НомерСтрокиПримера = 0;
				Для Каждого СтрокаПримера Из СтрокаПримеров.Строки Цикл
					НомерСтрокиПримера = НомерСтрокиПримера + 1;
					Если НомерСтрокиПримера = 1 Тогда
						Продолжить;//это служебная строка
					КонецЕсли;
					
					ДобавитьШагиДляВыполненияСценария(Шаги, СтрокаПримера.Строки, СтрокаПримера, СтрокаСценария, ЭтоШагКонтекста,ДопПараметры)
				КонецЦикла;
			Иначе
				ДобавитьШагиДляВыполненияСценария(Шаги, СтрСтроки.Строки, СтрокаДерева, СтрокаСценария, ЭтоШагКонтекста,ДопПараметры)
			КонецЕсли;
		ИначеЕсли СтрСтроки.Тип = ""Область"" Тогда
			Если (СтрСтроки.ДопТип = ""Условие"") или (СтрСтроки.ДопТип = ""УсловиеИначеЕсли"")  Тогда
				ДопПараметры.МассивУсловий.Добавить(СтрСтроки);
			КонецЕсли;
			
			Если (СтрСтроки.ДопТип = ""Условие"") или (СтрСтроки.ДопТип = ""УсловиеИначеЕсли"")  или (СтрСтроки.ДопТип = ""Цикл"")  Тогда
				СтруктураШага = ПолучитьСтруктуруШага(СтрСтроки, СтрокаДерева, СтрокаДерева, ЭтоШагКонтекста);
				
				СледующаяСтрока = ОпределитьИдСледующейСтроки(СтрСтроки,ДеревоСтроки);
				Если СледующаяСтрока = Неопределено Тогда
					СтруктураШага.Вставить(""ИдСледующегоШага"", Неопределено);
				Иначе
					СтруктураШага.Вставить(""ИдСледующегоШага"", СледующаяСтрока.ИдСтроки);
				КонецЕсли;
				
				Если СтрСтроки.ДопТип = ""Цикл"" Тогда
					ДопПараметры.Вставить(""ЕстьЦиклы"",Истина);
				КонецЕсли;
				
				Если ДопПараметры.ЕстьЦиклы Тогда
					ОбработатьСлужебныеЗначенияВСтруктуреШага(СтруктураШага,СтрСтроки,Шаги);
				КонецЕсли;
				
				Шаги.Добавить(СтруктураШага);
			КонецЕсли;
			
			ДобавитьШагиДляВыполненияСценария(Шаги, СтрСтроки.Строки, СтрокаДерева, СтрокаСценария, ЭтоШагКонтекста,ДопПараметры);
			
			Если (СтрСтроки.ДопТип = ""Условие"") или (СтрСтроки.ДопТип = ""УсловиеИначеЕсли"") Тогда
				ДопПараметры.МассивУсловий.Удалить(ДопПараметры.МассивУсловий.Количество()-1);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УдалитьШагиИзМассиваШаговПоСписку(Шаги, МассивДляУдаления)
	Для Ккк = 0 По МассивДляУдаления.Количество() - 1 Цикл
		ИД = МассивДляУдаления.Количество() - 1 - Ккк;
		Ном = МассивДляУдаления[ИД];
		Шаги.Удалить(Ном);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСценарийАутлайн(СтрокаДерева, МассивСценариевДляВыполнения, ТекПример, ДопПараметры)
	//получим сами именнованные параметры
	
	ИменаПараметров = Неопределено;
	СтрокаПримеров  = Неопределено;
	Для каждого СтрСтроки Из СтрокаДерева.Строки Цикл
		Если СтрСтроки.Тип = ""Примеры"" Тогда
			ИменаПараметров = СтрСтроки.ИменованныеПараметры;
			СтрокаПримеров = СтрСтроки;
		КонецЕсли;
	КонецЦикла;
	
	Если ИменаПараметров = Неопределено Тогда
		СтрОшибки = ""Не смог найти у сценария "" + СтрокаДерева.Имя + "" имена изменяемых параметров."";
		Сообщить(СтрОшибки);
		ВызватьИсключение СтрОшибки;
	КонецЕсли;
	
	
	МассивИДСценариев = ДопПараметры.МассивИДСценариев;
	Ном = 0;
	Для каждого СтрСтрокаПримеров Из СтрокаПримеров.Строки Цикл
		Ном = Ном + 1;
		Если Ном = 1 Тогда
			//в первой строке лежат имена параметров
			Продолжить;
		КонецЕсли;
		
		Если ТекПример <> Неопределено Тогда
			Если СтрСтрокаПримеров <> ТекПример Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		
		
		Если МассивИДСценариев <> Неопределено Тогда
			Если МассивИДСценариев.Найти(СтрСтрокаПримеров.Родитель.Родитель.ИДСтроки) = Неопределено Тогда //проверка что идёт запуск всей структуры сценария
				Если МассивИДСценариев.Найти(СтрСтрокаПримеров.ИдСтроки) = Неопределено Тогда //проверка что надо запускать конкретный пример
					Если НЕ ДопПараметры.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением Тогда
						Продолжить;
					Иначе
						Если НЕ ДопПараметры.НашелСценарий Тогда
							Продолжить;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		
		
		СтруктураПараметровСценария = Новый Структура;
		СтруктураПараметровСценария.Вставить(""Имя"", СтрокаДерева.Имя + "" (Пример №"" + (Ном - 1) + "")"");
		СтруктураПараметровСценария.Вставить(""СтрокаДерева"", СтрСтрокаПримеров.ИДСтроки);
		СтруктураПараметровСценария.Вставить(""ИмяФичи"", ДопПараметры.ИмяФичи);
		СтруктураПараметровСценария.Вставить(""ПолныйПутьКФиче"", ДопПараметры.ПолныйПутьКФиче);
		СтруктураПараметровСценария.Вставить(""НомерСтрокиВФиче"", Неопределено);
		СтруктураПараметровСценария.Вставить(""ИдСтрокиШагаСКоторогоВыполнятьСценарийСДанногоШага"",
		ДопПараметры.ИдСтрокиШагаСКоторогоВыполнятьСценарийСДанногоШага);
		
		
		Шаги = Новый Массив;
		
		Если СтрокаДерева.Родитель.Строки[0].ДопТип = ""Контекст"" Тогда //значит надо добавить шаги контекста к нашим шагам
			ДопПараметры.Вставить(""ЕстьЦиклы"",Ложь);
			ДопПараметры.Вставить(""МассивУсловий"",Новый Массив);
			ДобавитьШагиДляВыполненияСценария(Шаги, СтрокаДерева.Родитель.Строки[0].Строки, СтрокаДерева, СтрСтрокаПримеров,
			Истина,ДопПараметры);
		КонецЕсли;
		
		
		ДопПараметры.Вставить(""ЕстьЦиклы"",Ложь);
		ДопПараметры.Вставить(""МассивУсловий"",Новый Массив);
		ДобавитьШагиДляВыполненияСценария(Шаги, СтрСтрокаПримеров.Строки, СтрокаДерева, СтрСтроки.Родитель,
		Ложь,ДопПараметры);
		
		Если ДопПараметры.РежимВыполненияОдногоШага Тогда
			МассивДляУдаления = Новый Массив;
			Ном = -1;
			Для каждого Шаг Из Шаги Цикл
				Ном = Ном + 1;
				Если Шаг.СтрокаШага = ДопПараметры.ИдСтрокиШагаСКоторогоВыполнятьСценарийСДанногоШага Тогда
					Продолжить;
				КонецЕсли;
				
				МассивДляУдаления.Добавить(Ном);
			КонецЦикла;
			
			УдалитьШагиИзМассиваШаговПоСписку(Шаги, МассивДляУдаления);
		КонецЕсли;
		
		
		ДопПараметры.Вставить(""НашелСценарий"", Истина);
		
		
		СтруктураПараметровСценария.Вставить(""Шаги"", Шаги);
		МассивСценариевДляВыполнения.Добавить(СтруктураПараметровСценария);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьСтруктуруШага(СтрСтроки, СтрокаДерева, СтрокаСценария, ЭтоШагКонтекста)
	СтруктураШага = Новый Структура;
	СтруктураШага.Вставить(""Имя"", СтрСтроки.Имя);
	СтруктураШага.Вставить(""ЗначенияПараметров"", СтрСтроки.ЗначенияПараметров);
	СтруктураШага.Вставить(""АдресСнипета"", СтрСтроки.АдресСнипета);
	СтруктураШага.Вставить(""СтрокаРеальнойПроцедуры"", СтрСтроки.СтрокаРеальнойПроцедуры);
	СтруктураШага.Вставить(""Снипет"", СтрСтроки.Снипет);
	СтруктураШага.Вставить(""ИмяСценария"", СтрокаДерева.Имя);
	СтруктураШага.Вставить(""СтрокаСценария"", СтрокаСценария.ИДСтроки);
	СтруктураШага.Вставить(""СтрокаШага"", СтрСтроки.ИДСтроки);
	СтруктураШага.Вставить(""НомерСтрокиВФиче"", СтрСтроки.НомерСтрокиВФиче);
	СтруктураШага.Вставить(""ИдСтроки"", СтрСтроки.ИдСтроки);
	СтруктураШага.Вставить(""ШагСчитаетсяУпавшим"", Ложь);
	СтруктураШага.Вставить(""ОписаниеОшибки"", """");
	СтруктураШага.Вставить(""ЭтоШагКонтекста"", ЭтоШагКонтекста);
	СтруктураШага.Вставить(""ШагСПараметрамиВТаблице"", СтрСтроки.ШагСПараметрамиВТаблице);
	СтруктураШага.Вставить(""ДопТип"", СтрСтроки.ДопТип);
	СтруктураШага.Вставить(""ПараметрыТаблицы"", Неопределено);
	СтруктураШага.Вставить(""МасштабироватьВВидео"", Истина);
	СтруктураШага.Вставить(""ТекстИнструкция"", """");
	СтруктураШага.Вставить(""ИдСледующегоШага"", Неопределено);
	СтруктураШага.Вставить(""ИдЦикла"", Неопределено);
	
	
	
	Если СтрСтроки.ШагСПараметрамиВТаблице = Истина Тогда
		ПараметрыТаблицы = Новый Массив;
		Для каждого ПодчиненнаяСтрока Из СтрСтроки.Строки Цикл
			ПараметрыТаблицы.Добавить(ПодчиненнаяСтрока.Имя);
		КонецЦикла;
		СтруктураШага.Вставить(""ПараметрыТаблицы"", ПараметрыТаблицы);
	КонецЕсли;
	
	Возврат СтруктураШага;
КонецФункции

&НаКлиенте
Функция ПолучитьСтруктуруШагаКлиент(СтрСтроки, СтрокаДерева, СтрокаСценария, ЭтоШагКонтекста)
	СтруктураШага = Новый Структура;
	СтруктураШага.Вставить(""Имя"", СтрСтроки.Имя);
	СтруктураШага.Вставить(""ЗначенияПараметров"", СтрСтроки.ЗначенияПараметров);
	СтруктураШага.Вставить(""АдресСнипета"", СтрСтроки.АдресСнипета);
	СтруктураШага.Вставить(""СтрокаРеальнойПроцедуры"", СтрСтроки.СтрокаРеальнойПроцедуры);
	СтруктураШага.Вставить(""Снипет"", СтрСтроки.Снипет);
	СтруктураШага.Вставить(""ИмяСценария"", СтрокаДерева.Имя);
	СтруктураШага.Вставить(""СтрокаСценария"", СтрокаСценария.ИДСтроки);
	СтруктураШага.Вставить(""НомерСтрокиВФиче"", СтрСтроки.НомерСтрокиВФиче);
	СтруктураШага.Вставить(""ИдСтроки"", СтрСтроки.ИдСтроки);
	СтруктураШага.Вставить(""СтрокаШага"", СтрСтроки.ИДСтроки);
	СтруктураШага.Вставить(""ШагСчитаетсяУпавшим"", Ложь);
	СтруктураШага.Вставить(""ОписаниеОшибки"", """");
	СтруктураШага.Вставить(""ЭтоШагКонтекста"", ЭтоШагКонтекста);
	СтруктураШага.Вставить(""ШагСПараметрамиВТаблице"", СтрСтроки.ШагСПараметрамиВТаблице);
	СтруктураШага.Вставить(""ДопТип"", СтрСтроки.ДопТип);
	СтруктураШага.Вставить(""ПараметрыТаблицы"", Неопределено);
	СтруктураШага.Вставить(""МасштабироватьВВидео"", Истина);
	СтруктураШага.Вставить(""ТекстИнструкция"", """");
	СтруктураШага.Вставить(""ИдСледующегоШага"", Неопределено);
	СтруктураШага.Вставить(""ИдЦикла"", Неопределено);
	
	
	Если СтрСтроки.ШагСПараметрамиВТаблице = Истина Тогда
		ПараметрыТаблицы = Новый Массив;
		Для каждого ПодчиненнаяСтрока Из СтрСтроки.ПолучитьЭлементы() Цикл
			ПараметрыТаблицы.Добавить(ПодчиненнаяСтрока.Имя);
		КонецЦикла;
		СтруктураШага.Вставить(""ПараметрыТаблицы"", ПараметрыТаблицы);
	КонецЕсли;
	
	Возврат СтруктураШага;
КонецФункции

&НаСервере
Процедура ДобавитьОбычныйСценарий(СтрокаДерева, МассивСценариевДляВыполнения, ДопПараметры)
	Если СтрокаДерева.ДопТип = ""Контекст"" Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить(""Имя"", СтрокаДерева.Имя);
	СтруктураПараметров.Вставить(""СтрокаДерева"", СтрокаДерева.ИдСтроки);
	СтруктураПараметров.Вставить(""ИмяФичи"", ДопПараметры.ИмяФичи);
	СтруктураПараметров.Вставить(""ПолныйПутьКФиче"", ДопПараметры.ПолныйПутьКФиче);
	СтруктураПараметров.Вставить(""НомерСтрокиВФиче"", СтрокаДерева.НомерСтрокиВФиче);
	СтруктураПараметров.Вставить(""ИдСтрокиШагаСКоторогоВыполнятьСценарийСДанногоШага"",
	ДопПараметры.ИдСтрокиШагаСКоторогоВыполнятьСценарийСДанногоШага);
	
	Шаги = Новый Массив;
	
	
	Если СтрокаДерева.Родитель.Строки[0].ДопТип = ""Контекст"" Тогда //значит надо добавить шаги контекста к нашим шагам
		ДопПараметры.Вставить(""ЕстьЦиклы"",Ложь);
		ДопПараметры.Вставить(""МассивУсловий"",Новый Массив);
		ДобавитьШагиДляВыполненияСценария(Шаги, СтрокаДерева.Родитель.Строки[0].Строки, СтрокаДерева, СтрокаДерева,
		Истина,ДопПараметры);
	КонецЕсли;
	
	ДопПараметры.Вставить(""ЕстьЦиклы"",Ложь);
	ДопПараметры.Вставить(""МассивУсловий"",Новый Массив);
	ДобавитьШагиДляВыполненияСценария(Шаги, СтрокаДерева.Строки, СтрокаДерева, СтрокаДерева, Ложь,ДопПараметры);
	
	Если ДопПараметры.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов Тогда
		МассивДляУдаления = Новый Массив;
		Ном = -1;
		Для каждого Шаг Из Шаги Цикл
			Ном = Ном + 1;
			Если Шаг.СтрокаШага = ДопПараметры.ИдСтрокиШагаСКоторогоВыполнятьСценарийССохранениемКонтекстов Тогда
				Прервать;
			КонецЕсли;
			
			МассивДляУдаления.Добавить(Ном);
		КонецЦикла;
		
		УдалитьШагиИзМассиваШаговПоСписку(Шаги, МассивДляУдаления);
	КонецЕсли;
	
	//Если ДопПараметры.РежимВыполненияДанногоСценарияСТекущегоШага Тогда
	//	МассивДляУдаления = Новый Массив;
	//	Ном = -1;
	//	Для каждого Шаг Из Шаги Цикл
	//		Ном = Ном + 1;
	//		Если Шаг.СтрокаШага = ДопПараметры.ИдСтрокиШагаСКоторогоВыполнятьСценарийСДанногоШага Тогда
	//			Прервать;
	//		КонецЕсли;
	//
	//		МассивДляУдаления.Добавить(Ном);
	//	КонецЦикла;
	//
	//	УдалитьШагиИзМассиваШаговПоСписку(Шаги, МассивДляУдаления);
	//КонецЕсли;
	//
	//Если ДопПараметры.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением Тогда
	//	Если Не ДопПараметры.НашелСценарий Тогда
	//		МассивДляУдаления = Новый Массив;
	//		Ном = -1;
	//		Для каждого Шаг Из Шаги Цикл
	//			Ном = Ном + 1;
	//			Если Шаг.СтрокаШага = ДопПараметры.ИдСтрокиШагаСКоторогоВыполнятьСценарийСДанногоШага Тогда
	//				Прервать;
	//			КонецЕсли;
	//
	//			МассивДляУдаления.Добавить(Ном);
	//		КонецЦикла;
	//
	//		УдалитьШагиИзМассиваШаговПоСписку(Шаги, МассивДляУдаления);
	//	КонецЕсли;
	//КонецЕсли;
	
	Если ДопПараметры.РежимВыполненияОдногоШага Тогда
		МассивДляУдаления = Новый Массив;
		Ном = -1;
		Для каждого Шаг Из Шаги Цикл
			Ном = Ном + 1;
			Если Шаг.СтрокаШага = ДопПараметры.ИдСтрокиШагаСКоторогоВыполнятьСценарийСДанногоШага Тогда
				Продолжить;
			КонецЕсли;
			
			МассивДляУдаления.Добавить(Ном);
		КонецЦикла;
		
		УдалитьШагиИзМассиваШаговПоСписку(Шаги, МассивДляУдаления);
	КонецЕсли;
	
	
	СтруктураПараметров.Вставить(""Шаги"", Шаги);
	
	
	МассивСценариевДляВыполнения.Добавить(СтруктураПараметров);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСценарийВМассивСценариевДляВыполнения(СтрокаДерева, МассивСценариевДляВыполнения, ДопПараметры)
	
	ЭтоСценариоАутлайн = ЭтоСценарий_SceanrioOutline(СтрокаДерева);
	Если ЭтоСценариоАутлайн Тогда
		ДобавитьСценарийАутлайн(СтрокаДерева, МассивСценариевДляВыполнения, Неопределено, ДопПараметры);
		Возврат;
	КонецЕсли;
	
	ДобавитьОбычныйСценарий(СтрокаДерева, МассивСценариевДляВыполнения, ДопПараметры);
КонецПроцедуры

&НаСервере
Процедура ДобавитьСценарииРекурсивно_ВМассивСценариевДляВыполнения(ДеревоСтроки, МассивСценариевДляВыполнения, ДопПараметры)
	Если ТипЗнч(ДеревоСтроки) = Тип(""СтрокаДереваЗначений"") Тогда
		Если ДеревоСтроки.Тип = ""Фича"" Тогда
			ДопПараметры.Вставить(""ИмяФичи"", ДеревоСтроки.Имя);
			ДопПараметры.Вставить(""ПолныйПутьКФиче"", ДеревоСтроки.ПолныйПуть);
		КонецЕсли;
		
		Если ДеревоСтроки.Тип = ""Сценарий"" Тогда
			ДобавитьСценарийВМассивСценариевДляВыполнения(ДеревоСтроки, МассивСценариевДляВыполнения, ДопПараметры);
		ИначеЕсли ДеревоСтроки.Тип = ""Пример"" Тогда
			ДобавитьСценарийАутлайн(ДеревоСтроки.Родитель.Родитель, МассивСценариевДляВыполнения, ДеревоСтроки, ДопПараметры)
		КонецЕсли;
	Иначе
		Для каждого СтрДеревоСтроки Из ДеревоСтроки Цикл
			Если СтрДеревоСтроки.Тип = ""Фича"" Тогда
				ДопПараметры.Вставить(""ИмяФичи"", СтрДеревоСтроки.Имя);
				ДопПараметры.Вставить(""ПолныйПутьКФиче"", СтрДеревоСтроки.ПолныйПуть);
			КонецЕсли;
			
			МассивИДСценариев = ДопПараметры.МассивИДСценариев;
			Если СтрДеревоСтроки.Тип = ""Сценарий"" Тогда
				Если МассивИДСценариев <> Неопределено Тогда
					Если МассивИДСценариев.Найти(СтрДеревоСтроки.ИдСтроки) <> Неопределено Тогда
						ДобавитьСценарийВМассивСценариевДляВыполнения(СтрДеревоСтроки, МассивСценариевДляВыполнения, 
							ДопПараметры);
						ДопПараметры.Вставить(""НашелСценарий"", Истина);
					ИначеЕсли ДопПараметры.ДобавитьСценарииПослеНайденного и ДопПараметры.НашелСценарий Тогда
						ДобавитьСценарийВМассивСценариевДляВыполнения(СтрДеревоСтроки, МассивСценариевДляВыполнения, 
							ДопПараметры);
					ИначеЕсли ДопПараметры.ЭтоПример и (СтрДеревоСтроки.ДопТип = ""СтруктураСценария"") Тогда
						ДобавитьСценарийВМассивСценариевДляВыполнения(СтрДеревоСтроки, МассивСценариевДляВыполнения, 
							ДопПараметры);
					КонецЕсли;
				Иначе
					ДобавитьСценарийВМассивСценариевДляВыполнения(СтрДеревоСтроки, МассивСценариевДляВыполнения, ДопПараметры);
				КонецЕсли;
			Иначе
				ДобавитьСценарииРекурсивно_ВМассивСценариевДляВыполнения(СтрДеревоСтроки.Строки, 
					МассивСценариевДляВыполнения, ДопПараметры);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПроставитьИДРекурсивно(ДеревоСтроки, ИД, МассивСтрокДереваДанныеФормы, МассивИменКонтекстовОбработок, 
		ТзнТаблицаИзвестныхStepDefinition, ДопПараметры, ЕстьСвояEPFУФичи = Неопределено)

	Для каждого СтрокаДерева Из ДеревоСтроки Цикл
		
		СтрокаДерева.Статус     = """";
		Если СтрокаДерева.Тип = ""Шаг"" Тогда
			Если СтрокаДерева.ТипКартинки <> 3 Тогда
				СтрокаДерева.ТипКартинки = 3;
			КонецЕсли;
		ИначеЕсли СтрокаДерева.ДопТип = ""Цикл"" Тогда
			СтрокаДерева.ТипКартинки = 3;
		ИначеЕсли СтрокаДерева.ДопТип = ""Условие"" Тогда
			СтрокаДерева.ТипКартинки = 3;
		ИначеЕсли СтрокаДерева.ДопТип = ""УсловиеИначеЕсли"" Тогда
			СтрокаДерева.ТипКартинки = 3;
		КонецЕсли;
		
		Если СтрокаДерева.Тип = ""Фича"" Тогда
			ФайлФичи = Новый Файл(СтрокаДерева.ПолныйПуть);
			ПутьФайлаEPF  = УниверсальноеПолноеИмяФайлаШаговФичи_Устаревший(ФайлФичи.Путь, ФайлФичи.ИмяБезРасширения, 
				ДопПараметры.ЭтоLinux);
			
			ПутьФайлаEPF = УниверсальноеПолноеИмяФайла(ПутьФайлаEPF, Истина);

			ЕстьСвояEPFУФичи = МассивИменКонтекстовОбработок.Найти(ПутьФайлаEPF) <> Неопределено;
		КонецЕсли;
		СтрокаДерева.ФичаИмеетСвоюEPF = ЕстьСвояEPFУФичи;
		
		СтрокаДерева.ИДСтроки = ИД;
		Если ДопПараметры.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов Тогда
			Если СтрокаДерева.ИДСтроки = ДопПараметры.ИдСтрокиШагаСКоторогоВыполнятьСценарийССохранениемКонтекстов Тогда
				СтрокаДерева.ВыполнятьСценарийСЭтогоШага = Истина;
			КонецЕсли;
		КонецЕсли;
		МассивСтрокДереваДанныеФормы.Добавить();//просто добавим пустой элемент, заполнение его данными будет в процедуре клиента
		ИД = ИД + 1;
		ПроставитьИДРекурсивно(СтрокаДерева.Строки, ИД, МассивСтрокДереваДанныеФормы, МассивИменКонтекстовОбработок,
			ТзнТаблицаИзвестныхStepDefinition, ДопПараметры, ЕстьСвояEPFУФичи);
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьИДСтрокиВДереве(Дерево, МассивСтрокДереваДанныеФормы, МассивИменКонтекстовОбработок,
	ТзнТаблицаИзвестныхStepDefinition, ДопПараметры)
	Ид = 0;
	ПроставитьИДРекурсивно(Дерево.Строки, ИД, МассивСтрокДереваДанныеФормы, МассивИменКонтекстовОбработок,
		ТзнТаблицаИзвестныхStepDefinition, ДопПараметры);
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМассивСценариевДляВыполненияСервер(МассивСценариевДляВыполнения, МассивСтрокДереваДанныеФормы,
	ТекИДСценария, МассивИменКонтекстовОбработок, ДопПараметры)
	ДеревоФорма = Объект.ДеревоТестов;
	
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	
	Если Не Объект.РежимВыполненияОдногоШага Тогда
		ТзнТаблицаИзвестныхStepDefinition = РеквизитФормыВЗначение(""ТаблицаИзвестныхStepDefinition"");//TODO ?? обойтись без РеквизитФормыВЗначение
		ЗаполнитьИДСтрокиВДереве(ОбъектСервер.ДеревоТестов, МассивСтрокДереваДанныеФормы, МассивИменКонтекстовОбработок,
			ТзнТаблицаИзвестныхStepDefinition, ДопПараметры);
	КонецЕсли;
	
	ТекСценарий = Неопределено;
	Если ТекСценарий = Неопределено Тогда
		ТекСценарий = ОбъектСервер.ДеревоТестов.Строки;
	КонецЕсли;
	
	ДопПараметры.Вставить(""МассивИДСценариев"", ТекИДСценария);
	ДобавитьСценарииРекурсивно_ВМассивСценариевДляВыполнения(ТекСценарий, МассивСценариевДляВыполнения, ДопПараметры);
	
	ЗначениеВРеквизитФормы(ОбъектСервер, ""Объект"");
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьСтатусСценария(ИД)
	ИДСтрокиСценария = МассивСценариевДляВыполнения[ИД].СтрокаДерева;
	СтрокаСценария   = ПолучитьСтрокуСценарияИзДанныхФормы(ИДСтрокиСценария);
	
	Если СокрЛП(СтрокаСценария.Статус) <> """" Тогда
		Возврат;
	КонецЕсли;
	
	РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
	РезультатПрохожденияТестовШагов = РезультатПрохожденияТестовСценария.РезультатПрохожденияТестовШагов;
	
	СценарийВыполнен = Истина;
	СтрокиСценария = СтрокаСценария.ПолучитьЭлементы();
	Для каждого СтрШаг Из РезультатПрохожденияТестовШагов Цикл
		Если СтрШаг.Статус <> ""Success"" Тогда
			СценарийВыполнен = Ложь;
			Статус = СтрШаг.Статус;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если СценарийВыполнен Тогда
		СтрокаСценария.Статус = ""Success"";
	Иначе
		СтрокаСценария.Статус = Статус;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПреобразоватьКДатеСтроку(Знач Стр)
	НачСтр = Стр;
	//Зн = Дата(Стр);
	Год   = 0;
	Месяц = 0;
	День  = 0;
	
	Поз  = Найти(Стр, ""."");
	День = Число(Лев(Стр, Поз - 1));
	Стр = Сред(Стр, Поз + 1);
	
	Поз   = Найти(Стр, ""."");
	Месяц = Число(Лев(Стр, Поз - 1));
	Стр   = Сред(Стр, Поз + 1);
	
	Год   = Число(Стр);
	Если СтрДлина(Стр) = 2 Тогда
		Если Год < 100 Тогда
			Год = Год + 2000;
		КонецЕсли;
	КонецЕсли;
	
	Зн = Дата(Год, Месяц, День);
	
	
	Зн = Формат(Зн, ""ДФ=yyyyMMdd; ДП=00010101"");
	Зн = ""'"" + Зн + ""'"";
	
	Возврат Зн;
КонецФункции

&НаКлиенте
Процедура ВызватьМетод(Обработка, Знач ИмяПроцедуры, МассивАргументов)
	Поз = Найти(ИмяПроцедуры, ""("");
	Если Поз > 0 Тогда
		ИмяПроцедуры = Лев(ИмяПроцедуры, Поз - 1);
	КонецЕсли;
	
	Команда = ""Обработка."" + ИмяПроцедуры + ""("";
	
	АргументТаблица = Новый Массив;
	
	Если МассивАргументов <> Неопределено Тогда
		Для Ккк = 0 По МассивАргументов.Количество() - 1 Цикл
			Элем = МассивАргументов[Ккк];
			Если ТипЗнч(Элем) = Тип(""Массив"") Тогда
				АргументТаблица.Добавить(Элем);
				Команда = Команда + ""АргументТаблица["" + (АргументТаблица.Количество() - 1) + ""]"";
			Иначе
				Команда = Команда + Элем;
			КонецЕсли;
			
			Если Ккк < МассивАргументов.Количество() - 1 Тогда
				Команда = Команда + "","";
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Команда = Команда + "")"";
	
	Отладка(""Выполняю: "" + Команда);
	Если НЕ ПризнакРучногоВыполненияШага Тогда
		Выполнить(Команда);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ВывестиВСообщениеТекстОшибки(ТекстОшибки)
	Стр = """";
	Стр = Стр + ""        ОписаниеОшибки:""   + Символы.ПС;
	Стр = Стр + ""                ИмяМодуля: ""      + ТекстОшибки.ИмяМодуля + Символы.ПС;
	Стр = Стр + ""                ИсходнаяСтрока: "" + СокрЛП(ТекстОшибки.ИсходнаяСтрока) + Символы.ПС;
	Стр = Стр + ""                НомерСтроки: ""    + ТекстОшибки.НомерСтроки + Символы.ПС;
	Стр = Стр + ""                Описание: ""       + ТекстОшибки.Описание;
	Если ТекстОшибки.Причина <> Неопределено Тогда
		Стр = Стр + Символы.ПС;
		Если ЗначениеЗаполнено(ТекстОшибки.Причина.ИмяМодуля) Тогда
			Стр = Стр + ""                ПричинаОшибки:"" + Символы.ПС;
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекстОшибки.Причина.ИмяМодуля) Тогда
			Стр = Стр + ""                        ИмяМодуля: ""      + ТекстОшибки.Причина.ИмяМодуля + Символы.ПС;
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекстОшибки.Причина.ИсходнаяСтрока) Тогда
			Стр = Стр + ""                        ИсходнаяСтрока: "" + СокрЛП(ТекстОшибки.Причина.ИсходнаяСтрока) + Символы.ПС;
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекстОшибки.Причина.НомерСтроки) Тогда
			Стр = Стр + ""                        НомерСтроки: ""    + ТекстОшибки.Причина.НомерСтроки + Символы.ПС;
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекстОшибки.Причина.Описание) Тогда
			Стр = Стр + ""                        Описание: ""       + ТекстОшибки.Причина.Описание;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Стр;
КонецФункции


&НаКлиенте
Функция ПолучитьТекстПредупреждения()
	ОкноПредупреждения = Неопределено;
	Попытка
		ОкнаПредупреждения = ОбъектКонтекстСохраняемый.ТестовоеПриложение.НайтиОбъекты(Тип(""ТестируемоеОкноКлиентскогоПриложения""));
		Для Каждого ТекущееОкно Из ОкнаПредупреждения Цикл
			Если ЭтоЗаголовокОкнаМодальногоДиалога(ТекущееОкно.Заголовок) Тогда
				ОкноПредупреждения = ТекущееОкно;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	Если ОкноПредупреждения = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Текст = """";
	
	ПоляПредупреждения = ОкноПредупреждения.НайтиОбъекты(Тип(""ТестируемоеПолеФормы""));
	Для Каждого ПолеПредупреждения Из ПоляПредупреждения Цикл
		Если ЗначениеЗаполнено(Текст) Тогда
			Текст = Текст + Символы.ПС;
		КонецЕсли;
		
		Текст = Текст + ПолеПредупреждения.ТекстЗаголовка;
	КонецЦикла;
	
	Возврат Текст;
КонецФункции

&НаКлиенте
Функция СформироватьОписаниеОшибки(Знач Стр, ИмяФайла, ИмяПроцедуры,ИнфоОбОшибке)
	СисИнфо            = Новый СистемнаяИнформация;
	ВерсияПриложения   = СисИнфо.ВерсияПриложения;
	РежимСовместимости = УзнатьРежимСовместимостиКлиент(ПолучитьТекстСообщенияПользователю(""$Не использовать$""));
	ТекстИДРаннера     = """";
	Если ЗначениеЗаполнено(Объект.ИДРаннера) Тогда
		ТекстИДРаннера = "", ИДРаннера=""+Объект.ИДРаннера;
	КонецЕсли;
	
	ТекстОшибкиTestClient = """";
	Попытка
		ИнфоОбОшибке = Неопределено;
		ИнфоОбОшибке = ОбъектКонтекстСохраняемый.ТестовоеПриложение.ПолучитьТекущуюИнформациюОбОшибке();
		Если ИнфоОбОшибке <> Неопределено Тогда
			ТекстОшибкиTestClient = ВывестиВСообщениеТекстОшибки(ИнфоОбОшибке);
		КонецЕсли;
	Исключение
	КонецПопытки;
	
	Стр = Стр + Символы.ПС
	+ Символы.ПС              + ПолучитьТекстСообщенияПользователю(""$Технические данные$"") + "":""
	+ Символы.ПС + ""        "" + ПолучитьТекстСообщенияПользователю(""$ИмяФайла$"") +"": "" + ИмяФайла
	+ Символы.ПС + ""        "" + ПолучитьТекстСообщенияПользователю(""$ИмяПроцедуры$"") + "": "" + ИмяПроцедуры
	+ Символы.ПС + ""        "" + ПолучитьТекстСообщенияПользователю(""$ВерсияVB$"") + "": "" + ПолучитьВерсиюОбработкиКлиент()
	+ Символы.ПС + ""        "" + ПолучитьТекстСообщенияПользователю(""$ВерсияПлатформы$"") +"": "" + ВерсияПриложения
	+ Символы.ПС + ""        "" + ПолучитьТекстСообщенияПользователю(""$РежимСовместимостиTestManager$"") +"": "" + РежимСовместимости;
	
	Если ЗначениеЗаполнено(ТекстОшибкиTestClient) Тогда
		Стр = Стр + Символы.ПС + ТекстОшибкиTestClient;
	Иначе
		ТекстПредупреждения = ПолучитьТекстПредупреждения();
		Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
			Стр = Стр + Символы.ПС + ""Текст модального окна:"" + Символы.ПС
			+ ""    "" + ТекстПредупреждения;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Функция ПолучитьРезультатПрохожденияТестовСценария(ИДСтроки)
	ИД = МассивИДСтрокиДерева.Найти(ИДСтроки);
	Если ИД = Неопределено  Тогда
		Сообщить(""Неизвестная ошибка в ПолучитьРезультатПрохожденияТестовСценария."");
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат МассивРезультатПрохожденияТестовСценария[ИД];
КонецФункции

&НаСервереБезКонтекста
Процедура ОтменитьТранзакциюСервер()
	Пока ТранзакцияАктивна() Цикл
		ОтменитьТранзакцию();
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДействияПослеЗавершенияСценария(СтрокаСценария, БылаОшибка = Ложь, ОписаниеОшибки = Неопределено,СлужебныеДанныеСценария = Неопределено)
	Если Объект.РежимВыполненияОдногоШага Тогда
		Возврат;
	КонецЕсли;
	ВызватьМетодСценарияЕслиОнЕсть(СтрокаСценария, ""ПередОкончаниемСценария"", , БылаОшибка, ОписаниеОшибки,СлужебныеДанныеСценария);
КонецПроцедуры

&НаКлиенте
Функция ПроверитьНаличиеИнструментаДляСозданияСкриншотов()
	Если НЕ Объект.СоздаватьИнструкциюHTML и НЕ Объект.ДелатьСкриншотПриВозникновенииОшибки и НЕ Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если Объект.СоздаватьИнструкциюHTML Тогда
		Если СокрЛП(Объект.КаталогOutputИнструкцияHTML) = """" Тогда
			Сообщить(""КаталогOutputИнструкцияHTML не задан."");
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	Если Объект.СоздаватьИнструкциюMarkdown Тогда
		Если СокрЛП(Объект.КаталогOutputИнструкцияMarkdown) = """" Тогда
			Сообщить(""КаталогOutputИнструкцияMarkdown не задан."");
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
		Если СокрЛП(Объект.КаталогOutputСкриншоты) = """" Тогда
			Сообщить(""КаталогOutputСкриншоты не задан."");
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	Если ЭтоLinux Тогда
		Возврат Истина;
	Иначе
		ВременныйФайл = ПолучитьИмяВременногоФайла(""png"");
		СделатьСкриншот(ВременныйФайл);
		Если НЕ ФайлСуществуетКомандаСистемы(ВременныйФайл, ""ПроверитьНаличиеИнструментаДляСозданияСкриншотов"") Тогда
			Сообщить(""НЕ найден инструмент по созданию скриншотов."");
			Возврат Ложь;
		КонецЕсли;
		
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Процедура СделатьСкриншот(ИмяФайла)
	Команда = Объект.КомандаСделатьСкриншот + "" """""" + ИмяФайла + """""""";
	Попытка
		Если ЭтоLinux Тогда
			КомандаСистемы(Команда);
		Иначе
			Если ЕстьПоддержкаАсинхронныхВызовов Тогда
				ВыполнитьКомандуОСБезПоказаЧерногоОкна(Команда, Истина, Ложь);
			Иначе
				ЗапуститьПриложение(Команда, , Истина);
			КонецЕсли;
		КонецЕсли;
		Отладка(""Команда создания скриншота="" + Команда);
	Исключение
		ТекстСообщения = ""Ошибка создания скриншота:%1 команда:%2"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ОписаниеОшибки());
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",Команда);
		Сообщить(ТекстСообщения);
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Функция СоздатьИмяФайлаДляСкриншота(Каталог)
	Возврат ДополнитьСлешВПуть(Каталог) + ""ScreenShot_"" + ПолучитьОтметкуВремениДляИмениФайла() + "".png"";
КонецФункции

&НаКлиенте
Процедура ДобавитьВЛогИнструкцииHTMLВыполненияШага(СтруткураШага = Неопределено)
	Перем КаталогOutputИнструкцияHTML;
	
	Если СкриншотСделанВСценарии Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Объект.СоздаватьИнструкциюHTML Тогда
		Возврат;
	КонецЕсли;
	
	КаталогOutputИнструкцияHTML = ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияHTML);
	Если СтруткураШага = Неопределено Тогда
		ТекИД_ВыполненногоШагаВМассиве = ТекИД_ШагаВМассиве;
		Шаги                           = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		СтруткураШага                  = Шаги[ТекИД_ШагаВМассиве];
	КонецЕсли;
	
	ИмяФайлаСкриншота = СоздатьИмяФайлаДляСкриншота(КаталогOutputИнструкцияHTML);
	СделатьСкриншот(ИмяФайлаСкриншота);
	
	ТД = Новый ЗаписьТекста(ИмяФайлаЛогаИнструкцииHTML, КодировкаТекста.UTF8, , Истина);
	ТД.ЗаписатьСтроку(""НачалоШага"");
	СтрокаШага = СтруткураШага.Имя;
	Если СтруткураШага.ШагСПараметрамиВТаблице = Истина Тогда
		Для каждого СтрПараметрыТаблицы Из СтруткураШага.ПараметрыТаблицы Цикл
			СтрокаШага = СтрокаШага + ""\n"" + СтрПараметрыТаблицы;
		КонецЦикла;
	КонецЕсли;
	
	ТД.ЗаписатьСтроку(""ИмяШага="" + СтрокаШага);
	ТД.ЗаписатьСтроку(""Скриншот="" + ИмяФайлаСкриншота);
	ТД.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВЛогИнструкцииMarkdownВыполненияШага(СтруткураШага = Неопределено)
	
	Если СкриншотСделанВСценарии Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат;
	КонецЕсли;
	
	Если СтруткураШага = Неопределено Тогда
		ТекИД_ВыполненногоШагаВМассиве = ТекИД_ШагаВМассиве;
		Шаги                           = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		СтруткураШага                  = Шаги[ТекИД_ШагаВМассиве];
	КонецЕсли;
	
	
	
	
	ИмяФайлаСкриншота = СоздатьИмяФайлаДляСкриншота(Объект.КаталогOutputИнструкцияMarkdown);
	СделатьСкриншот(ИмяФайлаСкриншота);
	
	ТД = Новый ЗаписьТекста(ИмяФайлаЛогаИнструкцииMarkdown, КодировкаТекста.UTF8, , Истина);
	
	ТД.ЗаписатьСтроку(""НачалоШага"");
	
	СтрокаШага = СтруткураШага.Имя;
	Если СтруткураШага.ШагСПараметрамиВТаблице = Истина Тогда
		Для каждого СтрПараметрыТаблицы Из СтруткураШага.ПараметрыТаблицы Цикл
			СтрокаШага = СтрокаШага + ""\n"" + СтрПараметрыТаблицы;
		КонецЦикла;
	КонецЕсли;
	
	ТД.ЗаписатьСтроку(""ИмяШага="" + СтрокаШага);
	ТД.ЗаписатьСтроку(""Скриншот="" + ИмяФайлаСкриншота);
	ТД.Закрыть();
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЗначениеДляПередачиВМетод(Значение, Тип)
	Если Тип = ""Строка"" Тогда
		Возврат """""""" + СтрЗаменить(Значение, """""""", """""""""""") + """""""";
	ИначеЕсли Тип = ""Число"" Тогда
		Возврат Значение;
	ИначеЕсли Тип = ""Дата"" Тогда
		Возврат ПреобразоватьКДатеСтроку(Значение);
	Иначе
		ТекстСообщения = ""Неизвестный Тип: %1 в ПолучитьЗначениеДляПередачиВМетод"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Тип);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьЗначениеДляПередачиВМетодСервер(Значение, Тип)
	Если Тип = ""Строка"" Тогда
		Возврат """""""" + СтрЗаменить(Значение, """""""", """""""""""") + """""""";
	ИначеЕсли Тип = ""Число"" Тогда
		Возврат Значение;
	ИначеЕсли Тип = ""Дата"" Тогда
		Возврат ПреобразоватьКДатеСтрокуСервер(Значение);
	Иначе
		ТекстСообщения = ""Неизвестный Тип: %1 в ПолучитьЗначениеДляПередачиВМетод"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Тип);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
КонецФункции

&НаСервереБезКонтекста
Функция ПреобразоватьКДатеСтрокуСервер(Знач Стр)
	НачСтр = Стр;
	//Зн = Дата(Стр);
	Год   = 0;
	Месяц = 0;
	День  = 0;
	
	Поз  = Найти(Стр, ""."");
	День = Число(Лев(Стр, Поз - 1));
	Стр = Сред(Стр, Поз + 1);
	
	Поз   = Найти(Стр, ""."");
	Месяц = Число(Лев(Стр, Поз - 1));
	Стр   = Сред(Стр, Поз + 1);
	
	Год   = Число(Стр);
	Если СтрДлина(Стр) = 2 Тогда
		Если Год < 100 Тогда
			Год = Год + 2000;
		КонецЕсли;
	КонецЕсли;
	
	Зн = Дата(Год, Месяц, День);
	
	Зн = Формат(Зн, ""ДФ=yyyyMMdd; ДП=00010101"");
	Зн = ""'"" + Зн + ""'"";
	
	Возврат Зн;
КонецФункции


&НаКлиенте
Процедура ЗапомнитьСостоянияКонтекстовДоВыполненияШага(Контекст, КонтекстСохраняемый, ИдСтроки)
	СостоянияКонтекстовДоВыполненияШага = Новый Структура;
	СостоянияКонтекстовДоВыполненияШага.Вставить(""Контекст"", СкопироватьСтруктуру(Контекст));
	СостоянияКонтекстовДоВыполненияШага.Вставить(""КонтекстСохраняемый"", СкопироватьСтруктуру(КонтекстСохраняемый));
	СостоянияКонтекстовДоВыполненияШага.Вставить(""ИдСтроки"", ИдСтроки);
	
	Ном = -1;
	Для каждого Элем Из МассивСостоянияКонтекстовДоВыполненияШага Цикл
		Ном = Ном + 1;
		Если Элем.ИдСтроки = ИдСтроки Тогда
			МассивСостоянияКонтекстовДоВыполненияШага.Удалить(Ном);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	МассивСостоянияКонтекстовДоВыполненияШага.Добавить(СостоянияКонтекстовДоВыполненияШага);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСостоянияКонтекстовПоИдСтроки(ИдСтроки)
	Для каждого Элем Из МассивСостоянияКонтекстовДоВыполненияШага Цикл
		Если Элем.ИдСтроки = ИдСтроки Тогда
			Возврат Элем;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Функция ПолучитьИдСледующегоШага(ТекШаг)
	ИдСледующегоШага = Неопределено;
	Если ТекШаг.ДопТип = ""Условие"" или ТекШаг.ДопТип = ""УсловиеИначеЕсли"" Тогда
		Если НЕ Объект.РезультатУсловия Тогда
			ИдСледующегоШага = Новый Структура(""Ид,ИскатьПоИдСтроки"",ТекШаг.ИдСледующегоШага,Истина);
		КонецЕсли;
	ИначеЕсли ТекШаг.ДопТип = ""Цикл"" Тогда
		Если НЕ Объект.РезультатУсловия Тогда
			ИдСледующегоШага = Новый Структура(""Ид,ИскатьПоИдСтроки"",ТекШаг.ИдСледующегоШага,Истина);
			Если ТекШаг.ИдСледующегоШага = Неопределено Тогда
				ИдСледующегоШага = Новый Структура(""Ид,ИскатьПоИдСтроки"",ТекШаг.ИдЦикла,Истина);
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли ТекШаг.ИдЦикла <> Неопределено Тогда
		ИдСледующегоШага = Новый Структура(""Ид,ИскатьПоИдСтроки"",ТекШаг.ИдЦикла,Истина);
	ИначеЕсли ТекШаг.ИдСледующегоШага = -1 Тогда
		ИдСледующегоШага = Новый Структура(""Ид,ИскатьПоИдСтроки"",Неопределено,Истина);
	ИначеЕсли ТекШаг.ИдСледующегоШага <> Неопределено Тогда
		ИдСледующегоШага = Новый Структура(""Ид,ИскатьПоИдСтроки"",ТекШаг.ИдСледующегоШага,Истина);
	КонецЕсли;
	
	Возврат ИдСледующегоШага;
КонецФункции

&НаКлиенте
Процедура ПоказатьКолонкуСНомеромСтрокиДерева()
	Если Не Элементы.ДеревоТестовИДСтроки.Видимость Тогда
		ПоказатьСкрытьИДСтроки(""Показать"");
	КонецЕсли;
КонецПроцедуры

//TODO в методе ВыполнитьШаг() много Возвратов раскидано по коду :( понимать код сложно
&НаКлиенте
Процедура ВыполнитьШаг()
	Если ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий Тогда
		Возврат;
	КонецЕсли;
	
	ТекИД_ВыполненногоШагаВМассиве = ТекИД_ШагаВМассиве;
	
	Шаги = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
	
	ТекШаг = Шаги[ТекИД_ШагаВМассиве];
	
	Если Объект.ВыводитьВЛогВыполнениеШагов Тогда
		ЗаписатьЛогВТекстИнформация(""Шаг"","" "" + ТекШаг.Имя);
	КонецЕсли;
	
	ИДСтрокиШага                       = ТекШаг.СтрокаШага;
	ИДСтрокиСценария                   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
	РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
	РезультатПрохожденияТестовШагов    = РезультатПрохожденияТестовСценария.РезультатПрохожденияТестовШагов;
	
	СтрокаСценария = ПолучитьСтрокуСценарияИзДанныхФормы(ИДСтрокиСценария);
	СтрокаШага     = ПолучитьСтрокуШагаИзДанныхФормы(ИДСтрокиШага);
	
	Если СтрокаШага.Брейкпоинт и Не Объект.РежимВыполненияОдногоШага Тогда
		СделатьСообщение(""Остановка на брейкпоинте."");
		ПрекратитьВыполнениеВсехСценариев = Истина;
		ПерейтиКВыполнениюСледующегоСценария();
		Возврат;
	КонецЕсли;
	
	Если ПрекратитьВыполнениеДанногоСценария Тогда
		ПрекратитьВыполнениеДанногоСценария = Ложь;
		ПерейтиКВыполнениюСледующегоСценария();
		Возврат;
	КонецЕсли;
	
	РезультатПрохожденияТестовСценария.Вставить(""НомерСтрокиВФиче"", СтрокаСценария.НомерСтрокиВФиче);
	
	РезультатПрохожденияШага = Новый Структура;
	РезультатПрохожденияШага.Вставить(""Имя"", СтрокаШага.Имя);
	РезультатПрохожденияШага.Вставить(""ВремяНачала"", ТекущаяУниверсальнаяДатаВМиллисекундах());
	РезультатПрохожденияШага.Вставить(""НомерСтрокиВФиче"", СтрокаШага.НомерСтрокиВФиче);
	РезультатПрохожденияШага.Вставить(""ИДСтроки"", ИДСтрокиШага);
	РезультатПрохожденияШага.Вставить(""ЭтоШагКонтекста"", ТекШаг.ЭтоШагКонтекста);
	
	РезультатПрохожденияТестовШагов.Добавить(РезультатПрохожденияШага);
	
	АдресСнипета = ТекШаг.АдресСнипета;
	Если СокрЛП(АдресСнипета) = """" Тогда
		ОстановитьЗаписьВидеоОдногоШага();
		
		Если ПризнакРучногоВыполненияШага Тогда
			
			СтрокаШага.Статус = ""Success"";
			СтрокаШага.ТипКартинки = 4;
			ИдСледующегоШага = ПолучитьИдСледующегоШага(ТекШаг);
			РезультатПрохожденияШага.Вставить(""Статус"", СтрокаШага.Статус);
			РезультатПрохожденияШага.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
			
			ПерейтиКВыполнениюСледующегоШага(, , ИдСледующегоШага);
			Возврат;
		КонецЕсли;
		
		СтрокаШага.Статус = ""Pending"";
		СтрокаШага.ТипКартинки = 6;
		СтрокаСценария.Статус         = СтрокаШага.Статус;
		ТекстСообщения = ""Пустой адрес снипета у шага: %1"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ТекШаг.Имя);
		ОписаниеОшибки = ТекстСообщения;
		
		ЗаписатьСтрокуВТекстовыйЛог(""Pending: "" + ОписаниеОшибки);
		
		Если Объект.ПриравниватьPendingКFailed Тогда
			СтатусЗапускаСценариев = Ложь;
			Если Объект.ДелатьЛогОшибокВТекстовыйФайл Тогда
				ТекстСообщения = ""Шаг сценария не реализован."";
				ЗаписатьЛогОшибки(СтрокаСценария,СтрокаШага,ТекстСообщения,Неопределено,ОписаниеОшибки);
			КонецЕсли;
		КонецЕсли;
		
		РезультатПрохожденияТестовСценария.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
		РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"", ОписаниеОшибки);
		РезультатПрохожденияШага.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
		РезультатПрохожденияШага.Вставить(""ОписаниеОшибки"", ОписаниеОшибки);
		РезультатПрохожденияШага.Вставить(""Статус"", СтрокаШага.Статус);
		
		СделатьСообщение(ОписаниеОшибки);
		
		БылаОшибка     = Ложь;
		ОписаниеОшибки = """";
		ДействияПослеЗавершенияСценария(СтрокаСценария, БылаОшибка, ОписаниеОшибки);
		Если БылаОшибка Тогда
			СтатусЗапускаСценариев = Ложь;
			СтрокаСценария.Статус  = ""Failed"";
			РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"", ОписаниеОшибки);
			
			ЗаписатьСтрокуВТекстовыйЛог(""Failed: "" + ОписаниеОшибки);
			
			ПроверитьФлагОстановкаПриВозникновенииОшибки();
		КонецЕсли;
		
		ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Истина;
		
		Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
			СделатьСкриншотВозникновенияОшибки(СтрокаШага, СтрокаСценария, РезультатПрохожденияТестовСценария);
		Иначе
			//выполняем следующий сценарий
			ПерейтиКВыполнениюСледующегоСценария();
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	УниверсальноеПолноеИмяФайлаШага = УниверсальноеПолноеИмяФайла(АдресСнипета, Истина);
	
	ИД = МассивИменКонтекстовОбработок.Найти(УниверсальноеПолноеИмяФайлаШага);
	Если ИД = Неопределено Тогда
		БылиОшибки = Ложь;
		Файл = Новый Файл(АдресСнипета);
		ПодключитьКонтекстОбработкиКлиент(Файл);
		ИД = МассивИменКонтекстовОбработок.Найти(УниверсальноеПолноеИмяФайлаШага);
	КонецЕсли;
	
	ОбработкаТеста = ТаблицаКонтекстовОбработок[ИД].Обработка;
	Если ОбработкаТеста = Неопределено Тогда
		Файл = Новый Файл(АдресСнипета);
		ПодключитьКонтекстОбработкиКлиент(Файл);
		ОбработкаТеста = ТаблицаКонтекстовОбработок[ИД].Обработка;
		Если ОбработкаТеста = Неопределено Тогда
			ТекстСообщения = ""Не смог подключить обработку <%1>"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",АдресСнипета);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
	КонецЕсли;
	
	КонтекстОтладки = ТаблицаОбработокДляОтладки.Получить(ТекШаг.СтрокаРеальнойПроцедуры);
	Если КонтекстОтладки <> Неопределено Тогда
		ОбработкаТеста = КонтекстОтладки.Обработка;
	КонецЕсли;
	
	ИмяПроцедуры     = ТекШаг.СтрокаРеальнойПроцедуры;
	СписокАргументов = ТекШаг.ЗначенияПараметров;
	
	МассивПараметров = ПолучитьМассивПараметровИзСписокАргументов(СписокАргументов);
	
	Если СтрокаШага.ШагСПараметрамиВТаблице = Истина Тогда
		ПарамТаблица = Новый Массив;
		МассивПараметров.Добавить(ПарамТаблица);
		
		ПодчиненныеСтроки = СтрокаШага.ПолучитьЭлементы();
		Для каждого СтрокиТаблицы Из ПодчиненныеСтроки Цикл
			Если ЗначениеЗаполнено(СтрокиТаблицы.Тип) Тогда
				//значит это уже не строка таблицы
				Прервать;
			КонецЕсли;
			
			СтруктураПарамТаблица = Новый Структура;
			
			Если (СтрокиТаблицы.СтрокаПараметровШагаВВидеТаблицы <> Истина) или (НЕ ЗначениеЗаполнено(СтрокиТаблицы.Имя)) Тогда
				ПарамТаблица = Новый Массив;
				МассивПараметров.Добавить(ПарамТаблица);
				Продолжить;
			КонецЕсли;
			
			НомерКолонки = 0;
			Для каждого Колонка Из СтрокиТаблицы.ПараметрыТаблицы Цикл
				НомерКолонки       = НомерКолонки + 1;
				СтруктураПараметра = Колонка.Значение;
				Значение           = ПолучитьЗначениеДляПередачиВМетод(СтруктураПараметра.Значение, СтруктураПараметра.Тип);
				Значение           = Вычислить(Значение);
				
				СтруктураПарамТаблица.Вставить(""Кол"" + XMlСтрока(НомерКолонки), Значение);
			КонецЦикла;
			
			ПарамТаблица.Добавить(СтруктураПарамТаблица);
		КонецЦикла;
		
		Если ПарамТаблица.Количество() = 0 Тогда
			//значит эта таблица пустая, её передавать не надо
			МассивПараметров.Удалить(МассивПараметров.Количество()-1);
		КонецЕсли;
	КонецЕсли;
	
	СтрОшибка       = Неопределено;
	ШагВыполнен     = Ложь;
	ШагНеРеализован = Ложь;
	Попытка
		
		Если Объект.РежимВыполненияСценарияСВыбранногоШагаССохранениемКонтекстов = Истина Тогда
			СохраненнаяСтруктура = ПолучитьСостоянияКонтекстовПоИдСтроки(СтрокаШага.ИдСтроки);
			Если СтрокаШага.ВыполнятьСценарийСЭтогоШага = Истина Тогда
				Если СохраненнаяСтруктура <> Неопределено Тогда
					ОбъектКонтекст            = СкопироватьСтруктуру(СохраненнаяСтруктура.Контекст);
					ОбъектКонтекстСохраняемый = СкопироватьСтруктуру(СохраненнаяСтруктура.КонтекстСохраняемый);
				Иначе
					ЗапомнитьСостоянияКонтекстовДоВыполненияШага(ОбъектКонтекст, ОбъектКонтекстСохраняемый, СтрокаШага.ИдСтроки);
				КонецЕсли;
			Иначе
				//значит в этот раз запустить с этого шага не получится, надо запомнить контекст для последующих запусков
				ЗапомнитьСостоянияКонтекстовДоВыполненияШага(ОбъектКонтекст, ОбъектКонтекстСохраняемый, СтрокаШага.ИдСтроки);
			КонецЕсли;
		ИначеЕсли Объект.СохранятьКонтекстыПередВыполнениемШагов Тогда
			ЗапомнитьСостоянияКонтекстовДоВыполненияШага(ОбъектКонтекст, ОбъектКонтекстСохраняемый, СтрокаШага.ИдСтроки);
		КонецЕсли;
		
		
		ОбработкаТеста.Контекст            = ОбъектКонтекст;
		ОбработкаТеста.КонтекстСохраняемый = ОбъектКонтекстСохраняемый;
		
		Если Объект.ДелатьЛогВыполненияСценариевВЖР Тогда
			ЗаписатьЛогВЖРПередВыполнениемШага(ТекШаг.Имя);
		КонецЕсли;
		
		СкриншотСделанВСценарии = Ложь;
		
		//вызов процедуры шага
		ВсёЕщёИдётВыполнениеШагов = ВсёЕщёИдётВыполнениеШагов + 1;
		ВызватьМетод(ОбработкаТеста, ИмяПроцедуры, МассивПараметров);
		ВсёЕщёИдётВыполнениеШагов = ВсёЕщёИдётВыполнениеШагов - 1;
		
		ОбъектКонтекст            = ОбработкаТеста.Контекст;
		ОбъектКонтекстСохраняемый = ОбработкаТеста.КонтекстСохраняемый;
		
		ШагВыполнен = Истина;
		
		Если НЕ ТекШаг.ЭтоШагКонтекста Тогда
			ДобавитьВЛогИнструкцииHTMLВыполненияШага(ТекШаг);
			ДобавитьВЛогИнструкцииMarkdownВыполненияШага(ТекШаг);
		КонецЕсли;
		
	Исключение
		Отладка(""ОписаниеОшибки()="" + ОписаниеОшибки());
		ОписаниеОшибкиСтр = ОписаниеОшибки();
		Если Найти(ОписаниеОшибкиСтр, ""}: Не реализовано."") > 0 Тогда //тогда это Pending
			ТекстСообщения = ""Шаг (%1) не реализован."";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ТекШаг.Имя);
			
			ОписаниеОшибкиШага = ТекстСообщения;
			СделатьСообщение(ОписаниеОшибкиШага);
			СтрОшибка = ""Не реализовано."";
			ШагНеРеализован = Истина;
			
			ЗаписатьСтрокуВТекстовыйЛог(""Pending: "" + ТекстСообщения);
			
			ОстановитьЗаписьВидеоОдногоШага();
			
			Если Объект.ПриравниватьPendingКFailed Тогда
				Если Объект.ДелатьЛогОшибокВТекстовыйФайл Тогда
					ТекстСообщения = ""Шаг сценария не реализован."";
					ЗаписатьЛогОшибки(СтрокаСценария,СтрокаШага,ТекстСообщения,Неопределено,ОписаниеОшибкиШага);
				КонецЕсли;
			КонецЕсли;
		Иначе
			//значит возникла ошибка
			ОписаниеОшибкиШага = ПолучитьТекстСообщенияПользователю(""$Шаг$"") + "" ("" + ТекШаг.Имя + "") "" + ПолучитьТекстСообщенияПользователю(""$не выполнен$"") +""."";
			СделатьСообщение(ОписаниеОшибкиШага);
			ИнфоОбОшибке = Неопределено;
			СтрОшибка = СформироватьОписаниеОшибки(ОписаниеОшибкиСтр, АдресСнипета, ИмяПроцедуры,ИнфоОбОшибке);
			СделатьСообщение(СтрОшибка);
			
			ОбновитьКешДанныхФормыЕслиЭтоНеобходимо(Неопределено,ИДСтрокиСценария,Истина);
			СтрокаШага = ПолучитьСтрокуШагаИзДанныхФормы(ТекШаг.СтрокаШага);
			
			ЭтоПример          = Ложь;
			ЭтоШагКонтекста    = Ложь;
			СтрокаРодителяШага = НайтиСтрокуСценарияЧерезРодителя(СтрокаШага, ЭтоПример,ЭтоШагКонтекста);
			
			Если ЭтоШагКонтекста Тогда
				ВозниклаОшибкаВШагеКонтекста = Истина;
			КонецЕсли;
			
			СтрокаСценария.ТекстОшибки = СтрОшибка;
			СтрокаШага.ТекстОшибки     = СтрОшибка;
			Если ГлобальныеЗначенияТаблиц.Свойство(""ТаблицаЭталон"") Тогда
				Если СтрокаШага.ПроизвольныеЗначения = Неопределено Тогда
					СтрокаШага.ПроизвольныеЗначения = Новый Структура;
				КонецЕсли;
				СтрокаШага.ПроизвольныеЗначения.Вставить(""ТаблицаЭталон"",ГлобальныеЗначенияТаблиц.ТаблицаЭталон);
				СтрокаШага.ПроизвольныеЗначения.Вставить(""ТаблицаТекущееЗначение"",ГлобальныеЗначенияТаблиц.ТаблицаТекущееЗначение);
			КонецЕсли;
			
			Если Объект.ДелатьЛогВыполненияСценариевВТекстовыйФайл Тогда
				ТекстСообщения = ""Шаг (%1) не выполнен. Строка дерева №%2"";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ТекШаг.Имя);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",XMlСтрока(ТекШаг.ИдСтроки));
				ЗаписатьСтрокуВТекстовыйЛог(ТекстСообщения);
				ЗаписатьСтрокуВТекстовыйЛог(""Failed: "" + СтрОшибка);
			КонецЕсли;
			
			ОстановитьЗаписьВидеоОдногоШага();
			
			Если Объект.ДелатьЛогОшибокВТекстовыйФайл Тогда
				ЗаписатьЛогОшибки(СтрокаСценария,СтрокаШага,СтрОшибка,ИнфоОбОшибке,ОписаниеОшибкиШага);
			КонецЕсли;
			
			Если Объект.ПоказыватьНомерСтрокиДереваПриВозникновенииОшибки Тогда
				ПоказатьКолонкуСНомеромСтрокиДерева();
			КонецЕсли;
		КонецЕсли;
		
		
	КонецПопытки;
	
	
	ИдСледующегоШага = ПолучитьИдСледующегоШага(ТекШаг);
	
	
	РезультатПрохожденияШага.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
	Если ШагВыполнен Тогда
		Если Не Объект.ОстановитьВыполнениеШагов Тогда
			СтрокаШага.Статус = ""Success"";
			СтрокаШага.ТипКартинки = 4;
			РезультатПрохожденияШага.Вставить(""Статус"", СтрокаШага.Статус);
		КонецЕсли;
		//РезультатПрохожденияТестовШагов.Добавить(РезультатПрохожденияШага);
		
		ПерейтиКВыполнениюСледующегоШага(, , ИдСледующегоШага);
	Иначе
		
		СтрокаСценария = ПолучитьСтрокуСценарияИзДанныхФормы(ИДСтрокиСценария);
		ОбновитьКешДанныхФормыЕслиЭтоНеобходимо(СтрокаСценария,ИДСтрокиСценария);
		
		СтрокаШага = ПолучитьСтрокуШагаИзДанныхФормы(ИДСтрокиШага);
		
		Если ШагНеРеализован Тогда
			СтрокаШага.Статус = ""Pending"";
			СтрокаШага.ТипКартинки = 6;
			Если Объект.ПриравниватьPendingКFailed Тогда
				СтатусЗапускаСценариев = Ложь;
			КонецЕсли;
		Иначе
			СтатусЗапускаСценариев = Ложь;
			СтрокаШага.Статус      = ""Failed"";
			СтрокаШага.ТипКартинки = 5;
			ПроверитьФлагОстановкаПриВозникновенииОшибки();
		КонецЕсли;
		РезультатПрохожденияШага.Вставить(""ОписаниеОшибки"", СтрОшибка);
		РезультатПрохожденияШага.Вставить(""Статус"", СтрокаШага.Статус);
		РезультатПрохожденияШага.Вставить(""НомерСтрокиВФиче"", СтрокаШага.НомерСтрокиВФиче);
		
		РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"", СтрОшибка);
		РезультатПрохожденияТестовСценария.Вставить(""НомерСтрокиВФиче"", СтрокаСценария.НомерСтрокиВФиче);
		
		СтрокаСценария.Статус         = СтрокаШага.Статус;
		
		БылаОшибка     = Ложь;
		ОписаниеОшибки = """";
		ПризнакРучногоВыполненияШага = Ложь;
		ДействияПослеЗавершенияСценария(СтрокаСценария, БылаОшибка, ОписаниеОшибки);
		//РезультатПрохожденияТестовШагов.Добавить(РезультатПрохожденияШага);
		
		Если БылаОшибка Тогда
			СтатусЗапускаСценариев = Ложь;
			СтрокаСценария.Статус  = ""Failed"";
			РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"", ОписаниеОшибки);
			
			ЗаписатьСтрокуВТекстовыйЛог(""Ошибка в процедуре ПередОкончаниемСценария()."");
			ЗаписатьСтрокуВТекстовыйЛог(""Описание ошибки: "" + ОписаниеОшибки);
			
			ПроверитьФлагОстановкаПриВозникновенииОшибки();
		КонецЕсли;
		
		ДобавитьШагиВРезультатПрохожденияТестовШаговКоторыеНеВыполнялись(Шаги, ТекИД_ШагаВМассиве, РезультатПрохожденияТестовШагов);
		ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Истина;
		
		ОстановитьЗаписьВидеоОдногоШага();
		ПризнакРучногоВыполненияШага = Ложь;
		
		РезультатПрохожденияТестовСценария.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
		
		Если СтрокаСценария.Статус = ""Failed"" и Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
			СделатьСкриншотВозникновенияОшибки(СтрокаШага, СтрокаСценария, РезультатПрохожденияТестовСценария);
		Иначе
			ПерейтиКВыполнениюСледующегоСценария();
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьТекущемуШагуФлагЧтоОнДолженСчитатьсяУпавшим(ОписаниеОшибки)
	Если ТекИД_ШагаВМассиве = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ВсеСценарииВыполнены() Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекИД_ШагаВМассиве >= 0 Тогда
		Шаги   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		ТекШаг = Шаги[ТекИД_ШагаВМассиве];
		ТекШаг.Вставить(""ШагСчитаетсяУпавшим"", Истина);
		ТекШаг.Вставить(""ОписаниеОшибки"", ОписаниеОшибки);
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ТранзакцияАктивнаСервер()
	Возврат ТранзакцияАктивна();
КонецФункции

//работа с видео - начало

&НаКлиенте
Функция ЗагрузитьФайлВМассив(Знач ИмяФайла, РезМассив = Неопределено)
	Если РезМассив <> Неопределено Тогда
		Массив = РезМассив;
	Иначе		
		Массив = Новый Массив;
	КонецЕсли;
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла, ""UTF-8"");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		Массив.Добавить(Стр);
	КонецЦикла;
	
	Текст.Закрыть();
	
	Возврат Массив;
КонецФункции

&НаКлиенте
Функция ПолучитьПараметрыЗаписиВидео()
	ПараметрыВидео = Новый Структура;
	ПараметрыВидео.Вставить(""КаталогOutputИнструкцияВидео"", Объект.КаталогOutputИнструкцияВидео);
	ПараметрыВидео.Вставить(""ЗаписьВидеоКомандаНачатьЗаписьВидео"", Объект.ЗаписьВидеоКомандаНачатьЗаписьВидео);
	ПараметрыВидео.Вставить(""ЗаписьВидеоФайлКурсораМышки"", Объект.ЗаписьВидеоФайлКурсораМышки);
	ПараметрыВидео.Вставить(""ЗаписьВидеоКаталогДляВременныхФайлов"", Объект.ЗаписьВидеоКаталогДляВременныхФайлов);
	ПараметрыВидео.Вставить(""ЗаписьВидеоФайлВодянойЗнак"", Объект.ЗаписьВидеоФайлВодянойЗнак);
	ПараметрыВидео.Вставить(""ЗаписьВидеоКомандаFfmpeg"", Объект.ЗаписьВидеоКомандаFfmpeg);
	ПараметрыВидео.Вставить(""ЗаписьВидеоКомандаConvert"", Объект.ЗаписьВидеоКомандаConvert);
	ПараметрыВидео.Вставить(""ЗаписьВидеоКаталогМузыки"", Объект.ЗаписьВидеоКаталогМузыки);
	ПараметрыВидео.Вставить(""ЗаписьВидеоДелатьНаложениеTTS"", Объект.ЗаписьВидеоДелатьНаложениеTTS);
	ПараметрыВидео.Вставить(""ЗаписьВидеоПутьКДвижкуTTS"", Объект.ЗаписьВидеоПутьКДвижкуTTS);
	ПараметрыВидео.Вставить(""ЗаписьВидеоИмяTTS"", Объект.ЗаписьВидеоИмяTTS);
	ПараметрыВидео.Вставить(""ЗаписьВидеоСловарьЗамен"", Объект.ЗаписьВидеоСловарьЗамен);
	ПараметрыВидео.Вставить(""ЗаписьВидеоЭкранШирина"", Объект.ЗаписьВидеоЭкранШирина);
	ПараметрыВидео.Вставить(""ЗаписьВидеоЭкранВысота"", Объект.ЗаписьВидеоЭкранВысота);
	ПараметрыВидео.Вставить(""ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм"", Объект.ЗаписьВидеоПодсвечиватьАктивныеЭлементыФорм);
	ПараметрыВидео.Вставить(""ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы"", Объект.ЗаписьВидеоПеремещатьКурсорМышкиКАктивномуЭлементуФормы);
	
	
	ПараметрыВидео.Вставить(""ЗаписьВидеоКоличествоКадров"", Объект.ЗаписьВидеоКоличествоКадров);
	ПараметрыВидео.Вставить(""DebugLog"", Объект.DebugLog);
	ПараметрыВидео.Вставить(""Ванесса"", ЭтаФорма);
	ПараметрыВидео.Вставить(""КаталогИнструментов"", Объект.КаталогИнструментов);
	ПараметрыВидео.Вставить(""ЕстьПоддержкаАсинхронныхВызовов"", ЕстьПоддержкаАсинхронныхВызовов);
	
	ПараметрыВидео.Вставить(""ЭтоИнициализация"", Ложь);
	
	
	
	//уменьшим разрешение экрана, если оно указано больше чем реальное
	ИнформацияЭкранаКлиента = Вычислить(""ПолучитьИнформациюЭкрановКлиента()[0]"");
	Ширина = ИнформацияЭкранаКлиента.Ширина;
	Высота = ИнформацияЭкранаКлиента.Высота;
	Если (Ширина % 2) = 1 Тогда //нечетное
		Ширина = Ширина - 1;
	КонецЕсли;
	Если (Высота % 2) = 1 Тогда //нечетное
		Высота = Высота - 1;
	КонецЕсли;
	
	Если Ширина < Объект.ЗаписьВидеоЭкранШирина Тогда
		ПараметрыВидео.Вставить(""ЗаписьВидеоЭкранШирина"", Ширина);
	КонецЕсли;
	Если Высота < Объект.ЗаписьВидеоЭкранВысота Тогда
		ПараметрыВидео.Вставить(""ЗаписьВидеоЭкранВысота"", Высота);
	КонецЕсли;
	
	
	Возврат ПараметрыВидео;
КонецФункции

&НаКлиенте
Процедура ЗавершитьЗаписьВидео()
	Если НЕ Объект.СоздаватьИнструкциюВидео Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВидео = ПолучитьПараметрыЗаписиВидео();
	ПараметрыВидео.Вставить(""МассивСценариевДляВыполнения"", МассивСценариевДляВыполнения);
	ПараметрыВидео.Вставить(""МассивСтрокДереваДанныеФормы"", МассивСтрокДереваДанныеФормы);
	
	Если СтатусЗапускаСценариев Тогда //если были упавшие шаги, то делать видео не надо
		ПодключитьБиблиотекуРаботыСВидео();
		МодульРаботыСВидео.ЗавершитьЗаписьВидео(ПараметрыВидео);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОстановитьЗаписьВидеоОдногоШага()
	Если Не Объект.СоздаватьИнструкциюВидео Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Объект.ИдетЗаписьВидео Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВидео = ПолучитьПараметрыЗаписиВидео();
	ПодключитьБиблиотекуРаботыСВидео();
	МодульРаботыСВидео.ОстановитьЗаписьВидеоОдногоШага(ПараметрыВидео);
	Объект.ИдетЗаписьВидео = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура НачатьЗаписьВидеоОдногоШага(ТекИД_СценарияВМассиве, ТекИД_ШагаВМассиве, ТекШаг)
	Если Не Объект.СоздаватьИнструкциюВидео Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ИдетЗаписьВидео Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.РежимВыполненияОдногоШага Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекШаг.Свойство(""ИгнорироватьШагВАвтоинструкции"") Тогда
		Если ТекШаг.ИгнорироватьШагВАвтоинструкции Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыВидео = ПолучитьПараметрыЗаписиВидео();
	ПараметрыВидео.Вставить(""ТекИД_СценарияВМассиве"", ТекИД_СценарияВМассиве);
	ПараметрыВидео.Вставить(""ТекИД_ШагаВМассиве"", ТекИД_ШагаВМассиве);
	ПараметрыВидео.Вставить(""ТекШаг"", ТекШаг);
	
	ПодключитьБиблиотекуРаботыСВидео();
	МодульРаботыСВидео.НачатьЗаписьВидеоОдногоШага(ПараметрыВидео);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПодготовкуКЗаписиВидео()
	
	//проверим разрешение экрана
	
	
	ПараметрыВидео = ПолучитьПараметрыЗаписиВидео();
	ПараметрыВидео.Вставить(""ЭтоИнициализация"", Истина);
	ПодключитьБиблиотекуРаботыСВидео();
	МодульРаботыСВидео.Инициализация(ПараметрыВидео);
	
	ПараметрыВидео.Вставить(""МассивСценариевДляВыполнения"", МассивСценариевДляВыполнения);
	
КонецПроцедуры

//работа с видео - окончание

&НаКлиенте
Функция ОпределитьВозможнуюСледующуюСтрокуДереваПоЭлементуДерева(ЭлементДерева)
	ТекРодитель          = ЭлементДерева.ПолучитьРодителя();
	Если ТекРодитель = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	ЭлементыРодителя     = ТекРодитель.ПолучитьЭлементы();
	ИдВКоллекцииРодителя = ЭлементыРодителя.Индекс(ЭлементДерева);
	
	Если ЭлементыРодителя.Количество()-1 >= (ИдВКоллекцииРодителя+1) Тогда
		//значит это следующая строка
		Возврат ЭлементыРодителя[ИдВКоллекцииРодителя+1].ПолучитьИдентификатор();
	КонецЕсли;
	
	Возврат ОпределитьВозможнуюСледующуюСтрокуДереваПоЭлементуДерева(ТекРодитель);
	
КонецФункции

&НаКлиенте
Процедура ОпределитьСледующуюСтрокуДереваДляВыполнения(ЭлементыДерево)
	Если Элементы.ДеревоТестов.ТекущиеДанные.ДопТип = ""Условие""
		Или Элементы.ДеревоТестов.ТекущиеДанные.ДопТип = ""УсловиеИначеЕсли""
		Или  Элементы.ДеревоТестов.ТекущиеДанные.ДопТип = ""Цикл""	 Тогда
		Если НЕ Объект.РезультатУсловия Тогда
			Элементы.ДеревоТестов.ТекущаяСтрока = ОпределитьВозможнуюСледующуюСтрокуДереваПоЭлементуДерева(Элементы.ДеревоТестов.ТекущиеДанные);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ТекРодитель = Элементы.ДеревоТестов.ТекущиеДанные.ПолучитьРодителя();
	Если ТекРодитель.ДопТип = ""Цикл"" Тогда
		ЭлементыРодителя = ТекРодитель.ПолучитьЭлементы();
		ЭлементыСтроки   = Элементы.ДеревоТестов.ТекущиеДанные.ПолучитьЭлементы();
		Если ЭлементыРодителя.Индекс(Элементы.ДеревоТестов.ТекущиеДанные) = ЭлементыРодителя.Количество()-1
			И    ЭлементыСтроки.Количество() = 0
			Тогда
			Элементы.ДеревоТестов.ТекущаяСтрока = ТекРодитель.ПолучитьИдентификатор();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Пока Истина Цикл
		ТекНомерСтроки                      = Элементы.ДеревоТестов.ТекущаяСтрока;
		Элементы.ДеревоТестов.ТекущаяСтрока = Элементы.ДеревоТестов.ТекущаяСтрока + 1;
		Если Элементы.ДеревоТестов.ТекущаяСтрока = Неопределено Тогда
			Элементы.ДеревоТестов.ТекущаяСтрока = ТекНомерСтроки;
			Прервать;
		КонецЕсли;
		Если Элементы.ДеревоТестов.ТекущиеДанные.СтрокаПараметровШагаВВидеТаблицы = Истина Тогда
			Продолжить;
		ИначеЕсли Элементы.ДеревоТестов.ТекущиеДанные.Тип = ""Область"" Тогда
			Если НЕ ЗначениеЗаполнено(Элементы.ДеревоТестов.ТекущиеДанные.ДопТип) Тогда
				Продолжить;
			КонецЕсли;
			
		ИначеЕсли Элементы.ДеревоТестов.ТекущиеДанные.Тип = ""ШагСценарий"" Тогда
			Продолжить;
		ИначеЕсли Элементы.ДеревоТестов.ТекущиеДанные.Тип = ""Сценарий"" Тогда
			Продолжить;
		КонецЕсли;
		
		РазвернутьСтрокуДерева(Элементы.ДеревоТестов.ТекущиеДанные);
		
		Прервать;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура СделатьСообщениеВсеСценарииОбработаны()
	Если СтатусЗапускаСценариев Тогда
		СделатьСообщение(ПолучитьТекстСообщенияПользователю(""$Выполнение сценариев закончено. Ошибок не было.$""));
	Иначе
		СделатьСообщение(ПолучитьТекстСообщенияПользователю(""$Выполнение сценариев закончено. БЫЛИ ОШИБКИ.$""));
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиВыполненияСценариевОбработчикОжидания()
	ФлагСценарииВыполнены = Истина;
	Если ЗначениеЗаполнено(ФайлФлагВыполненияСценариев) Тогда
		ЗТ = Новый ЗаписьТекста(ФайлФлагВыполненияСценариев,""UTF-8"",,Истина);
		ЗТ.ЗаписатьСтроку("""");
		ЗТ.Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УстановитьФлагиВыполненияСценариев()
	ПодключитьОбработчикОжидания(""УстановитьФлагиВыполненияСценариевОбработчикОжидания"",0.1,Истина);
	Если Объект.РежимСамотестирования Тогда
		ПодключитьОбработчикОжидания(""РазвернутьДерево"", 0.2, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКВыполнениюСледующегоСценария()
	
	ОстановитьЗаписьВидеоОдногоШага();
	ПризнакРучногоВыполненияШага = Ложь;
	
	Если ПрекратитьВыполнениеВсехСценариев Тогда
		СделатьСообщениеВсеСценарииОбработаны();
		Объект.ИдетВыполнениеСценариев = Ложь;
		ОбновитьСтатусКнопкиВыполнитьСценарии();
		УстановитьФлагиВыполненияСценариев();
		Возврат;
	КонецЕсли;
	
	Если Объект.РежимВыполненияОдногоШага Тогда
		Если ТекИД_СценарияВМассиве >= 0 Тогда
			Объект.ИдетВыполнениеСценариев = Ложь;
			ОбновитьСтатусКнопкиВыполнитьСценарии();
			ОпределитьСледующуюСтрокуДереваДляВыполнения(Элементы.ДеревоТестов);
			УстановитьФлагиВыполненияСценариев();
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ТекИД_СценарияВМассиве = ТекИД_СценарияВМассиве + 1;
	
	ПодключитьОбработчикОжидания(""ВыполнинтьСценарийАссинхронноТаймер"", Объект.ИнтервалВыполненияШага, Истина);
КонецПроцедуры

&НаКлиенте
Процедура АктивизироватьСледующуюСтрокуДерева()
	Шаги = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
	Если (Шаги.Количество() - 1) >= ТекИД_ШагаВМассиве Тогда
		Если Объект.РежимВыполненияОдногоШага Тогда
			СтрокаШага = НайтиСтрокуДереваПоДаннымПоиска(СтруктураПоискаСтрокДерева.ДанныеПоискаСтрокиШага);
			Элементы.ДеревоТестов.ТекущаяСтрока = СтрокаШага.ПолучитьИдентификатор();
		Иначе
			СтрокаШага = МассивСтрокДереваДанныеФормы[Шаги[ТекИД_ШагаВМассиве].СтрокаШага];
			Элементы.ДеревоТестов.ТекущаяСтрока = СтрокаШага.ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПерейтиКВыполнениюСледующегоШага(ВыполнитьШагЧерезТаймер = Неопределено, НадоОбновитьСтатусШага = Ложь, ИдСледующегоШага = Неопределено)
	Если Объект.ОстановитьВыполнениеШагов Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекИД_СценарияВМассиве = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ПрекратитьВыполнениеВсехСценариев Тогда
		ПерейтиКВыполнениюСледующегоСценария();
		Возврат;
	КонецЕсли;
	
	Если (ТекИД_СценарияВМассиве <> Неопределено) И (ТекИД_СценарияВМассиве >= 0) 
			И (ТекИД_ШагаВМассиве >= 0) И Не ВсеСценарииВыполнены() Тогда
		
		Шаги   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		ТекШаг = Шаги[ТекИД_ШагаВМассиве];
		
		Если ТекШаг.ШагСчитаетсяУпавшим Тогда
			СтатусЗапускаСценариев = Ложь;
			
			ИДСтрокиШага                       = ТекШаг.СтрокаШага;
			ИДСтрокиСценария                   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
			РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
			РезультатПрохожденияТестовШагов    = РезультатПрохожденияТестовСценария.РезультатПрохожденияТестовШагов;
			
			СтрокаШага     = ПолучитьСтрокуШагаИзДанныхФормы(ИДСтрокиШага);
			СтрокаСценария = ПолучитьСтрокуСценарияИзДанныхФормы(ИДСтрокиСценария);
			
			СтрокаШага.Статус      = ""Failed"";
			СтрокаШага.ТипКартинки = 5;
			СтрокаСценария.Статус  = СтрокаШага.Статус;
			АдресСнипета           = ТекШаг.АдресСнипета;
			ИмяПроцедуры           = ТекШаг.СтрокаРеальнойПроцедуры;
			
			ТекстСообщения = ""Шаг (%1) не выполнен."";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ТекШаг.Имя );
			СделатьСообщение(ТекстСообщения);
			
			Если ЗначениеЗаполнено(ТекШаг.ОписаниеОшибки) Тогда
				ОписаниеОшибки = ТекШаг.ОписаниеОшибки;
			Иначе
				ОписаниеОшибки = ОписаниеОшибки();
			КонецЕсли;
			
			ИнфоОбОшибке = Неопределено;
			ОписаниеОшибки = СформироватьОписаниеОшибки(ОписаниеОшибки, АдресСнипета, ИмяПроцедуры,ИнфоОбОшибке);
			СтрокаСценария.ТекстОшибки = ОписаниеОшибки;
			СтрокаШага.ТекстОшибки     = ОписаниеОшибки;
			
			РезультатПрохожденияШага = РезультатПрохожденияТестовШагов[РезультатПрохожденияТестовШагов.Количество() - 1];
			
			РезультатПрохожденияТестовСценария.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
			РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"", ОписаниеОшибки);
			РезультатПрохожденияТестовСценария.Вставить(""НомерСтрокиВФиче"", СтрокаСценария.НомерСтрокиВФиче);
			РезультатПрохожденияШага.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
			РезультатПрохожденияШага.Вставить(""ОписаниеОшибки"", ОписаниеОшибки);
			РезультатПрохожденияШага.Вставить(""Статус"", СтрокаШага.Статус);
			РезультатПрохожденияШага.Вставить(""НомерСтрокиВФиче"", СтрокаШага.НомерСтрокиВФиче);
			
			СделатьСообщение(ОписаниеОшибки);
			
			ОписаниеОшибкиШага = ПолучитьТекстСообщенияПользователю(""$Шаг$"") + "" ("" + ТекШаг.Имя + "") "" + ПолучитьТекстСообщенияПользователю(""$не выполнен$"") +""."";
			Если Объект.ДелатьЛогОшибокВТекстовыйФайл Тогда
				ЗаписатьЛогОшибки(СтрокаСценария,СтрокаШага,ОписаниеОшибки,ИнфоОбОшибке,ОписаниеОшибкиШага);
			КонецЕсли;
			
			ЗаписатьСтрокуВТекстовыйЛог(""Failed: "" + ОписаниеОшибки);
			
			БылаОшибка     = Ложь;
			ОписаниеОшибки = """";
			ДействияПослеЗавершенияСценария(СтрокаСценария, БылаОшибка, ОписаниеОшибки);
			
			СтрокаСценария.Статус = ""Failed"";
			Если БылаОшибка Тогда
				РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"", ОписаниеОшибки);
			КонецЕсли;
			ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Истина;
			
			ОстановитьЗаписьВидеоОдногоШага();
			
			ПроверитьФлагОстановкаПриВозникновенииОшибки();
			
			Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
				СделатьСкриншотВозникновенияОшибки(СтрокаШага, СтрокаСценария, РезультатПрохожденияТестовСценария);
			Иначе
				ПерейтиКВыполнениюСледующегоСценария();
			КонецЕсли;
			
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если НадоОбновитьСтатусШага Тогда
		Если ТекИД_ШагаВМассиве >= 0 Тогда
			
			Шаги   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
			ТекШаг = Шаги[ТекИД_ШагаВМассиве];
			
			ИДСтрокиШага                       = ТекШаг.СтрокаШага;
			ИДСтрокиСценария                   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
			РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
			РезультатПрохожденияТестовШагов    = РезультатПрохожденияТестовСценария.РезультатПрохожденияТестовШагов;
			
			СтрокаШага     = ПолучитьСтрокуШагаИзДанныхФормы(ИДСтрокиШага);
			СтрокаСценария = ПолучитьСтрокуСценарияИзДанныхФормы(ИДСтрокиСценария);
			
			СтрокаШага.Статус = ""Success"";
			СтрокаШага.ТипКартинки = 4;
			
			РезультатПрохожденияТестовСценария.Вставить(""НомерСтрокиВФиче"", СтрокаСценария.НомерСтрокиВФиче);
			
			РезультатПрохожденияШага = РезультатПрохожденияТестовШагов[РезультатПрохожденияТестовШагов.Количество() - 1];
			РезультатПрохожденияШага.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
			РезультатПрохожденияШага.Вставить(""Статус"", СтрокаШага.Статус);
			РезультатПрохожденияШага.Вставить(""НомерСтрокиВФиче"", СтрокаШага.НомерСтрокиВФиче);
		КонецЕсли;
	КонецЕсли;
	
	Если ТекИД_ШагаВМассиве = -1 Тогда
		ТекИД_ШагаВМассиве = ТекИД_ШагаВМассиве + 1;
	ИначеЕсли 	ТекИД_ШагаВМассиве = ТекИД_ВыполненногоШагаВМассиве Тогда // это надо т.к. в определенных случаях таймер, подключающий следующий шаг может не сработать
		ТекИД_ШагаВМассиве = ТекИД_ШагаВМассиве + 1;
	КонецЕсли;
	
	Шаги = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
	
	Если ИдСледующегоШага <> Неопределено Тогда
		Если ИдСледующегоШага.ИД <> Неопределено Тогда
			//значит явно указано с какого шага надо продолжить
			Если ИдСледующегоШага.ИскатьПоИдСтроки Тогда
				НашлиШаг = Ложь;
				Для Ккк = ТекИД_ШагаВМассиве - 1 По Шаги.Количество() - 1 Цикл
					
					Если ИдСледующегоШага.ИД = Шаги[Ккк].СтрокаШага Тогда
						//нашли нужный ИД
						ТекИД_ШагаВМассиве = Ккк;
						НашлиШаг           = Истина;
						Прервать;
					КонецЕсли;
					
					Если ИдСледующегоШага.ИД < Шаги[Ккк].СтрокаШага Тогда
						Прервать;
					КонецЕсли;
				КонецЦикла;
				
				
				Если Не НашлиШаг Тогда
					Пока Истина Цикл
						ТекИД_ШагаВМассиве = ТекИД_ШагаВМассиве - 1;
						Если ТекИД_ШагаВМассиве < 0 Тогда
							Прервать;
						КонецЕсли;
						
						Если ИдСледующегоШага.ИД = Шаги[ТекИД_ШагаВМассиве].СтрокаШага Тогда
							//нашли нужный ИД
							НашлиШаг           = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				Если Не НашлиШаг Тогда
					ВызватьИсключение ""Не смог определить следующий шаг для выполнения."";
				КонецЕсли;
				
			Иначе
				ТекИД_ШагаВМассиве = ИдСледующегоШага.ИД;
			КонецЕсли;
		Иначе
			//это значит, что далее некуда переходить
			//поэтому ставим ТекИД_ШагаВМассиве таким, чтобы сработало правило, что выполнены все шаги
			ТекИД_ШагаВМассиве = Шаги.Количество();
		КонецЕсли;
	КонецЕсли;
	
	
	
	Если (Шаги.Количество() - 1) < ТекИД_ШагаВМассиве Тогда
		//значит все шаги выполнены, запускаем следующий сценарий
		
		ИДСтрокиСценария = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
		СтрокаСценария   = ПолучитьСтрокуСценарияИзДанныхФормы(ИДСтрокиСценария);
		
		БылаОшибка     = Ложь;
		ОписаниеОшибки = """";
		ДействияПослеЗавершенияСценария(СтрокаСценария, БылаОшибка, ОписаниеОшибки);
		
		РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
		РезультатПрохожденияТестовСценария.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
		РезультатПрохожденияТестовСценария.Вставить(""НомерСтрокиВФиче"", СтрокаСценария.НомерСтрокиВФиче);
		ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Истина;
		
		Если БылаОшибка Тогда
			СтатусЗапускаСценариев = Ложь;
			СтрокаСценария.Статус  = ""Failed"";
			РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"", ОписаниеОшибки);
			
			ЗаписатьСтрокуВТекстовыйЛог(""Failed: "" + ОписаниеОшибки);
		КонецЕсли;
		
		ОстановитьЗаписьВидеоОдногоШага();
		
		Если СтрокаСценария.Статус = ""Failed"" и Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
			СделатьСкриншотВозникновенияОшибки(""ПередОкончаниемСценария"", СтрокаСценария, РезультатПрохожденияТестовСценария);
		Иначе
			
			ПерейтиКВыполнениюСледующегоСценария();
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	
	
	
	Если ТекИД_ШагаВМассиве >= 0 Тогда
		//логируем выполненный шаг
		ТекШаг = Шаги[ТекИД_ШагаВМассиве];
		
		
		Если НЕ ТекШаг.ЭтоШагКонтекста Тогда
			//тут надо сделать запись одного шага, плюс записать для каждого шага файл параметров: ИД, строка субтитров, файлTTS если есть
			
			НадоОстановитьЗаписьЭтогоШагаИНачатьСледуюущий = Истина;
			Если ТекШаг.Свойство(""ВнутриГруппыКотораяРаботаетКакОдинШаг"") Тогда
				Если ТекШаг.ВнутриГруппыКотораяРаботаетКакОдинШаг Тогда
					НадоОстановитьЗаписьЭтогоШагаИНачатьСледуюущий = Ложь;
					
					Если ТекШаг.ПервыйВГруппеШагов Тогда
						НадоОстановитьЗаписьЭтогоШагаИНачатьСледуюущий = Истина;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			Если НадоОстановитьЗаписьЭтогоШагаИНачатьСледуюущий Тогда
				ОстановитьЗаписьВидеоОдногоШага();
				НачатьЗаписьВидеоОдногоШага(ТекИД_СценарияВМассиве, ТекИД_ШагаВМассиве, ТекШаг);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ВыполнятьШагиАссинхронно Тогда
		АктивизироватьСледующуюСтрокуДерева();
	КонецЕсли;
	
	ИнтервалДляВыполненияШага = Объект.ИнтервалВыполненияШага;
	Если Объект.ИдетЗаписьВидео Тогда
		Если ЭтоПрерывающйВидеоШаг(ТекШаг) Тогда
			ИнтервалДляВыполненияШага = 0.1;
		КонецЕсли;
		
		Если ТекШаг.ЭтоШагКонтекста Тогда
			ИнтервалДляВыполненияШага = 0.1;
		КонецЕсли;
		
		Если МассивTTS <> Неопределено Тогда
			ИнтервалДляВыполненияШага = 0.1;
		КонецЕсли;
		
	КонецЕсли;
	
	
	Если (ВыполнитьШагЧерезТаймер = Истина) Тогда
		ПодключитьОбработчикОжидания(""ВыполнитьШаг"", ИнтервалДляВыполненияШага, Истина); //вызвываем шаг через таймер, чтобы дать всем формам прорисоваться
	ИначеЕсли (НЕ Объект.ВыполнятьШагиАссинхронно) и (СчетчикШаговБезТаймера >= МаксСчетчикШаговБезТаймера) Тогда
		СчетчикШаговБезТаймера = 1;
		ПодключитьОбработчикОжидания(""ВыполнитьШаг"", ИнтервалДляВыполненияШага, Истина); //вызвываем шаг через таймер, чтобы дать всем формам прорисоваться
	ИначеЕсли (НЕ Объект.ВыполнятьШагиАссинхронно) Тогда
		СчетчикШаговБезТаймера = СчетчикШаговБезТаймера + 1;
		ВыполнитьШаг();//просто вызываем следующий шаг
	Иначе
		ПодключитьОбработчикОжидания(""ВыполнитьШаг"", ИнтервалДляВыполненияШага, Истина); //вызвываем шаг через таймер, чтобы дать всем формам прорисоваться
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьШагиВРезультатПрохожденияТестовШаговКоторыеНеВыполнялись(Шаги, ТекИД, РезультатПрохожденияТестовШагов)
	Ид = ТекИД;
	Пока Истина Цикл
		Ид = Ид + 1;
		Если Шаги.Количество() < (Ид + 1) Тогда
			Прервать;
		КонецЕсли;
		
		ТекШаг = Шаги[Ид];
		
		РезультатПрохожденияШага = Новый Структура;
		РезультатПрохожденияШага.Вставить(""Имя"", ТекШаг.Имя);
		РезультатПрохожденияШага.Вставить(""ВремяНачала"", ТекущаяУниверсальнаяДатаВМиллисекундах());
		РезультатПрохожденияШага.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
		РезультатПрохожденияШага.Вставить(""ОписаниеОшибки"", ""Пропущен"");
		РезультатПрохожденияШага.Вставить(""Статус"", ""Skipped"");
		РезультатПрохожденияШага.Вставить(""ИДСтроки"", ТекШаг.СтрокаШага);
		РезультатПрохожденияШага.Вставить(""ЭтоШагКонтекста"", ТекШаг.ЭтоШагКонтекста);
		
		РезультатПрохожденияТестовШагов.Добавить(РезультатПрохожденияШага);
		
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ОпределитьИмяФичаФайлаПоСтрокеДерева(СтрокаДерева)
	Если СтрокаДерева.Тип = ""Фича"" Тогда
		Возврат СтрокаДерева.ПолныйПуть;
	КонецЕсли;
	
	Возврат ОпределитьИмяФичаФайлаПоСтрокеДерева(СтрокаДерева.ПолучитьРодителя());
КонецФункции

&НаКлиенте
Функция ПолучитьКонтекстТестаПоАдресСнипета(АдресСнипета)
	ИД = МассивИменКонтекстовОбработок.Найти(УниверсальноеПолноеИмяФайла(АдресСнипета, Истина));
	Если ИД = Неопределено Тогда
		//Скорее всего это обработка не содержащая в себе тесты.
		Возврат Неопределено;
	Иначе
		ОбработкаТеста = ТаблицаКонтекстовОбработок[ИД].Обработка;
		Если ОбработкаТеста = Неопределено Тогда
			Файл = Новый Файл(АдресСнипета);
			ПодключитьКонтекстОбработкиКлиент(Файл);
			ОбработкаТеста = ТаблицаКонтекстовОбработок[ИД].Обработка;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ОбработкаТеста;
КонецФункции

&НаКлиенте
Процедура ВызватьМетодСценарияЕслиОнЕсть(СтрокаДереваСценария, ИмяПроцедуры, МассивПараметров = Неопределено,
	БылаОшибка = Ложь, ОписаниеОшибки = Неопределено,СлужебныеДанныеСценария = Неопределено)
	
	
	ИмяФичаФайла = Неопределено;
	Если СлужебныеДанныеСценария <> Неопределено Тогда
		СлужебныеДанныеСценария.Свойство(""ИмяФичаФайла"",ИмяФичаФайла);
	КонецЕсли;
	
	Если ИмяФичаФайла = Неопределено Тогда
		ИмяФичаФайла = ОпределитьИмяФичаФайлаПоСтрокеДерева(СтрокаДереваСценария);
		Если ИмяФичаФайла = Неопределено Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если СлужебныеДанныеСценария <> Неопределено Тогда
		СлужебныеДанныеСценария.Вставить(""ИмяФичаФайла"",ИмяФичаФайла);
	КонецЕсли;
	
	Файл         = Новый Файл(ИмяФичаФайла);
	КаталогФичи  = Файл.Путь;
	АдресСнипета = УниверсальноеПолноеИмяФайлаШаговФичи(ДополнитьСлешВПуть(КаталогФичи), Файл.ИмяБезРасширения, ЭтоLinux);
	АдресСнипета = УниверсальноеПолноеИмяФайла(АдресСнипета);
	АдресСнипетаНРег = НРег(АдресСнипета);
	
	ИДМассивИменКонтекстовОбработок = МассивИменКонтекстовОбработок.Найти(АдресСнипетаНРег);
	Если ИДМассивИменКонтекстовОбработок = Неопределено Тогда //значит у фичи нет своей epf
		АдресСнипета_Устаревший = УниверсальноеПолноеИмяФайлаШаговФичи_Устаревший(ДополнитьСлешВПуть(КаталогФичи), 
			Файл.ИмяБезРасширения, ЭтоLinux);
		АдресСнипета_Устаревший = УниверсальноеПолноеИмяФайла(АдресСнипета_Устаревший);
		АдресСнипета_Устаревший_НРег = НРег(АдресСнипета_Устаревший);
		
		ИДМассивИменКонтекстовОбработок = МассивИменКонтекстовОбработок.Найти(АдресСнипета_Устаревший_НРег);
		Если ИДМассивИменКонтекстовОбработок = Неопределено Тогда //значит у фичи нет своей epf
			Возврат;
		КонецЕсли;
		
		АдресСнипета = АдресСнипета_Устаревший;
	КонецЕсли;
	
	ОбработкаТеста = ПолучитьКонтекстТестаПоАдресСнипета(АдресСнипета);
	Если ОбработкаТеста = Неопределено Тогда
		//это возможно, если у фичи вообще нет своей обработки и она использует только шаги из других фич
		Возврат;
	КонецЕсли;
	
	ОбработкаТеста.Контекст            = ОбъектКонтекст;
	ОбработкаТеста.КонтекстСохраняемый = ОбъектКонтекстСохраняемый;
	
	Попытка
		ВызватьМетод(ОбработкаТеста, ИмяПроцедуры, МассивПараметров);
	Исключение
		ТекстСообщения = ""Ошибка в %1. %2"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяПроцедуры);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",ОписаниеОшибки());
		Сообщить(ТекстСообщения);
		БылаОшибка     = Истина;
		ОписаниеОшибки = ОписаниеОшибки();
	КонецПопытки;
	
	ОбъектКонтекст            = ОбработкаТеста.Контекст;
	ОбъектКонтекстСохраняемый = ОбработкаТеста.КонтекстСохраняемый;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьОтметкуВремениДляИмениФайла()
	ТекДат     = Формат(ТекущаяДата(),""ДФ=yyyyMMdd"");
	ТекМилиСек = ТекущаяУниверсальнаяДатаВМиллисекундах();
	
	Стр = ТекДат + ""_"" + ТекМилиСек;
	
	Стр = СтрЗаменить(Стр,""."","""");
	Стр = СтрЗаменить(Стр,"","","""");
	Стр = СтрЗаменить(Стр,"":"","""");
	Стр = СтрЗаменить(Стр,""/"","""");
	Стр = СтрЗаменить(Стр,""\"","""");
	Стр = СтрЗаменить(Стр,Символы.НПП,"""");
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Процедура ПодготовитьСозданиеИнструкцииHTML()
	Перем КаталогOutputИнструкцияHTML;
	
	Если НЕ Объект.СоздаватьИнструкциюHTML Тогда
		Возврат;
	КонецЕсли;
	
	КаталогOutputИнструкцияHTML = ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияHTML);
	
	//ФайлПроверкаСуществования = Новый Файл(Объект.КаталогOutputИнструкцияHTML);
	//Если НЕ ФайлПроверкаСуществования.Существует() Тогда
	Если НЕ ФайлСуществуетКомандаСистемы(КаталогOutputИнструкцияHTML) Тогда
		Стр = ""Файл КаталогOutputИнструкцияHTML: "" + КаталогOutputИнструкцияHTML + "" не существует."";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;
	
	Если Найти(Прав(КаталогOutputИнструкцияHTML, 1), ""\/"") > 0 Тогда
		КаталогOutputИнструкцияHTML = Сред(КаталогOutputИнструкцияHTML, СтрДлина(КаталогOutputИнструкцияHTML) - 1);
	КонецЕсли;
	
	Если МассивСценариевДляВыполнения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяФичаИнструкцииHTML <> МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ИмяФичи Тогда
		Если ТекущаяФичаИнструкцииHTML <> """" Тогда
			СоздатьФайлHTMLИнструкции();
		КонецЕсли;
		ТекущаяФичаИнструкцииHTML = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ИмяФичи;
	Иначе
		Возврат;
	КонецЕсли;
	
	ИмяФайлаЛогаИнструкцииHTML = СтрЗаменить(ДополнитьСлешВПуть(КаталогOutputИнструкцияHTML) + ""InstrHTML_"" + ТекущаяФичаИнструкцииHTML + ""_"" +  ПолучитьОтметкуВремениДляИмениФайла() + ""_log.txt"", Символы.НПП, """");
	
	ТД = Новый ТекстовыйДокумент;
	ЗаголовокФичи = ПрочитатьЗаголовокФичи(МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ПолныйПутьКФиче);
	ТД = Новый ЗаписьТекста(ИмяФайлаЛогаИнструкцииHTML, КодировкаТекста.UTF8);
	Для каждого Стр Из ЗаголовокФичи Цикл
		ТД.ЗаписатьСтроку(Стр);
	КонецЦикла;
	ТД.ЗаписатьСтроку(""--окончание заголовка--"");
	ТД.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Функция ПрочитатьЗаголовокФичи(ИмяФайла)
	Массив = Новый Массив;
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла, ""UTF-8"");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		Если СокрЛП(Стр) = """" Тогда
			Продолжить;
		КонецЕсли;
		
		Стр = СокрЛП(Стр);
		
		Если Лев(Стр, 1) = ""@"" Тогда
			Продолжить;
		КонецЕсли;
		Если Лев(Стр, 1) = ""#"" Тогда
			Продолжить;
		КонецЕсли;
		
		Если Найти(НРег(Стр), ""сценарий:"") > 0 Тогда
			Прервать;
		КонецЕсли;
		Если Найти(НРег(Стр), ""контекст:"") > 0 Тогда
			Прервать;
		КонецЕсли;
		Если Найти(НРег(Стр), ""scenario:"") > 0 Тогда
			Прервать;
		КонецЕсли;
		Если Найти(НРег(Стр), ""background:"") > 0 Тогда
			Прервать;
		КонецЕсли;
		
		Массив.Добавить(Стр);
		
	КонецЦикла;
	
	Текст.Закрыть();
	
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура ПодготовитьСозданиеИнструкцииMarkdown()
	Перем КаталогOutputИнструкцияMarkdown;
	
	Если НЕ Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат;
	КонецЕсли;
	
	КаталогOutputИнструкцияMarkdown = ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияMarkdown);
	
	Если НЕ ФайлСуществуетКомандаСистемы(КаталогOutputИнструкцияMarkdown) Тогда
		Стр = ""Файл КаталогOutputИнструкцияMarkdown: "" + КаталогOutputИнструкцияMarkdown + "" не существует."";
		Сообщить(Стр);
		ВызватьИсключение Стр;
	КонецЕсли;
	
	Если Найти(Прав(КаталогOutputИнструкцияMarkdown, 1), ""\/"") > 0 Тогда
		КаталогOutputИнструкцияMarkdown = Сред(КаталогOutputИнструкцияMarkdown, СтрДлина(КаталогOutputИнструкцияMarkdown) - 1);
	КонецЕсли;
	
	Если МассивСценариевДляВыполнения.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущаяФичаИнструкцииMarkdown <> МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ИмяФичи Тогда
		Если ТекущаяФичаИнструкцииMarkdown <> """" Тогда
			СоздатьФайлMarkdownИнструкции();
		КонецЕсли;
		ТекущаяФичаИнструкцииMarkdown = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ИмяФичи;
	Иначе
		Возврат;
	КонецЕсли;
	
	ИмяФайлаЛогаИнструкцииMarkdown = СтрЗаменить(ДополнитьСлешВПуть(КаталогOutputИнструкцияMarkdown) + ""InstrMarkdown_"" + ТекущаяФичаИнструкцииMarkdown + ""_"" + ПолучитьОтметкуВремениДляИмениФайла() + ""_log.txt"", Символы.НПП, """");
	
	ЗаголовокФичи = ПрочитатьЗаголовокФичи(МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ПолныйПутьКФиче);
	ТД = Новый ЗаписьТекста(ИмяФайлаЛогаИнструкцииMarkdown, КодировкаТекста.UTF8);
	Для каждого Стр Из ЗаголовокФичи Цикл
		ТД.ЗаписатьСтроку(Стр);
	КонецЦикла;
	ТД.ЗаписатьСтроку(""--окончание заголовка--"");
	ТД.Закрыть();
	
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетАллюрСервер(СтруктураОФ)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Дерево = ОбъектСервер.ДеревоТестов;
	
	ОбъектСервер.СформироватьОтчетАллюр(СтруктураОФ);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетjUnitСервер(СтруктураОФ)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	ОбъектСервер.СформироватьОтчетjUnit(СтруктураОФ);
КонецПроцедуры

&НаСервере
Процедура СформироватьОтчетCucumberJsonСервер(СтруктураОФ)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	ОбъектСервер.СформироватьОтчетCucumberJson(СтруктураОФ);
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьСтатусВыполненияСценариевВФайл(Статус, ПутьКФайлу)
	Файл = Новый Файл(ПутьКФайлу);
	
	Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
		Если ФайлСуществуетКомандаСистемы(Файл.ПолноеИмя) Тогда
			Если Файл.ЭтоКаталог() Тогда
				СделатьСообщение(""Не могу выгрузить статус сценариев, т.к. был передан каталог, а не файл."");
				Возврат;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	
	ФайлКаталог = Новый Файл(Файл.Путь);
	Если НЕ ФайлСуществуетКомандаСистемы(ФайлКаталог.ПолноеИмя) Тогда
		ТекстСообщения = ""Не могу выгрузить статус сценариев, т.к. каталог %1 не существует."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ФайлКаталог.ПолноеИмя);
		СделатьСообщение(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	ЗТ = Новый ЗаписьТекста(ПутьКФайлу, ""UTF-8"", , Ложь);
	Если Статус Тогда
		Стр = ""0"";
	Иначе
		Если ВозниклаОшибкаВШагеКонтекста или ВозниклаОшибкаПодключенияTestClient Тогда
			Стр = ""2"";
		Иначе
			Стр = ""1"";
		КонецЕсли;
	КонецЕсли;
	
	ЗТ.Записать(Стр);
	
	ЗТ.Закрыть();
	
	ТекстСообщения = ""Записал файл статуса билда: %1"";
	ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ПутьКФайлу);
	СделатьСообщение(ТекстСообщения);
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьTestClientЕслиОнПодключен()
	Попытка
		ОбъектКонтекстСохраняемый.ГлавноеОкноТестируемого.Закрыть();
	Исключение
		
	КонецПопытки;
КонецПроцедуры


&НаКлиенте
Функция ПолучитьИмяФичиИзПолногоПути(Знач Стр)
	Длина = СтрДлина(Стр);
	Поз   = Длина + 1;
	
	Для Ккк = 1 По Длина Цикл
		Символ = Сред(Стр, Длина - Ккк + 1, 1);
		Если Символ = "":"" Тогда
			Поз = Длина - Ккк + 1;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	НовСтр = Лев(Стр, Поз - 1);
	
	Возврат СокрЛП(НовСтр);
КонецФункции

&НаКлиенте
Функция ДобавитьНулей(Парам,КоличествоСимволов)
	Стр = СтрЗаменить(Строка(Парам),Символы.НПП,"""");
	
	Пока СтрДлина(Стр) < КоличествоСимволов Цикл
		Стр = ""0"" + Стр;
	КонецЦикла;
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Функция НайтиМакетВКаталогеПроектаСлужебный(ИмяМакета,ИмяФайла)
	Нашли = Ложь;
	
	СостояниеVanessaBehavior = ПолучитьСостояниеVanessaBehavior();
	ИдСценария               = СостояниеVanessaBehavior.ТекущийСценарий.ИдСценария;
	
	КаталогСценария = ДобавитьНулей(ИдСценария+1,4);
	ДопКаталог      = """";
	Если ФайлСуществуетКомандаСистемы(Объект.КаталогПроекта + ""\Файлы\"" + КаталогСценария) Тогда
		ДопКаталог = КаталогСценария;
	КонецЕсли;
	
	Если Не Нашли Тогда
		ИмяФайла = Объект.КаталогПроекта + ""\Файлы\"" + ?(ДопКаталог = """","""",ДопКаталог + ""\"") + ИмяМакета;
		Если Прав(НРег(ИмяФайла),4) <> "".mxl"" Тогда
			ИмяФайла = ИмяФайла + "".mxl"";
		КонецЕсли;
		Если ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
			Нашли = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Не Нашли Тогда
		ИмяФайла = Объект.КаталогПроекта + ""\"" + ИмяМакета;
		Если Прав(НРег(ИмяФайла),4) <> "".mxl"" Тогда
			ИмяФайла = ИмяФайла + "".mxl"";
		КонецЕсли;
		Если ФайлСуществуетКомандаСистемы(ИмяФайла) Тогда
			Нашли = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Нашли;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТабличныйДокументНаСервере(АдресВременногоХранилища)
	ДвоичныеДанные = ПолучитьИзВременногоХранилища(АдресВременногоХранилища);
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(""mxl"");
	ДвоичныеДанные.Записать(ИмяВременногоФайла);//TODO переделать на чтение из потока, должно быть быстрее
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Прочитать(ИмяВременногоФайла);
	УдалитьФайлы(ИмяВременногоФайла);
	Возврат ТабличныйДокумент;
КонецФункции

&НаКлиенте
Функция ПолучитьОбработкаСвязаннаяСИсполняемойФичей(ИмяФайлаФичи)
	ФайлФичи  = Новый Файл(ИмяФайлаФичи);
	
	ФайлEPF   = УниверсальноеПолноеИмяФайлаШаговФичи(ФайлФичи.Путь, ФайлФичи.ИмяБезРасширения, ЭтоLinux);
	ФайлEPF   = УниверсальноеПолноеИмяФайла(ФайлEPF);
	ИД        = МассивИменКонтекстовОбработок.Найти(Нрег(ФайлEPF));
	
	Если ИД = Неопределено Тогда
		ФайлEPF   = УниверсальноеПолноеИмяФайлаШаговФичи_Устаревший(ФайлФичи.Путь, ФайлФичи.ИмяБезРасширения, ЭтоLinux);
		ФайлEPF   = УниверсальноеПолноеИмяФайла(ФайлEPF);
		ИД        = МассивИменКонтекстовОбработок.Найти(Нрег(ФайлEPF));
	КонецЕсли;
	
	Обработка = ТаблицаКонтекстовОбработок[ИД].Обработка;
	
	Если Обработка = Неопределено Тогда
		Файл = Новый Файл(ФайлEPF);
		ПодключитьКонтекстОбработкиКлиент(Файл);
		Обработка = ТаблицаКонтекстовОбработок[ИД].Обработка;
	КонецЕсли;
	
	Возврат Обработка;
КонецФункции

&НаКлиенте
Процедура ОбновитьКешДанныхФормыЕслиЭтоНеобходимо(СтрокаСценария,ИД,ОбновитьБезПроверки = Ложь)
	Если ОбновитьБезПроверки или СтрокаСценария.ПолучитьРодителя() = Неопределено Тогда
		//значит надо обновить кеш строк дерева
		МассивСтрокДереваДанныеФормы.Очистить();
		Если Не Объект.РежимВыполненияОдногоШага Тогда
			ЗапомнитьСтрокиДереваДанныеФормы();
			СтрокаСценария = МассивСтрокДереваДанныеФормы[ИД];
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция НайтиСтрокуДереваПоДаннымПоиска(ДанныеПоиска)
	ТекИдМассива   = -1;
	ЭлементыДерева = Объект.ДеревоТестов.ПолучитьЭлементы();
	НужныйЭлемент  = Неопределено;
	Пока Истина Цикл
		ТекИдМассива   = ТекИдМассива + 1;
		
		Если ТекИдМассива > (ДанныеПоиска.Количество()-1) Тогда
			Прервать;
		КонецЕсли;
		
		НужныйИдСтроки = ДанныеПоиска[ТекИдМассива];
		
		Нашли = Ложь;
		Для Каждого Элем Из ЭлементыДерева Цикл
			Если Элем.ИдСтроки = НужныйИдСтроки Тогда
				НужныйЭлемент  = Элем;
				ЭлементыДерева = Элем.ПолучитьЭлементы();
				Нашли          = Истина;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если Не Нашли Тогда
			ВызватьИсключение ""Не найден элемент дерева по данным поиска"";
		КонецЕсли;
	КонецЦикла;
	
	Возврат НужныйЭлемент;
КонецФункции

&НаКлиенте
Функция ПолучитьСтрокуСценарияИзДанныхФормы(ИД)
	Если Объект.РежимВыполненияОдногоШага Тогда
		Возврат НайтиСтрокуДереваПоДаннымПоиска(СтруктураПоискаСтрокДерева.ДанныеПоискаСтрокиСценария);
	КонецЕсли;
	
	Возврат МассивСтрокДереваДанныеФормы[ИД];
КонецФункции

&НаКлиенте
Функция ПолучитьСтрокуШагаИзДанныхФормы(ИД)
	Если Объект.РежимВыполненияОдногоШага Тогда
		Возврат НайтиСтрокуДереваПоДаннымПоиска(СтруктураПоискаСтрокДерева.ДанныеПоискаСтрокиШага);
	КонецЕсли;
	
	Возврат МассивСтрокДереваДанныеФормы[ИД];
КонецФункции

&НаКлиенте
Процедура ВыполнинтьСценарийАссинхронноТаймер()
	Объект.ИнтервалВыполненияШага = Объект.ИнтервалВыполненияШагаЗаданныйПользователем;
	Если  (ОбъектКонтекст = Неопределено) Тогда
		ОбъектКонтекст          = Новый Структура;
	ИначеЕсли НЕ Объект.РежимВыполненияОдногоШага И НЕ Объект.РежимВыполненияДанногоСценарияСТекущегоШага И НЕ Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением Тогда
		ОбъектКонтекст          = Новый Структура;
	КонецЕсли;
	ЭтаФорма.ТекущийЭлемент = Элементы.ГруппаЗапускТестов;
	
	Если ТекИД_СценарияВМассиве > 0 Тогда
		ОбработатьСтатусСценария(ТекИД_СценарияВМассиве - 1);
	КонецЕсли;
	
	ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Ложь;
	Если НЕ Объект.РежимВыполненияОдногоШага Тогда
		ЗафиксированнаяФормаTestClient = Неопределено;
	КонецЕсли;
	ГлобальныеЗначенияТаблиц = Новый Структура;
	
	ОчиститьКешАктивнойТаблицыTestClient();
	ЗафиксироватьФормуTestClient(Неопределено);
	
	Если ВсеСценарииВыполнены() Тогда
		//значит все сценарии выполнены
		Объект.ИдетВыполнениеСценариев = Ложь;
		ОбновитьСтатусКнопкиВыполнитьСценарии();
		
		ПутьКОбработке = ПолучитьПутьКОбработкеКлиент();
		СоздатьФайлHTMLИнструкции();
		СоздатьФайлMarkdownИнструкции();
		ЗавершитьЗаписьВидео();
		
		Если НЕ Объект.ЗапускИзКоманднойСтроки Тогда
			ВывестиСтатистикуКлиент();
		КонецЕсли;

		СделатьСообщениеВсеСценарииОбработаны();
		Если Объект.ДелатьОтчетВФорматеАллюр Тогда
			СтруктураОФ = Новый Структура;
			СтруктураОФ.Вставить(""МассивРезультатПрохожденияТестовСценария"", МассивРезультатПрохожденияТестовСценария);
			СтруктураОФ.Вставить(""МассивИДСтрокиДерева"", МассивИДСтрокиДерева);
			
			ДвоичныеДанные = Новый ДвоичныеДанные(Объект.КаталогИнструментов + ""/vendor/allure-framework/allure.xsd"");
			СтруктураОФ.Вставить(""СхемаAllure"", ДвоичныеДанные);
			СтруктураОФ.Вставить(""ЕстьПоддержкаАсинхронныхВызовов"", ЕстьПоддержкаАсинхронныхВызовов);
			
			СформироватьОтчетАллюрСервер(СтруктураОФ);
			
			Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
				Для каждого РезультатПрохожденияТестовСценария Из МассивРезультатПрохожденияТестовСценария Цикл
					Если Не РезультатПрохожденияТестовСценария.Свойство(""МассивСкриншотов"") Тогда
						Продолжить;
					КонецЕсли;
					
					Для каждого СтруктураСкриншот Из РезультатПрохожденияТестовСценария.МассивСкриншотов Цикл
						ВременныйФайл = ПолучитьИмяВременногоФайла(""png"");
						СтруктураСкриншот.ДвоичныеДанные.Записать(ВременныйФайл);//TODO подумать об ускорении
						КопироватьФайлКомандаСистемы(ВременныйФайл, ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputAllure)) + СтруктураСкриншот.ИмяФайла);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			Если СтруктураОФ.Свойство(""МассивXMLОтчетаAllure"") Тогда
				МассивXMLОтчетаAllure = СтруктураОФ.МассивXMLОтчетаAllure;
				Для каждого Элем Из МассивXMLОтчетаAllure Цикл
					ИмяФайлаXML           = ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputAllure)) + Элем.РеальноеИмяФайла;
					ФайлXMLДвоичныеДанные = Элем.ФайлXMLДвоичныеДанные;
					ФайлXMLДвоичныеДанные.Записать(ИмяФайлаXML);
					
					ТекстСообщения = ""Файл отчета Allure-report (%1) записан."";
					ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяФайлаXML);
					СделатьСообщение(ТекстСообщения);
				КонецЦикла;
			КонецЕсли;
			
			Если Объект.ОтображатьОтчетAllureВБраузере   Тогда
				СоздатьОткрытьОтчетAllureНачало();	
			КонецЕсли;
		КонецЕсли;
		
		Если Объект.ДелатьОтчетВФорматеjUnit Тогда
			СтруктураОФ = Новый Структура;
			СтруктураОФ.Вставить(""МассивРезультатПрохожденияТестовСценария"", МассивРезультатПрохожденияТестовСценария);
			СтруктураОФ.Вставить(""МассивИДСтрокиДерева"", МассивИДСтрокиДерева);
			СтруктураОФ.Вставить(""ЕстьПоддержкаАсинхронныхВызовов"", ЕстьПоддержкаАсинхронныхВызовов);
			СтруктураОФ.Вставить(""ЭтоОФ"", Ложь);
			
			СформироватьОтчетjUnitСервер(СтруктураОФ);
			
			Если Объект.ДобавлятьКИмениСценарияУсловияВыгрузки Тогда
				ИмяСборки             = Объект.ИмяТекущейСборки;
				УбратьВсеЗапрещенныеСимволыИзИмениФайла(ИмяСборки);
				ИмяФайлаXML           = ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputjUnit)) + ИмяСборки + ""-junit.xml"";
			Иначе
				ИмяФайлаXML           = ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputjUnit)) + ""junit.xml"";
			КонецЕсли;
			
			СтруктураОФ.xml.Записать(ИмяФайлаXML);
			ТекстСообщения = ""Файл отчета jUnit-report (%1) записан."";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяФайлаXML);
			СделатьСообщение(ТекстСообщения);
		КонецЕсли;
		
		Если Объект.ДелатьОтчетВФорматеCucumberJson Тогда
			СтруктураОФ = Новый Структура;
			СтруктураОФ.Вставить(""МассивРезультатПрохожденияТестовСценария"", МассивРезультатПрохожденияТестовСценария);
			СтруктураОФ.Вставить(""МассивИДСтрокиДерева"", МассивИДСтрокиДерева);
			СтруктураОФ.Вставить(""ЕстьПоддержкаАсинхронныхВызовов"", ЕстьПоддержкаАсинхронныхВызовов);
			СтруктураОФ.Вставить(""ЭтоОФ"", Ложь);
			
			
			СформироватьОтчетCucumberJsonСервер(СтруктураОФ);
			
			Если Объект.ДобавлятьКИмениСценарияУсловияВыгрузки Тогда
				ИмяСборки             = Объект.ИмяТекущейСборки;
				УбратьВсеЗапрещенныеСимволыИзИмениФайла(ИмяСборки);
				ИмяФайлаJson           = ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputCucumberJson)) + ИмяСборки + ""-CucumberJson.json"";
			Иначе
				ИмяФайлаJson           = ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputCucumberJson)) + ""CucumberJson.json"";
			КонецЕсли;
			
			СтруктураОФ.json.Записать(ИмяФайлаJson);
			ТекстСообщения = ""Файл отчета CucumberJson-report (%1) записан."";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяФайлаJson);
			СделатьСообщение(ТекстСообщения);
		КонецЕсли;
		
		Если Объект.ДелатьОтчетВоВнутреннемФормате Тогда
			//Сформируем отчет для показа пользователю.
			СтруктураОФ = Новый Структура;
			СтруктураОФ.Вставить(""МассивРезультатПрохожденияТестовСценария"", МассивРезультатПрохожденияТестовСценария);
			СтруктураОФ.Вставить(""МассивИДСтрокиДерева"", МассивИДСтрокиДерева);
			
			Если НЕ Объект.ЗапускИзКоманднойСтроки Тогда
				ТабличныйДокумент = СформироватьОтчетВоВнутреннемФормате(СтруктураОФ);
				ТабличныйДокумент.Показать();
			КонецЕсли;
			
		КонецЕсли;
		
		Если Объект.ВыгружатьСтатусВыполненияСценариевВФайл Тогда
			ВыгрузитьСтатусВыполненияСценариевВФайл(СтатусЗапускаСценариев, ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.ПутьКФайлуДляВыгрузкиСтатусаВыполненияСценариев));
		КонецЕсли;
		
		Если Объект.ЗакрытьTestClientПослеЗапускаСценариев Тогда
			// закроем все TestClient которые были запущены
			Для каждого СтрокаДанныеКлиентовТестирования Из ДанныеКлиентовТестирования Цикл
				Попытка
					Шаг(""И я закрываю TestClient """""" + СтрокаДанныеКлиентовТестирования.Имя + """""""");
				Исключение
					//если не получилось закрыть TestClient, это ещё не означает, что есть ошибка
					//возможно он был закрыт штатно в сценарии
					СделатьСообщение(ОписаниеОшибки());
				КонецПопытки;
			КонецЦикла;
		КонецЕсли;
		
		Если Объект.НадоЗавершитьРаботуСистемыПослеВыполненияВсехСценариев Тогда
			ЗавершитьРаботуСистемы(Ложь);
		КонецЕсли;
		
		УстановитьФлагиВыполненияСценариев();
		
		Возврат; //TODO упростить метод ВыполнинтьСценарийАссинхронноТаймер, т.к. Возврат посередине длинного метода очень нечитабелен!
	КонецЕсли;
	
	ПодготовитьСозданиеИнструкцииHTML();
	ПодготовитьСозданиеИнструкцииMarkdown();
	
	ИДСтроки = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
	
	РезультатПрохожденияТестовСценария = Новый Структура;
	РезультатПрохожденияТестовСценария.Вставить(""ИДСтроки"", ИДСтроки);
	РезультатПрохожденияТестовСценария.Вставить(""ВремяНачала"", ТекущаяУниверсальнаяДатаВМиллисекундах());
	РезультатПрохожденияТестовШагов = Новый Массив;
	РезультатПрохожденияТестовСценария.Вставить(""РезультатПрохожденияТестовШагов"", РезультатПрохожденияТестовШагов);
	
	ДобавитьРезультатПрохожденияТестовСценарияВМассив(РезультатПрохожденияТестовСценария, ИДСтроки);
	
	ИДСтрокиСценария = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
	
	СтрокаСценария = ПолучитьСтрокуСценарияИзДанныхФормы(ИДСтрокиСценария);
	
	ОбновитьКешДанныхФормыЕслиЭтоНеобходимо(СтрокаСценария, ИДСтрокиСценария);
	
	Если Не Объект.РежимВыполненияОдногоШага Тогда
		Элементы.ДеревоТестов.ТекущаяСтрока = СтрокаСценария.ПолучитьИдентификатор();
	КонецЕсли;
	
	РезультатПрохожденияТестовСценария.Вставить(""НомерСтрокиВФиче"", СтрокаСценария.НомерСтрокиВФиче);
	
	ОбработкаСвязаннаяСИсполняемойФичей = Неопределено;
	Если СтрокаСценария.ФичаИмеетСвоюEPF Тогда
		СтрокаФичи = НайтиСтрокуФичиЧерезРодителя(СтрокаСценария);
		ОбработкаСвязаннаяСИсполняемойФичей = ПолучитьОбработкаСвязаннаяСИсполняемойФичей(СтрокаФичи.ПолныйПуть);
	КонецЕсли;
	
	Если НЕ Объект.РежимВыполненияОдногоШага Тогда
		Сообщить("" "");
		СделатьСообщение(ПолучитьТекстСообщенияПользователю(""$Работаю по сценарию$"") + "": "" + МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Имя);
	КонецЕсли;
	
	Если Объект.ДелатьЛогВыполненияСценариевВЖР Тогда
		ЗаписатьЛогВЖРПередВыполнениемСценария(МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Имя);
	КонецЕсли;
	
	ИмяФичаФайла = ОпределитьИмяФичаФайлаПоСтрокеДерева(СтрокаСценария);
	Если Не ЗначениеЗаполнено(ТекущийИсполняемыйФичаФайл) 
			Или НЕ СравнитьОбычныйПутьФайлаСУниверсальнымПутемДругогоФайла(ИмяФичаФайла, ТекущийИсполняемыйФичаФайл) Тогда
		
		ТекущийИсполняемыйФичаФайл = УниверсальноеПолноеИмяФайла(ИмяФичаФайла, Истина);
		Если Объект.ДелатьЛогВыполненияСценариевВТекстовыйФайл Тогда
			ЗаписатьСтрокуВТекстовыйЛог(""Фича: "" + ИмяФичаФайла);
			Если МассивСценариевДляВыполнения.Количество() > 0 Тогда
				Процент = Цел(ТекИД_СценарияВМассиве/МассивСценариевДляВыполнения.Количество() * 100);
				ЗаписатьСтрокуВТекстовыйЛог(Формат(Процент,""ЧЦ=3; ЧДЦ=0; ЧН="") + ""% "");
			КонецЕсли;
			
		КонецЕсли;
	КонецЕсли;
	
	Если Объект.ДелатьЛогВыполненияСценариевВТекстовыйФайл Тогда
		ЗаписатьЛогВТекстПередВыполнениемСценария(МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Имя);
	КонецЕсли;
	
	ДобавитьВЛогИнструкцииHTMLНачалоСценария(МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве]);
	ДобавитьВЛогИнструкцииMarkdownНачалоСценария(МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве]);
	
	ТекИД_ШагаВМассиве             = -1;
	ТекИД_ВыполненногоШагаВМассиве = -1;
	ВсёЕщёИдётВыполнениеШагов      = 0;
	
	Если ТекИД_СценарияВМассиве = 0 Тогда
		Если Объект.РежимВыполненияДанногоСценарияСТекущегоШага или Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением Тогда
			Ном = -1;
			Для Каждого Шаг Из МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги Цикл
				Ном = Ном + 1;
				Если Шаг.СтрокаШага = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].ИдСтрокиШагаСКоторогоВыполнятьСценарийСДанногоШага Тогда
					ТекИД_ШагаВМассиве = Ном;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			//тогда надо начать не с первого шага, а с нужного
		КонецЕсли;
	КонецЕсли;
	
	БылаОшибка = Ложь;
	ОписаниеОшибки = """";
	Если  НЕ Объект.РежимВыполненияОдногоШага
		И НЕ Объект.РежимВыполненияДанногоСценарияСТекущегоШага
		И НЕ Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением
		Тогда
		//если надо выполнить ПередНачаломСценария и при этом сделать отладку по шагам - надо поставить брейкпоинт на первом шаге сценарияя
		СлужебныеДанныеСценария = Новый Структура;
		ВызватьМетодСценарияЕслиОнЕсть(СтрокаСценария, ""ПередНачаломСценария"", , БылаОшибка, ОписаниеОшибки,СлужебныеДанныеСценария);
	КонецЕсли;
	Если БылаОшибка Тогда
		СтатусЗапускаСценариев = Ложь;
		
		ИДСтрокиСценария      = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
		СтрокаСценария        = ПолучитьСтрокуСценарияИзДанныхФормы(ИДСтрокиСценария);
		СтрокаСценария.Статус = ""Failed"";
		
		ДействияПослеЗавершенияСценария(СтрокаСценария,,,СлужебныеДанныеСценария);
		РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
		РезультатПрохожденияТестовСценария.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
		РезультатПрохожденияТестовСценария.Вставить(""ОписаниеОшибки"", ОписаниеОшибки);
		ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Истина;
		
		Если Объект.ДелатьЛогВыполненияСценариевВТекстовыйФайл Тогда
			ЗаписатьСтрокуВТекстовыйЛог("""");
			ЗаписатьСтрокуВТекстовыйЛог(""Ошибка в процедуре ПередНачаломСценария()."");
			ЗаписатьСтрокуВТекстовыйЛог(""Failed: "" + ОписаниеОшибки);
		КонецЕсли;
		
		РезультатПрохожденияТестовСценария.Вставить(""НомерСтрокиВФиче"", СтрокаСценария.НомерСтрокиВФиче);
		
		ОстановитьЗаписьВидеоОдногоШага();
		
		Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
			СделатьСкриншотВозникновенияОшибки(""ПередНачаломСценария"", СтрокаСценария, РезультатПрохожденияТестовСценария);
		Иначе
			ПерейтиКВыполнениюСледующегоСценария();
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	ПерейтиКВыполнениюСледующегоШага();
КонецПроцедуры

&НаКлиенте
Функция ВсеСценарииВыполнены()
	Возврат ТекИД_СценарияВМассиве > МассивСценариевДляВыполнения.Количество() - 1;
КонецФункции

&НаКлиенте
Процедура ДобавитьВЛогИнструкцииHTMLНачалоСценария(СтруктураСценария)
	Если НЕ Объект.СоздаватьИнструкциюHTML Тогда
		Возврат;
	КонецЕсли;
	
	ТД = Новый ЗаписьТекста(ИмяФайлаЛогаИнструкцииHTML, КодировкаТекста.UTF8, , Истина);
	
	ТД.ЗаписатьСтроку(""НачалоСценария"");
	ТД.ЗаписатьСтроку(""ИмяСценария="" + СтруктураСценария.Имя);
	ТД.ЗаписатьСтроку(""ИмяФичи="" + СтруктураСценария.ИмяФичи);
	ТД.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВЛогИнструкцииMarkdownНачалоСценария(СтруктураСценария)
	Если НЕ Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат;
	КонецЕсли;
	
	ТД = Новый ЗаписьТекста(ИмяФайлаЛогаИнструкцииMarkdown, КодировкаТекста.UTF8, , Истина);
	
	ТД.ЗаписатьСтроку(""НачалоСценария"");
	ТД.ЗаписатьСтроку(""ИмяСценария="" + СтруктураСценария.Имя);
	ТД.ЗаписатьСтроку(""ИмяФичи="" + СтруктураСценария.ИмяФичи);
	ТД.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьРезультатПрохожденияТестовСценарияВМассив(РезультатПрохожденияТестовСценария, ИДСтроки)
	ИД = МассивИДСтрокиДерева.Найти(ИДСтроки);
	Если ИД = Неопределено Тогда
		МассивИДСтрокиДерева.Добавить(ИДСтроки);
		МассивРезультатПрохожденияТестовСценария.Добавить(РезультатПрохожденияТестовСценария);
	Иначе
		МассивРезультатПрохожденияТестовСценария[ИД] = РезультатПрохожденияТестовСценария;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьСтрокиДереваДанныеФормыРекурсивно(ДеревоФормы)
	Для каждого ЭлементДерева Из ДеревоФормы Цикл
		ИДСтроки = ЭлементДерева.ИДСтроки;
		Пока МассивСтрокДереваДанныеФормы.Количество()-1 < ИДСтроки Цикл
			МассивСтрокДереваДанныеФормы.Добавить();
		КонецЦикла;
		МассивСтрокДереваДанныеФормы[ИДСтроки] = ЭлементДерева;
		
		ЗапомнитьСтрокиДереваДанныеФормыРекурсивно(ЭлементДерева.ПолучитьЭлементы());
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗапомнитьСтрокиДереваДанныеФормы()
	Если Объект.РежимВыполненияОдногоШага Тогда
		//поиск строки дерева будет происходить по специальной таблице, которая была создана заранее
		Возврат;
	КонецЕсли;
	
	ДеревоФормы = Объект.ДеревоТестов.ПолучитьЭлементы();
	ЗапомнитьСтрокиДереваДанныеФормыРекурсивно(ДеревоФормы);
КонецПроцедуры

&НаСервере
Функция ОпределитьИдСценарияПоСтрокеШага(ИдСтроки, ЭтоПример, ЭтоКонтекст)
	Если ИдСтроки = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	
	Дерево = ОбъектСервер.ДеревоТестов;
	
	СтрокаДерева = Дерево.Строки.Найти(ИдСтроки, ""ИдСтроки"", Истина);
	Если СтрокаДерева = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекРодитель = СтрокаДерева.Родитель;
	Пока Истина Цикл
		Если ТекРодитель.ДопТип = ""Контекст"" Тогда
			ЭтоКонтекст = Истина;
			Прервать;
		КонецЕсли;
		
		Если ТекРодитель.Тип = ""Сценарий"" Тогда
			Прервать;
		КонецЕсли;
		
		Если ТекРодитель.Тип = ""Пример"" Тогда
			ЭтоПример = Истина;
			Прервать;
		КонецЕсли;
		
		ТекРодитель = ТекРодитель.Родитель;
	КонецЦикла;
	
	
	Возврат ТекРодитель.ИДСтроки;
КонецФункции

&НаКлиенте
Функция ОпределитьИдСценарияПоСтрокеШагаКлиент(СтрокаДерева, ЭтоПример, ЭтоКонтекст)
	Если СтрокаДерева = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	
	ТекРодитель = СтрокаДерева;
	
	Пока Истина Цикл
		Если ТекРодитель = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Если ТекРодитель.ДопТип = ""Контекст"" Тогда
			ЭтоКонтекст = Истина;
			Прервать;
		КонецЕсли;
		
		Если ТекРодитель.Тип = ""Сценарий"" Тогда
			Прервать;
		КонецЕсли;
		
		Если ТекРодитель.Тип = ""Пример"" Тогда
			ЭтоПример = Истина;
			Прервать;
		КонецЕсли;
		
		ТекРодитель = ТекРодитель.ПолучитьРодителя();
	КонецЦикла;
	
	
	Возврат ТекРодитель.ИДСтроки;
КонецФункции

&НаКлиенте
Процедура ПолучитьМассивСценариевДаннойФичи(Дерево, Массив)
	Для Каждого СтрокаДерева Из Дерево.ПолучитьЭлементы() Цикл
		Если СтрокаДерева.Тип = ""Сценарий"" Тогда
			Массив.Добавить(СтрокаДерева.ИДСтроки);
		КонецЕсли;
		
		ПолучитьМассивСценариевДаннойФичи(СтрокаДерева, Массив);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьФичу()
	Объект.РежимВыполненияДанногоСценарияСТекущегоШага              = Ложь;
	Объект.РежимВыполненияДанногоСценарияСТекущегоШагаСПродолжением = Ложь;
	Объект.РежимВыполненияОдногоШага                                = Ложь;
	
	СтрокаФичи = Элементы.ДеревоТестов.ТекущиеДанные;
	Если СтрокаФичи = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	СтрокаФичи = НайтиСтрокуФичиЧерезРодителя(СтрокаФичи);
	Если СтрокаФичи = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	
	Массив     = Новый Массив;
	ПолучитьМассивСценариевДаннойФичи(СтрокаФичи, Массив);
	
	ВыполнитьСценарии(Массив);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусКнопкиВыполнитьСценарии()
	Если Объект.ИдетВыполнениеСценариев Тогда
		Элементы.кнВыполнитьСценарии.Заголовок = ""STOP"";
	Иначе
		Элементы.кнВыполнитьСценарии.Заголовок = НСтр(""ru = 'Выполнить сценарии'; en = 'Run scenario'"");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция НайтиПервыйСценарийВДереве()
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Дерево       = ОбъектСервер.ДеревоТестов;
	
	Отбор = Новый Структура;
	Отбор.Вставить(""Тип"", ""Сценарий"");
	
	МассивСтрокДерева = Дерево.Строки.НайтиСтроки(Отбор, Истина);
	Для Каждого СтрокаДерева Из МассивСтрокДерева Цикл
		Если СтрокаДерева.ДопТип = ""Контекст"" Тогда
			Продолжить;
		КонецЕсли;
		
		Возврат СтрокаДерева.ИдСтроки;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Функция СоздатьДанныеДляПоискаСтрокиШага(СтрокаДерева)
	Массив = Новый Массив;
	
	ТекРодитель = СтрокаДерева;
	Пока ТекРодитель <> Неопределено Цикл
		Массив.Вставить(0,ТекРодитель.ИдСтроки);
		ТекРодитель = ТекРодитель.ПолучитьРодителя();
	КонецЦикла;
	
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура СоздатьСтруктуруПоискаДляСтрокиДерева(СтрокаДерева)
	СтруктураПоискаСтрокДерева = Новый Структура;
	СтруктураПоискаСтрокДерева.Вставить(""ДанныеПоискаСтрокиШага"",СоздатьДанныеДляПоискаСтрокиШага(СтрокаДерева));
	
	ЭтоПример       = Ложь;
	ЭтоШагКонтекста = Ложь;
	СтрокаСценария = НайтиСтрокуСценарияЧерезРодителя(СтрокаДерева,ЭтоПример,ЭтоШагКонтекста);
	СтруктураПоискаСтрокДерева.Вставить(""ДанныеПоискаСтрокиСценария"",СоздатьДанныеДляПоискаСтрокиШага(СтрокаСценария));
	
	СтрокаФичи = НайтиСтрокуФичиЧерезРодителя(СтрокаСценария);
	
	ДанныеСценария = Новый Структура;
	ДанныеСценария.Вставить(""Имя"",СтрокаСценария.Имя);
	ДанныеСценария.Вставить(""СтрокаДерева"",СтрокаСценария.ИдСтроки);
	ДанныеСценария.Вставить(""ИмяФичи"",СтрокаФичи.Имя);
	ДанныеСценария.Вставить(""ПолныйПутьКФиче"",СтрокаФичи.ПолныйПуть);
	
	
	Шаги = Новый Массив;
	СтруктураШага = ПолучитьСтруктуруШагаКлиент(СтрокаДерева,СтрокаСценария,СтрокаСценария,ЭтоШагКонтекста);
	Шаги.Добавить(СтруктураШага);
	ДанныеСценария.Вставить(""Шаги"",Шаги);
	
	СтруктураПоискаСтрокДерева.Вставить(""ДанныеСценария"",ДанныеСценария);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьМассивСценариевДляВыполненияКлиент(МассивСценариевДляВыполнения)
	СтруктураСценария = Новый Структура;
	СтруктураСценария.Вставить(""Имя"",СтруктураПоискаСтрокДерева.ДанныеСценария.Имя);
	СтруктураСценария.Вставить(""СтрокаДерева"",СтруктураПоискаСтрокДерева.ДанныеСценария.СтрокаДерева);
	СтруктураСценария.Вставить(""ИмяФичи"",СтруктураПоискаСтрокДерева.ДанныеСценария.ИмяФичи);
	СтруктураСценария.Вставить(""ПолныйПутьКФиче"",СтруктураПоискаСтрокДерева.ДанныеСценария.ПолныйПутьКФиче);
	СтруктураСценария.Вставить(""Шаги"",СтруктураПоискаСтрокДерева.ДанныеСценария.Шаги);
	
	МассивСценариевДляВыполнения.Добавить(СтруктураСценария);
КонецПроцедуры

&НаКлиенте
Функция ЭтуСтрокуМожноИсполнить(СтрокаДерева)
	Если СтрокаДерева.Тип = ""Шаг"" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтрокаДерева.Тип = ""Область"" Тогда
		Если ЗначениеЗаполнено(СтрокаДерева.ДопТип) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция ЭтуСтрокуМожноИсполнитьИлиВНейЕстьПодчиненныеИсполняемыеСтроки(СтрокаДерева)
	Если СтрокаДерева.Тип = ""Сценарий"" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтрокаДерева.Тип = ""Шаг"" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтрокаДерева.Тип = ""Область"" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Если СтрокаДерева.Тип = ""ШагСценарий"" Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция ОпределитьИдИсполняемойСтрокиДерева(СтрокаДерева,НужнаяСтрока)
	ТекСтрока = СтрокаДерева;
	
	Если ЭтуСтрокуМожноИсполнить(ТекСтрока) Тогда
		Возврат ТекСтрока.ИдСтроки;
	КонецЕсли;
	
	Пока Истина Цикл
		ЭлементыДерева = ТекСтрока.ПолучитьЭлементы();
		Если ЭлементыДерева.Количество() = 0 Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		ТекСтрока = ЭлементыДерева[0];
		Если ЭтуСтрокуМожноИсполнить(ТекСтрока) Тогда
			НужнаяСтрока = ТекСтрока;
			Возврат ТекСтрока.ИдСтроки;
		КонецЕсли;
	КонецЦикла;
	
КонецФункции

&НаКлиенте
Функция НайтиСлужебнуюСтрокуВФичеДляЭтогоШага(МассивТекстФичи,СтрокаПоиска,НомерСтрокиВФиче,Нашли = Ложь)
	Если НомерСтрокиВФиче = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекИдМассива = НомерСтрокиВФиче-1-1;
	Пока Истина Цикл
		Если ТекИдМассива < 0 Тогда
			Прервать;
		КонецЕсли;
		
		Стр = СокрЛП(МассивТекстФичи[ТекИдМассива]);
		
		Если Стр = """" Тогда
			ТекИдМассива = ТекИдМассива - 1;
			Продолжить;
		КонецЕсли;
		
		Если Лев(Стр,1) <> ""#"" Тогда
			Прервать;
		КонецЕсли;
		
		Стр = Сред(Стр,2);
		
		Если Лев(НРег(Стр),СтрДлина(СтрокаПоиска)) <> НРег(СтрокаПоиска) Тогда
			ТекИдМассива = ТекИдМассива - 1;
			Продолжить;
		КонецЕсли;
		
		//значит нашли нужную строку
		Стр = СокрЛП(Сред(Стр,СтрДлина(СтрокаПоиска)+1));
		Нашли = Истина;
		
		Возврат Стр;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура ВычислитьПараметрыВнутриСтроки(СлужебнаяСтрока)
	Стр = """";
	
	НашлиСтрокуДляВычисления = Ложь;
	СтрокаВыражения          = """";
	
	Для Ккк = 1 По СтрДлина(СлужебнаяСтрока) Цикл
		Символ = Сред(СлужебнаяСтрока,Ккк,1);
		Если Символ = ""["" Тогда
			НашлиСтрокуДляВычисления = Истина;
			Продолжить;
		КонецЕсли;
		
		Если Символ = ""]"" Тогда
			НашлиСтрокуДляВычисления = Ложь;
			РезультатВыражения = Вычислить(СтрокаВыражения);
			Стр = Стр + РезультатВыражения;
			СтрокаВыражения = """";
			Продолжить;
		КонецЕсли;
		
		Если НашлиСтрокуДляВычисления Тогда
			СтрокаВыражения = СтрокаВыражения + Символ;
		Иначе
			Стр = Стр + Символ;
		КонецЕсли;
	КонецЦикла;
	
	СлужебнаяСтрока = Стр;
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьШагамСвойстваГруппировкиПриЗаписиРекурсивно(СтрокаДереваГруппа,Параметры,ДопПараметры)
	ЭлементыГруппы = СтрокаДереваГруппа.ПолучитьЭлементы();
	Для Каждого ЭлементГруппы Из ЭлементыГруппы Цикл
		Если ЭлементГруппы.Тип = ""Шаг"" Тогда
			Для Каждого Шаг Из Параметры.Сценарий.Шаги Цикл
				Если ЭлементГруппы.ИдСтроки = Шаг.СтрокаШага Тогда
					Шаг.Вставить(""ВнутриГруппыКотораяРаботаетКакОдинШаг"",Истина);
					Шаг.Вставить(""ПервыйВГруппеШагов"",Ложь);
					Шаг.Вставить(""ПоследнийВГруппеШагов"",Ложь);
					
					Если НЕ ДопПараметры.НашлиПервыйШаг Тогда
						Шаг.Вставить(""ПервыйВГруппеШагов"",Истина);
						Шаг.Вставить(""ТекстИнструкция"",ДопПараметры.ТекстШагаГруппы);
						Шаг.Вставить(""МасштабироватьВВидео"",ДопПараметры.МасштабироватьВВидео);
						ДопПараметры.НашлиПервыйШаг = Истина;
					КонецЕсли;
					
					ДопПараметры.ВременныйШаг = Шаг;
					
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ДопПараметры.Уровень = ДопПараметры.Уровень + 1;
		ПроставитьШагамСвойстваГруппировкиПриЗаписиРекурсивно(ЭлементГруппы,Параметры,ДопПараметры);
		ДопПараметры.Уровень = ДопПараметры.Уровень - 1;
	КонецЦикла;
	
	Если ДопПараметры.Уровень = 0 Тогда
		ДопПараметры.ВременныйШаг.Вставить(""ПоследнийВГруппеШагов"",Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроставитьШагамСвойстваИгнорироватьШагВАвтоинструкцииРекурсивно(СтрокаДереваГруппа,Параметры,ДопПараметры)
	ЭлементыГруппы = СтрокаДереваГруппа.ПолучитьЭлементы();
	Для Каждого ЭлементГруппы Из ЭлементыГруппы Цикл
		Если ЭлементГруппы.Тип = ""Шаг"" Тогда
			Для Каждого Шаг Из Параметры.Сценарий.Шаги Цикл
				Если ЭлементГруппы.ИдСтроки = Шаг.СтрокаШага Тогда
					Шаг.Вставить(""ИгнорироватьШагВАвтоинструкции"",Истина);
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ПроставитьШагамСвойстваИгнорироватьШагВАвтоинструкцииРекурсивно(ЭлементГруппы,Параметры,ДопПараметры);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьУправляющуюСтрокуИнструкции(СлужебнаяСтрока,Параметры)
	ПредставлениеКвадратнаяСкобкаЛевая  = ""__&КвадратнаяСкобкаЛевая__"";
	ПредставлениеКвадратнаяСкобкаПравая = ""__&КвадратнаяСкобкаПравая__"";
	СлужебнаяСтрока = СтрЗаменить(СлужебнаяСтрока,""\["",ПредставлениеКвадратнаяСкобкаЛевая);
	СлужебнаяСтрока = СтрЗаменить(СлужебнаяСтрока,""\]"",ПредставлениеКвадратнаяСкобкаПравая);
	
	Если Параметры.Свойство(""ОбработкаПараметровШага"") Тогда
		Если Параметры.ОбработкаПараметровШага Тогда
			Для Ккк = 1 По Параметры.Шаг.ЗначенияПараметров.Количество() Цикл
				СтрокаЗамены = ""%"" + XMlСтрока(Ккк);
				СлужебнаяСтрока = СтрЗаменить(СлужебнаяСтрока,СтрокаЗамены,Параметры.Шаг.ЗначенияПараметров[Ккк-1].Значение.Значение);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство(""ВычислитьВыражения"") Тогда
		Если Параметры.ВычислитьВыражения Тогда
			ВычислитьПараметрыВнутриСтроки(СлужебнаяСтрока);
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство(""ОбработатьГруппыШаговКакОдинШаг"") Тогда
		Если Параметры.ОбработатьГруппыШаговКакОдинШаг Тогда
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить(""Уровень"",0);
			ДопПараметры.Вставить(""НашлиПервыйШаг"",Ложь);
			ДопПараметры.Вставить(""ПоследнийШаг"",Ложь);
			ДопПараметры.Вставить(""ВременныйШаг"",Неопределено);
			ДопПараметры.Вставить(""ТекстШагаГруппы"",СлужебнаяСтрока);
			ДопПараметры.Вставить(""МасштабироватьВВидео"",Параметры.МасштабироватьВВидео);
			ПроставитьШагамСвойстваГруппировкиПриЗаписиРекурсивно(Параметры.СтрокаДереваГруппа,Параметры,ДопПараметры);
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство(""ПроставитьПодчиненнымШагамИгнорироватьШагВАвтоинструкции"") Тогда
		Если Параметры.ПроставитьПодчиненнымШагамИгнорироватьШагВАвтоинструкции Тогда
			ДопПараметры = Новый Структура;
			ДопПараметры.Вставить(""Уровень"",0);
			ПроставитьШагамСвойстваИгнорироватьШагВАвтоинструкцииРекурсивно(Параметры.СтрокаДереваГруппа,Параметры,ДопПараметры);
		КонецЕсли;
	КонецЕсли;
	
	
	
	СлужебнаяСтрока = СтрЗаменить(СлужебнаяСтрока,ПредставлениеКвадратнаяСкобкаЛевая,""["");
	СлужебнаяСтрока = СтрЗаменить(СлужебнаяСтрока,ПредставлениеКвадратнаяСкобкаПравая,""]"");
КонецПроцедуры

&НаКлиенте
Процедура НайтиГруппыШаговКоторыеНадоОбрабатыватьКакОдинШаг(МассивТекстФичи,Шаг,Сценарий)
	ИДСтрокиШага = Шаг.СтрокаШага;
	СтрокаШага   = МассивСтрокДереваДанныеФормы[ИДСтрокиШага];
	
	РодительШага = СтрокаШага.ПолучитьРодителя();
	Если (РодительШага.Тип <> ""Область"") и (РодительШага.Тип <> ""ШагСценарий"") Тогда //только эти шаги идут как видеовставки
		Возврат;
	КонецЕсли;
	
	ЭлементыРодителя = РодительШага.ПолучитьЭлементы();
	Индекс           = ЭлементыРодителя.Индекс(СтрокаШага);
	Если Индекс = 0 Тогда
		//значит этот шаг первый в группе
		
		Нашли = Ложь;
		СлужебнаяСтрока = НайтиСлужебнуюСтрокуВФичеДляЭтогоШага(МассивТекстФичи,""[autodoc.groupsteps]"",РодительШага.НомерСтрокиВФиче,Нашли);
		Если НЕ Нашли Тогда
			Возврат;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СлужебнаяСтрока) Тогда
			//Значит не указан новый текст группы. Оставим прежний.
			СлужебнаяСтрока = РодительШага.Имя;
		КонецЕсли;
		
		НашлиДирективуНеМасштабироватьШаг = Ложь;
		НайтиСлужебнуюСтрокуВФичеДляЭтогоШага(МассивТекстФичи,""[autodoc.donotscale]"",РодительШага.НомерСтрокиВФиче,НашлиДирективуНеМасштабироватьШаг);
		
		
		ПараметрыОбработки = Новый Структура;
		ПараметрыОбработки.Вставить(""ВычислитьВыражения"",Истина);
		ПараметрыОбработки.Вставить(""ОбработатьГруппыШаговКакОдинШаг"",Истина);
		ПараметрыОбработки.Вставить(""Шаг"",Шаг);
		ПараметрыОбработки.Вставить(""Сценарий"",Сценарий);
		ПараметрыОбработки.Вставить(""СтрокаДереваГруппа"",РодительШага);
		ПараметрыОбработки.Вставить(""МасштабироватьВВидео"",Не НашлиДирективуНеМасштабироватьШаг);
		ОбработатьУправляющуюСтрокуИнструкции(СлужебнаяСтрока,ПараметрыОбработки);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиГруппыШаговКоторыеНадоИгнорировать(МассивТекстФичи,Шаг,Сценарий)
	ИДСтрокиШага = Шаг.СтрокаШага;
	СтрокаШага   = МассивСтрокДереваДанныеФормы[ИДСтрокиШага];
	
	РодительШага = СтрокаШага.ПолучитьРодителя();
	Если (РодительШага.Тип <> ""Область"") и (РодительШага.Тип <> ""ШагСценарий"") Тогда //только эти шаги идут как видеовставки
		Возврат;
	КонецЕсли;
	
	ЭлементыРодителя = РодительШага.ПолучитьЭлементы();
	Индекс           = ЭлементыРодителя.Индекс(СтрокаШага);
	Если Индекс = 0 Тогда
		//значит этот шаг первый в группе
		
		Нашли = Ложь;
		СлужебнаяСтрока = НайтиСлужебнуюСтрокуВФичеДляЭтогоШага(МассивТекстФичи,""[autodoc.ignorestep]"",РодительШага.НомерСтрокиВФиче,Нашли);
		Если НЕ Нашли Тогда
			Возврат;
		КонецЕсли;
		
		Если Не Сценарий.Свойство(""ГруппыКоторыеНадоИгнорировать"") Тогда
			Сценарий.Вставить(""ГруппыКоторыеНадоИгнорировать"",Новый Массив);
		КонецЕсли;
		
		Сценарий.ГруппыКоторыеНадоИгнорировать.Добавить(РодительШага.ИдСтроки);
		
		ПараметрыОбработки = Новый Структура;
		ПараметрыОбработки.Вставить(""ПроставитьПодчиненнымШагамИгнорироватьШагВАвтоинструкции"",Истина);
		ПараметрыОбработки.Вставить(""Шаг"",Шаг);
		ПараметрыОбработки.Вставить(""Сценарий"",Сценарий);
		ПараметрыОбработки.Вставить(""СтрокаДереваГруппа"",РодительШага);
		ОбработатьУправляющуюСтрокуИнструкции(СлужебнаяСтрока,ПараметрыОбработки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НайтиШагиКоторыеНеНадоМасштабировать(МассивТекстФичи,Шаг,Сценарий)
	Нашли = Ложь;
	СлужебнаяСтрока = НайтиСлужебнуюСтрокуВФичеДляЭтогоШага(МассивТекстФичи,""[autodoc.donotscale]"",Шаг.НомерСтрокиВФиче,Нашли);
	Если Не Нашли Тогда
		Возврат;
	КонецЕсли;
	
	Шаг.Вставить(""МасштабироватьВВидео"",Ложь);
КонецПроцедуры

&НаКлиенте
Процедура НайтиШагиКоторыеНадоИгнорировать(МассивТекстФичи,Шаг,Сценарий)
	Нашли = Ложь;
	СлужебнаяСтрока = НайтиСлужебнуюСтрокуВФичеДляЭтогоШага(МассивТекстФичи,""[autodoc.ignorestep]"",Шаг.НомерСтрокиВФиче,Нашли);
	Если Не Нашли Тогда
		Возврат;
	КонецЕсли;
	
	Шаг.Вставить(""ИгнорироватьШагВАвтоинструкции"",Истина);
КонецПроцедуры

&НаКлиенте
Процедура НайтиПризнакЧтоСценарийНадоИгнорировать(МассивТекстФичи,Сценарий)
	Нашли = Ложь;
	СлужебнаяСтрока = НайтиСлужебнуюСтрокуВФичеДляЭтогоШага(МассивТекстФичи,""[autodoc.ignorescenario]"",Сценарий.НомерСтрокиВФиче,Нашли);
	Если НЕ Нашли Тогда
		Возврат;
	КонецЕсли;
	
	Сценарий.Вставить(""ИгнорироватьШагВАвтоинструкции"",Истина);
	
	ПараметрыУстановки = Новый Структура;
	ПараметрыУстановки.Вставить(""Сценарий"",Сценарий);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить(""Уровень"",0);
	ПроставитьШагамСвойстваИгнорироватьШагВАвтоинструкцииРекурсивно(МассивСтрокДереваДанныеФормы[Сценарий.СтрокаДерева],ПараметрыУстановки,ДопПараметры);
КонецПроцедуры

&НаКлиенте
Процедура НайтиПризнакЧтоСлайдСценарияНадоИгнорировать(МассивТекстФичи,Сценарий)
	Нашли = Ложь;
	СлужебнаяСтрока = НайтиСлужебнуюСтрокуВФичеДляЭтогоШага(МассивТекстФичи,""[autodoc.ignore.scenarioslide]"",Сценарий.НомерСтрокиВФиче,Нашли);
	Если НЕ Нашли Тогда
		Возврат;
	КонецЕсли;
	
	Сценарий.Вставить(""ИгнорироватьСлайдСценарияВАвтоинструкции"",Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПрочитатьИзФичиПараметрыСборкиВидео()
	Если Объект.РежимВыполненияОдногоШага Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Сценарий Из МассивСценариевДляВыполнения Цикл
		МассивФичи = ЗагрузитьФайлВМассив(Сценарий.ПолныйПутьКФиче);
		
		НайтиПризнакЧтоСценарийНадоИгнорировать(МассивФичи,Сценарий);
		НайтиПризнакЧтоСлайдСценарияНадоИгнорировать(МассивФичи,Сценарий);
		
		Шаги       = Сценарий.Шаги;
		Для Каждого Шаг Из Шаги Цикл
			Если Шаг.ЭтоШагКонтекста Тогда
				Продолжить;
			КонецЕсли;
			
			НайтиГруппыШаговКоторыеНадоОбрабатыватьКакОдинШаг(МассивФичи,Шаг,Сценарий);
			НайтиГруппыШаговКоторыеНадоИгнорировать(МассивФичи,Шаг,Сценарий);
			НайтиШагиКоторыеНеНадоМасштабировать(МассивФичи,Шаг,Сценарий);
			НайтиШагиКоторыеНадоИгнорировать(МассивФичи,Шаг,Сценарий);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура УбратьВсеЗапрещенныеСимволыИзИмениФайла(Стр)
	Стр = СтрЗаменить(Стр, ""<"", """");
	Стр = СтрЗаменить(Стр, "">"", """");
	Стр = СтрЗаменить(Стр, """""""", """");
	Стр = СтрЗаменить(Стр, ""|"", """");
	Стр = СтрЗаменить(Стр, ""*"", """");
	Стр = СтрЗаменить(Стр, ""\"", """");
	Стр = СтрЗаменить(Стр, ""/"", """");
	Стр = СтрЗаменить(Стр, "":"", """");
	Стр = СтрЗаменить(Стр, ""?"", """");
КонецПроцедуры


&НаКлиенте
Процедура СоздатьФайлHTMLИнструкции()
	Если НЕ Объект.СоздаватьИнструкциюHTML Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаОкончанияЗаголовка = 0;
	ЗаголовокФичи            = ПолучитьЗаголовокФичииИзЛогаИнструкции(ИмяФайлаЛогаИнструкцииHTML, СтрокаОкончанияЗаголовка);
	
	ТД = Новый ЧтениеТекста(ИмяФайлаЛогаИнструкцииHTML, КодировкаТекста.UTF8);
	
	МассивСценариев = Новый Массив;
	МассивШагов     = Неопределено;
	
	Ном = 0;
	Стр = ТД.ПрочитатьСтроку();
	Пока Стр <> Неопределено Цикл
		
		Ном = Ном + 1;
		Если Ном <= СтрокаОкончанияЗаголовка Тогда
			Стр = ТД.ПрочитатьСтроку();
			Продолжить;
		КонецЕсли;
		
		Если Стр = ""НачалоСценария"" Тогда
			ТекСтруктура = Новый Структура;
			МассивШагов  = Новый Массив;
			ТекСтруктура.Вставить(""МассивШагов"", МассивШагов);
			МассивСценариев.Добавить(ТекСтруктура);
			Стр = ТД.ПрочитатьСтроку();
			Продолжить;
		ИначеЕсли Стр = ""НачалоШага"" Тогда
			ТекСтруктура = Новый Структура;
			МассивШагов.Добавить(ТекСтруктура);
			Стр = ТД.ПрочитатьСтроку();
			Продолжить;
		КонецЕсли;
		
		Поз = Найти(Стр, ""="");
		Если Поз = 0 Тогда
			ТекстСообщения = ""Странный параметр в логе инструкции HTML: %1"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Стр);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		ИмяПараметра      = Лев(Стр, Поз - 1);
		ЗначениеПараметра = Сред(Стр, Поз + 1);
		
		ТекСтруктура.Вставить(ИмяПараметра, ЗначениеПараметра);
		Стр = ТД.ПрочитатьСтроку();
		
	КонецЦикла;
	ТД.Закрыть();
	
	КаталогОбъектов = ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияHTML);
	
	ИмяФайлаДляЗаписи = ДополнитьСлешВПуть(ПреобразоватьПутьСТочкамиКНормальномуПути(Объект.КаталогOutputИнструкцияHTML)) + ""Instr_"" + ТекущаяФичаИнструкцииHTML + "".HTML"";
	
	Страница = Новый ЗаписьТекста(ИмяФайлаДляЗаписи, КодировкаТекста.UTF8);
	Страница.ЗаписатьСтроку(""<html>"");
	Страница.ЗаписатьСтроку(""<body>"");
	Страница.ЗаписатьСтроку(""<h3><p  style=""""font-size:40px"""">"");
	Для каждого Стр Из ЗаголовокФичи Цикл
		Страница.ЗаписатьСтроку(""<br>"" + Стр);
	КонецЦикла;
	Страница.ЗаписатьСтроку(""</p></h3>"");
	
	ИДСкриншота  = 0;
	Для каждого Сценарий Из МассивСценариев Цикл
		Страница.ЗаписатьСтроку(""<h1><p align=""""center"""" style=""""font-size:35px"""">"" + Сценарий.ИмяСценария + ""</p></h1>"");
		ИмяФичи = Сценарий.ИмяФичи;
		УбратьВсеЗапрещенныеСимволыИзИмениФайла(ИмяФичи);
		ИмяФичи = СтрЗаменить(ИмяФичи, "" "", ""_"");
		ИмяСценария = СтрЗаменить(Сценарий.ИмяСценария, "" "", ""_"");
		УбратьВсеЗапрещенныеСимволыИзИмениФайла(ИмяСценария);
		
		КаталогФичи = ДополнитьСлешВПуть(КаталогОбъектов) + ИмяФичи;
		ФайлКаталогФичи = Новый Файл(КаталогФичи);
		Если НЕ ФайлСуществуетКомандаСистемы(ФайлКаталогФичи.ПолноеИмя) Тогда
			СоздатьКаталогКомандаСистемы(КаталогФичи);
		КонецЕсли;
		
		МассивШагов = Сценарий.МассивШагов;
		НомШага = 0;
		Для каждого Шаг Из МассивШагов Цикл
			ИДСкриншота = ИДСкриншота + 1;
			НомШага = НомШага + 1;
			Страница.ЗаписатьСтроку("""");
			
			СтрокаШага = СтрЗаменить(Шаг.ИмяШага, ""\n"", Символы.ПС);
			МассивСтрок = РазложитьСтрокуВМассивПодстрок(СтрокаШага, Символы.ПС);
			Для Ккк = 0 По МассивСтрок.Количество() - 1 Цикл
				Стр = МассивСтрок[Ккк];
				Если Ккк = 0 Тогда
					Страница.ЗаписатьСтроку(""<p align=""""left"""" style=""""font-size:30px""""><b>"" + ПолучитьФорматированныйНомер(НомШага, 3) + ""</b>. "" + Стр + ""</p>"");
				Иначе
					ЕстьВертЧерта = Ложь;
					Если Найти(Стр, ""|"") > 0 Тогда
						ЕстьВертЧерта = Истина;
					КонецЕсли;
					
					Если ЕстьВертЧерта Тогда
						Страница.ЗаписатьСтроку(""<p align=""""left"""" style=""""font-size:30px""""><pre><font size=""""5"""" face=""""Lucida Console"""">"" + Стр + ""</font></pre></p>"");
					Иначе
						Страница.ЗаписатьСтроку(""<p align=""""left"""" style=""""font-size:30px"""">"" + Стр + ""</p>"");
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ФайлСкриншота = Новый Файл(Шаг.Скриншот);
			НовоеИмяФайлаСкриншота = СтрЗаменить(ИмяФичи + ""_"" + ИДСкриншота + ""_"" + Лев(ИмяСценария, 30) + ""_"" + ПолучитьФорматированныйНомер(НомШага, 3) + ФайлСкриншота.Расширение, "" "", ""_"");
			ИмяФайлаСкриншотаВКаталогеФичи = ФайлСкриншота.Путь + СтрЗаменить(ДополнитьСлешВПуть(ИмяФичи) + НовоеИмяФайлаСкриншота, "" "", ""_"");
			ФайлСкриншота = Неопределено;
			
			ПроцедураПереместитьФайл(Шаг.Скриншот, ИмяФайлаСкриншотаВКаталогеФичи);
			
			СтрСкриншотаДляHTML = СтрЗаменить(ДополнитьСлешВПуть(ИмяФичи) + НовоеИмяФайлаСкриншота, "" "", ""_"");
			Страница.ЗаписатьСтроку(""<img src="" + СтрЗаменить(СтрСкриншотаДляHTML, ""\"", ""/"") + "">"");
		КонецЦикла;
	КонецЦикла;
	
	Страница.ЗаписатьСтроку(""</body>"");
	Страница.ЗаписатьСтроку(""/<html>"");
	
	ТекстСообщения = ""Записываю %1"";
	ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяФайлаДляЗаписи);
	Сообщить(ТекстСообщения);
	Страница.Закрыть();
	
	УдалитьФайлыКомандаСистемы(ИмяФайлаЛогаИнструкцииHTML);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЗаголовокФичииИзЛогаИнструкции(ИмяФайла, СтрокаОкончанияЗаголовка)
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла, ""UTF-8"");
	
	ЗаголовокФичи = Новый Массив;
	Ном = 0;
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		Ном = Ном + 1;
		
		Если Стр = ""--окончание заголовка--"" Тогда
			СтрокаОкончанияЗаголовка = Ном;
			Прервать;
		КонецЕсли;
		
		ЗаголовокФичи.Добавить(Стр);
	КонецЦикла;
	
	Текст.Закрыть();
	
	Возврат ЗаголовокФичи;
КонецФункции


&НаКлиенте
Процедура СоздатьФайлMarkdownИнструкции()
	Если НЕ Объект.СоздаватьИнструкциюMarkdown Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаОкончанияЗаголовка = 0;
	ЗаголовокФичи            = ПолучитьЗаголовокФичииИзЛогаИнструкции(ИмяФайлаЛогаИнструкцииMarkdown, СтрокаОкончанияЗаголовка);
	
	ТД = Новый ЧтениеТекста(ИмяФайлаЛогаИнструкцииMarkdown, КодировкаТекста.UTF8);
	
	МассивСценариев = Новый Массив;
	МассивШагов     = Неопределено;
	Ном = 0;
	Стр = ТД.ПрочитатьСтроку();
	Пока Стр <> Неопределено Цикл
		Ном = Ном + 1;
		Если Ном <= СтрокаОкончанияЗаголовка Тогда
			Стр = ТД.ПрочитатьСтроку();
			Продолжить;
		КонецЕсли;
		
		
		Если Стр = ""НачалоСценария"" Тогда
			ТекСтруктура = Новый Структура;
			МассивШагов  = Новый Массив;
			
			ТекСтруктура.Вставить(""МассивШагов"", МассивШагов);
			
			МассивСценариев.Добавить(ТекСтруктура);
			Стр = ТД.ПрочитатьСтроку();
			Продолжить;
		ИначеЕсли Стр = ""НачалоШага"" Тогда
			ТекСтруктура = Новый Структура;
			
			МассивШагов.Добавить(ТекСтруктура);
			Стр = ТД.ПрочитатьСтроку();
			Продолжить;
		КонецЕсли;
		
		Поз = Найти(Стр, ""="");
		Если Поз = 0 Тогда
			ТекстСообщения = ""Странный параметр в логе инструкции Markdown: %1"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Стр);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		ИмяПараметра      = Лев(Стр, Поз - 1);
		ЗначениеПараметра = Сред(Стр, Поз + 1);
		
		ТекСтруктура.Вставить(ИмяПараметра, ЗначениеПараметра);
		Стр = ТД.ПрочитатьСтроку();
		
	КонецЦикла;
	ТД.Закрыть();
	
	КаталогОбъектов = Объект.КаталогOutputИнструкцияMarkdown;
	
	
	ИмяФайлаДляЗаписи = Объект.КаталогOutputИнструкцияMarkdown + ""/"" + ТекущаяФичаИнструкцииMarkdown + "".MD"";
	ЗТ = Новый ЗаписьТекста(ИмяФайлаДляЗаписи, ""Windows-1251"", , Ложь);
	ЗТ.Закрыть();//убираю BOM, специально для ATOM
	
	Страница = Новый ЗаписьТекста(ИмяФайлаДляЗаписи, ""UTF-8"", , Истина);
	//записываю заголовок
	Для каждого Стр Из ЗаголовокФичи Цикл
		Стр = СокрЛП(Стр);
		Если Найти(Стр, ""Функционал:"") > 0 Тогда
			Стр = СтрЗаменить(Стр, ""Функционал:"", ""**Функционал:**"");
		ИначеЕсли НРег(Лев(Стр, 3)) = ""как"" Тогда
			Стр =  ""> **Как**"" + Сред(Стр, 4);
			
		ИначеЕсли НРег(Лев(Стр, 4)) = ""хочу"" Тогда
			Стр =  ""> **Хочу**"" + Сред(Стр, 5);
		ИначеЕсли НРег(Лев(Стр, 6)) = ""я хочу"" Тогда
			Стр =  ""> **Я хочу**"" + Сред(Стр, 7);
		ИначеЕсли НРег(Лев(Стр, 5)) = ""чтобы"" Тогда
			Стр =  ""> **Чтобы**"" + Сред(Стр, 6);
		Иначе
			Стр = "" > "" + Стр;
		КонецЕсли;
		
		Страница.ЗаписатьСтроку(Стр);
		Страница.ЗаписатьСтроку("""");
	КонецЦикла;
	
	ИДСкриншота  = 0;
	ИДСценария   = 0;
	Для каждого Сценарий Из МассивСценариев Цикл
		ИДСценария = ИДСценария + 1;
		Если ИДСценария > 1 Тогда
			Страница.ЗаписатьСтроку("""");
		КонецЕсли;
		Страница.ЗаписатьСтроку("""");
		Страница.ЗаписатьСтроку(""**Сценарий:** "" + Сценарий.ИмяСценария);
		
		
		
		ИмяФичи = Сценарий.ИмяФичи;
		УбратьВсеЗапрещенныеСимволыИзИмениФайла(ИмяФичи);
		ИмяФичи = СтрЗаменить(ИмяФичи, "" "", ""_"");
		
		ИмяСценария = Сценарий.ИмяСценария;
		УбратьВсеЗапрещенныеСимволыИзИмениФайла(ИмяСценария);
		ИмяСценария = СтрЗаменить(ИмяСценария, "" "", ""_"");
		
		КаталогФичи = ДополнитьСлешВПуть(КаталогОбъектов) + ИмяФичи;
		
		ФайлКаталогФичи = Новый Файл(КаталогФичи);
		Если НЕ ФайлСуществуетКомандаСистемы(ФайлКаталогФичи.ПолноеИмя) Тогда
			СоздатьКаталогКомандаСистемы(КаталогФичи);
		КонецЕсли;
		
		МассивШагов = Сценарий.МассивШагов;
		НомШага = 0;
		Для каждого Шаг Из МассивШагов Цикл
			ИДСкриншота = ИДСкриншота + 1;
			НомШага = НомШага + 1;
			Страница.ЗаписатьСтроку("""");
			
			СтрокаШага = СтрЗаменить(Шаг.ИмяШага, ""\n"", Символы.ПС);
			МассивСтрок = РазложитьСтрокуВМассивПодстрок(СтрокаШага, Символы.ПС);
			Для Ккк = 0 По МассивСтрок.Количество() - 1 Цикл
				Стр = МассивСтрок[Ккк];
				Если Ккк = 0 Тогда
					Страница.ЗаписатьСтроку(""	"" + ПолучитьФорматированныйНомер(НомШага, 3) + "". "" + Стр);
				Иначе
					ЕстьВертЧерта = Ложь;
					Если Найти(Стр, ""|"") > 0 Тогда
						ЕстьВертЧерта = Истина;
					КонецЕсли;
					
					
					Если ЕстьВертЧерта Тогда
						Страница.ЗаписатьСтроку(""	"" + Стр);
					Иначе
						Страница.ЗаписатьСтроку(""	"" + Стр);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			ФайлСкриншота = Новый Файл(Шаг.Скриншот);
			НовоеИмяФайлаСкриншота = СтрЗаменить(ИмяФичи + ""_"" + ИДСкриншота + ""_"" + Лев(ИмяСценария, 30) + ""_"" + ПолучитьФорматированныйНомер(НомШага, 3) + ФайлСкриншота.Расширение, "" "", ""_"");
			ИмяФайлаСкриншотаВКаталогеФичи = ФайлСкриншота.Путь + СтрЗаменить(ДополнитьСлешВПуть(ИмяФичи) + НовоеИмяФайлаСкриншота, "" "", ""_"");
			ФайлСкриншота = Неопределено;
			
			ПроцедураПереместитьФайл(Шаг.Скриншот, ИмяФайлаСкриншотаВКаталогеФичи);
			
			СтрСкриншотаДляMarkdown = СтрЗаменить(ДополнитьСлешВПуть(ИмяФичи) + НовоеИмяФайлаСкриншота, "" "", ""_"");
			Страница.ЗаписатьСтроку(""![]("" + СтрЗаменить(СтрСкриншотаДляMarkdown, ""\"", ""/"") + "")"");
		КонецЦикла;
	КонецЦикла;
	
	ТекстСообщения = ""Записываю %1"";
	ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяФайлаДляЗаписи);
	Сообщить(ТекстСообщения);
	Страница.Закрыть();
	
	УдалитьФайлыКомандаСистемы(ИмяФайлаЛогаИнструкцииMarkdown);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроцедураПереместитьФайл(Знач Стр1, Знач Стр2)
	ПереместитьФайлКомандаСистемы(Стр1, Стр2);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьФорматированныйНомер(НомШага, КолСимволов)
	Стр = Строка(НомШага);
	Стр = СтрЗаменить(Стр, Символы.НПП, """");
	
	Пока СтрДлина(Стр) < КолСимволов Цикл
		Стр = ""0"" + Стр;
	КонецЦикла;
	
	Возврат Стр;
КонецФункции

#Область АссертыСлужебное
//портирован блок ассертов из проекта xUnitFor1C (https://github.com/xDrivenDevelopment/xUnitFor1C)
//взят релиз 3.0.0.3
//{ МЕТОДЫ ДЛЯ ПРОВЕРКИ ЗНАЧЕНИЙ (assertions).

&НаКлиенте
Функция ФорматДСО(ДопСообщениеОшибки)
	Если ДопСообщениеОшибки = """" Тогда
		Возврат """";
	КонецЕсли;
	
	Возврат Символы.ПС + ДопСообщениеОшибки;
КонецФункции

&НаКлиенте
Процедура ВызватьОшибкуПроверки(СообщениеОшибки)
	
	Префикс = ""["" + СтатусыРезультатаТестирования.ОшибкаПроверки + ""]"";
	ТекстСообщения = Префикс + "" "" + СообщениеОшибки;
	ВызватьИсключение ТекстСообщения;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПараметрыСтрокой(Параметры, ИмяПеременной = ""Параметры"")
	
	ПараметрыСтрока = """";
	Если Параметры <> Неопределено Тогда
		Если ТипЗнч(Параметры) = Тип(""Массив"") Тогда
			Для Индекс = 0 По Параметры.ВГраница() Цикл
				ПараметрыСтрока = ПараметрыСтрока + "", "" + ИмяПеременной + ""["" + Формат(Индекс, ""ЧН=0; ЧГ=0"") + ""]"";
			КонецЦикла;
			ПараметрыСтрока = Сред(ПараметрыСтрока, 3);
		Иначе
			ПараметрыСтрока = ИмяПеременной;
		КонецЕсли;
	КонецЕсли;
	
	Возврат ПараметрыСтрока;
	
КонецФункции

// Только для внутреннего использования
&НаСервере
Процедура ПроверитьВалидностьЗапросаСКДНаСервере(ТекстЗапроса, ДопСообщениеОшибки = """")
	Объект().ПроверитьВалидностьЗапросаСКД(ТекстЗапроса, ДопСообщениеОшибки);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОпределитьКоличествоПередаваемыхТаблиц(СтрокаДерева)
	Если СтрокаДерева.ШагСПараметрамиВТаблице <> Истина Тогда
		Возврат 0;
	КонецЕсли;
	
	Количество = 1;
	Для Каждого ПодчиненнаяСтрокаДерева Из СтрокаДерева.Строки Цикл
		Если Не ЗначениеЗаполнено(ПодчиненнаяСтрокаДерева.Имя) Тогда
			Количество = Количество + 1;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Количество;
КонецФункции

&НаСервере
Функция СоздатьДанныеПоТабличномуДокументуСервер(ТабличныйДокумент, РежимыЗагрузкиИлиИмяКолонкиЗамещения, ИмяКолонкиЗамещения)
	Данные = Объект().СоздатьДанныеПоТабличномуДокументу(ТабличныйДокумент, РежимыЗагрузкиИлиИмяКолонкиЗамещения, ИмяКолонкиЗамещения);
	Возврат Данные;
КонецФункции
// { работа с данными текущего теста

&НаКлиенте
Процедура УстановитьДанныеТекущегоТеста(ДанныеТекущегоТеста)
	
	//УстановитьКонтекст(ДанныеТекущегоТеста, ИдентификаторКонтекстаДанныхТекущегоТеста());
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДанныеТекущегоТеста()
	
	//УдалитьКонтекст(ИдентификаторКонтекстаДанныхТекущегоТеста());
	
КонецПроцедуры

&НаКлиенте
Функция ПустыеДанныеТекущегоТеста()
	
	ДанныеТеста = Новый Структура;
	ДанныеТеста.Вставить(""Имя"", """");
	ДанныеТеста.Вставить(""ПолныйПуть"", """");
	ДанныеТеста.Вставить(""СостояниеТеста"", """");
	
	Возврат ДанныеТеста;
	
КонецФункции

Функция ИдентификаторКонтекстаДанныхТекущегоТеста()
	
	Возврат ""xUnitFor1C_ДанныеТекущегоТеста"";
	
КонецФункции

// }
#КонецОбласти

&НаСервереБезКонтекста
Процедура ДобавитьШагиВМассив(ДеревоСтроки, Шаги)
	Для каждого СтрДеревоСтроки Из ДеревоСтроки Цикл
		Если СтрДеревоСтроки.Тип = ""Примеры"" Тогда
			//эти сценарии уже учтены
			Продолжить;
		КонецЕсли;
		
		Если СтрДеревоСтроки.Тип = ""Шаг"" Тогда
			СтруктураШага = Новый Структура;
			СтруктураШага.Вставить(""Имя"", СтрДеревоСтроки.Имя);
			СтруктураШага.Вставить(""ИмяШагаБезКлючевогоСлова"", СтрДеревоСтроки.ИмяШагаБезКлючевогоСлова);
			СтруктураШага.Вставить(""АдресСнипета"", СтрДеревоСтроки.АдресСнипета);
			СтруктураШага.Вставить(""ШагСПараметрамиВТаблице"", СтрДеревоСтроки.ШагСПараметрамиВТаблице);
			СтруктураШага.Вставить(""КоличествоПередаваемыхТаблиц"", ОпределитьКоличествоПередаваемыхТаблиц(СтрДеревоСтроки));
			Шаги.Добавить(СтруктураШага);
		КонецЕсли;
		ДобавитьШагиВМассив(СтрДеревоСтроки.Строки, Шаги);
	КонецЦикла
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ДобавитьИменаФайловФичИзДереваВМассив(ДеревоСтроки, МассивФич, МассивШагов)
	Для каждого СтрДеревоСтроки Из ДеревоСтроки Цикл
		Если СтрДеревоСтроки.Тип = ""Фича"" Тогда
			МассивФич.Добавить(СтрДеревоСтроки.ПолныйПуть);
			Шаги = Новый Массив;
			ДобавитьШагиВМассив(СтрДеревоСтроки.Строки, Шаги);
			МассивШагов.Добавить(Шаги);
		КонецЕсли;
		ДобавитьИменаФайловФичИзДереваВМассив(СтрДеревоСтроки.Строки, МассивФич, МассивШагов);
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПолучитьСписокФичПоДеревуИСоздатьEPFПоМассивуФич(СтруктураПараметров, МассивФич, МассивШагов)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Дерево = ОбъектСервер.ДеревоТестов;
	
	ДобавитьИменаФайловФичИзДереваВМассив(Дерево.Строки, МассивФич, МассивШагов);
	
	СтруктураПараметров.Вставить(""КонтекстVanessaBehavoir"", ОбъектСервер);
	
	СтруктураПараметров.КонтекстVanessaBehavoir = """";
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьКомандуОС(Стр)
	КомандаСистемы(Стр);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьФайлВерсииИсходников(ИмяФайлаВерсииИсходников, ИмяФайлаОригинала)
	Возврат;
	
	
	ФайлВерсии = Новый Файл(ИмяФайлаВерсииИсходников);
	Если ФайлВерсии.Существует() Тогда
		УдалитьФайлы(ФайлВерсии.ПолноеИмя);
	КонецЕсли;
	
	Файл   = Новый Файл(ИмяФайлаОригинала);
	Версия = Строка(Файл.ПолучитьВремяИзменения());
	
	ЗТ = Новый ЗаписьТекста(ИмяФайлаВерсииИсходников, ""UTF-8"", , Истина);
	ЗТ.ЗаписатьСтроку(""Версия="" + Версия);
	
	ЗТ.Закрыть();
	
КонецПроцедуры

&НаКлиенте
Функция РаспаковатьEPF(СтруктураОписанияEpf, КаталогДляВременныхФайлов)
	
	ИмяФайла = СтруктураОписанияEpf.ИмяФайлаEPF;
	
	Попытка
		
		ВременныйКаталогБазы = СтруктураОписанияEpf.КаталогБазы1С;
		Если Не ЗначениеЗаполнено(ВременныйКаталогБазы) Тогда
			ВременныйКаталогБазы = ПолучитьПутьВременногоФайла(КаталогДляВременныхФайлов);
			ДопСообщениеОшибки = ""Файл EPF не создан. Не смог создать каталог временной базы."";
			Если Не СоздатьБазу1С(ВременныйКаталогБазы, КаталогДляВременныхФайлов, ДопСообщениеОшибки) Тогда
				Возврат Неопределено;
			КонецЕсли;
			СтруктураОписанияEpf.КаталогБазы1С = ВременныйКаталогБазы;
		КонецЕсли;
		
		ПутьКИсходникам = ПолучитьПутьВременногоФайла(КаталогДляВременныхФайлов);
		Отладка(""Создаю каталог для выгрузки исходников файла шагов "" + ПутьКИсходникам);
		СоздатьКаталогКомандаСистемы(ПутьКИсходникам);
		
		СтрокаЗапуска1С = """""""" + ДополнитьСлешВПуть(Объект.ВерсияПлатформыДляГенерацииEPF) + ""1cv8"""" DESIGNER /F """""" 
			+ ВременныйКаталогБазы + """""" /DumpExternalDataProcessorOrReportToFiles  """""" + ПутьКИсходникам 
			+ """""" """""" + ИмяФайла + """""""";
		
		ОписаниеЗапуска = Запустить1С(СтрокаЗапуска1С, КаталогДляВременныхФайлов);
		
		СписокКаталогов = Новый СписокЗначений;
		СписокФайлов    = Новый СписокЗначений;
		
		НайтиФайлыКомандаСистемы(ПутьКИсходникам, СписокКаталогов, СписокФайлов, Ложь, КаталогДляВременныхФайлов);
		Если СписокФайлов.Количество() <> 1 Тогда
			ТекстСообщения = ""В каталоге <%1> должен был быть один файл xml."";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ПутьКИсходникам);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		ФайлXML = СписокФайлов[0].Значение;
		СтруктураОписанияEpf.Вставить(""РеальноеИмяОбработки"", ФайлXML.ИмяБезРасширения);
		
		СтруктураОписанияEpf.КаталогИсходников = ПутьКИсходникам;

		СтруктураОписанияEpf.ВременноеИмяМодуля = ПутьКИсходникам + ""/"" + ФайлXML.ИмяБезРасширения + 
			""/Forms/Форма/Ext/Form/Module.bsl"";
		
		Возврат СтруктураОписанияEpf.ВременноеИмяМодуля;
		
	Исключение
		ТекстСообщения = ""Не смог распаковать %1"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяФайла);
		СделатьСообщение(ТекстСообщения);
		СделатьСообщение(ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Неопределено;
КонецФункции

// Создает базу 1С
//
// Параметры:
//   КаталогБазы - Строка - путь к каталогу, где нужно создать базу
//   КаталогДляВременныхФайлов - Строка - Каталог для создания временных файлов - для оптимизации их удаления
//   ДопСообщениеОшибки - Строка - Сообщение, которое нужно показать в случае ошибки. Необязательно
//
//  Возвращаемое значение:
//   Булево - Успешно или нет
//
&НаКлиенте
Функция СоздатьБазу1С(Знач КаталогБазы, Знач КаталогДляВременныхФайлов, Знач ДопСообщениеОшибки = """")
	ВременныйКаталогБазы = КаталогБазы; // TODO избавиться от временной переменной ВременныйКаталогБазы
	
	Отладка(""Создаю каталог для базы 1С "" + КаталогБазы);
	СоздатьКаталогКомандаСистемы(ВременныйКаталогБазы);
	
	СтрокаЗапуска1С = """""""" + ДополнитьСлешВПуть(Объект.ВерсияПлатформыДляГенерацииEPF) + ""1cv8"""" CREATEINFOBASE File=""""""  
	+ ВременныйКаталогБазы +  """""""";
	
	ОписаниеЗапуска = Запустить1С(СтрокаЗапуска1С, КаталогДляВременныхФайлов);
	ИмяФайлаЛога = ОписаниеЗапуска.ИмяФайлаЛога;
	ИмяФайлаOUT = ОписаниеЗапуска.ИмяФайлаOUT;
	
	Если НЕ ФайлСуществуетКомандаСистемы(ВременныйКаталогБазы + ""/1Cv8.1CD"") Тогда
		Если ЗначениеЗаполнено(ДопСообщениеОшибки) Тогда
			СделатьСообщение(ДопСообщениеОшибки);
		КонецЕсли;
		ВывестиТекстФайлаЛога(ИмяФайлаЛога);
		ВывестиТекстФайлаЛога(ИмяФайлаOUT);
		
		ТекстСообщения = ""Проверьте работу команды <%1>"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"", СтрокаЗапуска1С);
		СделатьСообщение(ТекстСообщения);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

// Выполняет запуск 1С (Конфигуратор, Предприятие) и возвращает структурус путями к файлам логов (ключ ИмяФайлаOUT и ИмяФайлаЛога)
// ВНИМАНИЕ: файлы логов нужно удалять самостоятельно.
//
// Параметры:
//   СтрокаЗапуска1С - Строка - строка запуска 1С
//
//  Возвращаемое значение:
//   Структура - структура с путями к файлам логов (ключ ИмяФайлаOUT и ИмяФайлаЛога)
//
&НаКлиенте
Функция Запустить1С(Знач СтрокаЗапуска1С, Знач КаталогДляВременныхФайлов)
	Рез = Новый Структура;
	
	ИмяФайлаЛога = ПолучитьПутьВременногоФайла(КаталогДляВременныхФайлов, ""txt"");
	ИмяФайлаOUT = ПолучитьПутьВременногоФайла(КаталогДляВременныхФайлов, ""txt"");
	
	Рез.Вставить(""ИмяФайлаЛога"", ИмяФайлаЛога);
	Рез.Вставить(""ИмяФайлаOUT"", ИмяФайлаOUT);
	
	КомандаСистемы = СтрокаЗапуска1С + "" /out "" + ИмяФайлаOUT + "" > "" + ИмяФайлаЛога;
	
	Отладка(КомандаСистемы);
	ВыполнитьКомандуОСБезПоказаЧерногоОкна(КомандаСистемы, Истина, Ложь); //TODO код возврата получить, хотя бы от Конфигуратора??
	
	Возврат Рез;
КонецФункции

&НаКлиенте
Функция СоздатьПустуюСтруктуруEpf()
	Стр = Новый Структура;
	Стр.Вставить(""ИмяФичи"", """");
	Стр.Вставить(""ИмяФайлаEpf"", """");
	Стр.Вставить(""ВременноеИмяМодуля"", """");
	Стр.Вставить(""ТелоМодуля"", """");//таблица значений
	Стр.Вставить(""КаталогИсходников"", """");
	Стр.Вставить(""ФайлEpfПересоздавался"", Ложь);
	Стр.Вставить(""РеальноеИмяОбработки"", Неопределено);
	Стр.Вставить(""КаталогБазы1С"", """");
	
	Возврат Стр;
КонецФункции

&НаСервереБезКонтекста
Функция ЗагрузитьТелоМодуляВТаблицуЗначенийСервер(ДвоичныеДанные, ШагСтрокДляМодуля)
	ПутьКФайлу = ПолучитьИмяВременногоФайла(""txt"");
	
	ДвоичныеДанные.Записать(ПутьКФайлу);//TODO подумать об ускорении через Потоки или другой алгоритм
	
	Тзн = Новый ТаблицаЗначений;
	Тзн.Колонки.Добавить(""НомСтр"");
	Тзн.Колонки.Добавить(""Стр"");
	
	НомСтр = 0;
	ПромФайл = Новый Файл(ПутьКФайлу);
	Если Не ПромФайл.Существует() Тогда
		СтрОшибки = ""Файл """""" + ПутьКФайлу + """""" не существует."";
		Сообщить(СтрОшибки);
		ВызватьИсключение СтрОшибки;
	КонецЕсли;
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ПутьКФайлу, ""UTF-8"");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		НомСтр = НомСтр + ШагСтрокДляМодуля;
		
		СтрТзн        = Тзн.Добавить();
		СтрТзн.НомСтр = НомСтр;
		СтрТзн.Стр    = Стр;
	КонецЦикла;
	
	Текст.Закрыть();
	
	Возврат ЗначениеВСтрокуВнутр(Тзн);
КонецФункции

&НаКлиенте
Функция ЗагрузитьТелоМодуляВТаблицуЗначений(ПутьКФайлу)
	ФайлПроверкаСуществования = Новый Файл(ПутьКФайлу);
	ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКФайлу);
	Возврат ЗагрузитьТелоМодуляВТаблицуЗначенийСервер(ДвоичныеДанные, ШагСтрокДляМодуля);
КонецФункции

&НаКлиенте
Функция НайтиФайлВМассивеФайлов(МассивФайлов, ИмяФайла)
	УниверсальноеИмяФайла = УниверсальноеПолноеИмяФайла(ИмяФайла, Истина);
	Для каждого Элем Из МассивФайлов Цикл
		
		Если ТипЗнч(Элем) = Тип(""Структура"") Тогда
			Файл = Элем.Файл;
		Иначе
			Файл = Элем;
		КонецЕсли;
		
		Если СравнитьОбычныйПутьФайлаСУниверсальнымПутемДругогоФайла(Файл.ПолноеИмя, УниверсальноеИмяФайла) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция СоздатьСтруктураОписанияEpf(ОтносительныйКаталогФичи, ИмяТекущейФичи, ДополнительныеПараметры, 
	КаталогДляВременныхФайлов, КаталогБазы1С)
	
	КаталогИнструментов = Объект.КаталогИнструментов;
	ГенерироватьУФ      = Объект.ГенерироватьУФ;
	
	СтруктураОписанияEpf = СоздатьПустуюСтруктуруEpf();
	СтруктураОписанияEpf.ИмяФичи = ИмяТекущейФичи;
	СтруктураОписанияEpf.КаталогБазы1С = КаталогБазы1С;
	
	СтруктураОписанияEpf.ИмяФайлаEpf        = УниверсальноеПолноеИмяФайлаШаговФичи(
		ДополнитьСлешВПуть(ОтносительныйКаталогФичи), ИмяТекущейФичи, ЭтоLinux);
	
	ФайлEpf = Новый Файл(СтруктураОписанияEpf.ИмяФайлаEpf);
	Если НЕ ЕстьПоддержкаАсинхронныхВызовов Тогда
		ФайлСуществует = ФайлEpf.Существует();
		Если Не ФайлСуществует Тогда
			ИмяФайлаEpf_Устаревший = УниверсальноеПолноеИмяФайлаШаговФичи_Устаревший(
				ДополнитьСлешВПуть(ОтносительныйКаталогФичи), ИмяТекущейФичи, ЭтоLinux);
			ФайлEpf = Новый Файл(ИмяФайлаEpf_Устаревший);
			Если ФайлEpf.Существует() Тогда
				ПереместитьФайлКомандаСистемы(ИмяФайлаEpf_Устаревший, СтруктураОписанияEpf.ИмяФайлаEpf);
			КонецЕсли; 
		КонецЕсли; 
	Иначе
		МассивФайлов = ПолучитьЗначениеПоРанееСобраннойИнформации(ДополнительныеПараметры, ""ПоискEPF"", ""НайденныеФайлы"");
		ФайлСуществует = НайтиФайлВМассивеФайлов(МассивФайлов, СтруктураОписанияEpf.ИмяФайлаEpf);
		Если Не ФайлСуществует Тогда
			ИмяФайлаEpf_Устаревший = УниверсальноеПолноеИмяФайлаШаговФичи_Устаревший(
				ДополнитьСлешВПуть(ОтносительныйКаталогФичи), ИмяТекущейФичи, ЭтоLinux);
			
			ФайлСуществует = НайтиФайлВМассивеФайлов(МассивФайлов, ИмяФайлаEpf_Устаревший);
			Если ФайлСуществует Тогда
				ПереместитьФайлКомандаСистемы(ИмяФайлаEpf_Устаревший, СтруктураОписанияEpf.ИмяФайлаEpf);
			КонецЕсли; 
		КонецЕсли;
	КонецЕсли;
	
	Если ФайлСуществует Тогда //т.е. если мы не первый раз работаем с данной фичей
		Если НЕ Объект.ВыводитьТекстМодуляВместоПерегенерацииEPF Тогда

			РаспаковатьEPF(СтруктураОписанияEpf, КаталогДляВременныхФайлов);
			СтруктураОписанияEpf.ФайлEpfПересоздавался = Истина;
			
			КаталогБазы1С = СтруктураОписанияEpf.КаталогБазы1С;
		КонецЕсли;
	КонецЕсли;
	
	Если Не СтруктураОписанияEpf.ФайлEpfПересоздавался Тогда
		ВременныйКаталогИсходников = ПолучитьПутьВременногоФайла(КаталогДляВременныхФайлов);
		СоздатьКаталогКомандаСистемы(ВременныйКаталогИсходников);
		СтруктураОписанияEpf.КаталогИсходников = ВременныйКаталогИсходников;
		
		ПутьКШаблону = ДополнитьСлешВПуть(Объект.КаталогИнструментов) + ""lib/TemplateEpf"";
		Если ГенерироватьУФ Тогда
			ПутьКШаблону = ДополнитьСлешВПуть(Объект.КаталогИнструментов) + ""lib/TemplateEpfUF"";
		КонецЕсли;
		ФайлШаблон = Новый Файл(ПутьКШаблону);
		ПутьКШаблону = ФайлШаблон.ПолноеИмя;
		КопироватьКаталогКомандаСистемы(ПутьКШаблону, ВременныйКаталогИсходников);
	КонецЕсли;
	
	Если Не СтруктураОписанияEpf.ФайлEpfПересоздавался Тогда
		СтруктураОписанияEpf.ВременноеИмяМодуля = ДополнитьСлешВПуть(СтруктураОписанияEpf.КаталогИсходников) 
		+ ""Обработка/Ext/ObjectModule.bsl"";
		Если ГенерироватьУФ Тогда
			СтруктураОписанияEpf.ВременноеИмяМодуля = ДополнитьСлешВПуть(СтруктураОписанияEpf.КаталогИсходников) 
			+ ""Обработка/Forms/Форма/Ext/Form/Module.bsl"";
		КонецЕсли;
		
		Файл = Новый Файл(СтруктураОписанияEpf.ВременноеИмяМодуля);
		СтруктураОписанияEpf.ВременноеИмяМодуля = Файл.ПолноеИмя;
		ЗТ = Новый ЗаписьТекста(СтруктураОписанияEpf.ВременноеИмяМодуля, ""UTF-8"", , Ложь);
		ЗТ.Закрыть();
	КонецЕсли;
	
	СтруктураОписанияEpf.ТелоМодуля = ЗагрузитьТелоМодуляВТаблицуЗначений(СтруктураОписанияEpf.ВременноеИмяМодуля);
	
	Возврат СтруктураОписанияEpf;
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьПутьВременногоФайла(Знач КаталогДляВременныхФайлов, Знач Расширение = """")
	НовоеИмя = ПолучитьИмяВременногоФайла(Расширение);
	Файл = Новый Файл(НовоеИмя);
	НовоеИмя = КаталогДляВременныхФайлов + ""/"" + Файл.Имя;
	Возврат НовоеИмя;
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьТелоМодуляВМассивСервер(Стр)
	ТелоМодуля = ЗначениеИзСтрокиВнутр(Стр);
	ТелоМодуля.Сортировать(""НомСтр"");
	Массив = ТелоМодуля.ВыгрузитьКолонку(""Стр"");
	
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура УдалитьИзФайлаМодуляФормыУФТестМодуляФормы(ИмяФайлаФормаУФ)
	Файл = Новый Файл(ИмяФайлаФормаУФ);
	
	Если Не ФайлСуществуетКомандаСистемы(ИмяФайлаФормаУФ) Тогда
		ТекстСообщения = ""УдалитьИзФайлаМодуляФормыУФТестМодуляФормы. Файл %1 не найден."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяФайлаФормаУФ);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ВременноеИмяФайла = ПолучитьИмяВременногоФайла(""txt"");
	
	ЗТ = Новый ЗаписьТекста(ВременноеИмяФайла, ""UTF-8"", , Истина);
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайлаФормаУФ, ""UTF-8"");
	
	НачалоМодуля = -1;
	КонецМодуля  = -1;
	
	НашлиМодуль = Ложь;
	
	КолСкобок1  = 0;
	КолСкобок2  = 0;
	НомерСтроки = 0;
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
		
		КолСкобок1 = КолСкобок1 + СтрЧислоВхождений(Стр, ""{"");
		КолСкобок2 = КолСкобок2 + СтрЧислоВхождений(Стр, ""}"");
		
		Если (НачалоМодуля > 0) И НЕ НашлиМодуль Тогда
			Если Лев(Стр, 1) = ""{"" Тогда
				КонецМодуля = НомерСтроки;
				ЗТ.ЗаписатьСтроку("""""","");
				ЗТ.ЗаписатьСтроку(Стр);
				НашлиМодуль = Истина;
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если (НомерСтроки > 2) И (НачалоМодуля = -1) И НЕ НашлиМодуль Тогда
			//Если (КолСкобок1 - КолСкобок2) = 1 Тогда //значит сейчас начинается модуль
			Поз = Найти(Стр, ""},"""""");
			Если (Поз > 0) И (Прав(Стр, 1) <> "","") Тогда
				НачалоМодуля = НомерСтроки;
				
				НачалоСтроки = Лев(Стр, Поз - 1);
				
				ЗТ.ЗаписатьСтроку(НачалоСтроки + ""},""""//начало текста модуля"");
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		
		Если (НачалоМодуля > 0) и НЕ НашлиМодуль Тогда
			Продолжить;
		КонецЕсли;
		
		ЗТ.ЗаписатьСтроку(Стр);
		
	КонецЦикла;
	
	Текст.Закрыть();
	ЗТ.Закрыть();
	
	
	Если Не НашлиМодуль Тогда
		ВызватьИсключение ""Не смог найти код модуля формы в файле ИмяФайлаФормаУФ."";
	КонецЕсли;
	
	
	Отладка(""Копирую файл "" + ВременноеИмяФайла + "" в "" + ИмяФайлаФормаУФ);
	КопироватьФайлКомандаСистемы(ВременноеИмяФайла, ИмяФайлаФормаУФ);
	
КонецПроцедуры

// TODO Дубль кода в методах ""УбратьСпецсимволыИзИмениОбработки"" из УФ bddRunner, ОФ bddRunner и модуля объекта из vbFeatureReader
&НаКлиентеНаСервереБезКонтекста
Функция УбратьСпецсимволыИзИмениОбработки(Знач Стр)
	Стр = СтрЗаменить(Стр, "" "", ""_"");
	Стр = СтрЗаменить(Стр, ""`"", """");
	Стр = СтрЗаменить(Стр, ""~"", """");
	Стр = СтрЗаменить(Стр, ""'"", """");
	Стр = СтрЗаменить(Стр, ""."", """");
	Стр = СтрЗаменить(Стр, "","", """");
	Стр = СтрЗаменить(Стр, "":"", """");
	Стр = СтрЗаменить(Стр, "";"", """");
	Стр = СтрЗаменить(Стр, ""-"", ""_"");
	Стр = СтрЗаменить(Стр, ""+"", """");
	Стр = СтрЗаменить(Стр, ""/"", """");
	Стр = СтрЗаменить(Стр, ""\"", """");
	Стр = СтрЗаменить(Стр, ""="", """");
	Стр = СтрЗаменить(Стр, ""!"", """");
	Стр = СтрЗаменить(Стр, ""@"", """");
	Стр = СтрЗаменить(Стр, ""#"", """");
	Стр = СтрЗаменить(Стр, ""$"", """");
	Стр = СтрЗаменить(Стр, ""%"", """");
	Стр = СтрЗаменить(Стр, ""^"", """");
	Стр = СтрЗаменить(Стр, ""&"", """");
	Стр = СтрЗаменить(Стр, ""*"", """");
	Стр = СтрЗаменить(Стр, ""("", """");
	Стр = СтрЗаменить(Стр, "")"", """");
	Стр = СтрЗаменить(Стр, ""№"", """");
	Стр = СтрЗаменить(Стр, ""?"", """");
	Стр = СтрЗаменить(Стр, ""<"", """");
	Стр = СтрЗаменить(Стр, "">"", """");
	
	ЛевСимвол = Лев(Стр, 1);
	Если ЛевСимвол = ""0"" 
		Или ЛевСимвол = ""1""
		Или ЛевСимвол = ""2""
		Или ЛевСимвол = ""3""
		Или ЛевСимвол = ""4""
		Или ЛевСимвол = ""5""
		Или ЛевСимвол = ""6""
		Или ЛевСимвол = ""7""
		Или ЛевСимвол = ""8""
		Или ЛевСимвол = ""9""
		Тогда
		Стр = ""_"" + Стр;
	КонецЕсли;	 
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Процедура ЗаменитьСтрокиВФайлеОсновыОбработки(ПутьКИсходникам, ИмяОбработки)
	
	МассивФайлов = Новый Массив;
	МассивФайлов.Добавить(Новый Файл(ПутьКИсходникам + ""/"" + ИмяОбработки + "".xml""));
	МассивФайлов.Добавить(Новый Файл(ПутьКИсходникам + ""/"" + ИмяОбработки +  ""/Forms/Форма/Ext/Form.xml""));
	
	Для Каждого Файл Из МассивФайлов Цикл
		Если НЕ ФайлСуществуетКомандаСистемы(Файл.ПолноеИмя) Тогда
			Продолжить;
		КонецЕсли;
		
		Замены = Новый Соответствие;
		Замены.Вставить(""<Name>Обработка</Name>"", ""<Name>"" + ИмяОбработки + ""</Name>"");
		Замены.Вставить(""<v8:content>Обработка</v8:content>"", ""<v8:content>"" + ИмяОбработки + ""</v8:content>"");
		Замены.Вставить(""ExternalDataProcessor.Обработка."", ""ExternalDataProcessor."" + ИмяОбработки + ""."");
		Замены.Вставить(""ExternalDataProcessorObject.Обработка"", ""ExternalDataProcessorObject."" + ИмяОбработки);

		// оптимизация замены в файле
		МассивСтрок = ЗагрузитьФайлВМассив(Файл.ПолноеИмя);
		ЗТ = Новый ЗаписьТекста(Файл.ПолноеИмя, ""UTF-8"");
		Для каждого Стр Из МассивСтрок Цикл
			ДлинаСтрокиДо = СтрДлина(Стр);
			ЗаменаВыполнена = Ложь;
			Для каждого Замена Из Замены Цикл
				Стр = СтрЗаменить(Стр, Замена.Ключ, Замена.Значение);
				Если СтрДлина(Стр) <> ДлинаСтрокиДо Тогда
					ЗаменаВыполнена = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Если ЗаменаВыполнена Тогда
				Замены.Удалить(Замена.Ключ);
			КонецЕсли;
			
			ЗТ.ЗаписатьСтроку(Стр);
		КонецЦикла;
		ЗТ.Закрыть();

	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьКаталогЕслиЕгоНет(Путь)
	Если СокрЛП(Путь) = """" Тогда
		ВызватьИсключение ""Передан пустой путь в процедуру """"СоздатьКаталогЕслиЕгоНет""""."";
	КонецЕсли;
	Отладка(""Создаю каталог - метод СоздатьКаталогЕслиЕгоНет - "" + Путь);
	
	СоздатьКаталогКомандаСистемы(Путь);
КонецПроцедуры

&НаКлиенте
Процедура ВывестиТекстФайлаЛога(ИмяФайла)
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла, ""UTF-8"");
	
	Сообщить(Текст.Прочитать());
	
	Текст.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьФайлыОбработок(СтруктураОписанияEpf, КаталогДляВременныхФайлов)
	
	ГенерироватьУФ = Объект.ГенерироватьУФ;
	КаталогИнструментов = Объект.КаталогИнструментов;
	ТекстМодуля = """";
	
	ТелоМодуля = СтруктураОписанияEpf.ТелоМодуля;

	ТелоМодуля = ПолучитьТелоМодуляВМассивСервер(ТелоМодуля);
	
	Отладка(""Буду записывать "" + СтруктураОписанияEpf.ВременноеИмяМодуля);
	
	ЗТ = Новый ЗаписьТекста(СтруктураОписанияEpf.ВременноеИмяМодуля, ""UTF-8"", , Ложь);
	Для Каждого СтрТелоМодуля Из ТелоМодуля Цикл
		ЗТ.ЗаписатьСтроку(СтрТелоМодуля);
	КонецЦикла;
	ЗТ.Закрыть();
	Отладка(""Записал "" + СтруктураОписанияEpf.ВременноеИмяМодуля);
	
	ПутьКИсходникам = СтруктураОписанияEpf.КаталогИсходников;
	
	ИмяВременногоEPF = ПолучитьПутьВременногоФайла(КаталогДляВременныхФайлов, ""epf"");
	
	ИмяОбработки = УбратьСпецсимволыИзИмениОбработки(СтруктураОписанияEpf.ИмяФичи);
	Если ЗначениеЗаполнено(СтруктураОписанияEpf.РеальноеИмяОбработки) Тогда
		ИмяОбработки = СтруктураОписанияEpf.РеальноеИмяОбработки;
	КонецЕсли;
	
	КорневойФайлОбработки = ПутьКИсходникам + ""/"" + ИмяОбработки + "".xml"";
	
	Если НЕ СтруктураОписанияEpf.ФайлEpfПересоздавался Тогда
		СоздатьКаталогКомандаСистемы(ПутьКИсходникам + ""/"" + ИмяОбработки);
		КопироватьКаталогКомандаСистемы(ПутьКИсходникам + ""/Обработка"", ПутьКИсходникам + ""/"" + ИмяОбработки, КаталогДляВременныхФайлов);
		ПереместитьФайлКомандаСистемы(ПутьКИсходникам + ""/Обработка.xml"", КорневойФайлОбработки);
		
		ЗаменитьСтрокиВФайлеОсновыОбработки(ПутьКИсходникам, ИмяОбработки);
	КонецЕсли;
	
	ВременныйКаталогБазы = СтруктураОписанияEpf.КаталогБазы1С;
	Если Не ЗначениеЗаполнено(ВременныйКаталогБазы) Тогда
		ВременныйКаталогБазы = ПолучитьПутьВременногоФайла(КаталогДляВременныхФайлов);
		ДопСообщениеОшибки = ""Файл EPF не создан. Не смог создать каталог временной базы."";
		Если Не СоздатьБазу1С(ВременныйКаталогБазы, КаталогДляВременныхФайлов, ДопСообщениеОшибки) Тогда
			Возврат; //TODO переделать СоздатьФайлыОбработок в функцию для выдачи состояния выполнения ??
		КонецЕсли;
		СтруктураОписанияEpf.КаталогБазы1С = ВременныйКаталогБазы;
	КонецЕсли;
	
	Если ЭтоLinux Тогда
		СтрокаЗапуска1С = """" + ДополнитьСлешВПуть(Объект.ВерсияПлатформыДляГенерацииEPF) + ""1cv8 DESIGNER /F"""""" 
			+ ВременныйКаталогБазы + """""" /LoadExternalDataProcessorOrReportFromFiles """""" + КорневойФайлОбработки 
			+ """""" """""" + ИмяВременногоEPF + """""""";
	Иначе
		СтрокаЗапуска1С = """""""" + ДополнитьСлешВПуть(Объект.ВерсияПлатформыДляГенерацииEPF) + ""1cv8"""" DESIGNER /F """""" 
			+ ВременныйКаталогБазы + """""" /LoadExternalDataProcessorOrReportFromFiles """""" + КорневойФайлОбработки 
			+ """""" """""" + ИмяВременногоEPF + """""""";
	КонецЕсли;

	ОписаниеЗапуска = Запустить1С(СтрокаЗапуска1С, КаталогДляВременныхФайлов);
	
	ИмяФайлаЛога = ОписаниеЗапуска.ИмяФайлаЛога;
	ИмяФайлаOUT = ОписаниеЗапуска.ИмяФайлаOUT;
	
	Если ФайлСуществуетКомандаСистемы(ИмяВременногоEPF) Тогда
		ФайлИмяФайлаEpf = Новый Файл(СтруктураОписанияEpf.ИмяФайлаEpf);
		Если НЕ ФайлСуществуетКомандаСистемы(ФайлИмяФайлаEpf.Путь) Тогда
			СоздатьКаталогКомандаСистемы(ФайлИмяФайлаEpf.Путь);
		КонецЕсли;
		ПереместитьФайлКомандаСистемы(ИмяВременногоEPF, СтруктураОписанияEpf.ИмяФайлаEpf);
		Если СтруктураОписанияEpf.ФайлEpfПересоздавался Тогда
			ТекстСообщения = ""Пересоздан %1"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",СтруктураОписанияEpf.ИмяФайлаEpf);
			СделатьСообщение(ТекстСообщения);
		Иначе
			ТекстСообщения = ""Создан %1"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",СтруктураОписанияEpf.ИмяФайлаEpf);
			СделатьСообщение(ТекстСообщения);
		КонецЕсли;
	Иначе
		СделатьСообщение(""Файл EPF не создан."");
		ТекстСообщения = ""Проверьте работу команды <%1>"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"", СтрокаЗапуска1С);
		СделатьСообщение(ТекстСообщения);
		ВывестиТекстФайлаЛога(ИмяФайлаЛога);
		ВывестиТекстФайлаЛога(ИмяФайлаOUT);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьТекстовыйФайлОднойСтрокой(ИмяФайла)
	Если НЕ ФайлСуществуетКомандаСистемы(ИмяФайла, ""ПолучитьТекстовыйФайлОднойСтрокой"") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла, ""UTF-8"");
	Возврат Текст.Прочитать();
КонецФункции

&НаКлиенте
Процедура УдалитьИсходникиEPF(ИмяФайлаEpf)
	ФайлEpf = Новый Файл(ИмяФайлаEpf);
	Если Не ФайлСуществуетКомандаСистемы(ФайлEpf.ПолноеИмя, ""УдалитьИсходникиEPF"" ) Тогда
		ТекстСообщения = ""Файл %1 не существует."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяФайлаEpf);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Путь = ФайлEpf.Путь + ""Src"";
	УдалитьКаталогКомандаСистемы(Путь);
	
КонецПроцедуры

&НаКлиенте
Процедура СделатьGenerateEpf(СтруктураПараметров)
	
	ГенерироватьУФ          = СтруктураПараметров.ГенерироватьУФ;
	ШагСтрокДляМодуля       = СтруктураПараметров.ШагСтрокДляМодуля;
	DebugLog                = СтруктураПараметров.DebugLog;
	КаталогФич              = СтруктураПараметров.КаталогФич;
	КонтекстVanessaBehavoir = СтруктураПараметров.КонтекстVanessaBehavoir;
	КаталогиБиблиотек       = СтруктураПараметров.КаталогиБиблиотек;
	ДвДанныеvbFeatureReader = СтруктураПараметров.ДвДанныеvbFeatureReader;
	
	ДополнительныеПараметры = Неопределено;
	Если СтруктураПараметров.Свойство(""ДополнительныеПараметры"") Тогда
		ДополнительныеПараметры = СтруктураПараметров.ДополнительныеПараметры;
	КонецЕсли;
	
	СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур       = СтруктураПараметров.СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур;
	
	ДанныеПоВерсиямОбработок = ПолучитьТаблицыПоТаблицаИзвестныхStepDefinition();

	ПолучитьВсеСуществующиеСнипетыИзОбработок(КаталогФич, КаталогиБиблиотек,
		ДанныеПоВерсиямОбработок, ДополнительныеПараметры);
	
	МассивФич   = СтруктураПараметров.МассивФич;
	МассивШагов = СтруктураПараметров.МассивШагов;
	
	КаталогДляВременныхФайлов = ПолучитьИмяВременногоФайла();
	СоздатьКаталогКомандаСистемы(КаталогДляВременныхФайлов);

	КаталогБазы1С = """";
	Ном = 0;
	Для каждого ИмяФайлаФичи Из МассивФич Цикл
		Ном = Ном + 1;
		Шаги = МассивШагов.Получить(Ном - 1);
		
		ФайлФичи       = Новый Файл(ИмяФайлаФичи);
		ИмяТекущейФичи = ФайлФичи.ИмяБезРасширения;
		ТекстСообщения = ""Работаю по фиче: %1"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяФайлаФичи);
		СделатьСообщение(ТекстСообщения);
		
		МассивДляСозданияEpf = Новый Массив;
		ОтносительныйКаталогФичи = ФайлФичи.Путь;
		Если Найти(Прав(ОтносительныйКаталогФичи, 1), ""\/"") > 0 Тогда
			ОтносительныйКаталогФичи = Лев(ОтносительныйКаталогФичи, СтрДлина(ОтносительныйКаталогФичи) - 1);
		КонецЕсли;
		
		Отладка(""ОтносительныйКаталогФичи="" + ОтносительныйКаталогФичи);
		СтруктураОписанияEpf = СоздатьСтруктураОписанияEpf(ОтносительныйКаталогФичи, ФайлФичи.ИмяБезРасширения,
			ДополнительныеПараметры, КаталогДляВременныхФайлов, КаталогБазы1С);
		
		СоздатьТекстМодуляНаСервере(Шаги, СтруктураОписанияEpf, ДвДанныеvbFeatureReader, 
			ИмяФайлаФичи, СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур, ШагСтрокДляМодуля, ГенерироватьУФ,
			Объект.СоздаватьОбластиПриГенерацииКода);
		
		Если Объект.ВыводитьТекстМодуляВместоПерегенерацииEPF Тогда
			ВывестиТекстМодуляНаЭкран(СтруктураОписанияEpf);
		Иначе
			СоздатьФайлыОбработок(СтруктураОписанияEpf, КаталогДляВременныхФайлов);
		КонецЕсли;
		
	КонецЦикла;

	УдалитьКаталогКомандаСистемы(КаталогДляВременныхФайлов);
	СделатьСообщение(""Создание epf по фичам закончено."");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СоздатьТекстМодуляНаСервере(Шаги, СтруктураОписанияEpf, ДвДанныеvbFeatureReader, 
	ИмяФайлаФичи, СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур, ШагСтрокДляМодуля, ГенерироватьУФ,
	СоздаватьОбластиПриГенерацииКода)
	
	ВременноеИмяФайла = ПолучитьИмяВременногоФайла(""epf"");
	ДвДанныеvbFeatureReader.Записать(ВременноеИмяФайла);
	FeatureReader = ВнешниеОбработки.Создать(ВременноеИмяФайла, Ложь);
	
	Если НЕ СтруктураОписанияEpf.ФайлEpfПересоздавался Тогда
		FeatureReader.ДобавитьНачальноеЗаполнениеВМодуль(СтруктураОписанияEpf.ТелоМодуля, ШагСтрокДляМодуля, ГенерироватьУФ, 
		Истина, СоздаватьОбластиПриГенерацииКода);
	КонецЕсли;
	
	Снипеты = FeatureReader.СнипетыПолучитьСнипетыПоШагам(Шаги);
	
	FeatureReader.ЗаполнитьПроцедуруПолучитьСписокТестов(СтруктураОписанияEpf.ТелоМодуля, Снипеты, Истина, 
	ИмяФайлаФичи, СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур);
	
	Для каждого ЭлемСнипет Из Снипеты Цикл
		FeatureReader.ДобавитьStepDefinitionВТекстМодуля(СтруктураОписанияEpf, ЭлемСнипет.StepDefinition, 
		ЭлемСнипет.Шаг, ШагСтрокДляМодуля, ЭлемСнипет.АдресСнипета, 
		СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур, ГенерироватьУФ, Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТекстМодуляИзСтруктураОписанияEpfСервер(ТекстМодуляВнутр)
	Стр = """";
	
	Тзн = ЗначениеИзСтрокиВнутр(ТекстМодуляВнутр);
	
	Для каждого СтрТзн Из Тзн Цикл
		Стр = Стр + СтрТзн.Стр + Символы.ПС;
	КонецЦикла;
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Процедура ВывестиТекстМодуляНаЭкран(СтруктураОписанияEpf)
	Стр = ПолучитьТекстМодуляИзСтруктураОписанияEpfСервер(СтруктураОписанияEpf.ТелоМодуля);
	ТекстовыйДокумент = новый ТекстовыйДокумент;
	ТекстовыйДокумент.ДобавитьСтроку(Стр);
	ТекстовыйДокумент.Показать();
КонецПроцедуры

&НаКлиенте
Процедура СоздатьEPFПоМассивуФич(СтруктураПараметров)
	СделатьСообщение(""Запускаю генерацию epf."");
	СделатьGenerateEpf(СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура СоздатьШаблоныОбработокПродолжение(ДополнительныеПараметры = Неопределено)
	Если Не Объект.РежимСамотестирования Тогда
		ОчиститьСообщения();
	КонецЕсли;
	СделатьПараметрыКорректными();
	
	ДвДанныеvbFeatureReader = Новый ДвоичныеДанные(ПолучитьПутьКFeatureReader());
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить(""КаталогИнструментов"", Объект.КаталогИнструментов);
	СтруктураПараметров.Вставить(""КаталогФич"", Объект.КаталогФич);
	СтруктураПараметров.Вставить(""DebugLog"", Объект.DebugLog);
	СтруктураПараметров.Вставить(""ГенерироватьУФ"", Объект.ГенерироватьУФ);
	СтруктураПараметров.Вставить(""СоздаватьОбластиПриГенерацииКода"", Объект.СоздаватьОбластиПриГенерацииКода);
	СтруктураПараметров.Вставить(""ШагСтрокДляМодуля"", ШагСтрокДляМодуля);
	СтруктураПараметров.Вставить(""КаталогиБиблиотек"", Объект.КаталогиБиблиотек);
	СтруктураПараметров.Вставить(""СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур"", Объект.СоздаватьЗакоментированныйКодДляПереиспользуемыхПроцедур);
	
	МассивФич   = Новый Массив;
	МассивШагов = Новый Массив;
	ПолучитьСписокФичПоДеревуИСоздатьEPFПоМассивуФич(СтруктураПараметров, МассивФич, МассивШагов);
	
	СтруктураПараметров.Вставить(""МассивФич"", МассивФич);
	СтруктураПараметров.Вставить(""МассивШагов"", МассивШагов);
	СтруктураПараметров.Вставить(""ДвДанныеvbFeatureReader"", ДвДанныеvbFeatureReader);
	СтруктураПараметров.Вставить(""ДополнительныеПараметры"", ДополнительныеПараметры);
	
	СоздатьEPFПоМассивуФич(СтруктураПараметров);
	ЭтаФорма.Активизировать();
	
КонецПроцедуры

// Функция ДополнитьСлешВПуть
//
// Параметры:
// ИмяКаталога
//
// Описание:
// Функция дополняет и возвращает слеш в путь в конец строки, если он отсутствует
//
&НаКлиенте
Функция ДополнитьСлешВПуть(Знач Каталог) Экспорт
	разделитель = ""\"";
	
	Если ПустаяСтрока(Каталог) Тогда
		Возврат Каталог;
	КонецЕсли;
	Если ЭтоLinux Тогда
		разделитель = ""/"";
		Каталог = СтрЗаменить(Каталог, ""\"", ""/"");
	КонецЕсли;
	
	Если Прав(Каталог, 1) <> разделитель Тогда
		Каталог = Каталог + разделитель;
	КонецЕсли;
	Возврат Каталог;
КонецФункции

&НаКлиенте
Функция НайтиСтрокуСценарияЧерезРодителя(СтрокаДерева, ЭтоПример,ЭтоШагКонтекста)
	ТекСтрокаДерева = СтрокаДерева;
	
	Пока Истина Цикл
		Если ТекСтрокаДерева = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
		
		Если (ТекСтрокаДерева.Тип = ""Сценарий"") Тогда
			Если ТекСтрокаДерева.ДопТип = ""Контекст"" Тогда
				ЭтоШагКонтекста = Истина;
			КонецЕсли;
			Возврат ТекСтрокаДерева;
		КонецЕсли;
		Если (ТекСтрокаДерева.Тип = ""Пример"") Тогда
			ЭтоПример = Истина;
			Возврат ТекСтрокаДерева;
		КонецЕсли;
		
		ТекСтрокаДерева = ТекСтрокаДерева.ПолучитьРодителя();
	КонецЦикла;
КонецФункции


&НаКлиенте
Функция ПолучитьМассивСценариевФичи(СтрокаДерева)
	Массив = Новый Массив;
	
	
	ПодчиненныеСтроки = СтрокаДерева.ПолучитьЭлементы();
	Для Каждого Строка Из ПодчиненныеСтроки Цикл
		Если Строка.Тип <> ""Сценарий"" Тогда
			Продолжить;
		КонецЕсли;
		
		Если Строка.ДопТип = ""Контекст"" Тогда
			Продолжить;
		КонецЕсли;
		
		Массив.Добавить(Строка.ИдСтроки);
	КонецЦикла;
	
	Возврат Массив;
КонецФункции

&НаКлиенте
Функция НайтиСтрокуФичиЧерезРодителя(Стр)
	СтрокаДерева = Стр;
	Пока Истина Цикл
		Если СтрокаДерева.Тип = ""Фича"" Тогда
			Возврат СтрокаДерева;
		КонецЕсли;
		
		СтрокаДерева = СтрокаДерева.ПолучитьРодителя();
		Если СтрокаДерева = Неопределено Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЦикла;
КонецФункции


&НаКлиенте
Функция ИмяФайлаФичиИзПолногоПути(ПолныйПуть)
	Поз = Найти(НРег(ПолныйПуть),"".feature"");
	
	Если Поз > 0 Тогда
		Возврат СокрЛП(Лев(ПолныйПуть,Поз + СтрДлина("".feature"") - 1));
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Функция ЭтаФормаTestClientУжеОбрабатывалась(ИмяТекущейФормыTestClient)
	Для каждого Элем Из МассивСостояниеФормTestClient Цикл
		Если Элем.ИмяФормы = ИмяТекущейФормыTestClient Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции



//{работа с TestClient

&НаСервереБезКонтекста
Функция СтрокиОжидаемойТаблицыСодержатсяВТаблицеTestclientСервер(ОжидаемаяТаблица,ТаблицаTestClient,СтрокаОшибки)
	Таблица1 = Новый ТаблицаЗначений;
	Таблица2 = Новый ТаблицаЗначений;
	Для Каждого Элем Из ОжидаемаяТаблица[0] Цикл
		Таблица1.Колонки.Добавить(Элем.Ключ,,Элем.Значение);
		Таблица2.Колонки.Добавить(Элем.Ключ,,Элем.Значение);
	КонецЦикла;
	
	//Проверим, что в таблице2 есть все нужные колонки
	
	Для Каждого Колонка Из Таблица2.Колонки Цикл
		Попытка
			Значение = ТаблицаTestClient[0][Колонка.Заголовок];
		Исключение
			ТекстСообщения = ""В таблице не найдена колонка <%1>"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Колонка.Заголовок);
			ВызватьИсключение ТекстСообщения;
		КонецПопытки;
	КонецЦикла;
	
	
	//проверим вхождение строк
	
	НомОжидаемаяТаблица = 0;
	
	Для Каждого СтрокаОжидаемаяТаблица Из ОжидаемаяТаблица Цикл
		НашлиСтроку = Ложь;
		
		НомОжидаемаяТаблица = НомОжидаемаяТаблица + 1;
		Если НомОжидаемаяТаблица = 1 Тогда
			Продолжить;
		КонецЕсли;
		
		
		Для Каждого СтрокаТаблицаTestClient Из ТаблицаTestClient Цикл
			ВсеКолонкиСовпали = Истина;
			Для Каждого Колонка Из Таблица1.Колонки Цикл
				ЗначениеОжидаемаяТаблица  = СтрокаОжидаемаяТаблица[Колонка.Имя];
				ЗначениеТаблицаTestClient = СтрокаТаблицаTestClient[Колонка.Заголовок];
				
				Если ЗначениеОжидаемаяТаблица <> ЗначениеТаблицаTestClient Тогда
					ВсеКолонкиСовпали = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если ВсеКолонкиСовпали Тогда
				НашлиСтроку = Истина;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если Не НашлиСтроку Тогда
			ЗначениеСтроки = ""|"";
			Для Каждого Колонка Из Таблица1.Колонки Цикл
				ЗначениеСтроки = "" "" + ЗначениеСтроки + СтрокаОжидаемаяТаблица[Колонка.Имя] + "" |""
			КонецЦикла;
			
			СтрокаОшибки = ""Строка <"" + ЗначениеСтроки + ""> не найдена"";
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура ОчиститьМассивИД(МассивИд,МассивЭлементов)
	Если МассивИд.Количество() > 0 Тогда
		Для Ккк = 0 По МассивИд.Количество()-1 Цикл
			МассивЭлементов.Удалить(МассивИд[МассивИд.Количество()-Ккк-1]);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзМассиваПоляТаблицTestClient(ТекущаяФорма,МассивЭлементов)
	МассивИд = Новый Массив;
	
	ТаблицыФормы = НайтиТаблицыФормыTestClient(ТекущаяФорма);
	Для Каждого ТаблицаФормы Из ТаблицыФормы Цикл
		Ид = -1;
		Для Каждого ПроверяемыйЭлемент Из МассивЭлементов Цикл
			Ид = Ид + 1;
			ЭлементТаблицы = ТаблицаФормы.НайтиОбъект(,,ПроверяемыйЭлемент.Имя);
			Если ЭлементТаблицы <> Неопределено Тогда
				МассивИд.Добавить(Ид);
			КонецЕсли;
		КонецЦикла;
		
		ОчиститьМассивИД(МассивИд,МассивЭлементов);
		МассивИд = Новый Массив;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОставитьВМассивеТолькоПоляНадписей(МассивЭлементов)
	МассивИд = Новый Массив;
	
	Ид = -1;
	Для Каждого ПроверяемыйЭлемент Из МассивЭлементов Цикл
		Ид = Ид + 1;
		Если ПроверяемыйЭлемент.Вид <> ВидПоляФормы.ПолеНадписи И ПроверяемыйЭлемент.Вид <> ВидДекорацииФормы.Надпись Тогда
			МассивИд.Добавить(Ид);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивИд.Количество() > 0 Тогда
		Для Ккк = 0 По МассивИд.Количество()-1 Цикл
			МассивЭлементов.Удалить(МассивИд[МассивИд.Количество()-Ккк-1]);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьГруппыФормыИзМассива(МассивЭлементов)
	МассивИд = Новый Массив;
	
	Ид = -1;
	Для Каждого ПроверяемыйЭлемент Из МассивЭлементов Цикл
		Ид = Ид + 1;
		Если ТипЗнч(ПроверяемыйЭлемент) = Тип(""ТестируемаяГруппаФормы"") Тогда
			МассивИд.Добавить(Ид);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивИд.Количество() > 0 Тогда
		Для Ккк = 0 По МассивИд.Количество()-1 Цикл
			МассивЭлементов.Удалить(МассивИд[МассивИд.Количество()-Ккк-1]);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьИзМассиваПоляВКоторыеНеВозможенВводTestClient(МассивЭлементов)
	МассивИд = Новый Массив;
	
	Ид = -1;
	Для Каждого ПроверяемыйЭлемент Из МассивЭлементов Цикл
		Ид = Ид + 1;
		Если ПроверяемыйЭлемент.Вид = ВидПоляФормы.ПолеНадписи Тогда
			МассивИд.Добавить(Ид);
		ИначеЕсли ПроверяемыйЭлемент.Вид = ВидПоляФормы.ПолеКартинки Тогда
			МассивИд.Добавить(Ид);
		ИначеЕсли ПроверяемыйЭлемент.Вид = ВидПоляФормы.ПолеПереключателя Тогда
			МассивИд.Добавить(Ид);
		ИначеЕсли ПроверяемыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка Тогда
			МассивИд.Добавить(Ид);
		КонецЕсли;
	КонецЦикла;
	
	Если МассивИд.Количество() > 0 Тогда
		Для Ккк = 0 По МассивИд.Количество()-1 Цикл
			МассивЭлементов.Удалить(МассивИд[МассивИд.Количество()-Ккк-1]);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура НайтиРеквизитВМассивеФорм(МассивФорм,ПолеРеквизит,ИмяРеквизита,ИскатьПоИмени,ТипПоля,ДопПараметры)
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		
		Если ИскатьПоИмени = Неопределено Тогда
			ОпределитьРежимПоискаЭлементаНаФорме(ИмяРеквизита,ИскатьПоИмени);
		КонецЕсли;
		
		Попытка
			Если ИскатьПоИмени Тогда
				МассивЭлементов        = ТекущаяФорма.НайтиОбъекты(ТипПоля, , ИмяРеквизита);
			Иначе
				МассивЭлементов        = ТекущаяФорма.НайтиОбъекты(ТипПоля, ИмяРеквизита);
			КонецЕсли;
		Исключение
			//некоторые служебные формы могут вызвать исключение на поиск объектов
			Продолжить;
		КонецПопытки;
		
		Если МассивЭлементов = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если МассивЭлементов.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		Если МассивЭлементов.Количество() > 1 Тогда
			Если ТипЗнч(МассивЭлементов) = Тип(""ФиксированныйМассив"") Тогда
				МассивЭлементов = Новый Массив(МассивЭлементов); //преобразуем фиксированный массив в обычный
			КонецЕсли;
			
			Если ДопПараметры <> Неопределено Тогда
				ИскатьТолькоПоляВКоторыеВозможенВвод = Ложь;
				ДопПараметры.Свойство(""ИскатьТолькоПоляВКоторыеВозможенВвод"",ИскатьТолькоПоляВКоторыеВозможенВвод);
				Если ИскатьТолькоПоляВКоторыеВозможенВвод = Истина Тогда
					УдалитьИзМассиваПоляВКоторыеНеВозможенВводTestClient(МассивЭлементов);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если МассивЭлементов.Количество() > 1 Тогда
			Если ТипЗнч(МассивЭлементов) = Тип(""ФиксированныйМассив"") Тогда
				МассивЭлементов = Новый Массив(МассивЭлементов); //преобразуем фиксированный массив в обычный
			КонецЕсли;
			
			Если ДопПараметры <> Неопределено Тогда
				ИскатьТолькоПоляНадписей = Ложь;
				ДопПараметры.Свойство(""ИскатьТолькоПоляНадписей"",ИскатьТолькоПоляНадписей);
				Если ИскатьТолькоПоляНадписей = Истина Тогда
					ОставитьВМассивеТолькоПоляНадписей(МассивЭлементов);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если МассивЭлементов.Количество() > 1 Тогда
			Если ТипЗнч(МассивЭлементов) = Тип(""ФиксированныйМассив"") Тогда
				МассивЭлементов = Новый Массив(МассивЭлементов); //преобразуем фиксированный массив в обычный
			КонецЕсли;
			
			Если ДопПараметры <> Неопределено Тогда
				ИсключитьГруппы = Ложь;
				ДопПараметры.Свойство(""ИсключитьГруппы"",ИсключитьГруппы);
				Если ИсключитьГруппы = Истина Тогда
					ИсключитьГруппыФормыИзМассива(МассивЭлементов);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если МассивЭлементов.Количество() > 1 Тогда
			УдалитьИзМассиваПоляТаблицTestClient(ТекущаяФорма,МассивЭлементов);
		КонецЕсли;
		
		Если МассивЭлементов.Количество() > 1  Тогда
			ВывестиСообщениеОТомЧтоПоЗаголовкуНайденоБольшеОдногоЭлемента(МассивЭлементов, ИмяРеквизита);
			ТекстСообщения = ""Найдено более одного поля формы с заголовком <%1>. Рекомендуется искать элемент по имени."";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяРеквизита);
			Сообщить(ТекстСообщения);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		ПолеРеквизит = МассивЭлементов[0];
		
		Возврат;
	КонецЦикла;
КонецПроцедуры


&НаКлиенте
Функция ПолучитьАктивноеОкноИзКонтекста()
	Если ОбъектКонтекст.Свойство(""АктивноеОкно"") Тогда
		Возврат ОбъектКонтекст.АктивноеОкно;
	КонецЕсли;
	
	Возврат ПолучитьАктивноеОкноИзТестовоеПриложение();
КонецФункции

&НаКлиенте
Функция ПолучитьТекстЗаголовокРеквизитаРодитель(ТекстЗаголовка, ИмяРодителя)
	Возврат ТекстЗаголовка + ""_"" + ИмяРодителя;
КонецФункции

&НаКлиенте
Функция ПолучитьСвойстваОбъекта(ЭлементФормы, МассивЗаголовковПолей, МассивЗаголовковКнопок, ИмяРодителя)
	Рез = Новый Структура;
	Рез.Вставить(""Имя"", ЭлементФормы.Имя);
	Рез.Вставить(""ТекстЗаголовка"", ЭлементФормы.ТекстЗаголовка);
	Рез.Вставить(""ИмяРодителя"", ИмяРодителя);
	
	Если ТипЗнч(ЭлементФормы) = Тип(""ТестируемоеПолеФормы"") Тогда
		//Стр = ПолучитьТекстЗаголовокРеквизитаРодитель(ЭлементФормы.ТекстЗаголовка, ИмяРодителя);
		МассивЗаголовковПолей.Добавить(ЭлементФормы.ТекстЗаголовка);
	ИначеЕсли ТипЗнч(ЭлементФормы) = Тип(""ТестируемаяКнопкаФормы"") Тогда
		//Стр = ПолучитьТекстЗаголовокРеквизитаРодитель(ЭлементФормы.ТекстЗаголовка, ИмяРодителя);
		МассивЗаголовковКнопок.Добавить(ЭлементФормы.ТекстЗаголовка);
	КонецЕсли;
	
	Возврат Рез;
КонецФункции

&НаКлиенте
Функция ПолучитьЭлементыФормыИерархически(Элементформы, МассивЗаголовковПолей, МассивЗаголовковКнопок)
	Рез = Новый Массив;
	
	НайденныеОбъекты = Элементформы.ПолучитьПодчиненныеОбъекты();
	Для каждого Элем Из НайденныеОбъекты Цикл
		
		Если ТипЗнч(Элементформы) = Тип(""ТестируемаяФорма"") Тогда
			СвойстваОбъекта = ПолучитьСвойстваОбъекта(Элем, МассивЗаголовковПолей, МассивЗаголовковКнопок, Элементформы.ИмяФормы);
		Иначе
			СвойстваОбъекта = ПолучитьСвойстваОбъекта(Элем, МассивЗаголовковПолей, МассивЗаголовковКнопок, Элементформы.Имя);
		КонецЕсли;
		
		Рез.Добавить(СвойстваОбъекта);
		
		ПодчиненныеОбъекты = ПолучитьЭлементыФормыИерархически(Элем, МассивЗаголовковПолей, МассивЗаголовковКнопок);
		СвойстваОбъекта.Вставить(""ПодчиненныеОбъекты"", ПодчиненныеОбъекты);
		
	КонецЦикла;
	
	Возврат Рез;
КонецФункции

&НаКлиенте
Процедура ДобавитьСостояниеФормыTestclient(ТекущаяФорма)
	СостояниеФормы = Новый Структура;
	СостояниеФормы.Вставить(""ИмяФормы"", ТекущаяФорма.ИмяФормы);
	СостояниеФормы.Вставить(""ТекстЗаголовка"", ТекущаяФорма.ТекстЗаголовка);
	МассивЗаголовковПолей = Новый Массив;
	СостояниеФормы.Вставить(""МассивЗаголовковПолей"", МассивЗаголовковПолей);
	
	МассивЗаголовковКнопок = Новый Массив;
	СостояниеФормы.Вставить(""МассивЗаголовковКнопок"", МассивЗаголовковКнопок);
	
	
	МассивСостояниеФормTestClient.Добавить(СостояниеФормы);
	Попытка
		
		МассивОбъектов = ПолучитьЭлементыФормыИерархически(ТекущаяФорма, МассивЗаголовковПолей, МассивЗаголовковКнопок);
		
	Исключение
		ТекстСообщения = ""ДобавитьСостояниеФормыTestclient:%1"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ОписаниеОшибки());
		Сообщить(ТекстСообщения);
	КонецПопытки;
	
	СостояниеФормы.Вставить(""МассивОбъектов"", МассивОбъектов);
	Отладка(""Запомнил имена реквизитов формы: "" + ТекущаяФорма.ИмяФормы);
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСостояниеТекущейФормыTestClient()
	ОкноПриложения = ПолучитьАктивноеОкноИзТестовоеПриложение();
	МассивФорм     = ОкноПриложения.НайтиОбъекты(Тип(""ТестируемаяФорма""));
	Для каждого ТекущаяФорма Из МассивФорм Цикл
		ИмяТекущейФормыTestClient = ТекущаяФорма.ИмяФормы;
		
		Если ЭтаФормаTestClientУжеОбрабатывалась(ИмяТекущейФормыTestClient) Тогда
			Возврат;
		КонецЕсли;
		
		ДобавитьСостояниеФормыTestclient(ТекущаяФорма);
	КонецЦикла;
	
	
КонецПроцедуры

//}работа с TestClient

&НаКлиенте
Процедура ОпросЭлементовФормTestClient()
	Если ИдетОпросЭлементовФормTestClient Тогда
		Возврат;
	КонецЕсли;
	
	ИдетОпросЭлементовФормTestClient = Истина;
	Попытка
		ЗаполнитьСостояниеТекущейФормыTestClient();
	Исключение
		Отладка("""" + ОписаниеОшибки());
	КонецПопытки;
	
	ИдетОпросЭлементовФормTestClient = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура УправлениеВидимостьюЗаписиДействийПользователя(МоментЗаписи)
	
	Если МоментЗаписи = ""НачатьЗапись"" Тогда
		Элементы.кнНачатьЗаписьДействийПользователя.Видимость        = Ложь;
		Элементы.кнПриостановитьЗаписьДействийПользователя.Видимость = Истина;
		
	ИначеЕсли МоментЗаписи = ""ПриостановитьЗапись"" Тогда
		Элементы.кнПриостановитьЗаписьДействийПользователя.Видимость = Ложь;
		Элементы.кнПродолжитьЗаписьДействийПользователя.Видимость    = Истина;
		
	ИначеЕсли МоментЗаписи = ""ПродолжитьЗапись"" Тогда
		Элементы.кнПриостановитьЗаписьДействийПользователя.Видимость = Истина;
		Элементы.кнПродолжитьЗаписьДействийПользователя.Видимость    = Ложь;
		
	ИначеЕсли МоментЗаписи = ""ЗавершитьЗапись"" Тогда
		Элементы.кнНачатьЗаписьДействийПользователя.Видимость        = Истина;
		Элементы.кнПриостановитьЗаписьДействийПользователя.Видимость = Ложь;
		Элементы.кнПродолжитьЗаписьДействийПользователя.Видимость    = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры


&НаСервереБезКонтекста
Функция ПолучитьКод1СИзUILogToScriptСервер(ДвоичныеДанные, Стр)
	ИмяВременногоEPF = ПолучитьИмяВременногоФайла(""epf"");
	ДвоичныеДанные.Записать(ИмяВременногоEPF);//TODO подумать об ускорении через Потоки или другой алгоритм
	
	Обработка                           = ВнешниеОбработки.Создать(ИмяВременногоEPF);
	Обработка.ObjectSearch              = 2;
	Обработка.SplitScriptIntoProcedures = Истина;
	Обработка.MainProcedureName         = ""ВыполнитьДействия"";
	
	Возврат Обработка.Convert(Стр);
	
КонецФункции

&НаКлиенте
Процедура ОбработатьПолученныйКодUILogToScript(Стр)
	Стр = СтрЗаменить(Стр, ""ТестовоеПриложение.НайтиОбъект"", ""КонтекстСохраняемый.ТестовоеПриложение.НайтиОбъект"");
	Стр = СтрЗаменить(Стр, ""ТестовоеПриложение.ПолучитьПодчиненныеОбъекты()"", ""КонтекстСохраняемый.ТестовоеПриложение.ПолучитьПодчиненныеОбъекты()"");
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПервоеКлючевоеСлово(СчетчикДействий, ТипДействия = Неопределено)
	СчетчикДействий = СчетчикДействий + 1;
	Если (СчетчикДействий > 1) и (ТипДействия = ""ОткрытиеОкна"") Тогда
		Возврат ""	Тогда"";
	КонецЕсли;
	
	Если СчетчикДействий = 1 Тогда
		Возврат ""	Когда"";
	Иначе
		Возврат ""	И"";
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция ПолучитьТекстФичиИзКодаUILogToScriptOld(Знач Стр)
	Результат = ""#language: ru
	|
	|Функционал: <описание фичи>
	|
	|Как <Роль> я хочу
	|<описание функционала>
	|чтобы <бизнес-эфект>
	|
	|Сценарий: <описание сценария>
	|
	|"";
	
	
	
	ИмяФайла = ПолучитьИмяВременногоФайла(""txt"");
	ЗТ = Новый ЗаписьТекста(ИмяФайла, ""UTF-8"", , Истина);
	ЗТ.ЗаписатьСтроку(Стр);
	ЗТ.Закрыть();
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла, ""UTF-8"");
	
	СтрПоиска = """";
	
	ТипДействия = """";
	ИмяОкнаТестируемоеОкноКлиентскогоПриложения = """";
	ИмяТестируемойФормы                         = """";
	ИмяЭлементаФормы                            = """";
	СчетчикДействий                             = 0;
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		Если Найти(НРег(Стр), НРег(""ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип(""""ТестируемаяКнопкаКомандногоИнтерфейса"""")"")) > 0 Тогда
			//это нажатие кнопки командного интерфейса
			ТипДействия = ""ТестируемаяКнопкаКомандногоИнтерфейса"";
			Поз = Найти(НРег(Стр), НРег(""ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип(""""ТестируемаяКнопкаКомандногоИнтерфейса"""")""));
			
			ПромСтр = Сред(Стр, Поз);
			ПромСтр = СтрЗаменить(ПромСтр, ""ОкноПриложенияОсновноеCommandInterface.НайтиОбъект(Тип(""""ТестируемаяКнопкаКомандногоИнтерфейса""""),"", """");
			
			ПромСтр = СтрЗаменить(ПромСтр, "");"", """");
			ПромСтр = СтрЗаменить(ПромСтр, """""""", """");
			ПромСтр = СокрЛП(ПромСтр);
			
			Результат = Результат + ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" Я нажимаю кнопку командного интерфейса """""" + ПромСтр + """""""" + Символы.ПС;
		ИначеЕсли Найти(НРег(Стр), НРег(""ТестовоеПриложение.НайтиОбъект(Тип(""""ТестируемоеОкноКлиентскогоПриложения"""")"")) > 0 Тогда
			//это работа с открытым окном
			Поз = Найти(НРег(Стр), НРег(""ТестовоеПриложение.НайтиОбъект(Тип(""""ТестируемоеОкноКлиентскогоПриложения"""")""));
			
			ПромСтр = Сред(Стр, Поз);
			ПромСтр = СтрЗаменить(ПромСтр, ""ТестовоеПриложение.НайтиОбъект(Тип(""""ТестируемоеОкноКлиентскогоПриложения""""),"", """");
			
			Поз = Найти(ПромСтр, """""","");
			ПромСтр = Лев(ПромСтр, Поз);
			
			ПромСтр = СтрЗаменить(ПромСтр, """""""", """");
			ПромСтр = СокрЛП(ПромСтр);
			
			ИмяОкнаТестируемоеОкноКлиентскогоПриложения = ПромСтр;
			
		ИначеЕсли Найти(НРег(Стр), НРег("".НайтиОбъект(Тип(""""ТестируемаяФорма"""")"")) > 0 Тогда
			Поз = Найти(НРег(Стр), НРег("".НайтиОбъект(Тип(""""ТестируемаяФорма"""")""));
			
			ПромСтр = Сред(Стр, Поз);
			ПромСтр = СтрЗаменить(ПромСтр, "".НайтиОбъект(Тип(""""ТестируемаяФорма""""),"", """");
			ПромСтр = СтрЗаменить(ПромСтр, "");"", """");
			ПромСтр = СтрЗаменить(ПромСтр, """""""", """");
			ПромСтр = СокрЛП(ПромСтр);
			
			ИмяТестируемойФормы = ПромСтр;
		ИначеЕсли Найти(НРег(Стр), НРег(""ТаблицаСписок.Выбрать();"")) > 0 Тогда
			Результат = Результат + ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В окне """""" + ИмяОкнаТестируемоеОкноКлиентскогоПриложения + """""" в форме списка """""" + ИмяТестируемойФормы + """""" я выбираю текущий элемент."" + Символы.ПС;
		ИначеЕсли Найти(НРег(Стр), НРег("".НайтиОбъект(Тип(""""ТестируемоеПолеФормы"""")"")) > 0 Тогда
			Массив  = РазложитьСтрокуВМассивПодстрок(Стр, "","");
			ПромСтр = Массив[Массив.Количество() - 1];
			ПромСтр = СтрЗаменить(ПромСтр, "");"", """");
			ПромСтр = СтрЗаменить(ПромСтр, """""""", """");
			ПромСтр = СокрЛП(ПромСтр);
			
			ИмяЭлементаФормы = ПромСтр;
		ИначеЕсли Найти(НРег(Стр), НРег("".ВвестиТекст("")) > 0 Тогда
			ПромСтр = Стр;
			Поз     = Найти(ПромСтр, "".ВвестиТекст("");
			ПромСтр = Сред(ПромСтр, Поз);
			ПромСтр = СтрЗаменить(ПромСтр, "".ВвестиТекст("", """");
			ПромСтр = СтрЗаменить(ПромСтр, "");"", """");
			ПромСтр = СтрЗаменить(ПромСтр, """""""", """");
			
			ЗначениеВвода = ПромСтр;
			
			
			Результат = Результат + ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в поле """""" + ИмяЭлементаФормы + """""" я ввожу значение """""" + ЗначениеВвода + """""""" + Символы.ПС;
		ИначеЕсли Найти(НРег(Стр), НРег("".ВыполнитьВыборИзСпискаВыбора("")) > 0 Тогда
			ПромСтр = Стр;
			Поз     = Найти(ПромСтр, "".ВыполнитьВыборИзСпискаВыбора("");
			ПромСтр = Сред(ПромСтр, Поз);
			ПромСтр = СтрЗаменить(ПромСтр, "".ВыполнитьВыборИзСпискаВыбора("", """");
			ПромСтр = СтрЗаменить(ПромСтр, "");"", """");
			ПромСтр = СтрЗаменить(ПромСтр, """""""", """");
			
			ЗначениеВвода = ПромСтр;
			
			
			Результат = Результат + ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в выпадающем списке """""" + ИмяЭлементаФормы + """""" я ввожу значение """""" + ЗначениеВвода + """""""" + Символы.ПС;
		ИначеЕсли Найти(НРег(Стр), НРег("".ВыполнитьВыборИзВыпадающегоСписка("")) > 0 Тогда
			Результат = Результат + ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" у поля """""" + ИмяЭлементаФормы + """""" я открываю форму выбора"" + Символы.ПС;
		ИначеЕсли Найти(НРег(Стр), НРег("".НайтиОбъект(Тип(""""ТестируемаяКнопкаФормы""""),"")) > 0 Тогда
			
			Поз = Найти(Стр, "".НайтиОбъект(Тип(""""ТестируемаяКнопкаФормы""""),"");
			ПромСтр = Сред(Стр, Поз);
			ПромСтр = СтрЗаменить(ПромСтр, "".НайтиОбъект(Тип(""""ТестируемаяКнопкаФормы""""),"", """");
			
			Поз = Найти(ПромСтр, """""", "");
			ПромСтр = Лев(ПромСтр, Поз);
			
			ПромСтр = СтрЗаменить(ПромСтр, "");"", """");
			ПромСтр = СтрЗаменить(ПромСтр, """""""", """");
			ПромСтр = СокрЛП(ПромСтр);
			
			ИмяКнопки = ПромСтр;
			
			Результат = Результат + ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю кнопку """""" + ИмяКнопки + """""""" + Символы.ПС;
		КонецЕсли;
	КонецЦикла;
	
	Текст.Закрыть();
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ДобавитьУзел(МассивОбъектов, МассивСвойств, ИдВМассиве, Имя);
	ИдВМассиве                 = ИдВМассиве + 1;
	МассивОбъектов[ИдВМассиве] = Имя;
	МассивСвойств [ИдВМассиве] = Новый Соответствие;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьУзел(МассивОбъектов, МассивСвойств, ИдВМассиве, Имя);
	МассивОбъектов[ИдВМассиве] = Неопределено;
	МассивСвойств [ИдВМассиве] = Неопределено;
	ИдВМассиве                 = ИдВМассиве - 1;
КонецПроцедуры

&НаКлиенте
Функция ОпределитьПараметрыВСтрокеПримера(Знач Стр)
	Массив = Новый Массив;
	
	
	Стр = СтрЗаменить(Стр,""\|"",""~ЭкранированиеВертикальнойЧерты~"");
	
	Стр = СокрЛП(Стр);
	Если Лев(Стр, 1) <> ""|"" Тогда
		Возврат Массив;
	КонецЕсли;
	
	Если Прав(Стр, 1) <> ""|"" Тогда
		Возврат Массив;
	КонецЕсли;
	
	Стр = Сред(Стр, 2);
	Стр = Сред(Стр, 1, СтрДлина(Стр) - 1);
	//убрали символы |
	
	Массив = РазложитьСтрокуВМассивПодстрокКлиент(Стр, ""|"");
	
	Для Ккк = 0 По Массив.Количество() - 1 Цикл
		Массив[Ккк] = СокрЛП(Массив[Ккк]);
		Массив[Ккк] = СтрЗаменить(Массив[Ккк],""~ЭкранированиеВертикальнойЧерты~"",""\|"");
	КонецЦикла;
	
	Спс = Новый СписокЗначений;
	Для каждого Элем Из Массив Цикл
		Спс.Добавить(Элем);
	КонецЦикла;
	
	Возврат  Спс;
КонецФункции

&НаКлиенте
Процедура УдалитьПредыдущуюСтрокуЕслиЕстьСовпадения(Текст, Стр1, Стр2)
	СтрокаТекста = Текст.ПолучитьСтроку(Текст.КоличествоСтрок());
	
	Если Найти(СтрокаТекста, Стр1) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если Найти(СтрокаТекста, Стр2) = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Текст.УдалитьСтроку(Текст.КоличествоСтрок());
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьМассивДублирующихсяЗаголовоковСервер(МассивЗаголовковПолей)
	Тзн = Новый ТаблицаЗначений;
	Тзн.Колонки.Добавить(""Заголовок"");
	
	
	Для Н=1 По МассивЗаголовковПолей.Количество() Цикл
		Тзн.Добавить();
	КонецЦикла;
	
	Тзн.ЗагрузитьКолонку(МассивЗаголовковПолей, ""Заголовок"");
	
	Тзн.Колонки.Добавить(""Кол"");
	
	
	
	Для каждого СтрТзн Из Тзн Цикл
		СтрТзн.Кол = 1;
	КонецЦикла;
	
	
	Тзн.Свернуть(""Заголовок"", ""Кол"");
	
	Рез = Новый Массив;
	Для каждого СтрТзн Из Тзн Цикл
		Если СтрТзн.Кол > 1 Тогда
			Рез.Добавить(СтрТзн.Заголовок);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Рез;
КонецФункции


&НаКлиенте
Функция ПреобразоватьМассивСостояниеФормTestClient(МассивСостояниеФорм)
	
	Массив = Новый Массив;
	
	Если МассивСостояниеФорм = Неопределено Тогда
		Возврат Массив;
	КонецЕсли;
	
	Для каждого СостояниеФормы Из МассивСостояниеФорм Цикл
		Рез = Новый Структура;
		Рез.Вставить(""ИмяФормы"", СостояниеФормы.ИмяФормы);
		Рез.Вставить(""ТекстЗаголовка"", СостояниеФормы.ТекстЗаголовка);
		
		МассивЗаголовковПолей = СостояниеФормы.МассивЗаголовковПолей;
		МассивДублирующихсяЗаголовоковПолей = ПолучитьМассивДублирующихсяЗаголовоковСервер(МассивЗаголовковПолей);
		Рез.Вставить(""МассивДублирующихсяЗаголовоковПолей"", МассивДублирующихсяЗаголовоковПолей);
		
		МассивЗаголовковКнопок = СостояниеФормы.МассивЗаголовковКнопок;
		МассивДублирующихсяЗаголовоковКнопок = ПолучитьМассивДублирующихсяЗаголовоковСервер(МассивЗаголовковКнопок);
		Рез.Вставить(""МассивДублирующихсяЗаголовоковКнопок"", МассивДублирующихсяЗаголовоковКнопок);
		
		Массив.Добавить(Рез);
		
	КонецЦикла;
	
	Возврат Массив;
КонецФункции

&НаКлиенте
Функция СтрокиРавныСУчётомЗвёздочек(Знач Стр1, Знач Стр2)
	//основная строка первая
	Массив1 = РазложитьСтрокуВМассивПодстрок(Стр1, "" "");
	Массив2 = РазложитьСтрокуВМассивПодстрок(Стр2, "" "");
	
	
	Если Массив1.Количество() = (Массив2.Количество() + 1) Тогда
		Если Массив1[Массив1.Количество() - 1] = ""*"" Тогда //значит тут последний символ *
			Массив1.Удалить(Массив1.Количество() - 1);
		КонецЕсли;
	КонецЕсли;
	
	Если Массив1.Количество() <> Массив2.Количество() Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для Ккк = 0 По Массив1.Количество() - 1 Цикл
		С1 = Массив1[Ккк];
		С2 = Массив2[Ккк];
		Если С1 = С2 Тогда
			Продолжить;
		КонецЕсли;
		
		Если С1 = ""*"" Тогда
			Продолжить;
		КонецЕсли;
		
		Возврат Ложь;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФормаЗаголовок, ЗаголовокПоля, ТипОбъекта)
	Для каждого СтруктураФормы Из МассивСтруктурФорм Цикл
		Если СтрокиРавныСУчётомЗвёздочек(ТекущаяФормаЗаголовок, СтруктураФормы.ТекстЗаголовка) Тогда
			Если ТипОбъекта = ""ПолеФормы"" Тогда
				Если СтруктураФормы.МассивДублирующихсяЗаголовоковПолей.Найти(ЗаголовокПоля) <> Неопределено Тогда
					Отладка(""Поле """""" + ЗаголовокПоля + """""" имеет дубли с таким же заголовком. Поиск будет происходить по имени."");
					Возврат Истина;
				КонецЕсли;
			ИначеЕсли ТипОбъекта = ""Кнопка"" Тогда
				Если СтруктураФормы.МассивДублирующихсяЗаголовоковКнопок.Найти(ЗаголовокПоля) <> Неопределено Тогда
					Отладка(""Кнопка """""" + ЗаголовокПоля + """""" имеет дубли с таким же заголовком. Поиск будет происходить по имени."");
					Возврат Истина;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура ЗаменитьСимволПереводаСтрокВXML(ИмяФайла)
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайла,""UTF-8"");
	
	Массив = Новый Массив;
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		Стр = СтрЗаменить(Стр,""|"",""\|"");
		
		
		Если Лев(СокрЛП(Стр),1) <> ""<"" Тогда
			//тогда нашли перенос строки
			Если Массив.Количество() > 1 Тогда
				Ид = Массив.Количество()-2+1;
				Массив[Ид] = Массив[Ид] + ""\n"" + Стр;
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Массив.Добавить(Стр);
	КонецЦикла;
	Текст.Закрыть();
	
	
	
	ИмяВременногоXML = ПолучитьИмяВременногоФайла(""xml"");
	ЗТ = Новый ЗаписьТекста(ИмяВременногоXML,""UTF-8"",,Истина);
	Для Каждого Стр Из Массив Цикл
		ЗТ.ЗаписатьСтроку(Стр);
	КонецЦикла;
	
	ЗТ.Закрыть();
	
	ПереместитьФайлКомандаСистемы(ИмяВременногоXML,ИмяФайла);
КонецПроцедуры

&НаКлиенте
Функция ПреобразоватьСтрокуКДатеИзДанныхXML(Стр)
	Стр = СтрЗаменить(Стр,""-"","""");
	Стр = СтрЗаменить(Стр,"":"","""");
	Стр = СтрЗаменить(Стр,""T"","""");
	
	Попытка
		Дат = Дата(Стр);
	Исключение
		Возврат Стр;
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Возврат Формат(Дат,""ДФ=dd.MM.yyyy"");
КонецФункции


&НаКлиенте
Процедура ПолучитьТекстФичиИзДействийПользователя(Результат)
	ИмяВременногоXML = ПолучитьИмяВременногоФайла(""xml"");
	
	МассивСтруктурФорм = ПреобразоватьМассивСостояниеФормTestClient(МассивСостояниеФормTestClient);
	
	
	ЗТ = Новый ЗаписьТекста(ИмяВременногоXML, ""UTF-8"", , Истина);
	ЗТ.Записать(Результат);
	ЗТ.Закрыть();
	
	ЗаменитьСимволПереводаСтрокВXML(ИмяВременногоXML);
	
	
	ТекстРезультат = Новый ТекстовыйДокумент;
	ТекстРезультат.ДобавитьСтроку("""");
	
	XML = Новый ЧтениеXML;
	XML.ОткрытьФайл(ИмяВременногоXML);
	
	МассивОбъектов = Новый Массив(100);
	МассивСвойств  = Новый Массив(МассивОбъектов.Количество());
	ИдВМассиве     = -1;
	
	СчетчикДействий      = 0;
	ТаблицаСвойствСтроки = Неопределено;
	НашлиПанельРазделов  = Ложь;//надо для обхода бага, когда в логе действий пользователя нет нажатия на панель разделов
	
	ФлагРедактированияТекстаМакета = Ложь;
	
	ТекущееОкно  = """";
	ТекущаяФорма = """";
	ТекущаяТЧ    = """";
	ДанныеНажатияНаЭлементФормы = Неопределено;
	ЭтоСлужебнаяФорма1С_ВыборТипа = Ложь;
	ДобавитьПодсказкуПоПереходуКМетаданномуВСлужебнойФорма1С_ВыборТипа = Ложь;
	
	ЗначениеСтрокиinputText = """";
	Пока XML.Прочитать() Цикл
		
		ИмяУзла = XML.Имя;
		Если XML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			ДобавитьУзел(МассивОбъектов, МассивСвойств, ИдВМассиве, ИмяУзла);
			Если (ИмяУзла = ""gotoRow"") или (ИмяУзла = ""expand"") или (ИмяУзла = ""collapse"") Тогда
				ТаблицаСвойствСтроки = Новый Массив();
			ИначеЕсли ИмяУзла = ""Field"" Тогда
				СвойствоСтроки = Новый Соответствие;
			КонецЕсли;
			Пока XML.ПрочитатьАтрибут() Цикл
				МассивСвойств[ИдВМассиве].Вставить(XML.Имя, XML.Значение);
				
				Если ИмяУзла = ""Field"" Тогда
					СвойствоСтроки.Вставить(XML.Имя, XML.Значение);
				КонецЕсли;
			КонецЦикла;
			
			Если ИмяУзла = ""Form"" Тогда
				ТекущаяФорма = МассивСвойств[ИдВМассиве][""title""];
				ДанныеНажатияНаЭлементФормы = Неопределено;
			ИначеЕсли ИмяУзла = ""ClientApplicationWindow"" Тогда
				ТекущееОкно  = МассивСвойств[ИдВМассиве][""caption""];
				
				Если ТекущееОкно = ""Выбор типа данных"" Тогда
					ЭтоСлужебнаяФорма1С_ВыборТипа = Истина;
					ДобавитьПодсказкуПоПереходуКМетаданномуВСлужебнойФорма1С_ВыборТипа = Истина;
				Иначе                                        	
					ЭтоСлужебнаяФорма1С_ВыборТипа = Ложь;
					ДобавитьПодсказкуПоПереходуКМетаданномуВСлужебнойФорма1С_ВыборТипа = Ложь;
				КонецЕсли;
				ДанныеНажатияНаЭлементФормы = Неопределено;
			ИначеЕсли ИмяУзла = ""FormTable"" Тогда
				ТекущаяТЧ = МассивСвойств[ИдВМассиве][""name""];
				ДанныеНажатияНаЭлементФормы = Неопределено;
			КонецЕсли;
			
			Если ИмяУзла = ""click"" Тогда
				ДанныеНажатияНаЭлементФормы = Неопределено;
				Если МассивОбъектов[ИдВМассиве - 1] = ""CommandInterfaceButton"" Тогда
					Если НРег(МассивСвойств[1][""isMain""]) = ""true"" Тогда
						Если МассивСвойств[ИдВМассиве - 2][""title""] = ""Панель разделов"" Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В панели разделов я выбираю '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""title""]) + ""'"");
							НашлиПанельРазделов = Истина;
						ИначеЕсли МассивСвойств[ИдВМассиве - 2][""title""] = ""Панель открытых"" Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В панели открытых я выбираю '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""title""]) + ""'"");
						ИначеЕсли (МассивСвойств[ИдВМассиве - 2][""title""] = ""Меню функций"") или (МассивСвойств[ИдВМассиве - 3][""title""] = ""Меню функций"") Тогда
							Если Не НашлиПанельРазделов Тогда
								ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в xml не найдено значение клика в панели разделов. Проверьте xml, который был получен с TestClient."");
							КонецЕсли;
							
							ЗаменилиПредыдущуюСтроку = Ложь;
							Если ТекстРезультат.КоличествоСтрок() > 1 Тогда
								ПредыдущаяСтрока = ТекстРезультат.ПолучитьСтроку(ТекстРезультат.КоличествоСтрок());
								Поз = Найти(НРег(ПредыдущаяСтрока),НРег(""В панели разделов я выбираю""));
								Если Поз > 0 Тогда
									ЗаменилиПредыдущуюСтроку = Истина;
									
									ИмяПанелиРазделов = СокрЛП(Сред(ПредыдущаяСтрока,Поз + СтрДлина(""В панели разделов я выбираю"")));
									
									ТекстРезультат.УдалитьСтроку(ТекстРезультат.КоличествоСтрок());
									
									ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В командном интерфейсе я выбираю "" + ИмяПанелиРазделов +  "" '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""title""]) + ""'"");
								КонецЕсли;
							КонецЕсли;
							
							Если НЕ ЗаменилиПредыдущуюСтроку Тогда
								ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В панели функций я выбираю '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""title""]) + ""'"");
							КонецЕсли;
							
							НашлиПанельРазделов = Ложь;
						Иначе
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" Я нажимаю кнопку командного интерфейса '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""title""]) + ""'"");
						КонецЕсли;
					Иначе
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" В текущем окне я нажимаю кнопку командного интерфейса '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""title""]) + ""'"");
					КонецЕсли;
					
				ИначеЕсли МассивОбъектов[ИдВМассиве - 1] = ""FormButton"" Тогда
					
					ЭтоКонтекстаноеМеню = Ложь;
					ИдПоискаМеню = 2;
					Пока Истина Цикл
						Если МассивОбъектов[ИдВМассиве - ИдПоискаМеню] <> ""FormGroup"" Тогда
							Прервать;
						КонецЕсли;
						
						Если Найти(Нрег(МассивСвойств[ИдВМассиве - ИдПоискаМеню][""name""]),""контекстноеменю"") > 0 Тогда
							ЭтоКонтекстаноеМеню = Истина;
							Прервать;
						КонецЕсли;
						
						ИдПоискаМеню = ИдПоискаМеню + 1;
						
						Если ИдПоискаМеню = ИдВМассиве Тогда
							Прервать;
						КонецЕсли;
						
					КонецЦикла;
					
					Если ЭтоКонтекстаноеМеню  Тогда
						ЗаголовокОбъекта = МассивСвойств[ИдВМассиве - ИдПоискаМеню - 1][""title""];
						ИмяОбъекта = """""""" + ЗаголовокОбъекта + """""""";
						Если (СокрЛП(ЗаголовокОбъекта) = """") или (ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ЗаголовокОбъекта, ""ПолеФормы"")) Тогда
							ИмяОбъекта = ""с именем """""" + МассивСвойств[ИдВМассиве - ИдПоискаМеню - 1][""name""] + """""""";
						КонецЕсли;
						
						Если ЗначениеЗаполнено(ТекущаяТЧ) Тогда
							ИмяОбъекта = ""с именем """""" + ТекущаяТЧ + """""""";
						КонецЕсли;
						
						ЗаголовокКнопки = МассивСвойств[ИдВМассиве - 1][""title""];
						ИмяКнопки       = """""""" + ЗаголовокКнопки + """""""";
						Если (СокрЛП(ЗаголовокКнопки) = """") или (ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ЗаголовокКнопки, ""Кнопка"")) Тогда
							ИмяКнопки = ""с именем '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) + ""'"";
						КонецЕсли;
						
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я выбираю пункт контекстного меню "" + ИмяКнопки + "" на элементе формы "" + ИмяОбъекта);
						//И я выбираю пункт контекстного меню ""ПунктМеню"" на элементе формы с именем ""ЭлементФормы""
					Иначе
						
						ЗаголовокОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
						ИмяОбъекта = ""'"" + ЗаголовокОбъекта + ""'"";
						Если (СокрЛП(ЗаголовокОбъекта) = """") или (ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ЗаголовокОбъекта, ""Кнопка"")) Тогда
							ИмяОбъекта = ""с именем '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) + ""'"";
						КонецЕсли;
						
						ДобавитьОбычнуюСтроку = Истина;
						Если ТекущаяТЧ = """" Тогда
							ДобавитьОбычнуюСтроку = Истина;
						Иначе
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" я нажимаю на кнопку "" + ИмяОбъекта);
							ДобавитьОбычнуюСтроку = Ложь;
						КонецЕсли;
						
						Если ДобавитьОбычнуюСтроку Тогда
							ДанныеНажатияНаЭлементФормы = Новый Структура;
							ДанныеНажатияНаЭлементФормы.Вставить(""ТекущееОкно"",ТекущееОкно);
							ДанныеНажатияНаЭлементФормы.Вставить(""ИмяКнопки"",ЗаголовокОбъекта);
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю на кнопку "" + ИмяОбъекта);
							
							Если ЗаголовокОбъекта = ""Провести и закрыть""
								Или  ЗаголовокОбъекта = ""Записать и закрыть""
								Или  ЗаголовокОбъекта = ""Post and close""
								Или  ЗаголовокОбъекта = ""Save and close""
								Тогда
								ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я жду закрытия окна '"" + ТекущееОкно + ""' в течение 20 секунд"");
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
				ИначеЕсли (МассивОбъектов[ИдВМассиве - 1] = ""FormField"") или (МассивОбъектов[ИдВМассиве - 1] = ""FormDecoration"") Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
					Если СокрЛП(ИмяОбъекта) <> """" и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ИмяОбъекта, ""ПолеФормы"")) Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю на гиперссылку """""" + ИмяОбъекта + """""""");
					Иначе
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю на гиперссылку с именем """""" + ИмяОбъекта + """""""");
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""gotoDate"" Тогда
				ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" у поля '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""title""]) + ""' я перехожу к дате "" + ПреобразоватьСтрокуКДатеИзДанныхXML(МассивСвойств[ИдВМассиве][""date""]));
			ИначеЕсли ИмяУзла = ""selectAllRows"" Тогда
				ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) + ""' я выделяю все строки"");
			ИначеЕсли ИмяУзла = ""gotoFirstRow"" Тогда
				ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) + ""' я перехожу к первой строке"");
			ИначеЕсли ИмяУзла = ""gotoLastRow"" Тогда
				ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) + ""' я перехожу к последней строке"");
			ИначеЕсли ИмяУзла = ""deleteRow"" Тогда
				ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) + ""' я удаляю строку"");
			ИначеЕсли ИмяУзла = ""close"" Тогда
				НадоДобавитьДействие = Истина;
				Если ДанныеНажатияНаЭлементФормы <> Неопределено Тогда
					Если ДанныеНажатияНаЭлементФормы.ТекущееОкно = ТекущееОкно Тогда
						Если ДанныеНажатияНаЭлементФормы.ИмяКнопки = ""Провести и закрыть"" Тогда
							НадоДобавитьДействие = Ложь;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				Если НадоДобавитьДействие Тогда
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" Я закрываю окно '"" + МассивСвойств[ИдВМассиве - 1][""caption""] + ""'"");
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""choose"" Тогда
				Если ТекущаяТЧ <> """" Тогда
					Если ЭтоСлужебнаяФорма1С_ВыборТипа И ДобавитьПодсказкуПоПереходуКМетаданномуВСлужебнойФорма1С_ВыборТипа Тогда
						ДобавитьПодсказкуПоПереходуКМетаданномуВСлужебнойФорма1С_ВыборТипа = Ложь;
						
						Строка1 = ""# Следующие строки могут помочь точно выбрать нужное метаданное в форме выбора типа"";
						ТекстРезультат.ДобавитьСтроку(Строка1);
						Строка1 = "" В форме """"Выбор типа данных"""" в таблице """""""" я перехожу к строке:"";
						ТекстРезультат.ДобавитьСтроку(""# "" + ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + Строка1);
						Строка1 = ""# | ''            |"";
						ТекстРезультат.ДобавитьСтроку(Строка1);
						Строка1 = ""# | 'НужныйСправочникИлиДокумент' |"";
						ТекстРезультат.ДобавитьСтроку(Строка1);
					КонецЕсли; 
					
					ДобавляемаяСтрока = "" в таблице """""" + ТекущаяТЧ + """""" я выбираю текущую строку"";
					Если ЭтоСлужебнаяФорма1С_ВыборТипа Тогда
						ДобавляемаяСтрока = "" В форме """"Выбор типа данных"""""" + ДобавляемаяСтрока;
					КонецЕсли;
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + ДобавляемаяСтрока);
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""startChoosing"" Тогда
				Если ТекущаяТЧ <> """" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" я нажимаю кнопку выбора у реквизита с именем """""" + ИмяОбъекта + """""""");
					Иначе
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" я нажимаю кнопку выбора у реквизита """""" + ИмяОбъекта + """""""");
					КонецЕсли;
				Иначе
					ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
					Если (СокрЛП(ИмяОбъекта) <> """") и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ИмяОбъекта, ""ПолеФормы"")) Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю кнопку выбора у поля """""" + ИмяОбъекта + """""""");
					Иначе
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю кнопку выбора у поля с именем """""" + ИмяОбъекта + """""""");
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""clear"" Тогда
				ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
				
				Если ТекущаяТЧ <> """" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" я нажимаю кнопку очистить у поля с именем """""" + ИмяОбъекта + """""""");
					Иначе
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" я нажимаю кнопку очистить у поля """""" + ИмяОбъекта + """""""");
					КонецЕсли;
				Иначе
					Если (СокрЛП(ИмяОбъекта) <> """") и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ИмяОбъекта, ""ПолеФормы"")) Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю кнопку очистить у поля """""" + ИмяОбъекта + """""""");
					Иначе
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю кнопку очистить у поля с именем """""" + ИмяОбъекта + """""""");
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""endEditRow"" Тогда
				//Если МассивОбъектов[ИдВМассиве - 1] = ""FormTable"" Тогда
				Если ТекущаяТЧ <> """" Тогда
					Если МассивСвойств[ИдВМассиве][""cancel""] = ""false"" Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" я завершаю редактирование строки"");
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""addRow"" Тогда
				//Если МассивОбъектов[ИдВМассиве - 1] = ""FormTable"" Тогда
				Если ТекущаяТЧ <> """" Тогда
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" я добавляю новую строку"");
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""open"" Тогда
				Если МассивОбъектов[ИдВМассиве - 1] = ""FormField"" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
					Если СокрЛП(ИмяОбъекта) <> """" и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ИмяОбъекта, ""ПолеФормы"")) Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю на кнопку открытия поля """""" + ИмяОбъекта + """""""");
					Иначе
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю на кнопку открытия поля с именем """""" + ИмяОбъекта + """""""");
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""create"" Тогда
				Если МассивОбъектов[ИдВМассиве - 1] = ""FormField"" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
					Если СокрЛП(ИмяОбъекта) <> """" и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ИмяОбъекта, ""ПолеФормы"")) Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю на кнопку создать поля """""" + ИмяОбъекта + """""""");
					Иначе
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я нажимаю на кнопку создать поля с именем """""" + ИмяОбъекта + """""""");
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""openDropList"" Тогда
				Если МассивОбъектов[ИдВМассиве - 1] = ""FormField"" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
					Если СокрЛП(ИмяОбъекта) <> """" и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ИмяОбъекта, ""ПолеФормы"")) Тогда
						//ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я открываю выпадающий список """""" + ИмяОбъекта + """""""");
					Иначе
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
						//ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я открываю выпадающий список с именем """""" + ИмяОбъекта + """""""");
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""executeChoiceFromChoiceList"" Тогда
				ЗначениеВыбораИзСписка = МассивСвойств[ИдВМассиве][""presentation""];
				ТипВыбораЗначенияИзСписка = ""точное значение"";
				
				ВПредыдущейСтрокеСценарияЕстьВВодПоСтроке = Ложь;
				ПредыдущаяСтрока = """";
				Если ТекстРезультат.КоличествоСтрок() > 0 Тогда
					ПредыдущаяСтрока = ТекстРезультат.ПолучитьСтроку(ТекстРезультат.КоличествоСтрок());
				КонецЕсли;
				
				Если Найти(ПредыдущаяСтрока,""я ввожу текст"") > 0 Тогда
					ВПредыдущейСтрокеСценарияЕстьВВодПоСтроке = Истина;
					ЗначениеВыбораИзСписка = ЗначениеСтрокиinputText;
					ТипВыбораЗначенияИзСписка = ""по строке"";
					Если МассивОбъектов[ИдВМассиве - 1] = ""FormField"" Тогда
						ТекстРезультат.УдалитьСтроку(ТекстРезультат.КоличествоСтрок());
					КонецЕсли;
				ИначеЕсли Найти(ПредыдущаяСтрока,""я нажимаю кнопку выбора"") > 0 Тогда
					//для выпадающего списка шаг выбора сам выберет нужное значение
					Если МассивОбъектов[ИдВМассиве - 1] = ""FormField"" Тогда
						ТекстРезультат.УдалитьСтроку(ТекстРезультат.КоличествоСтрок());
					КонецЕсли
				КонецЕсли;
				
				
				Если МассивОбъектов[ИдВМассиве - 1] = ""FormField"" Тогда
					Если ТекущаяТЧ <> """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
						ЕстьДубли  = ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ИмяОбъекта, ""ПолеФормы"");
						Если СокрЛП(ИмяОбъекта) = """" или ЕстьДубли Тогда
							ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" из выпадающего списка с именем """""" + ИмяОбъекта + """""" я выбираю "" + ТипВыбораЗначенияИзСписка + "" '"" + ЗначениеВыбораИзСписка + ""'"");
						Иначе
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" из выпадающего списка """""" + ИмяОбъекта + """""" я выбираю "" + ТипВыбораЗначенияИзСписка + "" '"" + ЗначениеВыбораИзСписка + ""'"");
						КонецЕсли;
					Иначе
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
						Если СокрЛП(ИмяОбъекта) <> """" и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ИмяОбъекта, ""ПолеФормы"")) Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" из выпадающего списка """""" + ИмяОбъекта + """""" я выбираю "" + ТипВыбораЗначенияИзСписка + "" '"" + ЗначениеВыбораИзСписка + ""'"");
						Иначе
							ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" из выпадающего списка с именем """""" + ИмяОбъекта + """""" я выбираю "" + ТипВыбораЗначенияИзСписка + "" '"" + ЗначениеВыбораИзСписка + ""'"");
						КонецЕсли;
					КонецЕсли;
				Иначе
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" из выпадающего списка я выбираю '"" + ЗначениеВыбораИзСписка + ""'"");
				КонецЕсли;
				
			ИначеЕсли ИмяУзла = ""increaseValue"" Тогда
				Если МассивОбъектов[ИдВМассиве - 1] = ""FormField"" Тогда
					Если ТекущаяТЧ <> """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
						Если СокрЛП(ИмяОбъекта) = """" Тогда
							ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" в поле с именем """""" + ИмяОбъекта + """""" я увеличиваю значение"");
						Иначе
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" в поле """""" + ИмяОбъекта + """""" я увеличиваю значение"");
						КонецЕсли;
					Иначе
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
						Если СокрЛП(ИмяОбъекта) <> """" и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ИмяОбъекта, ""ПолеФормы"")) Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в поле """""" + ИмяОбъекта + """""" я увеличиваю значение"");
						Иначе
							ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в поле с именем """""" + ИмяОбъекта + """""" я увеличиваю значение"");
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли ИмяУзла = ""decreaseValue"" Тогда
				Если МассивОбъектов[ИдВМассиве - 1] = ""FormField"" Тогда
					Если ТекущаяТЧ <> """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
						Если СокрЛП(ИмяОбъекта) = """" Тогда
							ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" в поле с именем """""" + ИмяОбъекта + """""" я уменьшаю значение"");
						Иначе
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" в поле """""" + ИмяОбъекта + """""" я уменьшаю значение"");
						КонецЕсли;
					Иначе
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
						Если СокрЛП(ИмяОбъекта) <> """" и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ИмяОбъекта, ""ПолеФормы"")) Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в поле """""" + ИмяОбъекта + """""" я уменьшаю значение"");
						Иначе
							ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в поле с именем """""" + ИмяОбъекта + """""" я уменьшаю значение"");
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли ИмяУзла = ""executeChoiceFromDropList"" Тогда
				ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
				ЕстьДубли  = ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ИмяОбъекта, ""ПолеФормы"");
				
				Если ТекущаяТЧ <> """" Тогда
					Если СокрЛП(ИмяОбъекта) = """" или ЕстьДубли Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" я выбираю значение реквизита с именем """""" + ИмяОбъекта + """""" из формы списка"");
					Иначе
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" я выбираю значение реквизита """""" + ИмяОбъекта + """""" из формы списка"");
					КонецЕсли;
				Иначе
					Если СокрЛП(ИмяОбъекта) <> """" и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ИмяОбъекта, ""ПолеФормы"")) Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я выбираю значение реквизита """""" + ИмяОбъекта + """""" из формы списка"");
					Иначе
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я выбираю значение реквизита с именем """""" + ИмяОбъекта + """""" из формы списка"");
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""activate"" Тогда
				Если МассивОбъектов[ИдВМассиве - 1] = ""FormGroup"" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
					ИмяГруппы   = МассивСвойств[ИдВМассиве - 1][""name""];
					
					Если ИмяГруппы <> ""ГруппаСтраницы"" Тогда
						//это стандартное название для ""Тестируемая группа формы"", Вид = ""Страницы""
						Если СокрЛП(ИмяОбъекта) = """" Тогда
							ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я перехожу к закладке с именем """""" + ИмяОбъекта + """""""");
						Иначе
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я перехожу к закладке """""" + ИмяОбъекта + """""""");
						КонецЕсли;
					КонецЕсли;
					
				ИначеЕсли МассивОбъектов[ИдВМассиве - 1] = ""FormField"" и ЗначениеЗаполнено(ТекущаяТЧ) Тогда
					//активировали колонку ТЧ
					ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
					Если СокрЛП(ИмяОбъекта) <> """" и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ИмяОбъекта, ""ПолеФормы"")) Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" я активизирую поле """""" + ИмяОбъекта + """""""");
					Иначе
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" я активизирую поле с именем """""" + ИмяОбъекта + """""""");
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли ИмяУзла = ""expand"" Тогда
				Если МассивОбъектов[ИдВМассиве - 1] = ""FormGroup"" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
						УдалитьПредыдущуюСтрокуЕслиЕстьСовпадения(ТекстРезультат, "" я перехожу к закладке"", ИмяОбъекта);
						
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я разворачиваю группу с именем """""" + ИмяОбъекта + """""""");
					Иначе
						
						
						УдалитьПредыдущуюСтрокуЕслиЕстьСовпадения(ТекстРезультат, "" я перехожу к закладке"", ИмяОбъекта);
						
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я разворачиваю группу """""" + ИмяОбъекта + """""""");
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли ИмяУзла = ""collapse"" Тогда
				Если МассивОбъектов[ИдВМассиве - 1] = ""FormGroup"" Тогда
					ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""title""];
					Если СокрЛП(ИмяОбъекта) = """" Тогда
						ИмяОбъекта = МассивСвойств[ИдВМассиве - 1][""name""];
						УдалитьПредыдущуюСтрокуЕслиЕстьСовпадения(ТекстРезультат, "" я перехожу к закладке"", ИмяОбъекта);
						
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я сворачиваю группу с именем """""" + ИмяОбъекта + """""""");
					Иначе
						
						
						УдалитьПредыдущуюСтрокуЕслиЕстьСовпадения(ТекстРезультат, "" я перехожу к закладке"", ИмяОбъекта);
						
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я сворачиваю группу """""" + ИмяОбъекта + """""""");
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли ИмяУзла = ""goOneLevelDown"" Тогда
				Если ТекущаяТЧ <> """" Тогда
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице  """""" + ТекущаяТЧ + """""" я перехожу на один уровень вниз"");
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""gotoPreviousRow"" Тогда
				Если ТекущаяТЧ <> """" Тогда
					switchSelection = Ложь;
					Если МассивСвойств[ИдВМассиве][""switchSelection""] = ""true"" Тогда
						switchSelection = Истина;
					КонецЕсли;
					
					Если switchSelection Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице  """""" + ТекущаяТЧ + """""" я перехожу на одну строку вверх с выделением"");
					Иначе
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице  """""" + ТекущаяТЧ + """""" я перехожу на одну строку вверх"");
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""gotoNextRow"" Тогда
				Если ТекущаяТЧ <> """" Тогда
					switchSelection = Ложь;
					Если МассивСвойств[ИдВМассиве][""switchSelection""] = ""true"" Тогда
						switchSelection = Истина;
					КонецЕсли;
					
					Если switchSelection Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице  """""" + ТекущаяТЧ + """""" я перехожу на одну строку вниз с выделением"");
					Иначе
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице  """""" + ТекущаяТЧ + """""" я перехожу на одну строку вниз"");
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""goOneLevelUp"" Тогда
				Если ТекущаяТЧ <> """" Тогда
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице  """""" + ТекущаяТЧ + """""" я перехожу на один уровень вверх"");
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""selectOption"" Тогда
				Если МассивОбъектов[ИдВМассиве - 1] = ""FormField"" Тогда
					Если СокрЛП(МассивСвойств[ИдВМассиве - 1][""title""]) <> """" Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я меняю значение переключателя '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""title""]) + ""' на '"" + МассивСвойств[ИдВМассиве][""presentation""] + ""'"");
					Иначе
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я меняю значение переключателя с именем '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) + ""' на '"" + МассивСвойств[ИдВМассиве][""presentation""] + ""'"");
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""beginEditingCurrentArea"" Тогда
				ФлагРедактированияТекстаМакета = Истина;
				ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в табличном документе '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) + ""' я делаю двойной клик на текущей ячейке"");
			ИначеЕсли ИмяУзла = ""finishEditingCurrentArea"" Тогда
				ФлагРедактированияТекстаМакета = Ложь;
			ИначеЕсли ИмяУзла = ""setCurrentArea"" Тогда
				Если МассивОбъектов[ИдВМассиве - 1] = ""FormField"" Тогда
					ПредыдущаяСтрока = """";
					Если ТекстРезультат.КоличествоСтрок() > 0 Тогда
						ПредыдущаяСтрока = ТекстРезультат.ПолучитьСтроку(ТекстРезультат.КоличествоСтрок());
					КонецЕсли;
					ТекущаяСтрока = ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в табличном документе '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) + ""' я перехожу к ячейке """""" + МассивСвойств[ИдВМассиве][""area""] + """""""";
					Если ТекущаяСтрока <> ПредыдущаяСтрока Тогда
						//чтобы не добавлять одинаковых шагов
						ТекстРезультат.ДобавитьСтроку(ТекущаяСтрока);
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""inputText"" Тогда
				Если МассивОбъектов[ИдВМассиве - 1] = ""FormField"" Тогда
					
					Если ФлагРедактированияТекстаМакета Тогда
						ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в табличный документ """""" + МассивСвойств[ИдВМассиве - 2][""name""] + """""" я ввожу текст "" + ПолучитьКорректноеПредставлениеСтроковогоЗначенияПоля(""'"" + МассивСвойств[ИдВМассиве][""text""] + ""'""));
					Иначе
						ЗаголовокПоля = МассивСвойств[ИдВМассиве - 1][""title""];
						Если ТекущаяТЧ <> """" Тогда
							Если СокрЛП(ЗаголовокПоля) <> """" Тогда
								ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" в поле '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""title""]) + ""' я ввожу текст "" + ПолучитьКорректноеПредставлениеСтроковогоЗначенияПоля(""'"" + МассивСвойств[ИдВМассиве][""text""] + ""'""));
							Иначе
								ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" в поле с именем '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) + ""' я ввожу текст "" + ПолучитьКорректноеПредставлениеСтроковогоЗначенияПоля(""'"" + МассивСвойств[ИдВМассиве][""text""] + ""'""));
							КонецЕсли;
						Иначе
							Если (СокрЛП(ЗаголовокПоля) <> """") и (Не ЕстьДублиЗаголовковУПоля(МассивСтруктурФорм, ТекущаяФорма, ЗаголовокПоля, ""ПолеФормы"")) Тогда
								ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в поле '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""title""]) + ""' я ввожу текст "" + ПолучитьКорректноеПредставлениеСтроковогоЗначенияПоля(""'"" + МассивСвойств[ИдВМассиве][""text""] + ""'""));
							Иначе
								ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в поле с именем '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) + ""' я ввожу текст "" + ПолучитьКорректноеПредставлениеСтроковогоЗначенияПоля(""'"" + МассивСвойств[ИдВМассиве][""text""] + ""'""));
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					ЗначениеСтрокиinputText = ПолучитьКорректноеПредставлениеСтроковогоЗначенияПоля(МассивСвойств[ИдВМассиве][""text""]);
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""setCheck"" Тогда
				Если МассивОбъектов[ИдВМассиве - 1] = ""FormField"" Тогда
					//Если МассивОбъектов[ИдВМассиве - 2] = ""FormTable"" Тогда
					Если ТекущаяТЧ <> """" Тогда
						Если СокрЛП(МассивСвойств[ИдВМассиве - 1][""title""]) <> """" Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" я изменяю флаг '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""title""]) + ""'"");
						Иначе
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ТекущаяТЧ + """""" я изменяю флаг с именем '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) + ""'"");
						КонецЕсли;
					Иначе
						Если СокрЛП(МассивСвойств[ИдВМассиве - 1][""title""]) <> """" Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я изменяю флаг '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""title""]) + ""'"");
						Иначе
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я изменяю флаг с именем '"" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) + ""'"");
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""ClientApplicationWindow"" Тогда
				ИмяОкна = МассивСвойств[ИдВМассиве][""caption""];
				Если ИмяОкна <> Неопределено Тогда
					ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий, ""ОткрытиеОкна"") + "" открылось окно '"" + ИмяОкна + ""'"");
				КонецЕсли;
			ИначеЕсли ИмяУзла = ""gotoNextItem"" Тогда
				ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я перехожу к следующему реквизиту"");
				
			ИначеЕсли ИмяУзла = ""executeChoiceFromMenu"" Тогда
				ЗначениеМеню = МассивСвойств[ИдВМассиве][""presentation""];
				ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я выбираю пункт меню '"" + ЗначениеМеню + ""'"");
			ИначеЕсли ИмяУзла = ""executeChoiceFromList"" Тогда
				ЗначениеМеню = МассивСвойств[ИдВМассиве][""presentation""];
				ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" я выбираю из списка '"" + ЗначениеМеню + ""'"");
			КонецЕсли;
		КонецЕсли;
		
		Если XML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если ИмяУзла = ""Form"" Тогда
				ТекущаяФорма = """";
			ИначеЕсли ИмяУзла = ""ClientApplicationWindow"" Тогда
				ТекущееОкно = """";
			ИначеЕсли ИмяУзла = ""FormTable"" Тогда
				ТекущаяТЧ = """";
			КонецЕсли;
			
			Если ТекущаяТЧ <> """" Тогда
				Если (ИмяУзла = ""gotoRow"") или (ИмяУзла = ""expand"") или (ИмяУзла = ""collapse"") Тогда
					Стр1 = ""| "";
					Для каждого СвойствоСтроки Из ТаблицаСвойствСтроки Цикл
						Если СокрЛП(СвойствоСтроки[""cellText""]) = """" Тогда
							Продолжить;
						КонецЕсли;
						Стр1 = Стр1 + "" '"" +  СвойствоСтроки[""title""] + ""' |"";
					КонецЦикла;
					
					Стр2 = ""| "";
					
					Для каждого СвойствоСтроки Из ТаблицаСвойствСтроки Цикл
						Если СокрЛП(СвойствоСтроки[""cellText""]) = """" Тогда
							Продолжить;
						КонецЕсли;
						Стр2 = Стр2 + "" '"" + СвойствоСтроки[""cellText""] + ""' |"";
					КонецЦикла;
					
					МассивТаблицы = Новый Массив();
					МассивТаблицы.Добавить(Стр1);
					МассивТаблицы.Добавить(Стр2);
					
					ФорматироватьТаблицуGherkin(МассивТаблицы);
					
					Стр = ""		"" + МассивТаблицы[0] + Символы.ПС + ""		"" + МассивТаблицы[1];
					
					Если ТаблицаСвойствСтроки.Количество() > 0 Тогда
						Если (ИмяУзла = ""gotoRow"") Тогда
							ДобавляемаяСтрока = "" в таблице """""" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) +  """""" я перехожу к строке:"";
							Если ЭтоСлужебнаяФорма1С_ВыборТипа Тогда
								ДобавляемаяСтрока = "" В форме """"Выбор типа данных"""""" + ДобавляемаяСтрока;
								ДобавитьПодсказкуПоПереходуКМетаданномуВСлужебнойФорма1С_ВыборТипа = Ложь;
								
							КонецЕсли;
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + ДобавляемаяСтрока);
						ИначеЕсли (ИмяУзла = ""expand"") Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) +  """""" я разворачиваю строку:"");
						ИначеЕсли (ИмяУзла = ""collapse"") Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) +  """""" я сворачиваю строку:"");
						КонецЕсли;
						ТекстРезультат.ДобавитьСтроку(Стр);
					Иначе
						Если (ИмяУзла = ""expand"") Тогда
							ТекстРезультат.ДобавитьСтроку(ПолучитьПервоеКлючевоеСлово(СчетчикДействий) + "" в таблице """""" + ЭкранироватьСпецСимволыДляЗначенияШага(МассивСвойств[ИдВМассиве - 1][""name""]) +  """""" я разворачиваю текущую строку"");
						КонецЕсли;
					КонецЕсли;
					
				ИначеЕсли ИмяУзла = ""Field"" Тогда
					ТаблицаСвойствСтроки.Добавить(СвойствоСтроки);
				КонецЕсли;
			КонецЕсли;
			
			УдалитьУзел(МассивОбъектов, МассивСвойств, ИдВМассиве, XML.Имя);
		КонецЕсли;
	КонецЦикла;
	XML.Закрыть();
	
	ТекстРезультатКод = Новый ТекстовыйДокумент;
	
	Для НомерСтроки = 1 По ТекстРезультат.КоличествоСтрок() Цикл
		СтрокаТекста = СокрЛП(ТекстРезультат.ПолучитьСтроку(НомерСтроки));
		СтрокаТекста = СтрЗаменить(СтрокаТекста, """""""", """""""""""");
		ТекстРезультатКод.ДобавитьСтроку(""Ванесса.Шаг("""""" + СтрокаТекста + """""");"");
	КонецЦикла;
	Объект.СгенерированныйСценарийКод = ТекстРезультатКод.ПолучитьТекст();
	
	ТекстРезультат.ВставитьСтроку(1, ""#language: ru
	|
	|Функционал: <описание фичи>
	|
	|Как <Роль>
	|Я хочу <описание функционала>
	|Чтобы <бизнес-эффект>
	|
	|Контекст:
	|	Дано Я запускаю сценарий открытия TestClient или подключаю уже существующий
	|
	|
	|Сценарий: <описание сценария>"");
	
	Объект.СгенерированныйСценарий = ТекстРезультат.ПолучитьТекст();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьXMLВUILogToScript(Стр)
	Если Не ЗначениеЗаполнено(Стр) Тогда
		Возврат;
	КонецЕсли;
	
	Попытка
		ПутьКОбработке = ДополнитьСлешВПуть(Объект.КаталогИнструментов) + ""vendor/1C/UILogToScript.epf"";
		ДвоичныеДанные = Новый ДвоичныеДанные(ПутьКОбработке);
		Результат = ПолучитьКод1СИзUILogToScriptСервер(ДвоичныеДанные, Стр);
		
		ОбработатьПолученныйКодUILogToScript(Результат);
		
		Текст = Новый ТекстовыйДокумент;
		Текст.ДобавитьСтроку(Результат);
		
		Объект.СгенерированныйКод = Текст.ПолучитьТекст();
		
	Исключение
		Сообщить(""Не смог обработать XML в UILogToScript."");
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
	Попытка
		ПолучитьТекстФичиИзДействийПользователя(Стр);
	Исключение
		Сообщить(""Ошибка при получении текста фичи:"");
		Сообщить(ОписаниеОшибки());
	КонецПопытки;
	
КонецПроцедуры

&НаКлиенте
Процедура КаталогФичНажатие(Элемент, СтандартнаяОбработка)
	Отладка("""" + Объект.КаталогФич);
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

&НаКлиенте
Функция ПодключитьУжеЗапущенныйTestClient(ДанныеЗапускаКлиентаТестирования)
	Если ТипЗнч(ОбъектКонтекстСохраняемый) <> Тип(""Структура"") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ОбъектКонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
		Попытка
			ТестовоеПриложение = СоздатьТестовоеПриложение(ДанныеЗапускаКлиентаТестирования);
			ТестовоеПриложение.УстановитьСоединение();
			Попытка
				Если НЕ ТестовоеПриложение.ОжидатьОтображениеОбъекта(Тип(""ТестируемоеОкноКлиентскогоПриложения""),,,Объект.ТаймаутЗапуска1С) Тогда
					Возврат Ложь;
				КонецЕсли;
			Исключение
				Возврат Ложь;
			КонецПопытки;
			
			НайденДиалогАвторизации = НаЭкранеДиалогАвторизации();
			Если НайденДиалогАвторизации Тогда
				ВызватьИсключение ""Не удалось авторизоваться в базе."";
			КонецЕсли;
			
			ЗаполнитьКонтекстСохраняемыйДляТестовоеПриложение(ТестовоеПриложение);
			
			Возврат Истина;
		Исключение
			Возврат Ложь;
		КонецПопытки;
		
		Возврат Ложь;
	КонецЕсли;
	
	ТестовоеПриложение = ОбъектКонтекстСохраняемый.ТестовоеПриложение;
	
	Если ТестовоеПриложение = Неопределено Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Попытка
		ТестовоеПриложение.УстановитьСоединение();
		ГлавноеОкноТестируемого = ПолучитьГлавноеОкноТестируемого(ТестовоеПриложение);
		Если ГлавноеОкноТестируемого = Неопределено Тогда
			//ВызватьИсключение ""Не смог найти ГлавноеОкноТестируемого у уже подключенного TestClient."";
			Возврат Ложь;
		КонецЕсли;
		ЗаполнитьКонтекстСохраняемыйДляТестовоеПриложение(ТестовоеПриложение);
	Исключение
		Попытка
			ТестовоеПриложение.РазорватьСоединение();
			ОбъектКонтекстСохраняемый.ТестовоеПриложение = Неопределено;
		Исключение
			
		КонецПопытки;
		
		Возврат Ложь;
	КонецПопытки;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура ЗапуститьСеансTestClient(ДанныеЗапускаКлиентаТестирования)
	
	ЗапуститьКлиентаТестирования(ДанныеЗапускаКлиентаТестирования);
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивЗанятыхПортов()
	
	МассивЗанятыхПортов = Новый Массив;
	Если НЕ ЭтоLinux Тогда
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(""txt"");
		
		ТекстКоманды = ""netstat -ano > """""" + ИмяВременногоФайла + """""""";
		ВыполнитьКомандуОСБезПоказаЧерногоОкна(ТекстКоманды, Истина, Истина);//TODO проверить быстрое использование ВыполнитьКомандуОСБезПоказаЧерногоОкна(..., Истина, Ложь);
		
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(ИмяВременногоФайла, ""UTF-8"");
		
		Пока Истина Цикл
			Стр = Текст.ПрочитатьСтроку();
			Если Стр = Неопределено Тогда
				Прервать;
			КонецЕсли;
			
			Если Стр = """" Тогда
				Продолжить;
			КонецЕсли;
			
			Порт_ = Сред(Сред(СокрЛП(Стр), 8), 1, Найти(Сред(СокрЛП(Стр), 8), ""  ""));
			Порт = """";
			Для НомерСимвола = 0 По СтрДлина(Порт_) - 1 Цикл
				СимволСтроки = Сред(Порт_, СтрДлина(Порт_) - НомерСимвола, 1);
				Если СимволСтроки = "":"" Тогда
					Прервать;
				КонецЕсли;
				Если Найти(""0123456789"", СимволСтроки) > 0 Тогда
					Порт = СимволСтроки + Порт;
				КонецЕсли;
			КонецЦикла;
			
			Попытка
				Порт = Число(Порт);
				МассивЗанятыхПортов.Добавить(Порт);
			Исключение
				Продолжить;
			КонецПопытки;
		КонецЦикла;
		Текст.Закрыть();
	Иначе
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла(""txt"");
		СтрокаЗапуска = ""ss -tuwan4 2>/dev/null | awk '{print $5}' | grep ':' | cut -d """":"""" -f 2 | sort | uniq  > """""" + ИмяВременногоФайла + """""""";// взято из #383
		ВыполнитьКомандуОС(СтрокаЗапуска);
		Текст = Новый ЧтениеТекста;
		Текст.Открыть(ИмяВременногоФайла, ""UTF-8"");
		
		Пока Истина Цикл
			Стр = Текст.ПрочитатьСтроку();
			Если Стр = Неопределено Тогда
				Прервать;
			КонецЕсли;
			
			Если Стр = """" Тогда
				Продолжить;
			КонецЕсли;
			
			Порт = СокрЛП(Стр);
			Попытка
				Порт = Число(Порт);
				МассивЗанятыхПортов.Добавить(Порт);
			Исключение
				Продолжить;
			КонецПопытки;
		КонецЦикла;
		Текст.Закрыть();
	КонецЕсли;
	
	Для каждого СтрокаДанныеКлиентовТестирования Из ДанныеКлиентовТестирования Цикл
		МассивЗанятыхПортов.Добавить(СтрокаДанныеКлиентовТестирования.ПортЗапускаТестКлиента);
	КонецЦикла;
	
	Возврат МассивЗанятыхПортов;
	
КонецФункции // ПолучитьЗанятыеПорты()

&НаКлиенте
Функция ПолучитьКорректноеИмяTesClient(Знач Стр)
	Стр = Транслит(Стр);
	Стр = СтрЗаменить(Стр,"" "","""");
	Стр = СтрЗаменить(Стр,""."","""");
	Стр = СтрЗаменить(Стр,""="","""");
	Стр = СтрЗаменить(Стр,"""""""","""");
	Стр = СтрЗаменить(Стр,"":"","""");
	Стр = СтрЗаменить(Стр,"";"","""");
	Стр = СтрЗаменить(Стр,""?"","""");
	Стр = СтрЗаменить(Стр,""\"","""");
	Стр = СтрЗаменить(Стр,""/"","""");
	Стр = СтрЗаменить(Стр,""*"","""");
	Стр = СтрЗаменить(Стр,""!"","""");
	Стр = СтрЗаменить(Стр,""@"","""");
	Стр = СтрЗаменить(Стр,""#"","""");
	Стр = СтрЗаменить(Стр,""$"","""");
	Стр = СтрЗаменить(Стр,""%"","""");
	Стр = СтрЗаменить(Стр,""-"","""");
	Возврат Стр;
КонецФункции

&НаКлиенте
Функция СоздатьТестовоеПриложение(ДанныеЗапускаКлиентаТестирования)
	ИмяКомпьютера = ДанныеЗапускаКлиентаТестирования.ИмяКомпьютера;
	Если Не ЗначениеЗаполнено(ИмяКомпьютера) Тогда
		ИмяКомпьютера = ""localhost"";
	КонецЕсли;
	
	Порт = ДанныеЗапускаКлиентаТестирования.ПортЗапускаТестКлиента;
	
	
	Если Объект.ДелатьЛогВыполненияСценариевВЖР Тогда
		ЗаписатьЛогВЖРИнформация(""СозданиеОбъектаТестируемоеПриложение"", ""ИмяКомпьютера="" + ИмяКомпьютера
		+ ""; порт="" + Формат(Порт, ""ЧГ=""));
	КонецЕсли;
	
	Если ДанныеЗапускаКлиентаТестирования.ТипКлиента = ""Web"" Тогда
		ВтораяЧастьСтроки = "","""""" + ПолучитьКорректноеИмяTesClient(ДанныеЗапускаКлиентаТестирования.Имя) + """""")"";
	Иначе
		ВтораяЧастьСтроки = "")"";
	КонецЕсли;
	ТестовоеПриложение = Вычислить(""Новый ТестируемоеПриложение("""""" + ИмяКомпьютера + """""", "" + Формат(Порт, ""ЧГ="")
	+ ВтораяЧастьСтроки);
	
	ТекущийTestclientЭтоWebКлиент = Ложь;
	Если ДанныеЗапускаКлиентаТестирования.ТипКлиента = ""Web"" Тогда
		ТекущийTestclientЭтоWebКлиент = Истина;
	КонецЕсли;
	
	Возврат ТестовоеПриложение;
КонецФункции

&НаКлиенте
Процедура УстановитьКонектСTestClient(ДанныеЗапускаКлиентаТестирования, ТестовоеПриложение)
	Если ТипЗнч(ОбъектКонтекстСохраняемый) <> Тип(""Структура"") Тогда
		ОбъектКонтекстСохраняемый = Новый Структура;
	КонецЕсли;
	
	ОбъектКонтекстСохраняемый.Вставить(""ТестовоеПриложение"", ТестовоеПриложение);
	
	МаксДата = ТекущаяДата() + Объект.ТаймаутЗапуска1С;
	Пока Истина Цикл
		Если ТекущаяДата() > МаксДата Тогда
			ВызватьИсключение ""Не смог подключить TestClient. Прерывание по таймауту <""
			+ Объект.ТаймаутЗапуска1С + "">"";
		КонецЕсли;
		
		ПолучилосьУстановитьСоединение = Ложь;
		Попытка
			ТестовоеПриложение.УстановитьСоединение();
			ГлавноеОкноТестируемого = ПолучитьГлавноеОкноТестируемого(ТестовоеПриложение);
			ЗаполнитьКонтекстСохраняемыйДляТестовоеПриложение(ТестовоеПриложение);
			ПолучилосьУстановитьСоединение = Истина;
		Исключение
		КонецПопытки;
		
		Если ПолучилосьУстановитьСоединение Тогда
			Прервать;
		КонецЕсли;
		
		Sleep(1);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьГлавноеОкноТестируемого(ТестовоеПриложение)
	ГлавноеОкноТестируемого = Неопределено;
	КлиентсткиеОкнаТестируемогоПриложения = ТестовоеПриложение.ПолучитьПодчиненныеОбъекты();
	Для Каждого ТестируемоеОкно Из КлиентсткиеОкнаТестируемогоПриложения Цикл
		Если ТестируемоеОкно.Основное Тогда
			ГлавноеОкноТестируемого = ТестируемоеОкно;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ГлавноеОкноТестируемого;
КонецФункции

&НаКлиенте
Процедура ЗаполнитьКонтекстСохраняемыйДляТестовоеПриложение(ТестовоеПриложение)
	ОбъектКонтекстСохраняемый.Вставить(""ТестовоеПриложение"", ТестовоеПриложение);
	ГлавноеОкноТестируемого = ПолучитьГлавноеОкноТестируемого(ТестовоеПриложение);
	ОбъектКонтекстСохраняемый.Вставить(""ГлавноеОкноТестируемого"", ГлавноеОкноТестируемого);
КонецПроцедуры

&НаКлиенте
Функция ОткрытьНовыйСеансTestClientИлиПодключитьУжеСуществующийДляНесколькихКлиентов(ДанныеЗапускаКлиентаТестирования,СтрокаОшибки=Неопределено)
	ПроисходилЗапускTescClient = Ложь;
	
	Если ПодключитьУжеЗапущенныйTestClient(ДанныеЗапускаКлиентаТестирования) Тогда
		СтрокаСообщения = ПолучитьТекстСообщенияПользователю(""$Уже открытый TestClient подключен на %1 порту.$"");
		СтрокаСообщения = СтрЗаменить(СтрокаСообщения,""%1"",ДанныеЗапускаКлиентаТестирования.ПортЗапускаТестКлиента);
		Отладка(СтрокаСообщения);
		Если Объект.ДелатьЛогВыполненияСценариевВЖР Тогда
			ЗаписатьЛогВЖРИнформация(""НайденПодключенныйTestClient"", ""порт="" + Формат(ДанныеЗапускаКлиентаТестирования.ПортЗапускаТестКлиента, ""ЧГ=""));
		КонецЕсли;
		Возврат Истина;
	КонецЕсли;
	
	ТестовоеПриложение = Неопределено;
	Попытка
		ТестовоеПриложение = СоздатьТестовоеПриложение(ДанныеЗапускаКлиентаТестирования);
	Исключение
		СтрокаОшибки = ПолучитьТекстСообщенияПользователю(""$Сеанс должен быть запущен с ключом TESTMANAGER.$"");
		СтрокаОшибки = СтрокаОшибки + ОписаниеОшибки();
		СделатьСообщение(СтрокаОшибки);
		СделатьСообщение(ПолучитьТекстСообщенияПользователю(""$TestClient НЕ подключен.$""));
		Возврат Ложь;
	КонецПопытки;
	
	
	Попытка
		ЗапуститьСеансTestClient(ДанныеЗапускаКлиентаТестирования);
		
		//надо создать ещё один эксземпляр - т.к. возможно сменился порт
		ТестовоеПриложение = СоздатьТестовоеПриложение(ДанныеЗапускаКлиентаТестирования);
		
		УстановитьКонектСTestClient(ДанныеЗапускаКлиентаТестирования, ТестовоеПриложение);
		
		Если НЕ ТестовоеПриложение.ОжидатьОтображениеОбъекта(Тип(""ТестируемоеОкноКлиентскогоПриложения""),,,Объект.ТаймаутЗапуска1С) Тогда
			ТекстСообщения = ""Не дождались отображения окна TestClient. Таймаут <%1>"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Объект.ТаймаутЗапуска1С);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		
		НайденДиалогАвторизации = НаЭкранеДиалогАвторизации();
		Если НайденДиалогАвторизации Тогда
			Sleep(10);
		КонецЕсли;
		
		НайденДиалогАвторизации = НаЭкранеДиалогАвторизации();
		Если НайденДиалогАвторизации Тогда
			ВызватьИсключение ""Не удалось авторизоваться в базе."";
		КонецЕсли;
		
		НаЭкранеОкноПредупреждения = НаЭкранеОкноПредупреждения();
		Если НаЭкранеОкноПредупреждения Тогда
			ТекстПредупреждения = ПолучитьТекстПредупреждения();
			ТекстСообщения = ""При подключении TestClient возникло сообщение:"";
			ТекстСообщения = ТекстСообщения + Символы.ПС + ТекстПредупреждения;
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		Если НЕ ТестовоеПриложение.ОжидатьОтображениеОбъекта(Тип(""ТестируемоеОкноКлиентскогоПриложения""),,,Объект.ТаймаутЗапуска1С) Тогда
			ТекстСообщения = ""Не дождались отображения окна TestClient. Таймаут <%1>"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Объект.ТаймаутЗапуска1С);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		СтрокаСообщения = ПолучитьТекстСообщенияПользователю(""$TestClient подключен на %1 порту.$"");
		СтрокаСообщения = СтрЗаменить(СтрокаСообщения,""%1"",ДанныеЗапускаКлиентаТестирования.ПортЗапускаТестКлиента);
		Отладка(СтрокаСообщения);
		Если Объект.ДелатьЛогВыполненияСценариевВЖР Тогда
			ЗаписатьЛогВЖРИнформация(""ПодключениеTestClient"", ""порт="" + Формат(ДанныеЗапускаКлиентаТестирования.ПортЗапускаТестКлиента, ""ЧГ=""));
		КонецЕсли;
		
		Отладка(""ПодключениеTestClient : порт="" + Формат(ДанныеЗапускаКлиентаТестирования.ПортЗапускаТестКлиента, ""ЧГ=""));
		
		ЗаполнитьКонтекстСохраняемыйДляТестовоеПриложение(ТестовоеПриложение);
		
	Исключение
		СделатьСообщение(ОписаниеОшибки());
		СделатьСообщение(ПолучитьТекстСообщенияПользователю(""$TestClient НЕ подключен.$""));
		СтрокаОшибки = ОписаниеОшибки();
		Возврат Ложь;
	КонецПопытки;
	
	Если Не ОбъектКонтекстСохраняемый.Свойство(""ПодключенныеTestClient"") Тогда
		ОбъектКонтекстСохраняемый.Вставить(""ПодключенныеTestClient"", Новый Массив);
	КонецЕсли;
	
	ПодключенныеTestClient = ОбъектКонтекстСохраняемый.ПодключенныеTestClient;
	
	ТестовоеПриложение      = ОбъектКонтекстСохраняемый.ТестовоеПриложение;
	ГлавноеОкноТестируемого = ОбъектКонтекстСохраняемый.ГлавноеОкноТестируемого;
	ИмяTestClient           = ДанныеЗапускаКлиентаТестирования.Имя;
	Синоним                 = ДанныеЗапускаКлиентаТестирования.Синоним;
	
	СохранитьКлиентовТестирования();
	УдалитьИзПолучитьКлиентаТестированияПрофиль(ПодключенныеTestClient,ИмяTestClient);
	
	ПодключенныеTestClient.Добавить(Новый Структура(""Имя, Синоним, ТестовоеПриложение, ГлавноеОкноТестируемого"", ИмяTestClient, Синоним, ТестовоеПриложение, ГлавноеОкноТестируемого));
	ОбъектКонтекстСохраняемый.Вставить(""ТекущийПрофильTestClient"", ИмяTestClient);
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура РазвернутьСтрокуДерева(Строка)
	ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
	Если Строка.Тип = ""Область"" И НЕ Объект.ПроверкаРаботыVanessaBehaviorВРежимеTestClient Тогда
		Элементы.ДеревоТестов.Свернуть(ИдентификаторСтроки);
		Возврат;
	КонецЕсли;
	
	ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
	Элементы.ДеревоТестов.Развернуть(ИдентификаторСтроки);
КонецПроцедуры

&НаКлиенте
Процедура СвернутьСтрокуДерева(Строка)
	ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
	Элементы.ДеревоТестов.Свернуть(ИдентификаторСтроки);
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьСтрокиДерева(ДеревоФормыСтроки)
	Для Каждого Строка Из ДеревоФормыСтроки Цикл
		РазвернутьСтрокуДерева(Строка);
		
		Если Строка.Тип = ""Область"" И НЕ Объект.ПроверкаРаботыVanessaBehaviorВРежимеTestClient Тогда
			Продолжить;
		КонецЕсли;
		
		ПодчиненныеСтроки = Строка.ПолучитьЭлементы();
		Если ПодчиненныеСтроки.Количество() > 0 Тогда
			РазвернутьСтрокиДерева(ПодчиненныеСтроки);
		КонецЕсли;
		
		//ИдентификаторСтроки=Строка.ПолучитьИдентификатор();
		//Элементы.ДеревоТестов.Развернуть(ИдентификаторСтроки, Истина);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьДерево()
	ДеревоФормыСтроки = Объект.ДеревоТестов.ПолучитьЭлементы();
	РазвернутьСтрокиДерева(ДеревоФормыСтроки);
КонецПроцедуры

&НаСервере
Функция СформироватьОтчетВоВнутреннемФормате(СтруктураОФ)
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	Дерево = ОбъектСервер.ДеревоТестов;
	
	Возврат ОбъектСервер.ВывестиОтчетТестированияВоВнутреннемФормате(Дерево, СтруктураОФ);
КонецФункции

&НаКлиенте
Процедура ПодключитьВнешниеОбработкиДляОтладки(ЭтоПлагины = Ложь, РанееПодключенные = Неопределено)
	Перем МассивФорм;
	МассивФорм = Новый Массив;
	Если РанееПодключенные = Неопределено ИЛИ ТипЗнч(РанееПодключенные) <> Тип(""Массив"") Тогда
		РанееПодключенные = Новый Массив();
	КонецЕсли;
	
	ФормаVanessa = Неопределено;
	
	ЗаголовокТестов = ""тест_test_"";
	ЗаголовокПлагинов = ""плагин_plugin_"";
	ЧастьЗаголовка = ?(ЭтоПлагины, 7, 5);
	СтрокаПоискаЗаголовка = ?(ЭтоПлагины, ЗаголовокПлагинов, ЗаголовокТестов);
	
	Окна = ПолучитьОкна();
	Для каждого Окн Из Окна Цикл
		Если ТипЗнч(Окн) = Тип(""ОкноКлиентскогоПриложения"") Тогда
			Если Найти(СтрокаПоискаЗаголовка, Нрег(Лев(Строка(Окн.Заголовок), ЧастьЗаголовка))) > 0 Тогда
				МассивФорм.Добавить(Окн.ПолучитьСодержимое());
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Если МассивФорм.Количество() > 0 И НЕ ЭтоПлагины Тогда
		Для каждого Форма Из МассивФорм Цикл
			Попытка
				ДобавитьВнешнийСписокПроцедур(Форма.ПолучитьСписокТестов(ЭтаФорма), Форма.УникальныйИдентификатор, Форма);
				ТекстСообщения = ""Подключили для отладки форма %1"";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Форма.Заголовок);
				Сообщить(ТекстСообщения);
			Исключение
				ТекстСообщения = ""Не удалось подключить форма %1 по причине:%2"";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Форма.Заголовок);
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",ОписаниеОшибки());
				Сообщить(ТекстСообщения);
				//ОписаниеОшибки()
			КонецПопытки;
		КонецЦикла;
	ИначеЕсли МассивФорм.Количество() > 0 И ЭтоПлагины Тогда
		РанееПодключенные = МассивФорм;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция МетаданныеИмяСервер()
	ОсновнойОбъект = Объект();
	НайденноеИмя = ОсновнойОбъект.Метаданные().Имя;
	
	Возврат НайденноеИмя;
КонецФункции

&НаКлиенте
Процедура АктивироватьСоседнююСтрокуДерева(СтрокаДерва)
	СтрокаРодитель = СтрокаДерва.ПолучитьРодителя();
	Если СтрокаРодитель = Неопределено Тогда
		Возврат;
	КонецЕсли;
	СтрокиДерева   = СтрокаРодитель.ПолучитьЭлементы();
	Для Ккк = 0 По СтрокиДерева.Количество() - 1 Цикл
		ТекСтрока = СтрокиДерева[Ккк];
		
		Если ТекСтрока = СтрокаШагаСКоторогоНадоВыполнятьСценарий Тогда
			Если Ккк < СтрокиДерева.Количество() - 1 Тогда
				НужнаяСтрока = СтрокиДерева[Ккк + 1];
			ИначеЕсли Ккк > 0 Тогда
				НужнаяСтрока = СтрокиДерева[Ккк - 1];
			Иначе
				Продолжить;
			КонецЕсли;
			
			Элементы.ДеревоТестов.ТекущаяСтрока = НужнаяСтрока.ПолучитьИдентификатор();
			
			Прервать;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура НайтиСтрокуДереваПоИдСтроки(ИдСтроки, СтрокиДерева, Результат)
	
	Для каждого СтрокаДерева Из СтрокиДерева Цикл
		Если Результат <> Неопределено Тогда
			Возврат;
		КонецЕсли;
		
		
		Если ИдСтроки = СтрокаДерева.ИдСтроки Тогда
			Результат = СтрокаДерева;
			Возврат;
		КонецЕсли;
		
		ПодчиненныеЭлементыСтроки = СтрокаДерева.ПолучитьЭлементы();
		НайтиСтрокуДереваПоИдСтроки(ИдСтроки, ПодчиненныеЭлементыСтроки, Результат);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ЭтоПустаяСтрокаТабличногоДокумента(СтрокаТабДок)
	Для каждого Зн Из СтрокаТабДок Цикл
		Если Зн <> """" Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Процедура УбратьПустыеСтрокиИКолонкиСКраёвМакета(ТабДок,УдалятьСтрокиСверху = Истина,УдалятьКолонкиСлева = Истина)
	Если ТабДок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	Если ТабДок[0].Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	
	
	
	Если УдалятьСтрокиСверху Тогда
		//пустые строки сверху
		МассивСтрокДляУдаления = Новый Массив;
		Ном = -1;
		Для каждого СтрокаТабДок Из ТабДок Цикл
			Ном = Ном + 1;
			Если ЭтоПустаяСтрокаТабличногоДокумента(СтрокаТабДок) Тогда
				МассивСтрокДляУдаления.Добавить(Ном);
			Иначе
				//значит нашли первую не пустую строку
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		
		Для Ккк = 0 По МассивСтрокДляУдаления.Количество() - 1 Цикл
			ИдМассива = МассивСтрокДляУдаления[МассивСтрокДляУдаления.Количество() - 1 - Ккк];
			ТабДок.Удалить(ИдМассива);
		КонецЦикла;
	КонецЕсли;
	
	
	
	//пустые строки снизу
	МассивСтрокДляУдаления = Новый Массив;
	Для Ккк = 0 По ТабДок.Количество() - 1 Цикл
		Ном          = ТабДок.Количество() - 1 - Ккк;
		СтрокаТабДок = ТабДок[Ном];
		Если ЭтоПустаяСтрокаТабличногоДокумента(СтрокаТабДок) Тогда
			МассивСтрокДляУдаления.Добавить(Ном);
		Иначе
			//значит нашли первую не пустую строку
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	
	Для каждого ИдМассива Из МассивСтрокДляУдаления Цикл
		ТабДок.Удалить(ИдМассива);
	КонецЦикла;
	
	
	
	
	Если ТабДок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	
	Если УдалятьКолонкиСлева Тогда
		//пустые колонки слева
		КолКолонок = ТабДок[0].Количество();
		МассивКолонокДляУдаления = Новый Массив;
		Ном = -1;
		Для ИдКолонки = 0 По КолКолонок - 1 Цикл
			КолонкаПустая = Истина;
			Для каждого СтрокаТабДок Из ТабДок Цикл
				Зн = СтрокаТабДок[ИдКолонки];
				Если Зн <> """" Тогда
					КолонкаПустая = Ложь;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если КолонкаПустая Тогда
				МассивКолонокДляУдаления.Добавить(ИдКолонки);
			Иначе
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		
		Для Ккк = 0 По МассивКолонокДляУдаления.Количество() - 1 Цикл
			ИдМассива = МассивКолонокДляУдаления[МассивКолонокДляУдаления.Количество() - 1 - Ккк];
			Для каждого СтрокаТабДок Из ТабДок Цикл
				СтрокаТабДок.Удалить(ИдМассива);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	
	
	
	
	
	//пустые колонки справа
	КолКолонок = ТабДок[0].Количество();
	МассивКолонокДляУдаления = Новый Массив;
	Ном = -1;
	Для Ккк = 0 По КолКолонок - 1 Цикл
		ИдКолонки = КолКолонок - 1 - Ккк;
		
		
		КолонкаПустая = Истина;
		Для каждого СтрокаТабДок Из ТабДок Цикл
			Зн = СтрокаТабДок[ИдКолонки];
			Если Зн <> """" Тогда
				КолонкаПустая = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если КолонкаПустая Тогда
			МассивКолонокДляУдаления.Добавить(ИдКолонки);
		Иначе
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	
	Для Ккк = 0 По МассивКолонокДляУдаления.Количество() - 1 Цикл
		ИдМассива = МассивКолонокДляУдаления[Ккк];
		Для каждого СтрокаТабДок Из ТабДок Цикл
			СтрокаТабДок.Удалить(ИдМассива);
		КонецЦикла;
	КонецЦикла;
	
	
	
КонецПроцедуры

&НаКлиенте
//считывет табличный документ из TestClient по ячейке
//убирает пустые области по краям макета, если они есть, т.к.
//предполагается, что считанные данные будут испльзованы в шагах, которые в качестве параметра получают таблицу Gherkin
//и пустые области убираются, чтобу улучшить читаемость сценария и не заграможать его текстом вида
//| ''               | '' | '' | '' | '' |
//| ''               | '' | '' | '' | '' |
//| 'Полезная часть' | '' | '' | '' | '' |
Функция МакетTestClientПоЯчейкеКакМассив(ЭлементФормы,ДопПараметры = Неопределено)
	НадоСчитатьОбласть = Ложь;
	Если ДопПараметры <> Неопределено Тогда
		Если ДопПараметры.Свойство(""НадоСчитатьОбласть"") Тогда
			НадоСчитатьОбласть = ДопПараметры.НадоСчитатьОбласть;
		КонецЕсли;
	КонецЕсли;
	
	ОпределятьГраницыМакетаWebКлиентаЧерезПереходКОбласти = Истина;
	Если ТекущийTestclientЭтоWebКлиент Тогда
		Если Версия8312ИлиВыше и НЕ Версия8313ИлиВыше Тогда
			ОпределятьГраницыМакетаWebКлиентаЧерезПереходКОбласти = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ТабДок        = Новый Массив();
	СчетчикСтрок  = 0;
	ШиринаТаблицы = Неопределено;
	Пока Истина Цикл
		СчетчикСтрок = СчетчикСтрок + 1;
		
		Если НадоСчитатьОбласть Тогда
			Если СчетчикСтрок < ДопПараметры.НачСтр Тогда
				Продолжить;
			КонецЕсли;
			
			Если СчетчикСтрок > ДопПараметры.НачСтр + ДопПараметры.КолСтр - 1 Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
		
		
		Если ТекущийTestclientЭтоWebКлиент и ОпределятьГраницыМакетаWebКлиентаЧерезПереходКОбласти Тогда
			
			Адрес = СформироватьАдресЯчейки(СчетчикСтрок,1);
			АдресТекущейОбласти = Неопределено;
			Если НЕ ПерейтиВТабДокTestClientКЯчейке(ЭлементФормы,АдресТекущейОбласти,Адрес) Тогда
				Прервать;
			КонецЕсли;
		Иначе
			//надо читать макет по установленным границам чтения
			
			Если СчетчикСтрок < СчитываниеМакетаНачСтр Тогда
				Продолжить;
			КонецЕсли;
			
			Если СчетчикСтрок > (СчитываниеМакетаНачСтр + СчитываниеМакетаКолСтр - 1) Тогда
				Прервать;
			КонецЕсли;
			
		КонецЕсли;
		
		СтрокаТабДок = Новый Массив;
		СчетчикКолонок = 0;
		Пока Истина Цикл
			СчетчикКолонок = СчетчикКолонок + 1;
			
			Если НадоСчитатьОбласть Тогда
				Если СчетчикКолонок < ДопПараметры.НачКол Тогда
					Продолжить;
				КонецЕсли;
				
				Если СчетчикКолонок > ДопПараметры.НачКол + ДопПараметры.КолКол - 1 Тогда
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			Если НЕ ТекущийTestclientЭтоWebКлиент Или (ТекущийTestclientЭтоWebКлиент И Не ОпределятьГраницыМакетаWebКлиентаЧерезПереходКОбласти) Тогда
				Если СчетчикКолонок < СчитываниеМакетаНачКол Тогда
					Продолжить;
				КонецЕсли;
				
				Если СчетчикКолонок > (СчитываниеМакетаНачКол + СчитываниеМакетаКолКол - 1) Тогда
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			Если ШиринаТаблицы <> Неопределено Тогда
				Если СчетчикКолонок > ШиринаТаблицы Тогда
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			Адрес = СформироватьАдресЯчейки(СчетчикСтрок,СчетчикКолонок);
			
			Значение = ЭлементФормы.ПолучитьТекстОбласти(Адрес);
			Значение = СтрЗаменить(Значение, Символы.ПС, ""\n"");
			
			Если ШиринаТаблицы = Неопределено Тогда
				//проверим, что у нас получилось установить область
				//если не получилось, значит мы пытаемся выйти за границу макета
				Если ТекущийTestclientЭтоWebКлиент и ОпределятьГраницыМакетаWebКлиентаЧерезПереходКОбласти Тогда
					АдресТекущейОбласти = Неопределено;
					Если НЕ ПерейтиВТабДокTestClientКЯчейке(ЭлементФормы,АдресТекущейОбласти,Адрес) Тогда
						ШиринаТаблицы = СчетчикКолонок - 1;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			СтрокаТабДок.Добавить(Значение);
		КонецЦикла;
		
		ТабДок.Добавить(СтрокаТабДок);
	КонецЦикла;
	
	УдалятьПустыеСтрокиИзМакета = Истина;
	Если ДопПараметры <> Неопределено Тогда
		Если ДопПараметры.Свойство(""УдалятьПустыеСтрокиИзМакета"") Тогда
			УдалятьПустыеСтрокиИзМакета = ДопПараметры.УдалятьПустыеСтрокиИзМакета;
		КонецЕсли;
	КонецЕсли;
	
	Если УдалятьПустыеСтрокиИзМакета Тогда
		УбратьПустыеСтрокиИКолонкиСКраёвМакета(ТабДок);
	КонецЕсли;
	
	Возврат ТабДок;
КонецФункции

&НаСервереБезКонтекста
Функция ПреобразоватьФайлМакетаВМассив(ФайлМакета,ДопПараметры)
	НадоСчитатьОбласть = Ложь;
	Если ДопПараметры <> Неопределено Тогда
		Если ДопПараметры.Свойство(""НадоСчитатьОбласть"") Тогда
			НадоСчитатьОбласть = ДопПараметры.НадоСчитатьОбласть;
		КонецЕсли;
	КонецЕсли;
	
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(""mxl"");
	
	ФайлМакета.Записать(ИмяВременногоФайла);//TODO подумать об ускорении через Потоки или другой алгоритм
	
	ТД = Новый ТабличныйДокумент;
	ТД.Прочитать(ИмяВременногоФайла);
	
	ТабДок = Новый Массив();
	Для Стр = 1 По ТД.ВысотаТаблицы Цикл
		
		Если НадоСчитатьОбласть Тогда
			Если Стр < ДопПараметры.НачСтр Тогда
				Продолжить;
			КонецЕсли;
			
			Если Стр > ДопПараметры.НачСтр + ДопПараметры.КолСтр - 1 Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаТабДок = Новый Массив;
		Для Кол = 1 По ТД.ШиринаТаблицы Цикл
			
			Если НадоСчитатьОбласть Тогда
				Если Кол < ДопПараметры.НачКол Тогда
					Продолжить;
				КонецЕсли;
				
				Если Кол > ДопПараметры.НачКол + ДопПараметры.КолКол - 1 Тогда
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			
			Значение = ТД.Область(Стр,Кол,Стр,Кол).Текст;
			Значение = СтрЗаменить(Значение, Символы.ПС, ""\n"");
			
			СтрокаТабДок.Добавить(Значение);
		КонецЦикла;
		
		ТабДок.Добавить(СтрокаТабДок);
	КонецЦикла;
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	Возврат ТабДок;
КонецФункции

&НаКлиенте
Функция ПерейтиВТабДокTestClientКЯчейке(ЭлементФормы,АдресТекущейОбласти,Адрес)
	Если АдресТекущейОбласти = Неопределено Тогда
		ЭлементФормы.УстановитьТекущуюОбласть(Адрес);
		АдресТекущейОбласти = ЭлементФормы.ПолучитьАдресТекущейОбласти();
	КонецЕсли;
	
	Если Лев(НРег(АдресТекущейОбласти),1) = ""r"" Тогда
		НачСтр1 = -1;
		НачКол1 = -1;
		КолСтр1 = -1;
		КолКол1 = -1;
		ПолучитьПараметрыОбластиМакета(АдресТекущейОбласти,НачСтр1,НачКол1,КолСтр1,КолКол1);
		
		НачСтр2 = -1;
		НачКол2 = -1;
		КолСтр2 = -1;
		КолКол2 = -1;
		ПолучитьПараметрыОбластиМакета(Адрес,НачСтр2,НачКол2,КолСтр2,КолКол2);
		Если НачСтр1 > НачСтр2 Тогда
			Возврат Ложь;//значит АдресТекущейОбласти не находится внутри Адрес
		КонецЕсли;
		Если НачКол1 > НачКол2 Тогда
			Возврат Ложь;//значит АдресТекущейОбласти не находится внутри Адрес
		КонецЕсли;
		Если КолСтр1 < КолСтр2 Тогда
			Возврат Ложь;//значит АдресТекущейОбласти не находится внутри Адрес
		КонецЕсли;
		Если КолКол1 < КолКол2 Тогда
			Возврат Ложь;//значит АдресТекущейОбласти не находится внутри Адрес
		КонецЕсли;
		
		//Если НРег(Адрес) <> Нрег(АдресТекущейОбласти) Тогда
		//	//значит нельзя перейти к этой строке
		//	Возврат Ложь;
		//КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

&НаКлиенте
Функция СформироватьАдресЯчейки(НомерСтроки,НомерКолонки)
	Возврат ""R"" +XMLСтрока(НомерСтроки) + ""C"" + XMLСтрока(НомерКолонки);
КонецФункции

&НаКлиенте
Функция ТабличныйДокументTestClientПоЯчейкам(ЭлементФормы,ДопПараметры = Неопределено)
	НадоСчитатьОбласть = Ложь;
	СмещениеСтрок  = 0;
	СмещениеКолонок = 0;
	
	ПолучатьИменаОбластей = Ложь;
	Если ДопПараметры <> Неопределено Тогда
		ДопПараметры.Вставить(""СчитываниеПоЯчейкам"",Истина);
		Если ДопПараметры.Свойство(""ПолучатьИменаОбластей"") Тогда
			ПолучатьИменаОбластей = ДопПараметры.ПолучатьИменаОбластей;
		КонецЕсли;
		Если ДопПараметры.Свойство(""НадоСчитатьОбласть"") Тогда
			НадоСчитатьОбласть = ДопПараметры.НадоСчитатьОбласть;
			СмещениеСтрок      = ДопПараметры.НачСтр - 1;
			СмещениеКолонок    = ДопПараметры.НачКол - 1;
		КонецЕсли;
	КонецЕсли;
	
	ОпределятьГраницыМакетаWebКлиентаЧерезПереходКОбласти = Истина;
	Если ТекущийTestclientЭтоWebКлиент Тогда
		Если Версия8312ИлиВыше и НЕ Версия8313ИлиВыше Тогда
			ОпределятьГраницыМакетаWebКлиентаЧерезПереходКОбласти = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	
	ШиринаТаблицы = Неопределено;
	
	ТабДок = Новый ТабличныйДокумент;
	СчетчикСтрок = 0;
	Пока Истина Цикл
		СчетчикСтрок = СчетчикСтрок + 1;
		
		Если НадоСчитатьОбласть Тогда
			Если СчетчикСтрок < ДопПараметры.НачСтр Тогда
				Продолжить;
			КонецЕсли;
			Если СчетчикСтрок > ДопПараметры.НачСтр + ДопПараметры.КолСтр - 1 Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
		
		
		
		//проверим, что мы можем перейти на новую строку
		Адрес = СформироватьАдресЯчейки(СчетчикСтрок,1);
		Если ТекущийTestclientЭтоWebКлиент и ОпределятьГраницыМакетаWebКлиентаЧерезПереходКОбласти Тогда
			АдресТекущейОбласти = Неопределено;
			Если НЕ ПерейтиВТабДокTestClientКЯчейке(ЭлементФормы,АдресТекущейОбласти,Адрес) Тогда
				Прервать;
			КонецЕсли;
		Иначе
			//надо читать макет по установленным границам чтения
			
			Если СчетчикСтрок < СчитываниеМакетаНачСтр Тогда
				Продолжить;
			КонецЕсли;
			
			Если СчетчикСтрок > (СчитываниеМакетаНачСтр + СчитываниеМакетаКолСтр - 1) Тогда
				Прервать;
			КонецЕсли;
			
		КонецЕсли;
		
		СтрокаТабДок = Новый Массив;
		СчетчикКолонок = 0;
		Пока Истина Цикл
			СчетчикКолонок = СчетчикКолонок + 1;
			
			Если НЕ ТекущийTestclientЭтоWebКлиент Или (ТекущийTestclientЭтоWebКлиент И Не ОпределятьГраницыМакетаWebКлиентаЧерезПереходКОбласти) Тогда
				Если СчетчикКолонок < СчитываниеМакетаНачКол Тогда
					Продолжить;
				КонецЕсли;
				
				Если СчетчикКолонок > (СчитываниеМакетаНачКол + СчитываниеМакетаКолКол - 1) Тогда
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			
			Если НадоСчитатьОбласть Тогда
				Если СчетчикКолонок < ДопПараметры.НачКол Тогда
					Продолжить;
				КонецЕсли;
				Если СчетчикКолонок > ДопПараметры.НачКол + ДопПараметры.КолКол - 1 Тогда
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			Если ШиринаТаблицы <> Неопределено Тогда
				Если СчетчикКолонок > ШиринаТаблицы Тогда
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
			Адрес = СформироватьАдресЯчейки(СчетчикСтрок,СчетчикКолонок);
			
			Значение = ЭлементФормы.ПолучитьТекстОбласти(Адрес);
			
			ТекОбласть = ТабДок.Область(СчетчикСтрок-СмещениеСтрок,СчетчикКолонок-СмещениеКолонок,СчетчикСтрок-СмещениеСтрок,СчетчикКолонок-СмещениеКолонок);
			ТекОбласть.Текст = Значение;
			
			АдресТекущейОбласти = Неопределено;
			Если ПолучатьИменаОбластей Тогда
				ЭлементФормы.УстановитьТекущуюОбласть(Адрес);
				АдресТекущейОбласти = ЭлементФормы.ПолучитьАдресТекущейОбласти();
				Если Лев(НРег(АдресТекущейОбласти),1) <> ""r"" Тогда
					ТекОбласть.Имя = АдресТекущейОбласти;
				КонецЕсли;
			КонецЕсли;
			
			Если ШиринаТаблицы = Неопределено Тогда
				//проверим, что у нас получилось установить область
				//если не получилось, значит мы пытаемся выйти за границу макета
				Если ТекущийTestclientЭтоWebКлиент и ОпределятьГраницыМакетаWebКлиентаЧерезПереходКОбласти Тогда
					Если НЕ ПерейтиВТабДокTestClientКЯчейке(ЭлементФормы,АдресТекущейОбласти,Адрес) Тогда
						ШиринаТаблицы = СчетчикКолонок - 1;
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Возврат ТабДок;
КонецФункции

&НаСервереБезКонтекста
Функция ТабличныйДокументИзДвоичныхДанных(ФайлМакета)
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(""mxl"");
	
	ФайлМакета.Записать(ИмяВременногоФайла);
	
	ТД = Новый ТабличныйДокумент;
	ТД.Прочитать(ИмяВременногоФайла);
	
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	Возврат ТД;
КонецФункции

&НаСервереБезКонтекста
Функция ОставитьЧастьМакетаСогласноПараметровЧтенияМакета(ФайлМакета,СчитываниеМакетаНачСтр,СчитываниеМакетаНачКол,СчитываниеМакетаКолСтр,СчитываниеМакетаКолКол)
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла(""mxl"");
	ФайлМакета.Записать(ИмяВременногоФайла);
	ТД = Новый ТабличныйДокумент;
	ТД.Прочитать(ИмяВременногоФайла);
	
	Если   СчитываниеМакетаНачСтр = 1
		И СчитываниеМакетаНачКол = 1
		И СчитываниеМакетаКолСтр >= ТД.ВысотаТаблицы
		И СчитываниеМакетаКолКол >= ТД.ШиринаТаблицы
		Тогда
		//значит можно сразу вернуть макет
		
		УдалитьФайлы(ИмяВременногоФайла);
		Возврат ТД;
	КонецЕсли;
	
	
	//если оказались тут, значит надо считать только область в макете
	
	ТабДок = Новый ТабличныйДокумент;
	СчетчикСтрок = 0;
	Для Стр = СчитываниеМакетаНачСтр По СчитываниеМакетаНачСтр + СчитываниеМакетаКолСтр - 1 Цикл
		СчетчикСтрок = СчетчикСтрок + 1;
		
		СтрокаТабДок = Новый Массив;
		СчетчикКолонок = 0;
		Для Кол = СчитываниеМакетаНачКол По СчитываниеМакетаНачКол + СчитываниеМакетаКолКол - 1 Цикл
			СчетчикКолонок = СчетчикКолонок + 1;
			
			Значение = ТД.Область(Стр,Кол,Стр,Кол).Текст;
			Значение = СтрЗаменить(Значение, Символы.ПС, ""\n"");
			
			ТабДок.Область(СчетчикСтрок,СчетчикКолонок,СчетчикСтрок,СчетчикКолонок).Текст = Значение;
		КонецЦикла;
		
	КонецЦикла;
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	Возврат ТабДок;
КонецФункции

&НаКлиенте
Функция ПолучитьСостояниеЭлементаФормыTestClient(ЭлементФормы)
	СтруктураЗначения = Новый Структура;
	СтруктураЗначения.Вставить(""Тип"", ТипЗнч(ЭлементФормы));
	СтруктураЗначения.Вставить(""Имя"", ЭлементФормы.Имя);
	
	Если ТипЗнч(ЭлементФормы) = Тип(""ТестируемаяКнопкаФормы"") Тогда
		СтруктураЗначения.Вставить(""Имя"", ЭлементФормы.Имя);
		СтруктураЗначения.Вставить(""ТекстЗаголовка"", ЭлементФормы.ТекстЗаголовка);
		СтруктураЗначения.Вставить(""Вид"", ЭлементФормы.Вид);
	ИначеЕсли ТипЗнч(ЭлементФормы) = Тип(""ТестируемаяТаблицаФормы"") Тогда
		СтруктураЗначения.Вставить(""Имя"", ЭлементФормы.Имя);
		СтруктураЗначения.Вставить(""ТекстЗаголовка"", ЭлементФормы.ТекстЗаголовка);
		
		Попытка
			ЗначениеТЧ = ПолучитьЗначениеТестируемаяТаблицаФормы(ЭлементФормы);
		Исключение
			ЗначениеТЧ = Неопределено;
		КонецПопытки;
		
		СтруктураЗначения.Вставить(""ЗначениеТЧ"", ЗначениеТЧ);
		
	ИначеЕсли ТипЗнч(ЭлементФормы) = Тип(""ТестируемаяГруппаФормы"") Тогда
		СтруктураЗначения.Вставить(""Имя"", ЭлементФормы.Имя);
		СтруктураЗначения.Вставить(""ТекстЗаголовка"", ЭлементФормы.ТекстЗаголовка);
		СтруктураЗначения.Вставить(""Вид"", ЭлементФормы.Вид);
	ИначеЕсли ТипЗнч(ЭлементФормы) = Тип(""ТестируемоеПолеФормы"") Тогда
		СтруктураЗначения.Вставить(""Имя"", ЭлементФормы.Имя);
		СтруктураЗначения.Вставить(""ТекстЗаголовка"", ЭлементФормы.ТекстЗаголовка);
		Если ЭлементФормы.Вид <> ВидПоляФормы.ПолеТабличногоДокумента Тогда
			СтруктураЗначения.Вставить(""ПредставлениеДанных"", ЭлементФормы.ТекстЗаголовка);
		КонецЕсли;
		СтруктураЗначения.Вставить(""Вид"", ЭлементФормы.Вид);
		
		Попытка
			СтруктураЗначения.Вставить(""ТекстРедактирования"", ЭлементФормы.ПолучитьТекстРедактирования());
		Исключение
		КонецПопытки;
		
		Если ЭлементФормы.Вид = ВидПоляФормы.ПолеТабличногоДокумента Тогда
			Попытка
				Если ЭлементФормы.Имя = """" Или ЭлементФормы.ТекущаяДоступность() Тогда
					//если табличный документ был открыт как отдельное окно как ТабДок.Показать(), тогда у него не работет ТекущаяДоступность() (проверено в 8.3.10)
					ТабДок = ПолучитьТабДокИзTestClientКакМассив(ЭлементФормы);
					СтруктураЗначения.Вставить(""ТабДок"", ТабДок);
				КонецЕсли;
			Исключение
				ТекстСообщения = ""Не смог получить значение табличного документа <%1>"";
				ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ЭлементФормы.Имя);
				Сообщить(ТекстСообщения);
				Сообщить(ОписаниеОшибки());
			КонецПопытки;
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеКартинки Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеГеографическойСхемы Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеГрафическойСхемы Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеДендрограммы Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеДиаграммы Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеДиаграммыГанта Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеИндикатора Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеКалендаря Тогда
		ИначеЕсли ЭлементФормы.Вид = ВидПоляФормы.ПолеПолосыРегулирования Тогда
		Иначе
			//для остальных надо сохранить представление данных
			Попытка
				Если ЭлементФормы.ТекущаяВидимость() Тогда
					СтруктураЗначения.Вставить(""ПредставлениеДанных"", ЭлементФормы.ПолучитьПредставлениеДанных());
				КонецЕсли;
			Исключение
				
			КонецПопытки;
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ЭлементФормы) = Тип(""ТестируемаяДекорацияФормы"") Тогда
		СтруктураЗначения.Вставить(""Имя"", ЭлементФормы.Имя);
		СтруктураЗначения.Вставить(""ТекстЗаголовка"", ЭлементФормы.ТекстЗаголовка);
		СтруктураЗначения.Вставить(""ПредставлениеДанных"", ЭлементФормы.ТекстЗаголовка);
		СтруктураЗначения.Вставить(""Вид"", ЭлементФормы.Вид);
	КонецЕсли;
	
	Попытка
		СтруктураЗначения.Вставить(""ТекущаяВидимость"", ЭлементФормы.ТекущаяВидимость());
		СтруктураЗначения.Вставить(""ТекущаяДоступность"", ЭлементФормы.ТекущаяДоступность());
	Исключение
	КонецПопытки;
	
	Возврат СтруктураЗначения;
КонецФункции

&НаКлиенте
Процедура ДобавитьЭлементыКолонкиТаблицы(ТаблицыФормы,МассивКолонокТаблиц)
	МассивЭлементовТаблицы = ТаблицыФормы.НайтиОбъекты();
	Для Каждого ЭлементТаблицы Из МассивЭлементовТаблицы Цикл
		МассивКолонокТаблиц.Добавить(ЭлементТаблицы.Имя);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСостояниеФормыTestClient(ДопПараметры)
	ТолькоАктивныйЭлемент = Ложь;
	Если ДопПараметры.Свойство(""ТолькоАктивныйЭлемент"") Тогда
		ТолькоАктивныйЭлемент = ДопПараметры.ТолькоАктивныйЭлемент;
	КонецЕсли;
	
	
	
	
	Результат       = Новый Структура;
	МассивРезультат = Новый Массив;
	
	Если ТипЗнч(ОбъектКонтекстСохраняемый) <> Тип(""Структура"") Тогда
		СделатьСообщение(ПолучитьТекстСообщенияПользователю(""$TestClient НЕ подключен.$""));
		Возврат Неопределено;
	КонецЕсли;
	
	Если Не ОбъектКонтекстСохраняемый.Свойство(""ТестовоеПриложение"") Тогда
		СделатьСообщение(ПолучитьТекстСообщенияПользователю(""$TestClient НЕ подключен.$""));
		Возврат Неопределено;
	КонецЕсли;
	
	
	Попытка
		//попробум найти окно предупреждения
		АктивноеОкно = НайтиОкноМодальногоДиалога();
		Если АктивноеОкно = Неопределено Тогда
			АктивноеОкно = ОбъектКонтекстСохраняемый.ТестовоеПриложение.ПолучитьАктивноеОкно();
		КонецЕсли;
		
		
		
		ТекущаяФорма = АктивноеОкно.НайтиОбъект(Тип(""ТестируемаяФорма""));
		Если ТекущаяФорма = Неопределено Тогда
			СделатьСообщение(ПолучитьТекстСообщенияПользователю(""$Активная форма не найдена$""));
			Возврат Неопределено;
		КонецЕсли;
		
		ДопПараметры.Вставить(""ТекущаяФорма"",ТекущаяФорма);
		
		АктивныйЭлемент = Неопределено;
		Если ТолькоАктивныйЭлемент Тогда
			Если ТекущаяФорма.ИмяФормы = """" Тогда
				//скорее всего это форма, полученная через ТабДок.Показать()
				МассивЭлементов = ТекущаяФорма.НайтиОбъекты();
				Если МассивЭлементов.Количество() > 0 Тогда
					АктивныйЭлемент = МассивЭлементов[0];
				Иначе
					Возврат Неопределено;
				КонецЕсли;
			Иначе
				АктивныйЭлемент = ТекущаяФорма.ПолучитьТекущийЭлемент();
			КонецЕсли;
			
		КонецЕсли;
		
		
		ТекстСообщения = ""Найдена форма: ТекстЗаголовка=%1, ИмяФормы=%2. Окно <%3>"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ТекущаяФорма.ТекстЗаголовка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",ТекущаяФорма.ИмяФормы);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%3"",АктивноеОкно.Заголовок);
		Сообщить(ТекстСообщения);
	Исключение
		Сообщить(""Ошибка при получении активной формы."");
		ТекстСообщения = ""ПолучитьСостояниеФормыTestClient:%1"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ОписаниеОшибки());
		Сообщить(ТекстСообщения);
		Возврат Неопределено;
	КонецПопытки;
	
	
	ТекТЧ           = Неопределено;
	Если ТолькоАктивныйЭлемент Тогда
		МассивЭлементов = Новый Массив;
		МассивЭлементов.Добавить(АктивныйЭлемент);
		
		ТаблицыФормы = Новый Массив;
	Иначе
		МассивЭлементов = ТекущаяФорма.НайтиОбъекты();
		ТаблицыФормы    = ТекущаяФорма.НайтиОбъекты(Тип(""ТестируемаяТаблицаФормы""));
	КонецЕсли;
	
	
	МассивКолонокТаблиц = Новый Массив;
	Для Каждого ТаблицаФормы Из ТаблицыФормы Цикл
		ДобавитьЭлементыКолонкиТаблицы(ТаблицаФормы,МассивКолонокТаблиц);
	КонецЦикла;
	
	Для каждого Элем Из МассивЭлементов Цикл
		Если МассивКолонокТаблиц.Найти(Элем.Имя) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		СостояниеЭлемента = ПолучитьСостояниеЭлементаФормыTestClient(Элем);
		МассивРезультат.Добавить(СостояниеЭлемента);
		
	КонецЦикла;
	
	Результат.Вставить(""ИмяФормы"", ТекущаяФорма.ИмяФормы);
	Результат.Вставить(""МассивЭлементов"", МассивРезультат);
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Функция ПолучитьЭлементИзСтруктурыПоИмени(Имя, Массив)
	Для каждого Элем Из Массив Цикл
		Если Элем.Имя = Имя Тогда
			Возврат Элем;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
КонецФункции

&НаКлиенте
Процедура ДобавитьСтрокуИзменения(Стр,Изменение)
	Если Стр = """" Тогда
		Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
	Иначе
		Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
	КонецЕсли;
КонецПроцедуры


&НаКлиенте
Функция ПолучитьКорректноеПредставлениеСтроковогоЗначенияПоля(Знач Стр)
	Стр = СтрЗаменить(Стр,""\n"",Символы.ПС);
	
	ЭтоМногоСтрочнаяСтрока = Ложь;
	Если Найти(Стр,Символы.ПС) > 0 Тогда
		ЭтоМногоСтрочнаяСтрока = Истина;
	КонецЕсли;
	
	Если НЕ ЭтоМногоСтрочнаяСтрока Тогда
		Возврат Стр;
	КонецЕсли;
	
	Стр = УбратьКавычкиАпострофы(Стр);
	
	МассивСтрок = РазложитьСтрокуВМассивПодстрок(Стр,Символы.ПС);
	
	НоваяСтрока = """";
	
	ПредставлениеЭкранированныйАпостроф = ""__&Апостроф__"";
	
	Для Каждого Элем Из МассивСтрок Цикл
		Элем = СтрЗаменить(Элем,""\'"",ПредставлениеЭкранированныйАпостроф);
		Элем = СтрЗаменить(Элем,""'"",""\'"");
		Элем = СтрЗаменить(Элем,ПредставлениеЭкранированныйАпостроф,""\'"");
		
		НоваяСтрока = НоваяСтрока + Символы.ПС + Символы.Таб + Символы.Таб + ""|'"" + Элем + ""'|"";
	КонецЦикла;
	
	Возврат НоваяСтрока;
КонецФункции

&НаКлиенте
Функция ЭкранироватьСпецСимволыДляЗначенияШага(Знач Стр)
	Стр = СтрЗаменить(Стр,"""""""",""\"""""");
	Возврат СтрЗаменить(Стр,""'"",""\'"");
КонецФункции

&НаКлиенте
Функция ВывестиИзмененияФормыGherkin(Было, Стало, ДопПараметры)
	Стр = """";
	
	Для каждого ЭлемСтало Из Стало.МассивЭлементов Цикл
		Имя = ЭлемСтало.Имя;
		
		Если Было <> Неопределено Тогда
			ЭлемБыло = ПолучитьЭлементИзСтруктурыПоИмени(Имя, Было.МассивЭлементов);
			Если ЭлемБыло = Неопределено Тогда
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		
		Для каждого Свойство Из ЭлемСтало Цикл
			Ключ = Свойство.Ключ;
			
			Если Ключ = ""ПредставлениеДанных"" Тогда
				ПредставлениеДанных = ЭлемСтало.ПредставлениеДанных;
				
				Если Было = Неопределено Тогда
					Изменение = ""элемент формы с именем """""" + ЭлемСтало.Имя + """""" стал равен "" + ПолучитьКорректноеПредставлениеСтроковогоЗначенияПоля(""'"" + ЭкранироватьСпецСимволыДляЗначенияШага(ПредставлениеДанных) + ""'"");
					
					Если Стр = """" Тогда
						Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
					Иначе
						Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
					КонецЕсли;
					
					Если ЭлемСтало.Свойство(""ТекстРедактирования"") Тогда
						Если ЭлемСтало.ТекстРедактирования <> ПредставлениеДанных Тогда
							Изменение = ""у элемента формы с именем """""" + ЭлемСтало.Имя + """""" текст редактирования стал равен "" + ПолучитьКорректноеПредставлениеСтроковогоЗначенияПоля(""'"" + ЭкранироватьСпецСимволыДляЗначенияШага(ЭлемСтало.ТекстРедактирования) + ""'"");
							
							Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
						КонецЕсли;
					КонецЕсли;
					
				Иначе
					Если НЕ ЭлемБыло.Свойство(Ключ) Тогда
						Продолжить;
					КонецЕсли;
					
					Если СокрЛП(ЭлемСтало[Ключ]) <> СокрЛП(ЭлемБыло[Ключ]) Тогда
						Изменение = ""элемент формы с именем """""" + ЭлемСтало.Имя + """""" стал равен "" + ПолучитьКорректноеПредставлениеСтроковогоЗначенияПоля(""'"" + ЭкранироватьСпецСимволыДляЗначенияШага(ПредставлениеДанных) + ""'"");
						
						Если Стр = """" Тогда
							Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
						Иначе
							Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
						КонецЕсли;
					КонецЕсли;
					
					Если ЭлемСтало.Свойство(""ТекстРедактирования"") Тогда
						Если НЕ ЭлемБыло.Свойство(""ТекстРедактирования"") Тогда
							ЭлемБыло.Вставить(""ТекстРедактирования"",Неопределено);
						КонецЕсли;
						
						Если СокрЛП(ЭлемСтало[""ТекстРедактирования""]) <> СокрЛП(ЭлемБыло[""ТекстРедактирования""])
							И ПредставлениеДанных <> ЭлемСтало[""ТекстРедактирования""]
							Тогда
							Изменение = ""у элемента формы с именем """""" + ЭлемСтало.Имя + """""" текст редактирования стал равен "" + ПолучитьКорректноеПредставлениеСтроковогоЗначенияПоля(""'"" + ЭкранироватьСпецСимволыДляЗначенияШага(ЭлемСтало.ТекстРедактирования) + ""'"");
							
							Если Стр = """" Тогда
								Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
							Иначе
								Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Ключ = ""ТекущаяДоступность"" Тогда
				Значение = ""доступен"";
				Если ЭлемСтало[Ключ] = Ложь Тогда
					Значение = ""не доступен"";
				КонецЕсли;
				
				Изменение = ""элемент формы с именем """""" + ЭлемСтало.Имя + """""" "" + Значение;
				
				Если Было = Неопределено Тогда
					//ДобавитьСтрокуИзменения(Стр,Изменение);
				Иначе
					Если НЕ ЭлемБыло.Свойство(Ключ) Тогда
						Продолжить;
					КонецЕсли;
					
					Если СокрЛП(ЭлемСтало[Ключ]) <> СокрЛП(ЭлемБыло[Ключ]) Тогда
						ДобавитьСтрокуИзменения(Стр,Изменение);
					КонецЕсли;
				КонецЕсли;
				
			ИначеЕсли Ключ = ""ТекущаяВидимость"" Тогда
				Значение = ""присутствует на форме"";
				Если ЭлемСтало[Ключ] = Ложь Тогда
					Значение = ""отсутствует на форме"";
				КонецЕсли;
				
				Изменение = ""элемент формы с именем """""" + ЭлемСтало.Имя + """""" "" + Значение;
				
				Если Было = Неопределено Тогда
					//ДобавитьСтрокуИзменения(Стр,Изменение);
				Иначе
					Если НЕ ЭлемБыло.Свойство(Ключ) Тогда
						Продолжить;
					КонецЕсли;
					
					Если СокрЛП(ЭлемСтало[Ключ]) <> СокрЛП(ЭлемБыло[Ключ]) Тогда
						ДобавитьСтрокуИзменения(Стр,Изменение);
					КонецЕсли;
				КонецЕсли;
			ИначеЕсли Ключ = ""ТабДок"" Тогда
				
				//Если Было = Неопределено Тогда
				
				СтрТабДок = ПолучитьСтрокуТабличныйДокументФормаTestClient(ЭлемСтало[Ключ]);
				
				Если СтрТабДок = """" Тогда
					Изменение = ""табличный документ формы с именем """""" + ЭлемСтало.Имя + """""" стал пустым"";
					Если Стр = """" Тогда
						Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
					Иначе
						Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
					КонецЕсли;
				Иначе
					Изменение = ""табличный документ формы с именем """""" + ЭлемСтало.Имя + """""" стал равен:"";
					
					Если Стр = """" Тогда
						Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
					Иначе
						Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
					КонецЕсли;
					
					Стр = Стр + СтрТабДок + Символы.ПС;
				КонецЕсли;
				
				//КонецЕсли;
				
			ИначеЕсли Ключ = ""ЗначениеТЧ"" Тогда
				Если ЭлемСтало[Ключ] = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				НадоПоказатьЧтоКоличествоСтрокСталоРавноНоль = Ложь;
				Если (ЭлемСтало[Ключ].Количество() = 0) и ЭлемБыло <> Неопределено И ЭлемБыло[Ключ].Количество() <> 0 Тогда
					НадоПоказатьЧтоКоличествоСтрокСталоРавноНоль = Истина;
				ИначеЕсли (ЭлемСтало[Ключ].Количество() = 0) и ЭлемБыло = Неопределено Тогда
					НадоПоказатьЧтоКоличествоСтрокСталоРавноНоль = Истина;
				КонецЕсли;
				
				
				
				Если НадоПоказатьЧтоКоличествоСтрокСталоРавноНоль Тогда
					Стр = Стр + ""	Тогда в таблице """""" + ЭлемСтало.Имя + """""" количество строк """"равно"""" 0"" + Символы.ПС;
					Продолжить;
				КонецЕсли;
				
				Если (ЭлемБыло = Неопределено) Или (ЭлемБыло[Ключ] = Неопределено) Тогда
					Изменение = ""таблица """""" + ЭлемСтало.Имя + """""" стала равной:"";
					
					Если Стр = """" Тогда
						Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
					Иначе
						Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
					КонецЕсли;
					
					СтрТЧ = ПолучитьСтрокуСТЧФормаTestClient(ЭлемСтало[Ключ]);
					
					Стр = Стр + СтрТЧ + Символы.ПС;
				Иначе
					//надо сравнить две ТЧ
					ТЧбыло  = ЭлемБыло[Ключ];
					ТЧстало = ЭлемСтало[Ключ];
					
					Если ТЧстало.Количество() = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					Если ТЧбыло.Количество() <> ТЧстало.Количество() Тогда
						//значит изменилось количество строк, просто выводим новую таблицу
						Изменение = ""таблица """""" + ЭлемСтало.Имя + """""" стала равной:"";
						
						Если Стр = """" Тогда
							Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
						Иначе
							Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
						КонецЕсли;
						
						СтрТЧ = ПолучитьСтрокуСТЧФормаTestClient(ЭлемСтало[Ключ]);
						
						Стр = Стр + СтрТЧ + Символы.ПС;
						
						Продолжить;
					КонецЕсли;
					
					ФлагИзмененныеКолонки = Новый Массив;
					Для каждого СтрокаСтало Из ТЧстало Цикл
						Для каждого Колонка Из СтрокаСтало Цикл
							ФлагИзмененныеКолонки.Добавить(Ложь);
						КонецЦикла;
						
						Прервать;
					КонецЦикла;
					
					Ном = -1;
					Для каждого СтрокаСтало Из ТЧстало Цикл
						Ном        = Ном + 1;
						СтрокаБыло = ТЧбыло[Ном];
						
						идКолонки = -1;
						Для каждого Колонка Из СтрокаСтало Цикл
							идКолонки  = идКолонки + 1;
							
							ИмяКолонки = Колонка.Ключ;
							
							ЗначениеБыло  = СтрокаБыло[ИмяКолонки];
							ЗначениеСтало = СтрокаСтало[ИмяКолонки];
							
							Если ЗначениеБыло <> ЗначениеСтало Тогда
								ФлагИзмененныеКолонки[идКолонки] = Истина;
							КонецЕсли;
						КонецЦикла;
						
					КонецЦикла;
					
					
					ИзмененныеКолонки = Новый Массив;
					Для каждого СтрокаСтало Из ТЧстало Цикл
						Ном = -1;
						Для каждого Колонка Из СтрокаСтало Цикл
							Ном = Ном + 1;
							ИмяКолонки = Колонка.Ключ;
							Если ФлагИзмененныеКолонки[Ном] Тогда
								ИзмененныеКолонки.Добавить(ИмяКолонки);
							КонецЕсли;
						КонецЦикла;
						
						Прервать;
					КонецЦикла;
					
					
					Если ИзмененныеКолонки.Количество() = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					
					Изменение = ""таблица формы с именем """""" + ЭлемСтало.Имя + """""" стала равной:"";
					Если Стр = """" Тогда
						Стр = Стр + ""	Тогда "" + Изменение + Символы.ПС;
					Иначе
						Стр = Стр + ""	И     "" + Изменение + Символы.ПС;
					КонецЕсли;
					СтрТЧ = ПолучитьСтрокуСТЧФормаTestClient(ЭлемСтало[Ключ], ИзмененныеКолонки);
					
					Стр = Стр + СтрТЧ + Символы.ПС;
					
					
					
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Процедура ФорматироватьМассивСтрокКакТаблицу(МассивСтрок)
	Если МассивСтрок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Стр = СокрЛП(МассивСтрок[0]);
	Стр = Сред(Стр, 2,СтрДлина(Стр) - 2);
	Стр = СтрЗаменить(Стр,""\|"",ПредставлениеВертЧертыВТабДок);
	МассивСтолбцов = РазложитьСтрокуВМассивПодстрокКлиент(Стр, ""|"");
	
	КолПараметров = МассивСтолбцов.Количество();
	МассивДлин = Новый Массив;
	Для каждого Элем Из МассивСтолбцов Цикл
		МассивДлин.Добавить(0);
	КонецЦикла;
	
	Для каждого Стр Из МассивСтрок Цикл
		Стр = Сред(Стр, 2,СтрДлина(Стр) - 2);
		Стр = СтрЗаменить(Стр,""\|"",ПредставлениеВертЧертыВТабДок);
		МассивСтолбцов = РазложитьСтрокуВМассивПодстрокКлиент(Стр, ""|"");
		
		Для Ккк = 0 По МассивДлин.Количество() - 1 Цикл
			Зн = СокрЛП(МассивСтолбцов[Ккк]);
			Зн = СтрЗаменить(Зн, ПредставлениеВертЧертыВТабДок, ""|"");
			
			ДлинаСтроки = СтрДлина(Зн);
			Если ДлинаСтроки > МассивДлин[Ккк] Тогда
				МассивДлин[Ккк] = ДлинаСтроки;
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	Ном = -1;
	Для каждого Стр Из МассивСтрок Цикл
		Ном = Ном + 1;
		Стр = Сред(Стр, 2,СтрДлина(Стр) - 2);
		Стр = СтрЗаменить(Стр,""\|"",ПредставлениеВертЧертыВТабДок);
		МассивСтолбцов = РазложитьСтрокуВМассивПодстрокКлиент(Стр, ""|"");
		
		СтрПараметров = ""| "";
		Для Ккк = 0 По МассивДлин.Количество() - 1 Цикл
			Зн = СокрЛП(МассивСтолбцов[Ккк]);
			Зн = СтрЗаменить(Зн, ПредставлениеВертЧертыВТабДок, ""\|"");
			
			Пока СтрДлина(Зн) < МассивДлин[Ккк] Цикл
				Зн = Зн + "" "";
			КонецЦикла;
			СтрПараметров = СтрПараметров + Зн + "" | "";
		КонецЦикла;
		
		СтрПараметров = СокрЛП(СтрПараметров);
		
		МассивСтрок[Ном] = СтрПараметров;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьСтрокуТабличныйДокументФормаTestClient(ТабДок)
	МассивСтрок = Новый Массив;
	
	Стр = ""|"";
	
	Для каждого СтрокаТабДок Из ТабДок Цикл
		СтрокаТЧ = ""|"";
		Для каждого КолонкаТабДок Из СтрокаТабДок Цикл
			СтрокаТЧ = СтрокаТЧ + "" '"" + СтрЗаменить(КолонкаТабДок, ""|"", ПредставлениеВертЧертыВТабДок) + ""' |"";
			
		КонецЦикла;
		МассивСтрок.Добавить(СтрокаТЧ);
	КонецЦикла;
	
	
	ФорматироватьМассивСтрокКакТаблицу(МассивСтрок);
	
	
	Стр = """";
	Для каждого Элем Из МассивСтрок Цикл
		Стр = Стр + Символы.Таб + Символы.Таб +  Элем + Символы.ПС;
	КонецЦикла;
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Функция ПолучитьКорректноеЗначениеТаблицыGherkin(Стр)
	ПромСтр = СтрЗаменить(Стр,""|"",""\|"");
	Возврат СтрЗаменить(ПромСтр,Символы.ПС,""\n"")
КонецФункции

&НаКлиенте
Функция ПолучитьСтрокуСТЧФормаTestClient(ТЧ, ИзмененныеКолонки = Неопределено)
	МассивСтрок = Новый Массив;
	
	Стр = ""|"";
	
	//шапка ТЧ
	Для каждого СтрТЧ Из ТЧ Цикл
		Для каждого Элем Из СтрТЧ Цикл
			Если ИзмененныеКолонки <> Неопределено Тогда
				//значит выводим только нужные колонки
				Если ИзмененныеКолонки.Найти(Элем.Ключ) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			Стр = Стр + "" '"" + Элем.Ключ + ""' |"";
		КонецЦикла;
		
		Прервать;
	КонецЦикла;
	
	МассивСтрок.Добавить(Стр);
	
	Для каждого СтрТЧ Из ТЧ Цикл
		СтрокаТЧ = ""|"";
		Для каждого Элем Из СтрТЧ Цикл
			Если ИзмененныеКолонки <> Неопределено Тогда
				//значит выводим только нужные колонки
				Если ИзмененныеКолонки.Найти(Элем.Ключ) = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			КонецЕсли;
			
			СтрокаТЧ = СтрокаТЧ + "" '"" + ПолучитьКорректноеЗначениеТаблицыGherkin(Элем.Значение) + ""' |"";
		КонецЦикла;
		
		МассивСтрок.Добавить(СтрокаТЧ);
	КонецЦикла;
	
	
	ФорматироватьМассивСтрокКакТаблицу(МассивСтрок);
	
	
	Стр = """";
	Для каждого Элем Из МассивСтрок Цикл
		Стр = Стр + Символы.Таб + Символы.Таб +  Элем + Символы.ПС;
	КонецЦикла;
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Процедура ПолучитьИзмененияФормы(Тип,ДопПараметры)
	ТекущаяФорма = Неопределено;
	ТекущееСостояниеФормы = ПолучитьСостояниеФормыTestClient(ДопПараметры);
	Если ТекущееСостояниеФормы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СохраненноеСостояниеФормыTestClient <> Неопределено Тогда
		Если СохраненноеСостояниеФормыTestClient.ИмяФормы <> ТекущееСостояниеФормы.ИмяФормы Тогда
			ТекстСообщения = ""Изменилось имя формы: было: %1, стало: %2"";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",СохраненноеСостояниеФормыTestClient.ИмяФормы);
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",ТекущееСостояниеФормы.ИмяФормы);
			Сообщить(ТекстСообщения);
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДопПараметры.Вставить(""ТекущаяФорма"",ТекущаяФорма);
	
	Если Тип = ""Gherkin"" Тогда
		Изменения = ВывестиИзмененияФормыGherkin(СохраненноеСостояниеФормыTestClient, ТекущееСостояниеФормы,ДопПараметры);
	Иначе
		ВызватьИсключение ""Неизвестный тип вывода данных по изменению формы."";
	КонецЕсли;
	
	Объект.СгенерированныйСценарий = Изменения;
	
	ЭтаФорма.ТекущийЭлемент = Элементы.СгенерированныйСценарий;
	
	СделатьСообщение(""Изменения формы обработаны."");
КонецПроцедуры

&НаКлиенте
Процедура ПолучитьЗначенияДляВыполненияШага(ОбработкаТеста, ИмяПроцедуры, МассивПараметров)
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьВременнуюФичу(Стр)
	ИмяФайла = ПолучитьИмяВременногоФайла(""feature"");
	
	ЗТ = Новый ЗаписьТекста(ИмяФайла, ""UTF-8"", , Истина);
	ЗТ.ЗаписатьСтроку(""Функционал: Тест"");
	ЗТ.ЗаписатьСтроку(""Сценарий: Тестовый сценарий"");
	ЗТ.ЗаписатьСтроку(Стр);
	
	ЗТ.Закрыть();
	
	Возврат ИмяФайла;
КонецФункции

&НаКлиенте
Функция СоздатьСтруктураПараметровДляЗагрузкиШага(ПутьЗагрузки, ДвоичныеДанные)
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить(""DebugLog"", Объект.DebugLog);
	СтруктураПараметров.Вставить(""ДополнительныеПараметры"", Неопределено);
	СтруктураПараметров.Вставить(""ИдетЗагрузкаИзКаталога"", Ложь);
	СтруктураПараметров.Вставить(""КаталогИнструментов"", Объект.КаталогИнструментов);
	СтруктураПараметров.Вставить(""КаталогФич"", ПутьЗагрузки);
	СтруктураПараметров.Вставить(""КаталогиБиблиотек"", Объект.КаталогиБиблиотек);
	СтруктураПараметров.Вставить(""ЯзыкГенератораGherkin"", Объект.ЯзыкГенератораGherkin);
	
	МассивРезультатОбходаКаталоговДляОднойФичи = Новый Массив;
	ф = Новый Файл(ПутьЗагрузки);
	СтруткураФайла = ПолучитьСтруткураФайлаФичи(1, ф.ИмяБезРасширения, ф.ПолноеИмя, ДвоичныеДанные);
	МассивРезультатОбходаКаталоговДляОднойФичи.Добавить(СтруткураФайла);
	
	СписокИсключения = ВычестьТеги( Объект.СписокТеговИсключение, Объект.СписокТеговОтбор);
	
	СтруктураПараметров.Вставить(""МассивРезультатОбходаКаталогов"", МассивРезультатОбходаКаталоговДляОднойФичи);
	СтруктураПараметров.Вставить(""МассивСообщений"", Новый Массив);
	//СтруктураПараметров.Вставить(""ПутьКОбработке"", Объект.DebugLog);
	СтруктураПараметров.Вставить(""СписокТеговИсключение"", СписокИсключения);
	СтруктураПараметров.Вставить(""СписокТеговОтбор"", Объект.СписокТеговОтбор);
	СтруктураПараметров.Вставить(""УдалитьСтрокуФичиИзДерева"", Ложь);
	СтруктураПараметров.Вставить(""ЭтоЗагрузкаФич"", Истина);
	
	СтруктураПараметров.Вставить(""ТаблицаУжеСуществующихСценариевУФ"", ТаблицаУжеСуществующихСценариев);
	
	ДвДанныеvbFeatureReader = Новый ДвоичныеДанные(ПолучитьПутьКFeatureReader());
	СтруктураПараметров.Вставить(""ДвДанныеvbFeatureReader"", ДвДанныеvbFeatureReader);
	
	Возврат СтруктураПараметров;
КонецФункции

&НаСервере
Процедура ЗагрузитьВременнуюФичуСервер(СтруктураПараметров)
	ВременноеИмяФайла = ПолучитьИмяВременногоФайла(""epf"");
	СтруктураПараметров.ДвДанныеvbFeatureReader.Записать(ВременноеИмяФайла);
	FeatureReader = ВнешниеОбработки.Создать(ВременноеИмяФайла, Ложь);
	
	ТзнТаблицаИзвестныхStepDefinition = РеквизитФормыВЗначение(""ТаблицаИзвестныхStepDefinition"");//TODO ?? обойтись без РеквизитФормыВЗначение
	
	Дерево = Новый ДеревоЗначений;
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	ОбъектСервер.СоздатьКолонкиДерева(Дерево);
	
	Если Не СтруктураПараметров.Свойство(""ТаблицаУжеСуществующихСценариев"") Тогда
		ТаблицаУжеСуществующихСценариевСервер = ПреобразоватьМассивТаблицаУжеСуществующихСценариевВТаблицуЗначений(
			СтруктураПараметров.ТаблицаУжеСуществующихСценариевУФ);
		СтруктураПараметров.Вставить(""ТаблицаУжеСуществующихСценариев"", ТаблицаУжеСуществующихСценариевСервер);
	КонецЕсли;
	
	ПерваяСтрокаДерева = Дерево.Строки.Добавить();
	ПерваяСтрокаДерева.Имя = ""Фичи"";
	ПерваяСтрокаДерева.ПолныйПуть = """";
	
	FeatureReader.ЗагрузитьФичу(СтруктураПараметров.КаталогФич, ПерваяСтрокаДерева.Строки, 
		ТзнТаблицаИзвестныхStepDefinition, СтруктураПараметров);
	
	Если СтруктураПараметров.Свойство(""КешФич"") Тогда
		СтруктураПараметров.КешФич = Неопределено;
	КонецЕсли;
	
	Если СтруктураПараметров.Свойство(""ТаблицаУжеСуществующихСценариев"") Тогда
		СтруктураПараметров.ТаблицаУжеСуществующихСценариев = Неопределено;
	КонецЕсли;
	
	Шаги = Новый Массив;
	ПолучитьШагиИзДерева(Дерево.Строки, Шаги);
	
	СтруктураПараметров.Вставить(""Шаги"", Шаги);
	
	СтруктураПараметров.Вставить(""ТаблицаОбластей"",Неопределено);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПолучитьШагиИзДерева(ДеревоСтроки, Шаги)
	Для каждого СтрокаДерева Из ДеревоСтроки Цикл
		Если СтрокаДерева.Тип = ""Шаг"" Тогда
			
			Если СтрокаДерева.Родитель.ДопТип = ""СтруктураСценария"" Тогда
				// Эти шаги не выполняются в структуре сценария.
				Продолжить;
			КонецЕсли;
			
			Шаг = Новый Структура;
			Шаг.Вставить(""Имя"", СтрокаДерева.Имя);
			Шаг.Вставить(""СтрокаРеальнойПроцедуры"", СтрокаДерева.СтрокаРеальнойПроцедуры);
			Шаг.Вставить(""ЗначенияПараметров"", СтрокаДерева.ЗначенияПараметров);
			Шаг.Вставить(""АдресСнипета"", СтрокаДерева.АдресСнипета);
			Шаг.Вставить(""ШагСПараметрамиВТаблице"", СтрокаДерева.ШагСПараметрамиВТаблице);
			
			Если СтрокаДерева.ШагСПараметрамиВТаблице = Истина Тогда
				МассивТаблиц = Новый Массив;
				ПарамТаблица = Новый Массив;
				
				МассивТаблиц.Добавить(ПарамТаблица);
				
				ПодчиненныеСтроки = СтрокаДерева.Строки;
				Для каждого СтрокаТаблицы Из ПодчиненныеСтроки Цикл
					Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.Имя) Тогда
						ПарамТаблица = Новый Массив;
						МассивТаблиц.Добавить(ПарамТаблица);
						Продолжить;
					КонецЕсли;
					
					
					СтрокаПарамТаблица = Новый Структура;
					
					НомерКолонки = 0;
					Для каждого Колонка Из СтрокаТаблицы.ПараметрыТаблицы Цикл
						НомерКолонки       = НомерКолонки + 1;
						СтруктураПараметра = Колонка.Значение;
						Значение           = ПолучитьЗначениеДляПередачиВМетодСервер(СтруктураПараметра.Значение, СтруктураПараметра.Тип);
						Значение           = Вычислить(Значение);
						
						СтрокаПарамТаблица.Вставить(""Кол"" + XMlСтрока(НомерКолонки), Значение);
					КонецЦикла;
					
					ПарамТаблица.Добавить(СтрокаПарамТаблица);
				КонецЦикла;
				Шаг.Вставить(""МассивТаблиц"", МассивТаблиц);
			КонецЕсли;
			
			
			Шаги.Добавить(Шаг);
		Иначе
			ПолучитьШагиИзДерева(СтрокаДерева.Строки, Шаги);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивПараметровИзСписокАргументов(СписокАргументов)
	МассивПараметров = Новый Массив;
	Для Каждого ЭлементМассива Из СписокАргументов Цикл
		Элем = ЭлементМассива.Значение;
		МассивПараметров.Добавить(ПолучитьЗначениеДляПередачиВМетод(Элем.Значение, Элем.Тип));
	КонецЦикла;
	
	Возврат МассивПараметров;
КонецФункции

&НаКлиенте
Процедура ПодготовитьИВызватьМетод(ТекШаг, ОбработкаТеста, ИмяПроцедуры, МассивПараметров)
	ОбработкаТеста.Контекст            = ОбъектКонтекст;
	ОбработкаТеста.КонтекстСохраняемый = ОбъектКонтекстСохраняемый;
	
	Если Объект.ДелатьЛогВыполненияСценариевВЖР Тогда
		ЗаписатьЛогВЖРПередВыполнениемШага(ТекШаг.Имя);
	КонецЕсли;
	
	ВсёЕщёИдётВыполнениеШагов = Истина;
	ВызватьМетод(ОбработкаТеста, ИмяПроцедуры, МассивПараметров);
	ВсёЕщёИдётВыполнениеШагов = Ложь;
	
	ОбъектКонтекст            = ОбработкаТеста.Контекст;
	ОбъектКонтекстСохраняемый = ОбработкаТеста.КонтекстСохраняемый;
КонецПроцедуры

&НаСервере
Функция ПолучитьДанныеДляВыполненияОдногоШага(Стр, ДвДанныеvbFeatureReader, КаталогИнструментов)
	ВременноеИмяФайла = Неопределено;
	FeatureReader     = СоздатьFeatureReader(КаталогИнструментов, ДвДанныеvbFeatureReader, ВременноеИмяФайла);
	
	ОписаниеШага               = FeatureReader.ПолучитьОписаниеШагаПоСтроке(Стр);
	ТзнИзвестныхStepDefinition = РеквизитФормыВЗначение(""ТаблицаИзвестныхStepDefinition"");//TODO ?? обойтись без РеквизитФормыВЗначение
	
	Поз          = Найти(ОписаниеШага.StepDefinition, ""("");
	ИмяПроцедуры = Лев(ОписаниеШага.StepDefinition, Поз - 1);
	ОписаниеШага.Вставить(""ИмяПроцедуры"", ИмяПроцедуры);
	
	СтрокаТзнИзвестныхStepDefinition = ТзнИзвестныхStepDefinition.Найти(НРег(ИмяПроцедуры), ""СтрокаДляПоиска"");
	Если СтрокаТзнИзвестныхStepDefinition = Неопределено Тогда
		ОписаниеШага.Вставить(""ШагНайден"", Ложь);
	Иначе
		ОписаниеШага.Вставить(""ШагНайден"", Истина);
		ОписаниеШага.Вставить(""ИмяФайла"", СтрокаТзнИзвестныхStepDefinition.ИмяФайла);
	КонецЕсли;
	
	Если ВременноеИмяФайла <> Неопределено Тогда
		УдалитьФайлы(ВременноеИмяФайла);
	КонецЕсли;
	
	Возврат ОписаниеШага;
КонецФункции

&НаКлиенте
Процедура ВыполнитьМетодШагЧерезВременныйФичаФайл(Стр)
	ВременнаяФича = ПолучитьВременнуюФичу(Стр);
	ДвоичныеДанные = Новый ДвоичныеДанные(ВременнаяФича);
	
	СтруктураПараметров = СоздатьСтруктураПараметровДляЗагрузкиШага(ВременнаяФича, ДвоичныеДанные);
	СтруктураПараметров.Вставить(""ЭтоLinux"",ЭтоLinux);
	ЗагрузитьВременнуюФичуСервер(СтруктураПараметров);
	
	Шаги = СтруктураПараметров.Шаги;
	Для каждого ТекШаг Из Шаги Цикл
		Если Не ЗначениеЗаполнено(ТекШаг.АдресСнипета) Тогда
			ТекстСообщения = ""Для шага <%1> не найден EPF файл."";
			ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ТекШаг.Имя);
			ВызватьИсключение ТекстСообщения;
		КонецЕсли;
		
		ИмяПроцедуры     = ТекШаг.СтрокаРеальнойПроцедуры;
		СписокАргументов = ТекШаг.ЗначенияПараметров;
		
		МассивПараметров = ПолучитьМассивПараметровИзСписокАргументов(СписокАргументов);
		Если ТекШаг.ШагСПараметрамиВТаблице = Истина Тогда
			Для Каждого ТабПарам Из ТекШаг.МассивТаблиц Цикл
				МассивПараметров.Добавить(ТабПарам);
			КонецЦикла;
		КонецЕсли;
		
		АдресСнипета   = ТекШаг.АдресСнипета;
		ОбработкаТеста = ПолучитьКонтекстТестаПоАдресСнипета(АдресСнипета);
		
		РезультатПрохожденияШага = ОписаниеВложенногоШага(Стр);
		
		ПодготовитьИВызватьМетод(ТекШаг, ОбработкаТеста, ИмяПроцедуры, МассивПараметров);
		
		РезультатПрохожденияШага.Вставить(""Статус"", ""Success"");
		РезультатПрохожденияШага.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДляСлужебногоОповещения()
	Оповестить(""СлужебноеОповещение"", ""СлужебноеОповещение"");
КонецПроцедуры

&НаКлиенте
Процедура ВывестиСообщениеОТомЧтоПоЗаголовкуНайденоБольшеОдногоЭлемента(МассивЭлементов, ИмяРеквизита)
	ТекстСообщения = ""Обнаружено несколько полей с заголовком <%1>"";
	ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяРеквизита);
	Сообщить(ТекстСообщения);
	Ном = 0;
	Для каждого Элем Из МассивЭлементов Цикл
		Ном = Ном + 1;
		Попытка
			ПредставлениеДанных = Элем.ПолучитьПредставлениеДанных();
		Исключение
			ПредставлениеДанных = """";
		КонецПопытки;
		
		ТекстСообщения = ""№%1. Заголовок=<%2>. Имя=<%3>. ТекстПоля = <%4>"";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",Ном);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",Элем.ТекстЗаголовка);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%3"",Элем.Имя);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%4"",ПредставлениеДанных);
		Сообщить(ТекстСообщения);
	КонецЦикла;
	
КонецПроцедуры



//{снятие скриншота
&НаКлиенте
Функция СформироватьИмяФайлаСкриншота()
	УИД = Новый УникальныйИдентификатор;
	
	Стр = """" + УИД + ""-attachment.png"";
	
	Каталог = Объект.КаталогOutputСкриншоты;
	Если НЕ ФайлСуществуетКомандаСистемы(Каталог, ""СформироватьИмяФайлаСкриншота"") Тогда
		СоздатьКаталогКомандаСистемы(Каталог);
	КонецЕсли;
	
	Стр = ДополнитьСлешВПуть(Каталог) + Стр;
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Процедура СделатьСкриншотТекущегоОкнаИАктивироватьСледущееОкно()
	СделатьСкриншотТекущегоОкна();
	
	ПодключитьОбработчикОжидания(""СделатьСкриншотыОшибкиКаждогоОкна1С"", 1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СделатьСкриншотТекущегоОкнаИАктивироватьСледущееОкноSikuliX()
	СделатьСообщение(""Делаю скриншот."");
	СделатьСкриншотТекущегоОкна();
	ПодключитьОбработчикОжидания(""СделатьСкриншотыОшибкиКаждогоОкна1СSikuliX"", 0.1, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СделатьСкриншотТекущегоОкна()
	ИмяФайлаСкриншота = СформироватьИмяФайлаСкриншота();
	СделатьСкриншот(ИмяФайлаСкриншота);
	
	
	РезультатПрохожденияТестовСценария = ЗначениеПараметровДляСнятияСкриншотов.РезультатПрохожденияТестовСценария;
	Если НЕ РезультатПрохожденияТестовСценария.Свойство(""МассивСкриншотов"") Тогда
		МассивСкриншотов = Новый Массив();
		РезультатПрохожденияТестовСценария.Вставить(""МассивСкриншотов"", МассивСкриншотов);
	Иначе
		МассивСкриншотов = РезультатПрохожденияТестовСценария.МассивСкриншотов;
	КонецЕсли;
	
	ФайлИмяФайлаСкриншота = Новый Файл(ИмяФайлаСкриншота);
	// Не всегда успевает файл записаться, сделаем паузу для случаев ошибки.
	// FIXME: в иедеале надо делать безконтекстный вызов сервера.
	Sleep(1);
	СтруктураСкриншот = Новый Структура;
	СтруктураСкриншот.Вставить(""ИмяФайла"", ФайлИмяФайлаСкриншота.Имя);
	СтруктураСкриншот.Вставить(""ДвоичныеДанные"", Новый ДвоичныеДанные(ИмяФайлаСкриншота));//TODO подумать об ускорении через Потоки или другой алгоритм
	МассивСкриншотов.Добавить(СтруктураСкриншот);
КонецПроцедуры

&НаКлиенте
Процедура СделатьСкриншотыОшибкиКаждогоОкна1С()
	ТекProcessID = ТекProcessID + 1;
	Если ТекProcessID > (МассивPIDОкон1С.Количество() - 1) Тогда
		ПерейтиКВыполнениюСледующегоСценария();
		Возврат;
	КонецЕсли;
	
	ProcessID = МассивPIDОкон1С[ТекProcessID];
	
	WshShell = ПолучитьWshShell();
	
	Попытка
		WshShell.AppActivate(ProcessID);
	Исключение
		СделатьСообщение(ОписаниеОшибки());
	КонецПопытки;
	
	ПодключитьОбработчикОжидания(""СделатьСкриншотТекущегоОкнаИАктивироватьСледущееОкно"", 1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СделатьСкриншотыОшибкиКаждогоОкна1СSikuliX()
	ТекProcessID = ТекProcessID + 1;
	Если ТекProcessID > (МассивКоординатОкон1С.Количество() - 1) Тогда
		ПерейтиКВыполнениюСледующегоСценария();
		Возврат;
	КонецЕсли;
	
	ТекКоординаты = МассивКоординатОкон1С[ТекProcessID];
	
	ТекстСообщения = ""Активирую окно с координатами: %1;%2"";
	ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",XMLСтрока(ТекКоординаты.x));
	ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",XMLСтрока(ТекКоординаты.y));
	СделатьСообщение(ТекстСообщения);
	ВыполнитьSikuliСкрипт(Объект.КаталогИнструментов + ""\tools\Sikuli\ClickCoordinates.sikuli --args "" + XMlСтрока(ТекКоординаты.x) + "" "" + XMlСтрока(ТекКоординаты.y) , -1, Истина);
	
	ПодключитьОбработчикОжидания(""СделатьСкриншотТекущегоОкнаИАктивироватьСледущееОкноSikuliX"", 1, Истина);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СортироватьМассивКоординат(Массив)
	Тзн = Новый ТаблицаЗначений;
	Тзн.Колонки.Добавить(""x"");
	Тзн.Колонки.Добавить(""y"");
	
	Для Каждого Элем Из Массив Цикл
		СтрТзн = Тзн.Добавить();
		СтрТзн.x = Элем.x;
		СтрТзн.y = Элем.y;
	КонецЦикла;
	
	Тзн.Сортировать(""x"");
	
	Массив = Новый Массив;
	
	Для Каждого СтрТзн Из Тзн Цикл
		Массив.Добавить(Новый Структура(""x,y"", СтрТзн.x, СтрТзн.y));
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьМассивКоординатОкон1С()
	ИмяФайлаЛога = ПолучитьИмяВременногоФайла(""txt"");
	Рез = ВыполнитьSikuliСкрипт(Объект.КаталогИнструментов + ""/tools/Sikuli/GetAll1CWindowsCoordinates.sikuli > """""" + ИмяФайлаЛога + """""""", -1, Истина);
	Если Рез <> 0 Тогда
		СделатьСообщение(""Не смог выполнить команду по получению координат на экране всех окон 1С в панели задач."");
		Возврат Неопределено;
	КонецЕсли;
	
	Если Не ФайлСуществуетКомандаСистемы(ИмяФайлаЛога) Тогда
		СделатьСообщение(""Не смог выполнить команду по получению координат на экране всех окон 1С в панели задач."");
		Возврат Неопределено;
	КонецЕсли;
	
	Массив = Новый Массив;
	
	Текст = Новый ЧтениеТекста;
	Текст.Открыть(ИмяФайлаЛога, ""UTF-8"");
	
	Пока Истина Цикл
		Стр = Текст.ПрочитатьСтроку();
		Если Стр = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		МассивЗначений = РазложитьСтрокуВМассивПодстрок(Стр, "";"");
		
		Для Ккк = 0 По МассивЗначений.Количество() - 1 Цикл
			МассивЗначений[Ккк] = СокрЛП(МассивЗначений[Ккк]);
		КонецЦикла;
		
		Если МассивЗначений[0] <> ""match"" Тогда
			Продолжить;
		КонецЕсли;
		
		Массив.Добавить(Новый Структура(""x,y"", Число(МассивЗначений[1]), Число(МассивЗначений[2])));
		
	КонецЦикла;
	
	Текст.Закрыть();
	
	СортироватьМассивКоординат(Массив);
	
	Возврат Массив;
КонецФункции

&НаКлиенте
Процедура СделатьСкриншотыОшибки()
	Если Объект.СниматьСкриншотКаждогоОкна1С Тогда
		//временное решение через SikuliX скрипт
		СделатьСообщение(""Делаю скриншоты всех окон 1С."");
		ТекProcessID = -1;
		МассивКоординатОкон1С = ПолучитьМассивКоординатОкон1С();
		Если МассивКоординатОкон1С = Неопределено Тогда
			СделатьСкриншотТекущегоОкна();
			ПерейтиКВыполнениюСледующегоСценария();
			Возврат;
		КонецЕсли;
		
		
		ТекстСообщения = ""Найдено %1 окон."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",МассивКоординатОкон1С.Количество());
		СделатьСообщение(ТекстСообщения);
		
		Если МассивКоординатОкон1С.Количество() = 0 Тогда
			СделатьСообщение(""НЕ найдено ни одного окна 1С. Делаю обычный скриншот."");
			СделатьСкриншотТекущегоОкна();
			ПерейтиКВыполнениюСледующегоСценария();
			Возврат;
		КонецЕсли;
		
		//сделаем текущий скриншот - чтобы не получилось ситуации, что активное окно свернулось
		СделатьСообщение(""Делаю общий скриншот."");
		СделатьСкриншотТекущегоОкна();
		
		СделатьСкриншотыОшибкиКаждогоОкна1СSikuliX();
		Возврат;
	КонецЕсли;
	
	СделатьСкриншотТекущегоОкна();
	ПерейтиКВыполнениюСледующегоСценария();
КонецПроцедуры

&НаКлиенте
Процедура СделатьСкриншотВозникновенияОшибки(ОписаниеШага, СтрокаСценария, РезультатПрохожденияТестовСценария)
	Если Не Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
		Возврат;
	КонецЕсли;
	
	ЗначениеПараметровДляСнятияСкриншотов = Новый Структура;
	ЗначениеПараметровДляСнятияСкриншотов.Вставить(""ОписаниеШага"", ОписаниеШага);
	ЗначениеПараметровДляСнятияСкриншотов.Вставить(""СтрокаСценария"", СтрокаСценария);
	ЗначениеПараметровДляСнятияСкриншотов.Вставить(""РезультатПрохожденияТестовСценария"", РезультатПрохожденияТестовСценария);
	
	ПодключитьОбработчикОжидания(""СделатьСкриншотыОшибки"", 1, Истина);
	
КонецПроцедуры
//}снятие скриншота

&НаКлиенте
Функция ПолучитьМассивСнипетовПрерывающихЗаписьСценария()
	Массив = Новый Массив;
	Массив.Добавить(""обратитевнимание"");
	
	Возврат Массив;
КонецФункции

//свёртка дерева до строк фич
&НаКлиенте
Процедура СвернутьДеревоДоФичРекурсивно(ДеревоФормыСтроки)
	Для Каждого Строка Из ДеревоФормыСтроки Цикл
		Если Строка.Тип = ""Фича"" Тогда
			СвернутьСтрокуДерева(Строка);
			Продолжить;
		КонецЕсли;
		
		ПодчиненныеСтроки = Строка.ПолучитьЭлементы();
		Если ПодчиненныеСтроки.Количество() > 0 Тогда
			СвернутьДеревоДоФичРекурсивно(ПодчиненныеСтроки);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

//свёртка дерева до строк сценариев
&НаКлиенте
Процедура СвернутьДеревоДоСценариевРекурсивно(ДеревоФормыСтроки)
	Для Каждого Строка Из ДеревоФормыСтроки Цикл
		Если Строка.Тип = ""Фича"" Тогда
			РазвернутьСтрокуДерева(Строка);
		КонецЕсли;
		
		Если Строка.Тип = ""Сценарий"" Тогда
			СвернутьСтрокуДерева(Строка);
			Продолжить;
		КонецЕсли;
		
		ПодчиненныеСтроки = Строка.ПолучитьЭлементы();
		Если ПодчиненныеСтроки.Количество() > 0 Тогда
			СвернутьДеревоДоСценариевРекурсивно(ПодчиненныеСтроки);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

// несколько клиентов тестирования {

&НаКлиенте
Процедура СброситьФлагПодключенияКлиентаТестирования()
	Для Каждого НайденнаяСтрока Из ДанныеКлиентовТестирования Цикл
		НайденнаяСтрока.Подключен = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеТекущейИнфобазы()
	
	ДанныеТекущейИнфобазы = Новый Структура;
	ДанныеТекущейИнфобазы.Вставить(""Имя"", ""Этот клиент"");
	
	
	
	СвободныйПорт = 1538;//надо так, иначе не подключается уже запущенный TestClient, если была переоткрыта VB
	
	Отбор = Новый Структура;
	Отбор.Вставить(""Имя"", ""Этот клиент"");
	СтрокиДанныеКлиентовТестирования = ДанныеКлиентовТестирования.НайтиСтроки(Отбор);
	Если СтрокиДанныеКлиентовТестирования.Количество() > 0 Тогда
		СтрокаЭтотКлиент = СтрокиДанныеКлиентовТестирования[0];
	Иначе
		СтрокаЭтотКлиент = ДанныеКлиентовТестирования.Вставить(0);// этот клиент должен быть первым
		
		КаталогБазы = СтрокаСоединенияИнформационнойБазы();
		ДанныеТекущейИнфобазы.Вставить(""ИмяКомпьютера"",  ""localhost"");
		ДанныеТекущейИнфобазы.Вставить(""ТипКлиента"",     ""Тонкий"");
		ДанныеТекущейИнфобазы.Вставить(""ПутьКИнфобазе"",  КаталогБазы);
		ДанныеТекущейИнфобазы.Вставить(""ПортЗапускаТестКлиента"", СвободныйПорт);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтрокаЭтотКлиент, ДанныеТекущейИнфобазы);
	
КонецПроцедуры

&НаКлиенте
Функция ПреобразоватьПараметрДляWeb(Знач Стр)
	Стр = СтрЗаменить(Стр, ""%"", ""%25"");
	Стр = СтрЗаменить(Стр, ""?"", ""%3F"");
	Стр = СтрЗаменить(Стр, ""&"", ""%26"");
	Стр = СтрЗаменить(Стр, ""="", ""%3D"");
	Стр = СтрЗаменить(Стр, "" "", ""%20"");
	Стр = СтрЗаменить(Стр, """""""", ""%22"");
	Стр = СтрЗаменить(Стр, ""/"", ""%2F"");
	Стр = СтрЗаменить(Стр, ""\"", ""%5C"");
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Процедура ДобавитьПараметрКWeb(Стр,ИмяПараметра,Значение = Неопределено)
	Стр = Стр + ?(Найти(Стр, ""?"") = 0, ""?"", ""&"") + ИмяПараметра;
	Если Значение <> Неопределено Тогда
		Стр = Стр + ""="" + ПреобразоватьПараметрДляWeb(Значение);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция УбратьКавычки(Стр)
	Если Лев(Стр,1) = """""""" и Прав(Стр,1) = """""""" Тогда
		Возврат Сред(Стр,2,СтрДлина(Стр)-2);
	КонецЕсли;
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Функция УбратьКавычкиАпострофы(Стр)
	Если Лев(Стр,1) = """""""" и Прав(Стр,1) = """""""" Тогда
		Возврат Сред(Стр,2,СтрДлина(Стр)-2);
	КонецЕсли;
	
	Если Лев(Стр,1) = ""'"" и Прав(Стр,1) = ""'"" Тогда
		Возврат Сред(Стр,2,СтрДлина(Стр)-2);
	КонецЕсли;
	
	Возврат Стр;
КонецФункции

&НаКлиенте
Функция ПолучитьМассивПараметровЗапуска(Стр,Разделитель)
	Рез = """";
	КавычкаОткрылась = Ложь;
	Для Ккк = 1 По СтрДлина(Стр) Цикл
		Символ = Сред(Стр,Ккк,1);
		
		Если Символ = """""""" Тогда
			КавычкаОткрылась = Не КавычкаОткрылась;
		КонецЕсли;
		
		Если КавычкаОткрылась Тогда
			Если Символ = "" "" Тогда
				Символ = ""~ЭкранированиеПробела~"";
			КонецЕсли;
		КонецЕсли;
		
		Рез = Рез + Символ;
	КонецЦикла;
	
	МассивСтрок = РазложитьСтрокуВМассивПодстрокКлиент(Рез,Разделитель);
	
	Для Ккк = 0 По МассивСтрок.Количество()-1 Цикл
		МассивСтрок[Ккк] = СтрЗаменить(МассивСтрок[Ккк],""~ЭкранированиеПробела~"","" "")
	КонецЦикла;
	
	Возврат МассивСтрок;
КонецФункции

&НаКлиенте
Функция ПолучитьСтрокуЗапускаWebКлиент(ДанныеЗапускаКлиентаТестирования)
	СтрокаЗапуска = СокрЛП(ДанныеЗапускаКлиентаТестирования.ПутьКИнфобазе);
	Если НРег(Лев(СтрокаЗапуска,3)) = ""ws="" Тогда
		СтрокаЗапуска = Сред(СтрокаЗапуска,4);
		СтрокаЗапуска = УбратьКавычки(СтрокаЗапуска);
	КонецЕсли;
	ДобавитьПараметрКWeb(СтрокаЗапуска, ""TESTCLIENT"");
	ДобавитьПараметрКWeb(СтрокаЗапуска, ""TESTCLIENTID"", ПолучитьКорректноеИмяTesClient(ДанныеЗапускаКлиентаТестирования.Имя));
	
	
	МассивДоппараметров = ПолучитьМассивПараметровЗапуска(ДанныеЗапускаКлиентаТестирования.ДопПараметры,"" "");
	Для Каждого Элем Из МассивДоппараметров Цикл
		Если Лев(Элем,2) = ""/N"" Тогда
			ДобавитьПараметрКWeb(СтрокаЗапуска, ""N"", УбратьКавычки(Сред(Элем,3)));
		ИначеЕсли Лев(Элем,2) = ""/P"" Тогда
			ДобавитьПараметрКWeb(СтрокаЗапуска, ""P"", УбратьКавычки(Сред(Элем,3)));
		ИначеЕсли Лев(Элем,2) = ""/L"" Тогда
			ДобавитьПараметрКWeb(СтрокаЗапуска, ""L"", УбратьКавычки(Сред(Элем,3)));
		ИначеЕсли Лев(Элем,3) = ""/VL"" Тогда
			ДобавитьПараметрКWeb(СтрокаЗапуска, ""VL"", УбратьКавычки(Сред(Элем,4)));
		КонецЕсли;
	КонецЦикла;
	
	Возврат СтрокаЗапуска;
КонецФункции

&НаКлиенте
Функция ПолучитьСтрокуЗапускаDesktopПриложение(ДанныеЗапускаКлиентаТестирования)
	КаталогБазы = ДанныеЗапускаКлиентаТестирования.ПутьКИнфобазе;
	Если Найти(ВРег(КаталогБазы), ВРег(""File="")) > 0 Тогда
		КаталогБазы = СтрЗаменить(КаталогБазы, ""File="", "" /F"");
	ИначеЕсли Найти(ВРег(КаталогБазы), ВРег(""Srvr="")) > 0 Тогда
		КаталогБазы = СтрЗаменить(КаталогБазы, ""Srvr="", ""/S"");
		КаталогБазы = СтрЗаменить(КаталогБазы, """""";Ref="""""", ""\"");
	ИначеЕсли Найти(ВРег(КаталогБазы), ВРег(""ws="")) > 0 Тогда
		КаталогБазы = СтрЗаменить(КаталогБазы, ""ws="", "" /WS"");
	Иначе
	КонецЕсли;
	КаталогБазы = СтрЗаменить(КаталогБазы, "";"", """");
	
	Если ЭтоLinux = Истина Тогда
		КаталогБазы = СтрЗаменить(КаталогБазы, ""\"", ""/"");
	КонецЕсли;
	
	ПараметрыОтладчика = """";
	Если Объект.ЗапускатьТестКлиентВРежимеОтладки Тогда
		// /debug -http -attach /debuggerURL ""http://localhost:1560""
		ПараметрыОтладчика = ""/debug "" + Объект.КлючиОтладки + "" /debuggerURL """""" + Объект.АдресОтладчика + """""""";
	КонецЕсли;
	
	СтрокаЗапуска = ""ENTERPRISE "" + КаталогБазы + ПараметрыОтладчика + "" /TESTCLIENT "";
	
	СвободныйПорт = ПроверитьПортНаЗанятость(ДанныеЗапускаКлиентаТестирования.ПортЗапускаТестКлиента);
	Если СвободныйПорт <> ДанныеЗапускаКлиентаТестирования.ПортЗапускаТестКлиента Тогда
		ТекстСообщения = ПолучитьТекстСообщенияПользователю(""$Порт %1 занят или находится вне указанного диапазона, порт подключения изменен на %2$"");
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ДанныеЗапускаКлиентаТестирования.ПортЗапускаТестКлиента);
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%2"",СвободныйПорт);
		СделатьСообщение(ТекстСообщения);
		ДанныеЗапускаКлиентаТестирования.ПортЗапускаТестКлиента = СвободныйПорт;
		Отбор = Новый Структура;
		Отбор.Вставить(""Имя"", ДанныеЗапускаКлиентаТестирования.Имя);
		
		НайденныеКлиенты = ДанныеКлиентовТестирования.НайтиСтроки(Отбор);
		Если НайденныеКлиенты.Количество() = 1 Тогда
			НайденныеКлиенты[0].ПортЗапускаТестКлиента = ДанныеЗапускаКлиентаТестирования.ПортЗапускаТестКлиента;
		КонецЕсли;
	КонецЕсли;
	
	СтрокаЗапуска = СтрокаЗапуска + ""-TPort "" + Формат(ДанныеЗапускаКлиентаТестирования.ПортЗапускаТестКлиента, ""ЧГ="") + "" "";
	
	ДопПараметр = ДанныеЗапускаКлиентаТестирования.ДопПараметры + ДопПараметр;
	Если ЭтоЗапускВРежимеКоманднойСтроки Тогда
		СтрокаЗапуска = СтрокаЗапуска + "" /CTemp "" + ДопПараметр;//добавил /CTemp, чтобы убрать передачу параметра /C в TestClient, с которым был запущен TestManager
	Иначе
		СтрокаЗапуска = СтрокаЗапуска + ДопПараметр;
	КонецЕсли;
	
	Возврат СтрокаЗапуска;
КонецФункции

&НаКлиенте
Процедура ЗапуститьКлиентаТестирования(ДанныеЗапускаКлиентаТестирования, ДопПараметр = """")
	
	НадоЗапускатьПриложение = Ложь;
	Если Не ЗначениеЗаполнено(ДанныеЗапускаКлиентаТестирования.ИмяКомпьютера) Тогда
		//Значит не указано имя ПК для запуска. Это равносильно указанию localhost
		НадоЗапускатьПриложение = Истина;
	ИначеЕсли НРег(ДанныеЗапускаКлиентаТестирования.ИмяКомпьютера) = ""localhost"" Тогда
		НадоЗапускатьПриложение = Истина;
	ИначеЕсли НРег(ДанныеЗапускаКлиентаТестирования.ИмяКомпьютера) = ""127.0.0.1"" Тогда
		НадоЗапускатьПриложение = Истина;
	ИначеЕсли ДанныеЗапускаКлиентаТестирования.ТипКлиента = ""Web"" Тогда
		//браузер мы можем спокойно запускать
		НадоЗапускатьПриложение = Истина;
	КонецЕсли;
	
	Если НЕ НадоЗапускатьПриложение Тогда
		Возврат;
	КонецЕсли;
	
	ПроисходилЗапускTescClient = Истина;
	
	Если ДанныеЗапускаКлиентаТестирования.ТипКлиента = ""Web"" Тогда
		СтрокаЗапуска = ПолучитьСтрокуЗапускаWebКлиент(ДанныеЗапускаКлиентаТестирования);
	Иначе
		СтрокаЗапуска = ПолучитьСтрокуЗапускаDesktopПриложение(ДанныеЗапускаКлиентаТестирования);
	КонецЕсли;
	
	
	Отладка(""СтрокаЗапуска="" + СтрокаЗапуска);
	
	//ЗапуститьПриложение(СтрокаЗапуска);
	
	Если ДанныеЗапускаКлиентаТестирования.ТипКлиента = ""Web"" Тогда
		Если ЕстьПоддержкаАсинхронныхВызовов Тогда
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(""start """""""" """""" + СтрокаЗапуска + """""""", Ложь, Ложь);
		Иначе
			ЗапуститьПриложение(СтрокаЗапуска);
		КонецЕсли;
		
	ИначеЕсли Не ЗначениеЗаполнено(ДанныеЗапускаКлиентаТестирования.ТипКлиента) Или
		Найти(НРег(ДанныеЗапускаКлиентаТестирования.ТипКлиента), ""тонкий"") > 0 Или
		ЭтоLinux Тогда
		
		ЗапуститьСистему(СтрокаЗапуска);
	Иначе // толстый клиент для win
		СтрокаЗапуска1с = КаталогПрограммы() + ""1cv8"";
		Если ЭтоLinux = Ложь Тогда
			СтрокаЗапуска1с = СтрокаЗапуска1с + "".exe"";
			ИмяВременногоBAT = ПолучитьИмяВременногоФайла(""bat"");
			ЗТ = Новый ЗаписьТекста(ИмяВременногоBAT, КодировкаТекста.ANSI, , Истина);
			ЗТ.ЗаписатьСтроку(""chcp 1251"");
			ЗТ.ЗаписатьСтроку("""""""" + СтрокаЗапуска1с  + """""" "" + СтрокаЗапуска);
			ЗТ.Закрыть();
			
			ВыполнитьКомандуОСБезПоказаЧерногоОкна(ИмяВременногоBAT, Ложь, Ложь);//TODO проверить выполнение, т.к. ранее был вывод в кодировке UTF8
		Иначе
			КомандаСистемы(СтрокаЗапуска1с + "" ""+СтрокаЗапуска);
		КонецЕсли;
		
	КонецЕсли;
	
	Для Каждого НайденнаяСтрока Из ДанныеКлиентовТестирования Цикл
		НайденнаяСтрока.Подключен = Ложь;
	КонецЦикла;
	ДанныеЗапускаКлиентаТестирования.Подключен = Истина;
	
КонецПроцедуры

&НаКлиенте
Функция ОбернутьВКавычки(Знач Строка);
	Если Лев(Строка, 1) = """""""" и Прав(Строка, 1) = """""""" Тогда
		Возврат Строка;
	Иначе
		Возврат """""""" + Строка + """""""";
	КонецЕсли;
КонецФункции

&НаСервере
Процедура ВосстановитьВсеНастройкиИзХранилища()
	ВосстановитьНастройкиИзХранилища(""КаталогФич"", ""КаталогФич"");
	ВосстановитьНастройкиИзХранилища(""КаталогиБиблиотек"", ""КаталогиБиблиотек"");
	ВосстановитьНастройкиИзХранилища(""ДанныеКлиентовТестирования"", ""ДанныеКлиентовТестирования"");
	
	Для Каждого СтрокаДанныеКлиентовТестирования Из ДанныеКлиентовТестирования Цикл
		СтрокаДанныеКлиентовТестирования.Подключен = Ложь;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиИзХранилища(Ключ, ИмяРеквизита)
	ПрефиксИнструмента = ""vanessabehavior_"";
	Если Объект.РежимСамотестирования Тогда
		ПрефиксИнструмента = ПрефиксИнструмента + ""autotest_"";
	КонецЕсли;
	
	Ключ = ПрефиксИнструмента + Ключ;
	
	СохраненноеЗначение = ХранилищеОбщихНастроек.Загрузить(ЭтаФорма, Ключ);
	Если ЗначениеЗаполнено(СохраненноеЗначение) Тогда
		Если Ложь
			Или ИмяРеквизита = ""КаталогФич""
			Или ИмяРеквизита = ""КаталогиБиблиотек""
			Тогда
			
			Если ТипЗнч(СохраненноеЗначение) = Тип(""ТаблицаЗначений"") Тогда
				Объект[ИмяРеквизита].Загрузить(СохраненноеЗначение);
			Иначе
				Объект[ИмяРеквизита] = СохраненноеЗначение;
			КонецЕсли;
			
		ИначеЕсли Ложь
			Или ИмяРеквизита = ""ДанныеКлиентовТестирования""
			Или ИмяРеквизита = ""ТаблицаИзвестныхStepDefinition""
			Или ИмяРеквизита = ""КешStepDefinition""
			Или ИмяРеквизита = ""КешТаблицGherkin""
			Тогда
			
			Если ТипЗнч(СохраненноеЗначение) = Тип(""ТаблицаЗначений"") Тогда
				ЭтаФорма[ИмяРеквизита].Загрузить(СохраненноеЗначение);
			Иначе
				ЭтаФорма[ИмяРеквизита] = СохраненноеЗначение;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиВХранилище(Знач Ключ, Знач Значение)
	ПрефиксИнструмента = ""vanessabehavior_"";
	Если Объект.РежимСамотестирования Тогда
		ПрефиксИнструмента = ПрефиксИнструмента + ""autotest_"";
	КонецЕсли;
	
	Ключ = ПрефиксИнструмента + Ключ;
	
	Если ТипЗнч(Значение) = Тип(""ДанныеФормыКоллекция"") Тогда
		ХранилищеОбщихНастроек.Сохранить(ЭтаФорма, Ключ, Значение.Выгрузить());
	Иначе
		ХранилищеОбщихНастроек.Сохранить(ЭтаФорма, Ключ, Значение);
	КонецЕсли;
КонецПроцедуры

// }

&НаСервереБезКонтекста
Процедура СохранитьНедавноЗагруженныеФичи(НедавноЗагруженныеФичи, РежимСамотестирования)
	Если РежимСамотестирования Тогда
		Возврат;
	КонецЕсли;
	ХранилищеОбщихНастроек.Сохранить(""VanessaBehaviorНедавноЗагруженныеФичи"", , НедавноЗагруженныеФичи);
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВостановитьНедавноЗагруженныеФичи(НедавноЗагруженныеФичи)
	НедавноЗагруженныеФичи = ХранилищеОбщихНастроек.Загрузить(""VanessaBehaviorНедавноЗагруженныеФичи"");
	Если НедавноЗагруженныеФичи = Неопределено Тогда
		НедавноЗагруженныеФичи = Новый Массив;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СкопироватьНедавноЗагруженныеФичиВИнтерфейс(НедавноЗагруженныеФичи)
	//Элементы.ГруппаКнопокНедавноЗагруженныеФичи
	КоличествоЭлементовВИнтерфейсе = Элементы.ГруппаКнопокНедавноЗагруженныеФичи.ПодчиненныеЭлементы.Количество();
	Ид = 0;
	Для Каждого Элем Из НедавноЗагруженныеФичи Цикл
		Ид = Ид + 1;
		Если КоличествоЭлементовВИнтерфейсе < Ид Тогда
			Пункт1=Элементы.Добавить(""МенюЗагрузитьФичи"" + Ид, Тип(""КнопкаФормы""), Элементы.ГруппаКнопокНедавноЗагруженныеФичи);
			Пункт1.Заголовок  = Элем.Представление;
			Пункт1.ИмяКоманды = ""ЗагрузитьНедавнююФичу"" + Ид;
		Иначе
			Элементы.ГруппаКнопокНедавноЗагруженныеФичи.ПодчиненныеЭлементы[Ид - 1].Заголовок  = Элем.Представление;
			Элементы.ГруппаКнопокНедавноЗагруженныеФичи.ПодчиненныеЭлементы[Ид - 1].ИмяКоманды = ""ЗагрузитьНедавнююФичу"" + Ид;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьФичуВСписокНедавноЗагруженныхФич(Знач Путь)
	Нашли = Ложь;
	Ид = -1;
	Для Каждого Элем Из НедавноЗагруженныеФичи Цикл
		Ид = Ид + 1;
		
		Если НРег(Элем.Путь) = НРег(Путь) Тогда
			НедавноЗагруженныеФичи.Удалить(Ид);
			Нашли = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ЗначениеМассива = Новый Структура;
	ЗначениеМассива.Вставить(""Путь"", Путь);
	ЗначениеМассива.Вставить(""Представление"", ""1. "" + Путь);
	НедавноЗагруженныеФичи.Вставить(0, ЗначениеМассива);
	
	Если НедавноЗагруженныеФичи.Количество() > 9 Тогда
		НедавноЗагруженныеФичи.Удалить(9);
	КонецЕсли;
	
	Ид = -1;
	Для Каждого Элем Из НедавноЗагруженныеФичи Цикл
		Ид = Ид + 1;
		Путь = Элем.Путь;
		Элем.Представление = """" + (Ид + 1) + "". "" + Путь;
	КонецЦикла;
	
	СохранитьНедавноЗагруженныеФичи(НедавноЗагруженныеФичи, Объект.РежимСамотестирования);
	СкопироватьНедавноЗагруженныеФичиВИнтерфейс(НедавноЗагруженныеФичи);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьСценарийСоСтрокиПрисланнойИзвне()
	СделатьСтрокуДереваТекущейПоНомеру(НомерСтрокиСценарияПереданныйИзвне);
	ВыполнитьДанныйСценарийСТекущегоШага();
КонецПроцедуры

&НаКлиенте
Процедура СделатьСтрокуДереваТекущейПоНомеру(Ном)
	СтрокиДерева = Объект.ДеревоТестов.ПолучитьЭлементы();
	
	НадоПрервать = Ложь;
	СделатьСтрокуДереваТекущейПоНомеруРекурсивно(СтрокиДерева,Ном,НадоПрервать);
КонецПроцедуры

&НаКлиенте
Процедура СделатьСтрокуДереваТекущейПоНомеруРекурсивно(СтрокиДерева,Ном,НадоПрервать)
	Если НадоПрервать Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Если СтрокаДерева.НомерСтрокиВФиче = Ном Тогда
			Элементы.ДеревоТестов.ТекущаяСтрока = СтрокаДерева.ПолучитьИдентификатор();
			НадоПрервать = Истина;
			Возврат;
		КонецЕсли;
		
		СделатьСтрокуДереваТекущейПоНомеруРекурсивно(СтрокаДерева.ПолучитьЭлементы(),Ном,НадоПрервать)
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьБрейкПоинт(ПолныйПуть)
	Брейкпоинты.Добавить(ПолныйПуть);
	Если НЕ Элементы.ДеревоТестов.ПодчиненныеЭлементы.ДеревоТестовБрейкпоинт.Видимость  Тогда
		Элементы.ДеревоТестов.ПодчиненныеЭлементы.ДеревоТестовБрейкпоинт.Видимость = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьБрейкПоинт(ПолныйПуть)
	ИД = Брейкпоинты.Найти(ПолныйПуть);
	Если ИД <> Неопределено Тогда
		Брейкпоинты.Удалить(ИД);
	КонецЕсли;
	
	Если Брейкпоинты.Количество() = 0 Тогда
		Если Элементы.ДеревоТестов.ПодчиненныеЭлементы.ДеревоТестовБрейкпоинт.Видимость Тогда
			Элементы.ДеревоТестов.ПодчиненныеЭлементы.ДеревоТестовБрейкпоинт.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СнятьПометкуБрейкпоинтаРекурсивно(СтрокиДерева)
	Для Каждого СтрокаДерева Из СтрокиДерева Цикл
		Если СтрокаДерева.Брейкпоинт Тогда
			СтрокаДерева.Брейкпоинт = Ложь;
		КонецЕсли;
		
		СнятьПометкуБрейкпоинтаРекурсивно(СтрокаДерева.ПолучитьЭлементы());
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СброситьКешИзвестныхStepDefinitionСервер()
	Копия = ТаблицаИзвестныхStepDefinition.Выгрузить();
	Копия.Очистить();
	СохранитьНастройкиВХранилище(""ТаблицаИзвестныхStepDefinition"", Копия);
	
	Копия = КешStepDefinition.Выгрузить();
	Копия.Очистить();
	СохранитьНастройкиВХранилище(""КешStepDefinition"", Копия);
	
	Копия = КешТаблицGherkin.Выгрузить();
	Копия.Очистить();
	СохранитьНастройкиВХранилище(""КешТаблицGherkin"", Копия);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаДоступностиВидимостиЭлементов()
	
	Если Объект.СоздаватьИнструкциюВидео Тогда
		Элементы.НастройкиВидеоИнструкций.Доступность     = Истина;
		Элементы.КаталогOutputИнструкцияВидео.Доступность = Истина;
	Иначе
		Элементы.НастройкиВидеоИнструкций.Доступность     = Ложь;
		Элементы.КаталогOutputИнструкцияВидео.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.СоздаватьИнструкциюHTML Тогда
		Элементы.КаталогOutputИнструкцияHTML.Доступность = Истина;
	Иначе
		Элементы.КаталогOutputИнструкцияHTML.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.СоздаватьИнструкциюMarkdown Тогда
		Элементы.КаталогOutputИнструкцияMarkdown.Доступность = Истина;
	Иначе
		Элементы.КаталогOutputИнструкцияMarkdown.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.ДелатьСкриншотПриВозникновенииОшибки Тогда
		Элементы.КаталогOutputСкриншоты.Доступность = Истина;
	Иначе
		Элементы.КаталогOutputСкриншоты.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.ДелатьОтчетВФорматеАллюр Тогда
		Элементы.КаталогOutputAllure.Доступность = Истина;
		Элементы.ОтобразитьОтчетAllure.Доступность = Истина;
	Иначе
		Элементы.КаталогOutputAllure.Доступность = Ложь;
		Элементы.ОтобразитьОтчетAllure.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.ДелатьОтчетВФорматеjUnit Тогда
		Элементы.КаталогOutputjUnit.Доступность = Истина;
	Иначе
		Элементы.КаталогOutputjUnit.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.ДелатьОтчетВФорматеCucumberJson Тогда
		Элементы.КаталогOutputCucumberJson.Доступность = Истина;
	Иначе
		Элементы.КаталогOutputCucumberJson.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.ДелатьЛогВыполненияСценариевВТекстовыйФайл Тогда
		Элементы.ИмяФайлаЛогВыполненияСценариев.Доступность = Истина;
	Иначе
		Элементы.ИмяФайлаЛогВыполненияСценариев.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.ДелатьЛогОшибокВТекстовыйФайл Тогда
		Элементы.ИмяКаталогаЛогОшибок.Доступность = Истина;
	Иначе
		Элементы.ИмяКаталогаЛогОшибок.Доступность = Ложь;
	КонецЕсли;
	
	Если Объект.ЗаписьВидеоДелатьНаложениеTTS Тогда
		Элементы.ЗаписьВидеоПутьКДвижкуTTS.Доступность = Истина;
		Элементы.ЗаписьВидеоИмяTTS.Доступность         = Истина;
		Элементы.ЗаписьВидеоСловарьЗамен.Доступность   = Истина;
	Иначе
		Элементы.ЗаписьВидеоПутьКДвижкуTTS.Доступность = Ложь;
		Элементы.ЗаписьВидеоИмяTTS.Доступность         = Ложь;
		Элементы.ЗаписьВидеоСловарьЗамен.Доступность   = Ложь;
	КонецЕсли;
	
	Если Объект.ЗапускатьТестКлиентВРежимеОтладки Тогда
		Элементы.КлючиОтладки.Доступность   = Истина;
		Элементы.АдресОтладчика.Доступность = Истина;
	Иначе
		Элементы.КлючиОтладки.Доступность   = Ложь;
		Элементы.АдресОтладчика.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОпределитьГраницыТаблицыGherkin(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки, ВерхняяГраница, НижняяГраница)
	Элементы.СгенерированныйСценарий.ПолучитьГраницыВыделения(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки);
	
	МассивСтрок = РазложитьСтрокуВМассивПодстрокКлиент(Объект.СгенерированныйСценарий, Символы.ПС);
	
	ВерхняяГраница = НачалоСтроки;
	НижняяГраница  = НачалоСтроки;
	
	НомерСтроки = НижняяГраница;
	Пока Истина Цикл
		НомерСтроки = НомерСтроки - 1;
		Если НомерСтроки < 1 Тогда
			Прервать;
		КонецЕсли;
		
		Стр = СокрЛП(МассивСтрок[НомерСтроки - 1]);
		
		Если Лев(Стр, 1) <> ""|"" Тогда
			Прервать;
		КонецЕсли;
		
		НижняяГраница = НомерСтроки;
	КонецЦикла;
	
	
	НомерСтроки = ВерхняяГраница;
	Пока Истина Цикл
		НомерСтроки = НомерСтроки + 1;
		Если НомерСтроки > МассивСтрок.Количество() Тогда
			Прервать;
		КонецЕсли;
		
		Стр = СокрЛП(МассивСтрок[НомерСтроки - 1]);
		
		Если Лев(Стр, 1) <> ""|"" Тогда
			Прервать;
		КонецЕсли;
		
		ВерхняяГраница = НомерСтроки;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьРедактированиеТаблицыGherkin()
	НачалоСтроки = 0;
	НачалоКолонки = 0;
	КонецСтроки = 0;
	КонецКолонки = 0;
	ВерхняяГраница = 0;
	НижняяГраница = 0;
	ОпределитьГраницыТаблицыGherkin(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки, ВерхняяГраница, НижняяГраница);
	
	
	МассивСтрок = РазложитьСтрокуВМассивПодстрокКлиент(Объект.СгенерированныйСценарий, Символы.ПС);
	
	МассивСтрокДляРедактирования = Новый Массив;
	Для Ккк = (НижняяГраница - 1) По ВерхняяГраница - 1 Цикл
		МассивСтрокДляРедактирования.Добавить(МассивСтрок[Ккк]);
	КонецЦикла;
	
	Если МассивСтрокДляРедактирования.Количество() = 0 Тогда
		СделатьСообщение(""Не найдена таблица для редактирования."");
		Возврат;
	КонецЕсли;
	
	
	Если МассивСтрокДляРедактирования.Количество() = 1 Тогда
		Если Не ЗначениеЗаполнено(МассивСтрокДляРедактирования[0]) Тогда
			СделатьСообщение(""Не найдена таблица для редактирования."");
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ФорматироватьТаблицуGherkin(МассивСтрокДляРедактирования);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить(""МассивСтрокДляРедактирования"", МассивСтрокДляРедактирования);
	ФормаДобавитьШаг = ПолучитьФорму(""ВнешняяОбработка.bddRunner.Форма.РедактированиеТаблицы"", ПараметрыФормы);
	ФормаДобавитьШаг.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаменитьТаблицуGherkinПослеРедактирования(МассивСтрокТаблицы)
	НачалоСтроки = 0;
	НачалоКолонки = 0;
	КонецСтроки = 0;
	КонецКолонки = 0;
	ВерхняяГраница = 0;
	НижняяГраница = 0;
	ОпределитьГраницыТаблицыGherkin(НачалоСтроки, НачалоКолонки, КонецСтроки, КонецКолонки, ВерхняяГраница, НижняяГраница);
	
	ФорматироватьТаблицуGherkin(МассивСтрокТаблицы);
	
	МассивСтрок = РазложитьСтрокуВМассивПодстрокКлиент(Объект.СгенерированныйСценарий, Символы.ПС);
	
	
	НовыйМассивСтрок = Новый Массив;
	НомерСтроки = 0;
	ДобавилиРедактированныеСтроки = Ложь;
	Для Ккк = 0 По МассивСтрок.Количество() - 1 Цикл
		НомерСтроки = НомерСтроки + 1;
		Если НомерСтроки >= НижняяГраница и НомерСтроки <= ВерхняяГраница Тогда
			Если НЕ ДобавилиРедактированныеСтроки Тогда
				ДобавилиРедактированныеСтроки = Истина;
				
				Для Каждого НоваяСтрока Из МассивСтрокТаблицы Цикл
					НовыйМассивСтрок.Добавить(Символы.Таб + Символы.Таб + НоваяСтрока);
				КонецЦикла;
			КонецЕсли;
			
			Продолжить;
		КонецЕсли;
		
		
		НовыйМассивСтрок.Добавить(МассивСтрок[Ккк]);
	КонецЦикла;
	
	
	ФинальнаяСтрока = """";
	Для Каждого Стр Из НовыйМассивСтрок Цикл
		ФинальнаяСтрока = ФинальнаяСтрока + Стр + Символы.ПС;
	КонецЦикла;
	
	Объект.СгенерированныйСценарий = ФинальнаяСтрока;
	
КонецПроцедуры

&НаКлиенте
Процедура ВывестиСтатистикуКлиент()
	Если НЕ Версия836ИлиВыше Тогда
		Возврат;
	КонецЕсли;
	
	ВывестиСтатистикуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ВывестиСтатистикуНаСервере()
	
	тДерево = РеквизитФормыВЗначение(""Объект"").ДеревоТестов;
	
	ВсегоФич       = тДерево.Строки.НайтиСтроки(Новый Структура(""ТипКартинки"", 1), Истина).Количество();
	ВсегоСценариев = тДерево.Строки.НайтиСтроки(Новый Структура(""ТипКартинки"", 2), Истина).Количество();
	ВсегоШагов     = тДерево.Строки.НайтиСтроки(Новый Структура(""ТипКартинки"", 3), Истина).Количество();
	
	ВсегоШаговSuccess = тДерево.Строки.НайтиСтроки(Новый Структура(""ТипКартинки, Статус"", 4, ""Success""), Истина).Количество();
	ВсегоШаговFailed  = тДерево.Строки.НайтиСтроки(Новый Структура(""ТипКартинки, Статус"", 5, ""Failed""),  Истина).Количество();
	ВсегоШаговPending = тДерево.Строки.НайтиСтроки(Новый Структура(""ТипКартинки, Статус"", 6, ""Pending""), Истина).Количество();
	
	ВсегоШаговОбщее = ВсегоШагов + ВсегоШаговSuccess + ВсегоШаговFailed + ВсегоШаговPending;
	
	СтрокаВсегоШаговSuccess = Вычислить(""Новый ФорматированнаяСтрока("""""""" + ВсегоШаговSuccess, Новый Шрифт(, , Истина), Новый Цвет(21, 177, 14))""); // Жирный, зеленый
	СтрокаВсегоШаговFailed  = Вычислить(""Новый ФорматированнаяСтрока("""""""" + ВсегоШаговFailed,  Новый Шрифт(, , Истина), Новый Цвет(255, 0, 0))"");   // Жирный, красный
	СтрокаВсегоШаговPending = Вычислить(""Новый ФорматированнаяСтрока("""""""" + ВсегоШаговPending, Новый Шрифт(, , Истина), Новый Цвет(255, 92, 0))""); // Жирный, оранжевый
	
	ОбщаяСтрока = """";
	Если ВсегоШаговSuccess + ВсегоШаговPending + ВсегоШаговFailed > 0 Тогда
		ОбщаяСтрока = Вычислить(""Новый ФорматированнаяСтрока("""", """", СтрокаВсегоШаговSuccess, """"/"""", СтрокаВсегоШаговFailed, """"/"""", СтрокаВсегоШаговPending)"");
	КонецЕсли;
	
	НеРеализованыхСпипетовВсего = тДерево.Строки.НайтиСтроки(Новый Структура(""АдресСнипета, ТипКартинки"", """", 3), Истина).Количество() +
	тДерево.Строки.НайтиСтроки(Новый Структура(""АдресСнипета, ТипКартинки"", """", 4), Истина).Количество() +
	тДерево.Строки.НайтиСтроки(Новый Структура(""АдресСнипета, ТипКартинки"", """", 5), Истина).Количество() +
	тДерево.Строки.НайтиСтроки(Новый Структура(""АдресСнипета, ТипКартинки"", """", 6), Истина).Количество();
	
	Если НеРеализованыхСпипетовВсего > 0 Тогда
		СтрокаНеРеализованыхСпипетовВсего = Вычислить(""Новый ФорматированнаяСтрока(""""("""" + Формат(НеРеализованыхСпипетовВсего, """"ЧГ="""") + """")"""", Новый Шрифт(, , Истина), Новый Цвет(255, 92, 0))""); // Жирный, оранжевый
	Иначе
		СтрокаНеРеализованыхСпипетовВсего = """";
	КонецЕсли;
	
	ОбщаяСтатистикаПоФиче = """" + Формат(ВсегоФич, ""ЧГ="") + ""/"" + Формат(ВсегоСценариев, ""ЧГ="") + ""/"" + Формат(ВсегоШаговОбщее, ""ЧГ="");
	ОбщаяСтатистикаПоФиче = Вычислить(""Новый ФорматированнаяСтрока(ОбщаяСтатистикаПоФиче, Новый Шрифт(, , Истина))"");
	Элементы.Статистика.Заголовок = Вычислить(""Новый ФорматированнаяСтрока(ОбщаяСтатистикаПоФиче, СтрокаНеРеализованыхСпипетовВсего, ОбщаяСтрока)"");
	
	Элементы.Статистика.Подсказка = НСтр(""ru = 'Всего фич: '; en = 'Features: '"") + ВсегоФич + Символы.ПС +
	НСтр(""ru = 'Всего сценариев: '; en = 'Scenarios: '"") + ВсегоСценариев + Символы.ПС +
	НСтр(""ru = 'Всего шагов: '; en = 'Steps: '"") + ВсегоШаговОбщее + Символы.ПС +
	?(НеРеализованыхСпипетовВсего > 0, НСтр(""ru = 'Не реализовано шагов: '; en = 'Not implemented: '"") + НеРеализованыхСпипетовВсего, """") +
	?(ВсегоШаговSuccess + ВсегоШаговPending + ВсегоШаговFailed > 0,
	Символы.ПС +
	НСтр(""ru = 'Результат выполнения шагов '; en = 'Result: '"") + ""(Success, Failed, Pending): "" +
	ВсегоШаговSuccess + ""/"" + ВсегоШаговFailed + ""/"" + ВсегоШаговPending + Символы.ПС +
	НСтр(""ru = 'Пропущено шагов: '; en = 'Skiped: '"") + ВсегоШагов, """"
);

КонецПроцедуры

// { Плагины
// портировано из xUnitFor1C 4.1.1.0

&НаКлиенте
Процедура ЗагрузитьПлагины(Знач Перезагрузить = Ложь, Знач ОбработчикПослеЗавершенияЗагрузки = Неопределено)
	Если Не Перезагрузить И Объект.ПлагиныЗагружены Тогда
		Возврат;
	КонецЕсли;
	
	Объект.Плагины = Новый Структура;
	КэшФормПлагинов = Новый Структура;
	
	КаталогПлагинов = ПолучитьПутьКПлагинам();
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить(""ОбработчикОповещения"", ОбработчикПослеЗавершенияЗагрузки);
	
	Если Версия836ИлиВыше Тогда
		ОбработчикПоискаКлиентскихПлагинов = Вычислить(""Новый ОписаниеОповещения(""""ОбработчикПоискаКлиентскихПлагинов"""", ЭтаФорма, ПараметрыОповещения)"");
		Выполнить(""НачатьПоискФайлов(ОбработчикПоискаКлиентскихПлагинов, КаталогПлагинов, """"*.epf"""", Ложь)"");
	Иначе
		МассивФайлов = НайтиФайлы(КаталогПлагинов, ""*.epf"", Ложь);
		ОбработчикПоискаКлиентскихПлагинов(МассивФайлов, ПараметрыОповещения);
	КонецЕсли;
	
	
КонецПроцедуры

// Убрал, загрузка плагинов должна происходить по другому чуть.
//&НаКлиенте
//Процедура ПодключитьНайденныеКлиентскиеПлагиныНаСервере(Знач ЗагруженныеФайлы, Знач ИдентификаторыПлагинов)
//
//	Перем ЗагруженныйФайл, ИмяПлагина, ОписаниеПлагина, ОписанияПлагинов;
//
//	ОписанияПлагинов = ПодключитьПлагиныНаСервере(ЗагруженныеФайлы);
//
//	Для Каждого ЗагруженныйФайл Из ЗагруженныеФайлы Цикл
//		Объект.ПлагиныЗагружены = Истина;
//
//		ИмяПлагина = ИдентификаторыПлагинов[ЗагруженныйФайл.Имя];
//
//		ОписаниеПлагина = ОписанияПлагинов[ЗагруженныйФайл.Имя];
//		Объект.Плагины.Вставить(ОписаниеПлагина.Идентификатор, ИмяПлагина);
//		КэшФормПлагинов.Вставить(ОписаниеПлагина.Идентификатор, Истина);
//
//	КонецЦикла;
//
//	ЗагрузкаПлагиновЗавершение();

//КонецПроцедуры

&НаСервере
Функция ПодключитьПлагиныНаСервере(Знач ЗагружаемыеФайлы, Знач ПодключенныеРанее)
	
	ОписанияПлагинов = Новый Соответствие;
	ЭтотОбъектНаСервере = Объект();

	Для Каждого ОписаниеФайла Из ЗагружаемыеФайлы Цикл
		
		ФайлОбъект = Новый Файл(ОписаниеФайла.Имя);
		ИмяПлагина = ФайлОбъект.ИмяБезРасширения;
		Если ПодключенныеРанее.Получить(ИмяПлагина) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не Объект.ИспользоватьПрямыеПутиФайлов Тогда
			ПодключитьФайлОбработкиНаСервере(ОписаниеФайла.Хранение, ИмяПлагина,,ЕстьЗащитаОтОпасныхДействий);
		КонецЕсли;
		
		Попытка
			//ОбъектОбработки = ВнешниеОбработки.Создать(ИмяПлагина, Ложь);
			ОбъектОбработки = СоздатьФайлОбработкиНаСервере(ОписаниеФайла.Имя, ИмяПлагина);
			ОбъектОбработки.Инициализация(ЭтотОбъектНаСервере);
			ОписанияПлагинов.Вставить(ОписаниеФайла.Имя, ОбъектОбработки.ОписаниеПлагина(Объект.ТипыПлагинов));
		Исключение
			Ошибка = ""Возникла ошибка при загрузке плагина: "" + ОписаниеФайла.Имя + Символы.ПС + ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			Сообщить(Ошибка);
			Продолжить;
		КонецПопытки;
		
	КонецЦикла;
	
	Возврат Новый ФиксированноеСоответствие(ОписанияПлагинов);
	
КонецФункции // ПодключитьПлагиныНаСервере()

&НаСервере
Функция ПолучитьОписанияПлагиновПоТипуНаСервере(Знач ТипПлагина)
	ОбъектНаСервере = РеквизитФормыВЗначение(""Объект"");
	Результат = ОбъектНаСервере.ПолучитьОписанияПлагиновПоТипу(ТипПлагина);
	
	Возврат Результат;
КонецФункции

&НаСервереБезКонтекста
Процедура ПодключитьФайлОбработкиНаСервере(Знач АдресХранилища, Знач ИдентификаторОбработки, ЭтоОтчет = Ложь, ПараметрЕстьЗащитаОтОпасныхДействий = Ложь)
	ПодключитьВнешнююОбработкуСервер(АдресХранилища, ПараметрЕстьЗащитаОтОпасныхДействий);
КонецПроцедуры

&НаСервере
Функция СоздатьФайлОбработкиНаСервере(Знач ПолныйПутьФайла, ИдентификаторОбработки, ЭтоОтчет = Ложь)
	Если ЭтоОтчет Тогда
		Менеджер = ВнешниеОтчеты;
	Иначе
		Менеджер = ВнешниеОбработки;
	КонецЕсли;
	Если Объект.ИспользоватьПрямыеПутиФайлов Тогда
		ОбъектОбработки = Менеджер.Создать(ПолныйПутьФайла, Ложь);
	Иначе
		ОбъектОбработки = Менеджер.Создать(ИдентификаторОбработки, Ложь);
	КонецЕсли;
	
	//ВнешняяОбработкаОбъект.Файл_с_пробелом_в_наименовании
	ИдентификаторОбработки = СтрЗаменить("""" + ОбъектОбработки, ""ВнешняяОбработкаОбъект."", """");
	ИдентификаторОбработки = СтрЗаменить(ИдентификаторОбработки, ""ExternalDataProcessorObject."", """");
	
	Возврат ОбъектОбработки;
КонецФункции

&НаСервере
Процедура СоздатьФайлОбработки(Знач ПолныйПутьФайла, ИдентификаторОбработки, ЭтоОтчет = Ложь)
	СоздатьФайлОбработкиНаСервере(ПолныйПутьФайла, ИдентификаторОбработки, ЭтоОтчет);
КонецПроцедуры

&НаКлиенте
Функция СинхронныйРежимРазрешен()
	Если мСинхронныйРежимРазрешен = Неопределено Тогда
		мСинхронныйРежимРазрешен = ОпределитьВозможностьСинхронныхВызовов();
	КонецЕсли;
	
	Возврат мСинхронныйРежимРазрешен;
КонецФункции

&НаСервереБезКонтекста
Функция ОпределитьВозможностьСинхронныхВызовов()
	
	Запрет = Метаданные.РежимИспользованияСинхронныхВызововРасширенийИВнешнихКомпонент = Метаданные.СвойстваОбъектов.РежимИспользованияСинхронныхВызововРасширенийИВнешнихКомпонент.НеИспользовать;
	Возврат Не Запрет;
	
КонецФункции

&НаКлиенте
Функция ПолучитьПутьКПлагинам()
	
	Путь = ПолучитьПутьКОбработкеКлиент() + ""/plugins/"";
	Возврат Путь;
КонецФункции

// } Плагины

&НаКлиенте
Функция НайтиТЧВДаннойФорме(ИмяТЧ,НужнаяФорма,ИскатьПоИмени)
	Если НужнаяФорма = Неопределено Тогда
		ТекстСообщения = ""Не смогли найти таблицу <%1> в активном окне."";
		ТекстСообщения = СтрЗаменить(ТекстСообщения,""%1"",ИмяТЧ);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	Если ИмяТЧ = """" Тогда
		ТЧ = НужнаяФорма.НайтиОбъект(Тип(""ТестируемаяТаблицаФормы""));
	Иначе
		Если ИскатьПоИмени Тогда
			ТЧ = НужнаяФорма.НайтиОбъект(Тип(""ТестируемаяТаблицаФормы""), , ИмяТЧ);
		Иначе
			ТЧ = НужнаяФорма.НайтиОбъект(Тип(""ТестируемаяТаблицаФормы""), ИмяТЧ);
		КонецЕсли;
	КонецЕсли;
	
	Если ТЧ = Неопределено Тогда
		//попытаемся найти таблицу с другим именем
		Если ИмяТЧ = ""TypeTree""  Тогда
			ТЧ = НужнаяФорма.НайтиОбъект(Тип(""ТестируемаяТаблицаФормы""),, ""ValueList"");
		ИначеЕсли ИмяТЧ = ""ValueList"" Тогда
			ТЧ = НужнаяФорма.НайтиОбъект(Тип(""ТестируемаяТаблицаФормы""),, ""TypeTree"");
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТЧ;
КонецФункции

&НаКлиенте
Процедура УдалитьИзПолучитьКлиентаТестированияПрофиль(ПодключенныеTestClient,ИмяTestClient)
	Массив = Новый Массив;
	
	Ид = -1;
	Для Каждого Профиль Из ПодключенныеTestClient Цикл
		Ид = Ид + 1;
		Если Профиль.Имя = ИмяTestClient Тогда
			Массив.Добавить(Ид);
		КонецЕсли;
	КонецЦикла;
	
	Для Ккк = 0 По Массив.Количество() - 1 Цикл
		ИдПрофиля = Массив[Массив.Количество() - 1 - Ккк];
		ПодключенныеTestClient.Удалить(ИдПрофиля);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СделатьПереводСгенерированногоТекстаGherkinСервер(ДанныеПеревода)
	ДвДанныеvbFeatureReader = ДанныеПеревода.ДвДанныеvbFeatureReader;
	ВременноеИмяФайла = Неопределено;
	
	FeatureReader = СоздатьFeatureReader(Объект.КаталогИнструментов, ДвДанныеvbFeatureReader, ВременноеИмяФайла);
	
	FeatureReader.СделатьПереводТекстаGherkin(ДанныеПеревода);
	ДанныеПеревода.Вставить(""ТаблицаПеревода"",ЗначениеВСтрокуВнутр(ДанныеПеревода.ТаблицаПеревода));
КонецПроцедуры

&НаКлиенте
Функция ПолучитьФайлыПеревода()
	Соответствие = Новый Соответствие;
	Соответствие.Вставить(""en"",Новый ДвоичныеДанные(Объект.КаталогИнструментов + ""/locales/gherkin/en.mxl""));
	Соответствие.Вставить(""ro"",Новый ДвоичныеДанные(Объект.КаталогИнструментов + ""/locales/gherkin/ro.mxl""));
	Соответствие.Вставить(""de"",Новый ДвоичныеДанные(Объект.КаталогИнструментов + ""/locales/gherkin/de.mxl""));
	Соответствие.Вставить(""lv"",Новый ДвоичныеДанные(Объект.КаталогИнструментов + ""/locales/gherkin/lv.mxl""));
	Соответствие.Вставить(""it"",Новый ДвоичныеДанные(Объект.КаталогИнструментов + ""/locales/gherkin/it.mxl""));
	Соответствие.Вставить(""pl"",Новый ДвоичныеДанные(Объект.КаталогИнструментов + ""/locales/gherkin/pl.mxl""));
	Соответствие.Вставить(""vi"",Новый ДвоичныеДанные(Объект.КаталогИнструментов + ""/locales/gherkin/vi.mxl""));
	
	
	
	Возврат Соответствие;
КонецФункции

&НаКлиенте
Процедура СделатьПереводСгенерированногоТекстаGherkin()
	Если Объект.ЯзыкГенератораGherkin = ""ru"" Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.ЯзыкГенератораGherkin) Тогда
		Возврат;
	КонецЕсли;
	
	Перевод = ПеревестиТекст(Объект.СгенерированныйСценарий);
	
	Объект.СгенерированныйСценарий = Перевод;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция УниверсальноеПолноеИмяФайла(Знач ПолноеИмяФайлаИлиФайл, ВНРегистр = Ложь)
	ПолноеИмяФайла = ПолноеИмяФайлаИлиФайл;
	Если ТипЗнч(ПолноеИмяФайлаИлиФайл ) = Тип(""Файл"") Тогда
		ПолноеИмяФайла = ПолноеИмяФайлаИлиФайл.ПолноеИмя;
	КонецЕсли;
	
	УниверсальноеПолноеИмя = ПолноеИмяФайла;
	Если Лев(УниверсальноеПолноеИмя, 2) <> ""\\"" Тогда
		УниверсальноеПолноеИмя = СтрЗаменить(УниверсальноеПолноеИмя, ""\"", ""/"");
	КонецЕсли;
	Если ВНРегистр Тогда
		УниверсальноеПолноеИмя = НРег(УниверсальноеПолноеИмя);
	КонецЕсли;
	
	Возврат УниверсальноеПолноеИмя;
КонецФункции

// TODO Дубль кода в методах ""УниверсальноеПолноеИмяФайлаШаговФичи"" из УФ bddRunner, ОФ bddRunner и модуля объекта из vbFeatureReader
&НаКлиентеНаСервереБезКонтекста
Функция УниверсальноеПолноеИмяФайлаШаговФичи(Знач ПутьФичи, Знач ИмяФичиБезРасширения, ЭтоLinux = Ложь) 
	
	РазделительПути = ?(ЭтоLinux, ""/"", ""\"");
	
	Результат = ПутьФичи + ""step_definitions"" + РазделительПути + УбратьСпецсимволыИзИмениОбработки(ИмяФичиБезРасширения) + "".epf"";
	
	Возврат Результат;
	
КонецФункции

// TODO Дубль кода в методах ""УниверсальноеПолноеИмяФайлаШаговФичи_Устаревший"" из УФ bddRunner, ОФ bddRunner и модуля объекта из vbFeatureReader
&НаКлиентеНаСервереБезКонтекста
Функция УниверсальноеПолноеИмяФайлаШаговФичи_Устаревший(Знач ПутьФичи, Знач ИмяФичиБезРасширения, ЭтоLinux = Ложь) 
	РазделительПути = ?(ЭтоLinux, ""/"", ""\"");
	Результат = ПутьФичи + ""step_definitions"" + РазделительПути + ИмяФичиБезРасширения + "".epf"";
	
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ПроверитьФлагОстановкаПриВозникновенииОшибки()
	Если Объект.ОстановкаПриВозникновенииОшибки Тогда
		//TODO возможно, есть проблема с остановкой при возникновении ошибки на последнем сценарии, т.к. есть расхождение с ВсеСценарииВыполнены()
		Если МассивСценариевДляВыполнения.Количество() - 1 > ТекИД_СценарияВМассиве Тогда
			СделатьСообщение(""Установлен флаг """"Остановка при возникновении ошибки"""". Выполнение следующих сценариев отменено."");
			ПрекратитьВыполнениеВсехСценариев = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьТекстОшибки(ТекстОшибки,ПроизвольныеЗначения)
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить(""КаталогИнструментов"",Объект.КаталогИнструментов);
	ПараметрыФормы.Вставить(""ТекстОшибки"",ТекстОшибки);
	ПараметрыФормы.Вставить(""ДанныеОшибки"",ПроизвольныеЗначения);
	ОткрытьФорму(""ВнешняяОбработка.bddRunner.Форма.ТекстОшибки"", ПараметрыФормы,ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Функция ПолучитьЭлементФормыИзКешЕслиЭтоВозможно(ИмяРеквизита)
	Если Не ОбъектКонтекст.Свойство(""АктивнаяТаблицаTestClient"") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Если ИмяРеквизита = ОбъектКонтекст.АктивнаяТаблицаTestClient.ИмяТаблицы Тогда
		Возврат ОбъектКонтекст.АктивнаяТаблицаTestClient.Значение;
	КонецЕсли;
	
	Возврат Неопределено;
КонецФункции

&НаСервере
Процедура СерверныеВызовыПриОткрытииФормы(ДопПараметры)
	ЗаполнитьКонтекстноеМеню();
	ЗаполнитьКаталогИнструментовЕслиОнПустой();
	
	ОбъектСервер = РеквизитФормыВЗначение(""Объект"");
	МакетПереводСообщений = ОбъектСервер.ПолучитьМакет(""ПереводСообщений"");
	
	ДопПараметры.Вставить(""МакетПереводСообщений"",МакетПереводСообщений);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьЭлементовСвязанныхСПереводомТекста()
	Элементы.ПеревестиТекстНаДругойЯзык.Видимость = НЕ (Объект.ЯзыкГенератораGherkin = ""ru"");
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВидимостьЭлементовПослеЗагрузкиНастроек()
	ОбновитьВидимостьЭлементовСвязанныхСПереводомТекста();
КонецПроцедуры

&НаКлиенте
Функция ТабДокВМассив(ТабДок)
	Массив = Новый Массив;
	
	Для Ккк = 1 По ТабДок.ВысотаТаблицы Цикл
		СтрокаТабДока = Новый Массив;
		
		Для Ррр = 1 По ТабДок.ШиринаТаблицы Цикл
			СтрокаТабДока.Добавить(ТабДок.Область(Ккк,Ррр,Ккк,Ррр).Текст);
		КонецЦикла;
		
		Массив.Добавить(СтрокаТабДока);
	КонецЦикла;
	
	Возврат Массив;
КонецФункции

&НаКлиенте
Функция МассивВТабДок(Массив)
	ТабДок = Новый ТабличныйДокумент;
	СчетчикСтрок = 0;
	Для Каждого СтрокаТабДока Из Массив Цикл
		СчетчикСтрок = СчетчикСтрок + 1;
		
		СчетчикКолонок = 0;
		Для Каждого ЗначениеВСтроке Из СтрокаТабДока Цикл
			СчетчикКолонок = СчетчикКолонок + 1;
			
			ТабДок.Область(СчетчикСтрок,СчетчикКолонок,СчетчикСтрок,СчетчикКолонок).Текст = ЗначениеВСтроке;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ТабДок;
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьОбластиСнизуИСправаИзТабличногоДокумента(ТабДок,НовоеКоличествоСтрок,НовоеКоличествоКолонок)
	Если ТабДок.ВысотаТаблицы > НовоеКоличествоСтрок Тогда
		ОбластьСтроки = ТабДок.Область(НовоеКоличествоСтрок+1,,ТабДок.ВысотаТаблицы,);
		ТабДок.УдалитьОбласть(ОбластьСтроки,ТипСмещенияТабличногоДокумента.ПоВертикали);
	КонецЕсли;
	
	Если ТабДок.ШиринаТаблицы > НовоеКоличествоКолонок Тогда
		ОбластьКолонки = ТабДок.Область(,НовоеКоличествоКолонок+1,,ТабДок.ШиринаТаблицы);
		ТабДок.УдалитьОбласть(ОбластьКолонки,ТипСмещенияТабличногоДокумента.ПоГоризонтали);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ОписаниеВложенногоШага(Стр)
	
	РезультатПрохожденияШага = Новый Структура;
	РезультатПрохожденияШага.Вставить(""Имя"", Стр);
	РезультатПрохожденияШага.Вставить(""ВремяНачала"", ТекущаяУниверсальнаяДатаВМиллисекундах());
	РезультатПрохожденияШага.Вставить(""Статус"", ""Failed"");
	РезультатПрохожденияШага.Вставить(""ВремяОкончания"", ТекущаяУниверсальнаяДатаВМиллисекундах());
	РезультатПрохожденияШага.Вставить(""НомерСтрокиВФиче"", 0);
	РезультатПрохожденияШага.Вставить(""ИДСтроки"", 0);
	РезультатПрохожденияШага.Вставить(""ЭтоШагКонтекста"", 0);
	
	Если Объект.ИдетВыполнениеСценариев Тогда
		
		ТекИД_ВыполненногоШагаВМассиве = ТекИД_ШагаВМассиве;
		
		Шаги = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].Шаги;
		
		ТекРодителя = Шаги[ТекИД_ШагаВМассиве];
		
		ИДСтрокиШага                       = ТекРодителя.СтрокаШага;
		ИДСтрокиСценария                   = МассивСценариевДляВыполнения[ТекИД_СценарияВМассиве].СтрокаДерева;
		РезультатПрохожденияТестовСценария = ПолучитьРезультатПрохожденияТестовСценария(ИДСтрокиСценария);
		РезультатПрохожденияТестовШагов    = РезультатПрохожденияТестовСценария.РезультатПрохожденияТестовШагов;
		
		СтрокаСценария = ПолучитьСтрокуСценарияИзДанныхФормы(ИДСтрокиСценария);
		СтрокаШага     = ПолучитьСтрокуШагаИзДанныхФормы(ИДСтрокиШага);
		
		РезультатПрохожденияШага.Вставить(""НомерСтрокиВФиче"", СтрокаШага.НомерСтрокиВФиче);
		РезультатПрохожденияШага.Вставить(""ИДСтроки"", ИДСтрокиШага);
		РезультатПрохожденияШага.Вставить(""ЭтоШагКонтекста"", ТекРодителя.ЭтоШагКонтекста);
		
		РезультатТекущегоШага = РезультатПрохожденияТестовШагов.Получить(РезультатПрохожденияТестовШагов.Вграница());
		Если НЕ РезультатТекущегоШага.Свойство(""ВложенныеШаги"") Тогда
			РезультатТекущегоШага.Вставить(""ВложенныеШаги"", Новый Массив);
		КонецЕсли;
		
		РезультатТекущегоШага.ВложенныеШаги.Добавить(РезультатПрохожденияШага);
	КонецЕсли;
	
	Возврат РезультатПрохожденияШага;
	
КонецФункции

&НаСервере
Процедура ВыполнитьКодНаСервереНаСервере()
	// Вставить содержимое обработчика.
	Выполнить(Объект.СгенерированныйСценарийКод);
	
КонецПроцедуры


&НаКлиенте
Функция КлиентИСерверРасположеныНаОднойМашине()
	
	Если ИнформационнаяБазаФайловая() Тогда
		Возврат Истина;	
	Иначе
		
		ИмяКомпьютераНаКлиенте = ИмяКомпьютера();
		ИмяКомпьютераНаСервере = ИмяКомпьютераСервер();
		
		Если НРег(ИмяКомпьютераНаКлиенте) = НРег(ИмяКомпьютераНаСервере) Тогда
			Возврат Истина;
		КонецЕсли;
		Если НРег(ИмяКомпьютераНаСервере) = ""localhost"" Тогда
			Возврат Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаСервереБезКонтекста
Функция ИмяКомпьютераСервер()
	
	Возврат ИмяКомпьютера();
	
КонецФункции

&НаКлиенте
Функция ИнформационнаяБазаФайловая(Знач СтрокаСоединенияИнформационнойБазы = """") Экспорт
	Если ПустаяСтрока(СтрокаСоединенияИнформационнойБазы) Тогда
		СтрокаСоединенияИнформационнойБазы =  СтрокаСоединенияИнформационнойБазы();
	КонецЕсли;
	Возврат Найти(Врег(СтрокаСоединенияИнформационнойБазы), ""FILE="") = 1;      
КонецФункции

#КонецОбласти //СлужебныеПроцедурыИФункции

#Область УправляющиеВоздействияПользователя

// { Управляющие воздействия пользователя
&НаКлиенте
Процедура ГенераторМакетовДанных(Команда)
	ОткрытьИнструмент(""СериализаторMXL"", ПолучитьПутьКПлагинам());
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьГУИД(Команда)
	ОткрытьИнструмент(""xddGuidShow"");
КонецПроцедуры

&НаКлиенте
Процедура КонвертерТестов(Команда)
	ОткрытьИнструмент(""xddTestsConvertIntoRebornFormat"");
КонецПроцедуры

&НаКлиенте
Процедура ПреобразоватьЖурналДействийПользователяВТест(Команда)
	ОткрытьИнструмент(""UILogToScript"", ПолучитьПутьКПлагинам() + ""..\vendor\1C"");
КонецПроцедуры

&НаКлиенте
Процедура ВнешнийИнструментБраузерТестов_xddTestRunner(Команда)
	ОткрытьИнструмент(""xddTestRunner"", ПолучитьПутьКОбработкеКлиент());
КонецПроцедуры

// } Управляющие воздействия пользователя

// { Внешние интерфейсные инструменты
&НаКлиенте
Процедура ОткрытьИнструмент(Знач ИмяИнструмента, Знач ПутьИнструмента = """", Знач ИмяФормы = ""Форма"")
	Перем АдресХранилища;
	
	// Для встроенного в состав конфигурации браузера тестов
	// инструменты находятся также в составке конфигурации
	Если Объект.ЭтоВстроеннаяОбработка Тогда
		// Преобразование имени инструмента к имени обработки
		Если ИмяИнструмента = ""UILogToScript"" Тогда
			ИмяИнструмента = ""ПреобразованиеЖурналаДействийПользователя"";
		КонецЕсли;
		//ИмяИнструмента = ДополнитьИдентификаторПрефиксомПодсистемы(ИмяИнструмента, Объект.ИспользуемыйПрефиксПодсистемы);
		ФормаИнструмента = ПолучитьФорму(""Обработка."" + ИмяИнструмента + ""."" + ИмяФормы);
		ФормаИнструмента.Открыть();
		ФормаИнструмента = Неопределено;
		
	Иначе
		Если Не ПустаяСтрока(ПутьИнструмента) Тогда
			ПутьКВнешнимИнструментам = ПутьИнструмента + ""\"";
		Иначе
			ПутьКВнешнимИнструментам = ПолучитьПутьКВнешнимИнструментам();
		КонецЕсли;
		ПутьИнструмента = ПутьКВнешнимИнструментам + ИмяИнструмента + "".epf"";
		ФайлИнструмента = Новый Файл(ПутьИнструмента);
		//Если Не ФайлИнструмента.Существует() Тогда
		Если Не ФайлСуществуетКомандаСистемы(ФайлИнструмента.ПолноеИмя) Тогда
			Сообщить(""Инструмент <"" + ИмяИнструмента + ""> не найден в каталоге <"" + ФайлИнструмента.Путь + "">"");
			Возврат;
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения(""ОткрытьИнструментЗавершение"", ЭтаФорма, Новый Структура(""ИмяИнструмента, ИмяФормыИнструмента"", ИмяИнструмента, ИмяФормы));
		НачатьПомещениеФайла(Оповещение, АдресХранилища, ФайлИнструмента.ПолноеИмя , Ложь, ЭтаФорма.УникальныйИдентификатор);
		
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИнструментЗавершение(Результат, Адрес, ВыбранноеИмяФайла, ДополнительныеПараметры) Экспорт
	
	ИмяИнструмента = ДополнительныеПараметры.ИмяИнструмента;
	ИмяФормыИнструмента = ДополнительныеПараметры.ИмяФормыИнструмента;
	
	ПодключитьФайлОбработкиНаСервере(Адрес, ИмяИнструмента);
	
	ФормаИнструмента = ПолучитьФорму(""ВнешняяОбработка."" + ИмяИнструмента + ""."" + ИмяФормыИнструмента);
	Если ФормаИнструмента = Неопределено Тогда
		Сообщить(""Инструмент <"" + ИмяИнструмента + "">: не удалось получить основную форму!"");
		Возврат;
	КонецЕсли;
	
	ФормаИнструмента.Открыть();
	ФормаИнструмента = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Функция ПолучитьПутьКВнешнимИнструментам()
	Путь = ПолучитьПутьКОбработкеКлиент() + ""/tools/epf/utils/"";
	Возврат Путь;
	//ФайлЯдра = Новый Файл(ЭтаФорма.ИспользуемоеИмяФайла);
	//Результат = ФайлЯдра.Путь + ""tools\epf\utils\"";
	
	//Возврат Результат;
КонецФункции

&НаКлиенте
Процедура СоздатьОткрытьОтчетAllure(Команда)
	
	СоздатьОткрытьОтчетAllureНачало();
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьОткрытьОтчетAllureНачало()
	
	
	Если Не ЗначениеЗаполнено(Объект.КаталогOutputAllure) Тогда
		
		Сообщить(""Заполните каталог исходников отчета Allure"");
		Возврат;		
	КонецЕсли; 
	
	Если Не ЭтоLinux Тогда
		КомандаГенерации = СтрШаблон(""cmd /c call allure generate --clean %1 && call allure open"", 
		Объект.КаталогOutputAllure);
		ОписаниеОповещения = Новый ОписаниеОповещения(""СоздатьОткрытьОтчетAllureПродолжение"", ЭтаФорма);
		НачатьЗапускПриложения(ОписаниеОповещения,КомандаГенерации, Объект.КаталогOutputAllure, Ложь);
	Иначе
		Сообщить(СтрШаблон(""Автопоказа Allure в linux не возможен.
		|Используйте командную строку для ручного запуска 
		|sh allure generate --clean %1 && allure open"", Объект.КаталогOutputAllure));
	КонецЕсли;
	
КонецПроцедуры

// <Описание процедуры>
//
// Параметры:
//  <Параметр1>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//  <Параметр2>  - <Тип.Вид> - <описание параметра>
//                 <продолжение описания параметра>
//
&НаКлиенте                                                                     
Процедура СоздатьОткрытьОтчетAllureПродолжение(КодВозврата, ДополнительныеПараметры) Экспорт
	// пустой метод для оповещения до 8.3.12
КонецПроцедуры // ОписаниеОповещения()

// } Внешние интерфейсные инструменты

#КонецОбласти //Управляющие воздействия пользователя

#Область ИнициализацияМодуля

ТаблицаОбработокДляОтладки = Новый Соответствие;

ВыполнятьСценарииАсинхронно = Истина;

ШагСтрокДляМодуля         = 10000;
ВсёЕщёИдётВыполнениеШагов = 0;

МассивСостоянияКонтекстовДоВыполненияШага = Новый Массив;

ТаблицаУжеСуществующихСценариев = Новый Массив;
Брейкпоинты                     = Новый Массив;

МассивВерсийFeatureИмяФайла = Новый Массив;
МассивВерсийFeatureВерсия   = Новый Массив;

МассивВерсийEPFИмяФайла = Новый Массив;
МассивВерсийEPFВерсия   = Новый Массив;

ТаблицаКонтекстовОбработок = Новый Массив;
МассивИменКонтекстовОбработок = Новый Массив;
НедавноЗагруженныеФичи = Новый Массив;

ЭтоLinux = Ложь;

ПрекратитьВыполнениШаговТакКакЗакончилсяСценарий = Ложь;
ИнтервалВыполненияШагаПриЗаписиВидео             = 4;
БылаОшибкаСкриптовСборкиВидео                    = Ложь;
СкриншотСделанВСценарии                          = Ложь;
ЭтоЗапускВРежимеКоманднойСтроки                  = Ложь;
ЭтоЗапускВРежимеБезЗагрукиНастроек               = Ложь;
Версия8311ИлиВыше                                = Ложь;
Версия8312ИлиВыше                                = Ложь;
Версия8313ИлиВыше                                = Ложь;

МассивTTS = Неопределено;

ИмяСценарияКоторыйНадоВыполнитьПослеПереазгрузки             = """";
СтрокаСценарияКоторыйНадоВыполнитьПослеПереазгрузкиЭтоПример = Ложь;

ПредставлениеВертЧертыВТабДок = ""__&ВертЧерта__"";

МаксСчетчикШаговБезТаймера = 100;
НадоПерейтиКСтрокеДерева = -1;
ВозниклаОшибкаПодключенияTestClient = Ложь;
ВозниклаОшибкаВШагеКонтекста        = Ложь;

КешДанныеПеревода = Новый Структура;
КешДанныеПеревода.Вставить(""ТаблицаПеревода"",Неопределено);
КешДанныеПеревода.Вставить(""Язык"",Неопределено);

ГлобальныеЗначенияТаблиц = Новый Структура;

ПризнакРучногоВыполненияШага = Ложь;

#КонецОбласти
",
{4,27,
{9,
{1},0,"Объект",
{1,0},
{"Pattern",
{"#",b5f066dc-d960-4313-a67c-f5c235cae456}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},1,0,0,0,
{0,0},
{0,0}
},
{9,
{8},0,"ЭтоЗапускИзКоманднойСтроки",
{1,1,
{"ru","Это запуск из командной строки"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{9},0,"ТаблицаИзвестныхStepDefinition",
{1,1,
{"ru","Таблица известных step definition"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,12,
{5,1,0,"ИмяФайла",
{1,1,
{"ru","Имя файла"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"Id",
{1,1,
{"ru","Id"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"СтрокаРеальнойПроцедуры",
{1,1,
{"ru","Строка реальной процедуры"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"Параметры",
{1,1,
{"ru","Параметры"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"СтрокаДляПоиска",
{1,1,
{"ru","Строка для поиска"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"ПредставлениеТеста",
{1,1,
{"ru","Представление теста"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"Транзакция",
{1,1,
{"ru","Транзакция"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,8,0,"ОписаниеШага",
{1,1,
{"ru","Описание шага"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,9,0,"ТипШага",
{1,1,
{"ru","Тип шага"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,10,0,"ВерсияФайла",
{1,1,
{"ru","Версия файла"}
},
{"Pattern",
{"D"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,11,0,"СтрокаОбрабатывалась",
{1,1,
{"ru","Строка обрабатывалась"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,12,0,"ТипШагаВДереве",
{1,1,
{"ru","Тип шага в дереве"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{2},0,"ЕстьПоддержкаНемодальныхФорм",
{1,1,
{"ru","Есть поддержка немодальных форм"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{3},0,"СтатусыРезультатаТестирования",
{1,1,
{"ru","Статусы результата тестирования"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{10},0,"ЕстьПоддержкаАсинхронныхВызовов",
{1,1,
{"ru","Есть поддержка асинхронных вызовов"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{18},0,"ДанныеКлиентовТестирования",
{1,1,
{"ru","Данные клиентов тестирования"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,9,
{5,2,0,"Имя",
{1,20,
{"ru","Имя"},
{"en","Name"},
{"am","ስም"},
{"az","Adı"},
{"bg","Име"},
{"et","Nimi"},
{"fr","Le nom de"},
{"ka","დასახელება"},
{"de","Name"},
{"hu","Név"},
{"it","Il nome"},
{"lv","Nosaukums"},
{"lt","Pavadinimas"},
{"mn","Нэр"},
{"pl","Nazwa"},
{"ro","Numele"},
{"sl","Ime"},
{"es","El nombre de"},
{"sv","Namn"},
{"tr","Adı"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ПутьКИнфобазе",
{1,20,
{"ru","Путь к инфобазе"},
{"en","Base path"},
{"am","መንገዱ ጋር infobase"},
{"az","Yol инфобазе"},
{"bg","Пътят към инфобазе"},
{"et","Tee инфобазе"},
{"fr","Le chemin d'accès à инфобазе"},
{"ka","გზა infobase"},
{"de","Der Weg zum инфобазе"},
{"hu","Az út infobase"},
{"it","Percorso инфобазе"},
{"lv","Ceļš uz инфобазе"},
{"lt","Kelias į инфобазе"},
{"mn","Зам infobase"},
{"pl","Droga do инфобазе"},
{"ro","Calea инфобазе"},
{"sl","Pot do infobase"},
{"es","La ruta de acceso a инфобазе"},
{"sv","Vägen till infobase"},
{"tr","Yol инфобазе"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"ПортЗапускаТестКлиента",
{1,20,
{"ru","Порт запуска"},
{"en","Port"},
{"am","ቅድሚያ የታዘዘ"},
{"az","Port başlamaq"},
{"bg","Пристанището на стартиране"},
{"et","Sadama kaater"},
{"fr","Le port de lancement"},
{"ka","პორტი აწარმოებს"},
{"de","Port starten"},
{"hu","Port futás"},
{"it","Il porto di avvio"},
{"lv","Portu palaist"},
{"lt","Port paleisti"},
{"mn","Порт ажиллуулах"},
{"pl","Port uruchomienia"},
{"ro","Portul de pornire"},
{"sl","Vrata za zagon"},
{"es","El puerto de inicio"},
{"sv","Port kör"},
{"tr","Port başlangıç"}
},
{"Pattern",
{"N",10,0,1}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"Подключен",
{1,1,
{"ru","Подключен"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"ДопПараметры",
{1,20,
{"ru","Доп.параметры"},
{"en","Parameters"},
{"am","DOP.ቅንብሮችን"},
{"az","Əlavələr.parametrləri"},
{"bg","Неучастие.опции"},
{"et","Lub.parameetrid"},
{"fr","Dop.paramètres"},
{"ka","DOP.პარამეტრები"},
{"de","Zul.Optionen"},
{"hu","DOP.beállítások"},
{"it","Info integrativa.le impostazioni"},
{"lv","Papildus gulta.opcijas"},
{"lt","S atramos ilgis mm leist.parametrai"},
{"mn","DOP.тохиргоо"},
{"pl","Ust.parametry"},
{"ro","Adm.setări"},
{"sl","DOP.nastavitve"},
{"es","Adm.la configuración de"},
{"sv","DOP.inställningar"},
{"tr","Dop.ayarları"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,1,0,"ТипКлиента",
{1,20,
{"ru","Тип клиента"},
{"en","Client type"},
{"am","ደንበኛ አይነት"},
{"az","Növü müştəri"},
{"bg","Вид клиент"},
{"et","Kliendi liik"},
{"fr","Le type de client"},
{"ka","მომხმარებელს ტიპი"},
{"de","Client-Typ"},
{"hu","Vevő típusa"},
{"it","Tipo di cliente"},
{"lv","Klienta tips"},
{"lt","Kliento tipą"},
{"mn","Харилцагчийн төрөл"},
{"pl","Typ klienta"},
{"ro","Tipul de client"},
{"sl","Vrsto stranke"},
{"es","Tipo de cliente"},
{"sv","Kunden typ"},
{"tr","İstemci türü"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"PID",
{1,20,
{"ru","PID"},
{"en","PID"},
{"am","ነፃ"},
{"az","PID"},
{"bg","Тазова възпалителна болест"},
{"et","PID"},
{"fr","PID"},
{"ka","PID"},
{"de","PID"},
{"hu","PID"},
{"it","PID"},
{"lv","PID"},
{"lt","PID"},
{"mn","PID"},
{"pl","PID"},
{"ro","PID"},
{"sl","PID"},
{"es","PID"},
{"sv","PID"},
{"tr","PID"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,8,0,"ИмяКомпьютера",
{1,20,
{"ru","Имя компьютера"},
{"en","Computer name"},
{"am","ስም ኮምፒውተር"},
{"az","Adı kompüter"},
{"bg","Името на компютъра"},
{"et","Arvuti nimi"},
{"fr","Le nom de l'ordinateur"},
{"ka","სახელი კომპიუტერი"},
{"de","Der name des Computers"},
{"hu","A számítógép neve,"},
{"it","Il nome del computer"},
{"lv","Datora nosaukums"},
{"lt","Kompiuterio pavadinimas"},
{"mn","Нэр компьютер"},
{"pl","Nazwa komputera"},
{"ro","Numele computerului"},
{"sl","Ime računalnika"},
{"es","El nombre del equipo"},
{"sv","Namnet på datorn"},
{"tr","Bilgisayar adı"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,9,0,"Синоним",
{1,2,
{"ru","Синоним"},
{"en","Synonym"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{19},0,"ЕстьЗащитаОтОпасныхДействий",
{1,1,
{"ru","Есть защита от опасных действий"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{20},0,"ИспользуемоеИмяФайла",
{1,1,
{"ru","Используемое имя файла"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{21},0,"ФлагСценарииЗагружены",
{1,2,
{"ru","Сценарии загружены"},
{"en","Scenarios loaded"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{22},0,"ФлагСценарииВыполнены",
{1,2,
{"ru","Сценарии выполнены"},
{"en","Scenarios done"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{23},0,"РеквизитПроизвольныйКод",
{1,1,
{"ru","Реквизит произвольный код"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{24},0,"PIDЭтогоСеанса",
{1,2,
{"ru","PID этого сеанса"},
{"en","PID"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{25},0,"КешStepDefinition",
{1,1,
{"ru","Кеш step definition"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,4,
{5,1,0,"StepDefinition",
{1,1,
{"ru","Step definition"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"СтрокаПараметров",
{1,1,
{"ru","Строка параметров"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"ЗначенияПараметров",
{1,1,
{"ru","Значения параметров"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"ИмяШагаБезКлючевогоСлова",
{1,1,
{"ru","Имя шага без ключевого слова"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{26},0,"КешТаблицGherkin",
{1,1,
{"ru","Кеш таблиц gherkin"}
},
{"Pattern",
{"#",acf6192e-81ca-46ef-93a6-5a6968b78663}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,2,
{5,1,0,"Строка",
{1,1,
{"ru","Строка"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"СписокПараметров",
{1,1,
{"ru","Список параметров"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{0,0},
{0,0}
},
{9,
{27},0,"ТекущийTestclientЭтоWebКлиент",
{1,1,
{"ru","Текущий testclient это web клиент"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{28},0,"ФайлФлагВыполненияСценариев",
{1,1,
{"ru","Файл флаг выполнения сценариев"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{29},0,"ПроисходилЗапускTescClient",
{1,1,
{"ru","Происходил запуск tesc client"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{30},0,"МакетШаблонПеревода",
{1,1,
{"ru","Макет шаблон перевода"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{31},0,"СчитываниеМакетаНачСтр",
{1,1,
{"ru","Считывание макета нач стр"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{32},0,"СчитываниеМакетаНачКол",
{1,1,
{"ru","Считывание макета нач кол"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{33},0,"СчитываниеМакетаКолСтр",
{1,1,
{"ru","Считывание макета кол стр"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{34},0,"СчитываниеМакетаКолКол",
{1,1,
{"ru","Считывание макета кол кол"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{35},0,"ТекущийЗагружаемыйФичаФайл",
{1,1,
{"ru","Текущий загружаемый фича файл"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{36},0,"НадоВыполнитьСценарийСоСтрокиПереданнойИзвне",
{1,1,
{"ru","Надо выполнить сценарий со строки переданной извне"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{37},0,"НомерСтрокиСценарияПереданныйИзвне",
{1,1,
{"ru","Номер строки сценария переданный извне"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},
{9,
{38},0,"СтрокаСтатуса",
{1,1,
{"ru","Строка статуса"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},
{0,0},0,0,0,0,
{0,0},
{0,0}
},1,
{0,
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},27,
{5,1,0,"Имя",
{1,1,
{"ru","Имя"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,2,0,"ПолныйПуть",
{1,1,
{"ru","Полный путь"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,3,0,"Снипет",
{1,1,
{"ru","Снипет"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,4,0,"АдресСнипета",
{1,1,
{"ru","Адрес снипета"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,5,0,"СтрокаРеальнойПроцедуры",
{1,1,
{"ru","Строка реальной процедуры"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,12,0,"ИменованныеПараметры",
{1,1,
{"ru","Именованные параметры"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,15,0,"ЗначенияПараметров",
{1,1,
{"ru","Значения параметров"}
},
{"Pattern",
{"#",4772b3b4-f4a3-49c0-a1a5-8cb5961511a3}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,16,0,"ЭтоЧужойСнипет",
{1,1,
{"ru","Это чужой снипет"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,17,0,"ТипКартинки",
{1,1,
{"ru","Тип картинки"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,19,0,"ИДСтроки",
{1,1,
{"ru","ИДСтроки"}
},
{"Pattern",
{"N",10,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,18,0,"Статус",
{1,1,
{"ru","Статус"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,20,0,"ФичаИмеетСвоюEPF",
{1,1,
{"ru","Фича имеет свою EPF"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,21,0,"ШагСПараметрамиВТаблице",
{1,1,
{"ru","Шаг с параметрами в таблице"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,22,0,"СтрокаПараметровШагаВВидеТаблицы",
{1,1,
{"ru","Строка параметров шага в виде таблицы"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,23,0,"ПараметрыТаблицы",
{1,1,
{"ru","Параметры таблицы"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,24,0,"ИмяШагаБезКлючевогоСлова",
{1,0},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,25,0,"ВыполнятьСценарийСЭтогоШага",
{1,1,
{"ru","Выполнять сценарий с этого шага с сохранением контекстов"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,27,0,"МассивСценариевЗащитаОтЗацикливания",
{1,1,
{"ru","Массив сценариев защита от зацикливания"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,29,0,"МассивТегов",
{1,1,
{"ru","Массив тегов"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,30,0,"НомерСтрокиВФиче",
{1,1,
{"ru","Номер строки в фиче"}
},
{"Pattern",
{"N",7,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,31,0,"Брейкпоинт",
{1,1,
{"ru","Номер строки в фиче"}
},
{"Pattern",
{"B"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,32,0,"ЗначениеОтступа",
{1,0},
{"Pattern",
{"N",7,0,0}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,6,0,"Тип",
{1,1,
{"ru","Тип"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,7,0,"ДопТип",
{1,1,
{"ru","Доп тип"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,8,0,"ТекстОшибки",
{1,1,
{"ru","Текст ошибки"}
},
{"Pattern",
{"S"}
},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,9,0,"ПроизвольныеЗначения",
{1,1,
{"ru","Произвольные значения"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0},
{5,10,0,"ДополнительныеДанные",
{1,1,
{"ru","Дополнительные данные"}
},
{"Pattern"},
{0,
{0,
{"B",1},0}
},
{0,
{0,
{"B",1},0}
},
{0,0},0}
},7,"Объект.ДеревоТестов.Статус","Объект.ДеревоТестов.Статус",
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{18,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},"Объект.ДеревоТестов.СтрокаПараметровШагаВВидеТаблицы","Объект.ДеревоТестов.СтрокаПараметровШагаВВидеТаблицы",
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{22,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},"Объект.ДеревоТестов.ЭтоЧужойСнипет","Объект.ДеревоТестов.ЭтоЧужойСнипет",
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{16,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},"Объект.ДеревоТестов.ВыполнятьСценарийСЭтогоШага","Объект.ДеревоТестов.ВыполнятьСценарийСЭтогоШага",
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{25,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},"ДанныеКлиентовТестирования.Подключен","ДанныеКлиентовТестирования.Подключен",
{2,
{18},
{6}
},
{1,
{18}
},"Объект.ДеревоТестов.АдресСнипета","Объект.ДеревоТестов.АдресСнипета",
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{4,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},"Объект.ДеревоТестов.Снипет","Объект.ДеревоТестов.Снипет",
{3,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615},
{3,5bdad865-f2c5-434b-8041-ba4aad3b6687}
},
{2,
{1},
{0,8b899eb3-1e10-4554-932c-57d42703b615}
},
{#base64:77u/PD94bWwgdmVyc2lvbj0iMS4wIiBlbmNvZGluZz0iVVRGLTgiPz4NCjxTZXR0
aW5ncyB4bWxucz0iaHR0cDovL3Y4LjFjLnJ1LzguMS9kYXRhLWNvbXBvc2l0aW9u
LXN5c3RlbS9zZXR0aW5ncyIgeG1sbnM6ZGNzY29yPSJodHRwOi8vdjguMWMucnUv
OC4xL2RhdGEtY29tcG9zaXRpb24tc3lzdGVtL2NvcmUiIHhtbG5zOnN0eWxlPSJo
dHRwOi8vdjguMWMucnUvOC4xL2RhdGEvdWkvc3R5bGUiIHhtbG5zOnN5cz0iaHR0
cDovL3Y4LjFjLnJ1LzguMS9kYXRhL3VpL2ZvbnRzL3N5c3RlbSIgeG1sbnM6djg9
Imh0dHA6Ly92OC4xYy5ydS84LjEvZGF0YS9jb3JlIiB4bWxuczp2OHVpPSJodHRw
Oi8vdjguMWMucnUvOC4xL2RhdGEvdWkiIHhtbG5zOndlYj0iaHR0cDovL3Y4LjFj
LnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93ZWIiIHhtbG5zOndpbj0iaHR0cDovL3Y4
LjFjLnJ1LzguMS9kYXRhL3VpL2NvbG9ycy93aW5kb3dzIiB4bWxuczp4cz0iaHR0
cDovL3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEiIHhtbG5zOnhzaT0iaHR0cDov
L3d3dy53My5vcmcvMjAwMS9YTUxTY2hlbWEtaW5zdGFuY2UiPg0KCTxjb25kaXRp
b25hbEFwcGVhcmFuY2U+DQoJCTxpdGVtPg0KCQkJPHNlbGVjdGlvbj4NCgkJCQk8
aXRlbT4NCgkJCQkJPGZpZWxkPtCU0LXRgNC10LLQvtCi0LXRgdGC0L7QstCY0LzR
jzwvZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJPC9zZWxlY3Rpb24+DQoJCQk8Zmls
dGVyPg0KCQkJCTxpdGVtIHhzaTp0eXBlPSJGaWx0ZXJJdGVtR3JvdXAiPg0KCQkJ
CQk8Z3JvdXBUeXBlPkFuZEdyb3VwPC9ncm91cFR5cGU+DQoJCQkJCTxpdGVtIHhz
aTp0eXBlPSJGaWx0ZXJJdGVtQ29tcGFyaXNvbiI+DQoJCQkJCQk8bGVmdCB4c2k6
dHlwZT0iZGNzY29yOkZpZWxkIj7QntCx0YrQtdC60YIu0JTQtdGA0LXQstC+0KLQ
tdGB0YLQvtCyLtCh0YLQsNGC0YPRgTwvbGVmdD4NCgkJCQkJCTxjb21wYXJpc29u
VHlwZT5FcXVhbDwvY29tcGFyaXNvblR5cGU+DQoJCQkJCQk8cmlnaHQgeHNpOnR5
cGU9InhzOnN0cmluZyI+UGVuZGluZzwvcmlnaHQ+DQoJCQkJCTwvaXRlbT4NCgkJ
CQk8L2l0ZW0+DQoJCQk8L2ZpbHRlcj4NCgkJCTxhcHBlYXJhbmNlPg0KCQkJCTxk
Y3Njb3I6aXRlbSB4c2k6dHlwZT0iU2V0dGluZ3NQYXJhbWV0ZXJWYWx1ZSI+DQoJ
CQkJCTxkY3Njb3I6cGFyYW1ldGVyPtCm0LLQtdGC0KTQvtC90LA8L2Rjc2Nvcjpw
YXJhbWV0ZXI+DQoJCQkJCTxkY3Njb3I6dmFsdWUgeHNpOnR5cGU9InY4dWk6Q29s
b3IiPiNGRkZCNEE8L2Rjc2Nvcjp2YWx1ZT4NCgkJCQk8L2Rjc2NvcjppdGVtPg0K
CQkJPC9hcHBlYXJhbmNlPg0KCQk8L2l0ZW0+DQoJCTxpdGVtPg0KCQkJPHNlbGVj
dGlvbj4NCgkJCQk8aXRlbT4NCgkJCQkJPGZpZWxkPtCU0LXRgNC10LLQvtCi0LXR
gdGC0L7QstCY0LzRjzwvZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJPC9zZWxlY3Rp
b24+DQoJCQk8ZmlsdGVyPg0KCQkJCTxpdGVtIHhzaTp0eXBlPSJGaWx0ZXJJdGVt
R3JvdXAiPg0KCQkJCQk8Z3JvdXBUeXBlPkFuZEdyb3VwPC9ncm91cFR5cGU+DQoJ
CQkJCTxpdGVtIHhzaTp0eXBlPSJGaWx0ZXJJdGVtQ29tcGFyaXNvbiI+DQoJCQkJ
CQk8bGVmdCB4c2k6dHlwZT0iZGNzY29yOkZpZWxkIj7QntCx0YrQtdC60YIu0JTQ
tdGA0LXQstC+0KLQtdGB0YLQvtCyLtCh0YLQsNGC0YPRgTwvbGVmdD4NCgkJCQkJ
CTxjb21wYXJpc29uVHlwZT5FcXVhbDwvY29tcGFyaXNvblR5cGU+DQoJCQkJCQk8
cmlnaHQgeHNpOnR5cGU9InhzOnN0cmluZyI+RmFpbGVkPC9yaWdodD4NCgkJCQkJ
PC9pdGVtPg0KCQkJCTwvaXRlbT4NCgkJCTwvZmlsdGVyPg0KCQkJPGFwcGVhcmFu
Y2U+DQoJCQkJPGRjc2NvcjppdGVtIHhzaTp0eXBlPSJTZXR0aW5nc1BhcmFtZXRl
clZhbHVlIj4NCgkJCQkJPGRjc2NvcjpwYXJhbWV0ZXI+0KbQstC10YLQpNC+0L3Q
sDwvZGNzY29yOnBhcmFtZXRlcj4NCgkJCQkJPGRjc2Nvcjp2YWx1ZSB4c2k6dHlw
ZT0idjh1aTpDb2xvciI+I0ZGOTE5MTwvZGNzY29yOnZhbHVlPg0KCQkJCTwvZGNz
Y29yOml0ZW0+DQoJCQk8L2FwcGVhcmFuY2U+DQoJCTwvaXRlbT4NCgkJPGl0ZW0+
DQoJCQk8c2VsZWN0aW9uPg0KCQkJCTxpdGVtPg0KCQkJCQk8ZmllbGQ+0JTQtdGA
0LXQstC+0KLQtdGB0YLQvtCy0JjQvNGPPC9maWVsZD4NCgkJCQk8L2l0ZW0+DQoJ
CQk8L3NlbGVjdGlvbj4NCgkJCTxmaWx0ZXI+DQoJCQkJPGl0ZW0geHNpOnR5cGU9
IkZpbHRlckl0ZW1Hcm91cCI+DQoJCQkJCTxncm91cFR5cGU+QW5kR3JvdXA8L2dy
b3VwVHlwZT4NCgkJCQkJPGl0ZW0geHNpOnR5cGU9IkZpbHRlckl0ZW1Db21wYXJp
c29uIj4NCgkJCQkJCTxsZWZ0IHhzaTp0eXBlPSJkY3Njb3I6RmllbGQiPtCe0LHR
itC10LrRgi7QlNC10YDQtdCy0L7QotC10YHRgtC+0LIu0KHRgtCw0YLRg9GBPC9s
ZWZ0Pg0KCQkJCQkJPGNvbXBhcmlzb25UeXBlPkVxdWFsPC9jb21wYXJpc29uVHlw
ZT4NCgkJCQkJCTxyaWdodCB4c2k6dHlwZT0ieHM6c3RyaW5nIj5TdWNjZXNzPC9y
aWdodD4NCgkJCQkJPC9pdGVtPg0KCQkJCTwvaXRlbT4NCgkJCTwvZmlsdGVyPg0K
CQkJPGFwcGVhcmFuY2U+DQoJCQkJPGRjc2NvcjppdGVtIHhzaTp0eXBlPSJTZXR0
aW5nc1BhcmFtZXRlclZhbHVlIj4NCgkJCQkJPGRjc2NvcjpwYXJhbWV0ZXI+0KbQ
stC10YLQpNC+0L3QsDwvZGNzY29yOnBhcmFtZXRlcj4NCgkJCQkJPGRjc2Nvcjp2
YWx1ZSB4c2k6dHlwZT0idjh1aTpDb2xvciI+I0Q5RkZEOTwvZGNzY29yOnZhbHVl
Pg0KCQkJCTwvZGNzY29yOml0ZW0+DQoJCQk8L2FwcGVhcmFuY2U+DQoJCTwvaXRl
bT4NCgkJPGl0ZW0+DQoJCQk8c2VsZWN0aW9uPg0KCQkJCTxpdGVtPg0KCQkJCQk8
ZmllbGQ+0JTQtdGA0LXQstC+0KLQtdGB0YLQvtCy0JjQvNGPPC9maWVsZD4NCgkJ
CQk8L2l0ZW0+DQoJCQk8L3NlbGVjdGlvbj4NCgkJCTxmaWx0ZXI+DQoJCQkJPGl0
ZW0geHNpOnR5cGU9IkZpbHRlckl0ZW1Hcm91cCI+DQoJCQkJCTxncm91cFR5cGU+
T3JHcm91cDwvZ3JvdXBUeXBlPg0KCQkJCQk8aXRlbSB4c2k6dHlwZT0iRmlsdGVy
SXRlbUNvbXBhcmlzb24iPg0KCQkJCQkJPGxlZnQgeHNpOnR5cGU9ImRjc2NvcjpG
aWVsZCI+0J7QsdGK0LXQutGCLtCU0LXRgNC10LLQvtCi0LXRgdGC0L7Qsi7QodGC
0YDQvtC60LDQn9Cw0YDQsNC80LXRgtGA0L7QstCo0LDQs9Cw0JLQktC40LTQtdCi
0LDQsdC70LjRhtGLPC9sZWZ0Pg0KCQkJCQkJPGNvbXBhcmlzb25UeXBlPkVxdWFs
PC9jb21wYXJpc29uVHlwZT4NCgkJCQkJCTxyaWdodCB4c2k6dHlwZT0ieHM6Ym9v
bGVhbiI+dHJ1ZTwvcmlnaHQ+DQoJCQkJCTwvaXRlbT4NCgkJCQk8L2l0ZW0+DQoJ
CQk8L2ZpbHRlcj4NCgkJCTxhcHBlYXJhbmNlPg0KCQkJCTxkY3Njb3I6aXRlbSB4
c2k6dHlwZT0iU2V0dGluZ3NQYXJhbWV0ZXJWYWx1ZSI+DQoJCQkJCTxkY3Njb3I6
cGFyYW1ldGVyPtCo0YDQuNGE0YI8L2Rjc2NvcjpwYXJhbWV0ZXI+DQoJCQkJCTxk
Y3Njb3I6dmFsdWUgeHNpOnR5cGU9InY4dWk6Rm9udCIgcmVmPSJzeXM6RGVmYXVs
dEdVSUZvbnQiIGZhY2VOYW1lPSJMdWNpZGEgQ29uc29sZSIgaGVpZ2h0PSIxMCIg
a2luZD0iV2luZG93c0ZvbnQiLz4NCgkJCQk8L2Rjc2NvcjppdGVtPg0KCQkJPC9h
cHBlYXJhbmNlPg0KCQk8L2l0ZW0+DQoJCTxpdGVtPg0KCQkJPHNlbGVjdGlvbj4N
CgkJCQk8aXRlbT4NCgkJCQkJPGZpZWxkPtCU0LXRgNC10LLQvtCi0LXRgdGC0L7Q
stCf0L7Qu9C90YvQudCf0YPRgtGMPC9maWVsZD4NCgkJCQk8L2l0ZW0+DQoJCQkJ
PGl0ZW0+DQoJCQkJCTxmaWVsZD7QlNC10YDQtdCy0L7QotC10YHRgtC+0LLQkNC0
0YDQtdGB0KHQvdC40L/QtdGC0LA8L2ZpZWxkPg0KCQkJCTwvaXRlbT4NCgkJCQk8
aXRlbT4NCgkJCQkJPGZpZWxkPtCU0LXRgNC10LLQvtCi0LXRgdGC0L7QstCh0L3Q
uNC/0LXRgjwvZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJPC9zZWxlY3Rpb24+DQoJ
CQk8ZmlsdGVyPg0KCQkJCTxpdGVtIHhzaTp0eXBlPSJGaWx0ZXJJdGVtQ29tcGFy
aXNvbiI+DQoJCQkJCTxsZWZ0IHhzaTp0eXBlPSJkY3Njb3I6RmllbGQiPtCe0LHR
itC10LrRgi7QlNC10YDQtdCy0L7QotC10YHRgtC+0LIu0K3RgtC+0KfRg9C20L7Q
udCh0L3QuNC/0LXRgjwvbGVmdD4NCgkJCQkJPGNvbXBhcmlzb25UeXBlPkVxdWFs
PC9jb21wYXJpc29uVHlwZT4NCgkJCQkJPHJpZ2h0IHhzaTp0eXBlPSJ4czpib29s
ZWFuIj50cnVlPC9yaWdodD4NCgkJCQk8L2l0ZW0+DQoJCQk8L2ZpbHRlcj4NCgkJ
CTxhcHBlYXJhbmNlPg0KCQkJCTxkY3Njb3I6aXRlbSB4c2k6dHlwZT0iU2V0dGlu
Z3NQYXJhbWV0ZXJWYWx1ZSI+DQoJCQkJCTxkY3Njb3I6cGFyYW1ldGVyPtCm0LLQ
tdGC0KTQvtC90LA8L2Rjc2NvcjpwYXJhbWV0ZXI+DQoJCQkJCTxkY3Njb3I6dmFs
dWUgeHNpOnR5cGU9InY4dWk6Q29sb3IiPiNEOUQ3Q0M8L2Rjc2Nvcjp2YWx1ZT4N
CgkJCQk8L2Rjc2NvcjppdGVtPg0KCQkJPC9hcHBlYXJhbmNlPg0KCQk8L2l0ZW0+
DQoJCTxpdGVtPg0KCQkJPHNlbGVjdGlvbj4NCgkJCQk8aXRlbT4NCgkJCQkJPGZp
ZWxkPtCU0LXRgNC10LLQvtCi0LXRgdGC0L7QstCY0LzRjzwvZmllbGQ+DQoJCQkJ
PC9pdGVtPg0KCQkJPC9zZWxlY3Rpb24+DQoJCQk8ZmlsdGVyPg0KCQkJCTxpdGVt
IHhzaTp0eXBlPSJGaWx0ZXJJdGVtQ29tcGFyaXNvbiI+DQoJCQkJCTxsZWZ0IHhz
aTp0eXBlPSJkY3Njb3I6RmllbGQiPtCe0LHRitC10LrRgi7QlNC10YDQtdCy0L7Q
otC10YHRgtC+0LIu0JLRi9C/0L7Qu9C90Y/RgtGM0KHRhtC10L3QsNGA0LjQudCh
0K3RgtC+0LPQvtCo0LDQs9CwPC9sZWZ0Pg0KCQkJCQk8Y29tcGFyaXNvblR5cGU+
RXF1YWw8L2NvbXBhcmlzb25UeXBlPg0KCQkJCQk8cmlnaHQgeHNpOnR5cGU9Inhz
OmJvb2xlYW4iPnRydWU8L3JpZ2h0Pg0KCQkJCTwvaXRlbT4NCgkJCTwvZmlsdGVy
Pg0KCQkJPGFwcGVhcmFuY2U+DQoJCQkJPGRjc2NvcjppdGVtIHhzaTp0eXBlPSJT
ZXR0aW5nc1BhcmFtZXRlclZhbHVlIj4NCgkJCQkJPGRjc2NvcjpwYXJhbWV0ZXI+
0KbQstC10YLQpNC+0L3QsDwvZGNzY29yOnBhcmFtZXRlcj4NCgkJCQkJPGRjc2Nv
cjp2YWx1ZSB4c2k6dHlwZT0idjh1aTpDb2xvciI+Izk5Q0NGRjwvZGNzY29yOnZh
bHVlPg0KCQkJCTwvZGNzY29yOml0ZW0+DQoJCQk8L2FwcGVhcmFuY2U+DQoJCTwv
aXRlbT4NCgkJPGl0ZW0+DQoJCQk8c2VsZWN0aW9uPg0KCQkJCTxpdGVtPg0KCQkJ
CQk8ZmllbGQ+0JTQsNC90L3Ri9C10JrQu9C40LXQvdGC0L7QstCi0LXRgdGC0LjR
gNC+0LLQsNC90LjRjzwvZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJPC9zZWxlY3Rp
b24+DQoJCQk8ZmlsdGVyPg0KCQkJCTxpdGVtIHhzaTp0eXBlPSJGaWx0ZXJJdGVt
Q29tcGFyaXNvbiI+DQoJCQkJCTxsZWZ0IHhzaTp0eXBlPSJkY3Njb3I6RmllbGQi
PtCU0LDQvdC90YvQtdCa0LvQuNC10L3RgtC+0LLQotC10YHRgtC40YDQvtCy0LDQ
vdC40Y8u0J/QvtC00LrQu9GO0YfQtdC9PC9sZWZ0Pg0KCQkJCQk8Y29tcGFyaXNv
blR5cGU+RXF1YWw8L2NvbXBhcmlzb25UeXBlPg0KCQkJCQk8cmlnaHQgeHNpOnR5
cGU9InhzOmJvb2xlYW4iPnRydWU8L3JpZ2h0Pg0KCQkJCTwvaXRlbT4NCgkJCTwv
ZmlsdGVyPg0KCQkJPGFwcGVhcmFuY2U+DQoJCQkJPGRjc2NvcjppdGVtIHhzaTp0
eXBlPSJTZXR0aW5nc1BhcmFtZXRlclZhbHVlIj4NCgkJCQkJPGRjc2NvcjpwYXJh
bWV0ZXI+0KbQstC10YLQotC10LrRgdGC0LA8L2Rjc2NvcjpwYXJhbWV0ZXI+DQoJ
CQkJCTxkY3Njb3I6dmFsdWUgeHNpOnR5cGU9InY4dWk6Q29sb3IiPiMzMzk5NjY8
L2Rjc2Nvcjp2YWx1ZT4NCgkJCQk8L2Rjc2NvcjppdGVtPg0KCQkJCTxkY3Njb3I6
aXRlbSB4c2k6dHlwZT0iU2V0dGluZ3NQYXJhbWV0ZXJWYWx1ZSI+DQoJCQkJCTxk
Y3Njb3I6cGFyYW1ldGVyPtCo0YDQuNGE0YI8L2Rjc2NvcjpwYXJhbWV0ZXI+DQoJ
CQkJCTxkY3Njb3I6dmFsdWUgeHNpOnR5cGU9InY4dWk6Rm9udCIgcmVmPSJzeXM6
RGVmYXVsdEdVSUZvbnQiIGJvbGQ9InRydWUiIGl0YWxpYz0iZmFsc2UiIHVuZGVy
bGluZT0iZmFsc2UiIHN0cmlrZW91dD0iZmFsc2UiIGtpbmQ9IldpbmRvd3NGb250
Ii8+DQoJCQkJPC9kY3Njb3I6aXRlbT4NCgkJCTwvYXBwZWFyYW5jZT4NCgkJPC9p
dGVtPg0KCQk8aXRlbT4NCgkJCTxzZWxlY3Rpb24+DQoJCQkJPGl0ZW0+DQoJCQkJ
CTxmaWVsZD7QlNC10YDQtdCy0L7QotC10YHRgtC+0LLQmNC80Y88L2ZpZWxkPg0K
CQkJCTwvaXRlbT4NCgkJCQk8aXRlbT4NCgkJCQkJPGZpZWxkPtCU0LXRgNC10LLQ
vtCi0LXRgdGC0L7QstCf0L7Qu9C90YvQudCf0YPRgtGMPC9maWVsZD4NCgkJCQk8
L2l0ZW0+DQoJCQkJPGl0ZW0+DQoJCQkJCTxmaWVsZD7QlNC10YDQtdCy0L7QotC1
0YHRgtC+0LLQodC90LjQv9C10YI8L2ZpZWxkPg0KCQkJCTwvaXRlbT4NCgkJCQk8
aXRlbT4NCgkJCQkJPGZpZWxkPtCU0LXRgNC10LLQvtCi0LXRgdGC0L7QstCQ0LTR
gNC10YHQodC90LjQv9C10YLQsDwvZmllbGQ+DQoJCQkJPC9pdGVtPg0KCQkJCTxp
dGVtPg0KCQkJCQk8ZmllbGQ+0JTQtdGA0LXQstC+0KLQtdGB0YLQvtCy0KHRgtGA
0L7QutCw0KDQtdCw0LvRjNC90L7QudCf0YDQvtGG0LXQtNGD0YDRizwvZmllbGQ+
DQoJCQkJPC9pdGVtPg0KCQkJPC9zZWxlY3Rpb24+DQoJCQk8ZmlsdGVyPg0KCQkJ
CTxpdGVtIHhzaTp0eXBlPSJGaWx0ZXJJdGVtQ29tcGFyaXNvbiI+DQoJCQkJCTxs
ZWZ0IHhzaTp0eXBlPSJkY3Njb3I6RmllbGQiPtCe0LHRitC10LrRgi7QlNC10YDQ
tdCy0L7QotC10YHRgtC+0LIu0JDQtNGA0LXRgdCh0L3QuNC/0LXRgtCwPC9sZWZ0
Pg0KCQkJCQk8Y29tcGFyaXNvblR5cGU+RXF1YWw8L2NvbXBhcmlzb25UeXBlPg0K
CQkJCQk8cmlnaHQgeHNpOnR5cGU9InhzOnN0cmluZyIvPg0KCQkJCTwvaXRlbT4N
CgkJCQk8aXRlbSB4c2k6dHlwZT0iRmlsdGVySXRlbUNvbXBhcmlzb24iPg0KCQkJ
CQk8bGVmdCB4c2k6dHlwZT0iZGNzY29yOkZpZWxkIj7QntCx0YrQtdC60YIu0JTQ
tdGA0LXQstC+0KLQtdGB0YLQvtCyLtCh0L3QuNC/0LXRgjwvbGVmdD4NCgkJCQkJ
PGNvbXBhcmlzb25UeXBlPk5vdEVxdWFsPC9jb21wYXJpc29uVHlwZT4NCgkJCQkJ
PHJpZ2h0IHhzaTp0eXBlPSJ4czpzdHJpbmciLz4NCgkJCQk8L2l0ZW0+DQoJCQk8
L2ZpbHRlcj4NCgkJCTxhcHBlYXJhbmNlPg0KCQkJCTxkY3Njb3I6aXRlbSB4c2k6
dHlwZT0iU2V0dGluZ3NQYXJhbWV0ZXJWYWx1ZSI+DQoJCQkJCTxkY3Njb3I6cGFy
YW1ldGVyPtCm0LLQtdGC0KTQvtC90LA8L2Rjc2NvcjpwYXJhbWV0ZXI+DQoJCQkJ
CTxkY3Njb3I6dmFsdWUgeHNpOnR5cGU9InY4dWk6Q29sb3IiPiNGRkNDMDA8L2Rj
c2Nvcjp2YWx1ZT4NCgkJCQk8L2Rjc2NvcjppdGVtPg0KCQkJPC9hcHBlYXJhbmNl
Pg0KCQk8L2l0ZW0+DQoJPC9jb25kaXRpb25hbEFwcGVhcmFuY2U+DQo8L1NldHRp
bmdzPg==}
},
{0,0},
{0,79,
{8,
{1,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьСценарии",
{1,20,
{"ru","Выполнить сценарии"},
{"en","Run scenarios"},
{"am","ቅድሚያ የሚሰጡዋቸውን"},
{"az","İcra ssenarilər"},
{"bg","Изпълнение на скриптове"},
{"et","Käivita stsenaarium"},
{"fr","Exécuter les scripts"},
{"ka","აწარმოებს სკრიპტები"},
{"de","Ausführen von Skripts"},
{"hu","A scriptek futtatását"},
{"it","Eseguire gli script"},
{"lv","Izpildīt skriptus"},
{"lt","Vykdyti scenarijus"},
{"mn","Ажиллуулах скриптүүд"},
{"pl","Uruchom skrypty"},
{"ro","Executa script-uri"},
{"sl","Dovolite zaganjanje skriptov"},
{"es","Ejecutar secuencias de comandos"},
{"sv","Att köra skript"},
{"tr","Çalıştır komut"}
},
{1,1,
{"ru","Выполнить сценарии"}
},
{0,
{0,
{"B",1},0}
},
{0,116,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВыполнитьСценарииФорма",3,0,0,
{0,0},1,0,1,0,0},
{8,
{2,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Перезагрузить",
{1,1,
{"ru","Перезагрузить"}
},
{1,1,
{"ru","Перезагрузить"}
},
{0,
{0,
{"B",1},0}
},
{0,115,0},
{4,0,
{0},"",-1,-1,1,0,""},"Перезагрузить",3,0,0,
{0,0},1,0,1,0,0},
{8,
{3,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьФичиИзКаталога",
{1,1,
{"ru","Загрузить фичи из каталога"}
},
{1,1,
{"ru","Загрузить фичи из каталога"}
},
{0,
{0,
{"B",1},0}
},
{0,113,16},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьФичиИзКаталога",3,0,0,
{0,0},1,0,1,0,0},
{8,
{4,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьОднуФичу",
{1,1,
{"ru","Загрузить одну фичу"}
},
{1,1,
{"ru","Загрузить одну фичу"}
},
{0,
{0,
{"B",1},0}
},
{0,113,8},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьОднуФичу",3,0,0,
{0,0},1,0,1,0,0},
{8,
{5,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СоздатьШаблоныОбработок",
{1,1,
{"ru","Создать шаблоны обработок"}
},
{1,1,
{"ru","Создать шаблоны обработок"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СоздатьШаблоныОбработокКоманда",3,0,0,
{0,0},1,0,1,0,0},
{8,
{6,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьВыделенныйСценарий",
{1,20,
{"ru","Выполнить данный сценарий с начала"},
{"en","Run selected scenario"},
{"am","ጋር ይገናኛሉ ከመጀመሪያ"},
{"az","Yerinə yetirmək üçün həmin ssenari ilə başladı"},
{"bg","Изпълни този сценарий от началото на"},
{"et","Käivita seda skripti algusest"},
{"fr","Exécuter le script depuis le début"},
{"ka","აწარმოებს სცენარი თავიდანვე"},
{"de","Ausführen dieses Szenario seit Beginn"},
{"hu","Futtatni a szkriptet a kezdet"},
{"it","Eseguire lo script con inizio"},
{"lv","Izpildīt šo skriptu no sākuma"},
{"lt","Atlikti šį scenarijų nuo pradžios"},
{"mn","Ажиллуулах бичиг эхнээс нь"},
{"pl","Uruchom ten skrypt od początku"},
{"ro","Pentru a efectua acest scenariu de la începutul"},
{"sl","Če želite zagnati skript od začetka"},
{"es","Ejecutar esta secuencia de comandos de inicio de la"},
{"sv","För att köra skriptet från början"},
{"tr","Çalıştır bu komut ile başladı"}
},
{1,1,
{"ru","Выполнить выделенный сценарий"}
},
{0,
{0,
{"B",1},0}
},
{0,116,16},
{4,0,
{0},"",-1,-1,1,0,""},"ВыполнитьВыделенныйСценарийФорма",3,0,0,
{0,0},1,0,1,0,0},
{8,
{7,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПерезагрузитьИВыполнить",
{1,1,
{"ru","Перезагрузить и выполнить"}
},
{1,1,
{"ru","Перезагрузить и выполнить"}
},
{0,
{0,
{"B",1},0}
},
{0,117,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПерезагрузитьИВыполнить",3,0,0,
{0,0},1,0,1,0,0},
{8,
{8,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОткрытьФичаФайл",
{1,1,
{"ru","Открыть фича файл"}
},
{1,1,
{"ru","Открыть файл фичи в специальном редакторе"}
},
{0,
{0,
{"B",1},0}
},
{0,115,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОткрытьФичаФайл",3,0,0,
{0,0},1,0,1,0,0},
{8,
{9,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"НачатьЗаписьДействийПользователя",
{1,1,
{"ru","Начать запись действий пользователя"}
},
{1,1,
{"ru","Начать запись действий пользователя"}
},
{0,
{0,
{"B",1},0}
},
{0,82,8},
{4,0,
{0},"",-1,-1,1,0,""},"НачатьЗаписьДействийПользователяКнопка",3,0,0,
{0,0},1,0,1,0,0},
{8,
{10,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗавершитьЗаписьДействийПользователя",
{1,1,
{"ru","Завершить запись действий пользователя"}
},
{1,1,
{"ru","Завершить запись действий пользователя"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗавершитьЗаписьДействийПользователяКнопка",3,0,0,
{0,0},1,0,1,0,0},
{8,
{11,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОткрытьПодключитьTestClient",
{1,1,
{"ru","Подключить TestClient"}
},
{1,1,
{"ru","Подключить TestClient"}
},
{0,
{0,
{"B",1},0}
},
{0,84,8},
{4,0,
{0},"",-1,-1,1,0,""},"ОткрытьПодключитьTestClient",3,0,0,
{0,0},1,0,1,0,0},
{8,
{12,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"УстановитьПометкуВыполнятьСценарийСЭтогоШага",
{1,20,
{"ru","Установить пометку выполнять сценарий с этого шага"},
{"en","Set flag run scenarion from that step"},
{"am","አንድ ይገናኛሉ ጋር ይገናኛሉ ላይ እርምጃ"},
{"az","Yüklemek пометку yerinə ssenari ilə bu addımdan"},
{"bg","Инсталиране на маркиране се изпълнява сценарий с тази стъпка"},
{"et","Määrata märkuse teha skripti seda sammu"},
{"fr","Activer l'indicateur d'exécuter un script à cette étape"},
{"ka","დააყენეთ overlay აწარმოებს სცენარი, ეს ნაბიჯი"},
{"de","Installieren Sie die Markierung Skript ausführen mit diesem Schritt"},
{"hu","Állítsa be a overlay, hogy a parancsfájl futtatása ezzel a lépéssel"},
{"it","Impostare il contrassegno di eseguire lo script con questo passo"},
{"lv","Noteikt atzīmi izpildīt skriptu ar šo soli"},
{"lt","Nustatyti, kaip atlikti scenarijų su šio žingsnio"},
{"mn","Тогтоосон давхцуулах ажиллуулах бичиг нь энэ алхам"},
{"pl","Ustawić znacznik wykonać skrypt z tego kroku"},
{"ro","Setați marcajele executa script-ul cu acest pas"},
{"sl","Nastavite prekrivanje, da zaženete skript s tem korakom"},
{"es","Marcar ejecutar la secuencia de comandos con este paso"},
{"sv","Set overlay för att köra skriptet med det här steget"},
{"tr","Ayarlamak için işaretini gerçekleştirmek için komut dosyası ile bu adımı"}
},
{1,1,
{"ru","Установить пометку выполнять сценарий с этого шага"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"УстановитьПометкуВыполнятьСценарийСЭтогоШага",3,0,0,
{0,0},1,0,1,0,0},
{8,
{13,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СнятьПометкуВыполнятьСценарийСЭтогоШага",
{1,20,
{"ru","Снять пометку выполнять сценарий с этого шага"},
{"en","Disable flag for run scenario from that step"},
{"am","Unmark ቅድሚያ ቅድሚያ የሚሰጡዋቸውን ደረጃ"},
{"az","Çək пометку yerinə ssenari ilə bu addımdan"},
{"bg","Свали маркиране изпълнява сценарий с тази стъпка"},
{"et","Tühista märge teha skripti seda sammu"},
{"fr","Décocher exécuter le script avec cette étape"},
{"ka","Unmark, რათა run script ეს ნაბიჯი"},
{"de","Demarkieren Skript ausführen mit diesem Schritt"},
{"hu","Szüntesse meg, hogy fut egy forgatókönyvet, ezzel a lépéssel"},
{"it","Togliere la spunta eseguire lo script con questo passo"},
{"lv","Noņemt atzīmi izpildīt skriptu ar šo soli"},
{"lt","Atžymėti kaip atlikti scenarijų su šio žingsnio"},
{"mn","Unmark ажиллуулах скрипт энэ нь алхам"},
{"pl","Odznacz wykonać skrypt z tego kroku"},
{"ro","Scoateți mențiunea de a efectua un scenariu cu acest pas"},
{"sl","Odznači, da zaženete skript, s tem korakom"},
{"es","Desmarcar ejecutar la secuencia de comandos con este paso"},
{"sv","Avmarkera för att köra ett skript med detta steg"},
{"tr","İşaretini gerçekleştirmek için komut dosyası ile bu adımı"}
},
{1,1,
{"ru","Снять пометку выполнять сценарий с этого шага"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СнятьПометкуВыполнятьСценарийСЭтогоШага",3,0,0,
{0,0},1,0,1,0,0},
{8,
{14,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗапомнитьСостояниеФормыTestClient",
{1,1,
{"ru","Запомнить состояние формы test client"}
},
{1,1,
{"ru","Запомнить состояние формы test client"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗапомнитьСостояниеФормыTestClientКнопка",3,0,0,
{0,0},1,0,1,0,0},
{8,
{15,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗабытьСостояниеФормыTestClient",
{1,1,
{"ru","Забыть состояние формы test client"}
},
{1,1,
{"ru","Забыть состояние формы test client"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗабытьСостояниеФормыTestClientКнопка",3,0,0,
{0,0},1,0,1,0,0},
{8,
{16,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПолучитьИзмененияФормыGherkin",
{1,1,
{"ru","Получить изменения формы gherkin"}
},
{1,1,
{"ru","Получить изменения формы gherkin"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПолучитьИзмененияФормыGherkinКнопка",3,0,0,
{0,0},1,0,1,0,0},
{8,
{17,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПолучитьИзмененияФормыJSON",
{1,1,
{"ru","Получить изменения формы JSON"}
},
{1,1,
{"ru","Получить изменения формы JSON"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"",3,0,0,
{0,0},1,0,1,0,0},
{8,
{18,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДляВызоваКонфигуратора",
{1,20,
{"ru","Для вызова конфигуратора"},
{"en","For invoke designer"},
{"am","ጋር invoke መጠቀም Configurator"},
{"az","Zəng etmək üçün конфигуратора"},
{"bg","За повикване на конфигуратора"},
{"et","Kõne конфигуратора"},
{"fr","Pour appeler le configurateur"},
{"ka","მოიყვანონ კბილის პასტა"},
{"de","Für den Aufruf Konfigurator"},
{"hu","Hivatkozhatnak a Konfigurátor"},
{"it","Per chiamare il configuratore"},
{"lv","Lai izsauktu конфигуратора"},
{"lt","Skambinti конфигуратора"},
{"mn","Ажиллуулах, Configurator"},
{"pl","Aby połączyć się konfiguratora"},
{"ro","Pentru a apela configuratorului"},
{"sl","Sklicujejo na Configurator"},
{"es","Para llamar el configurador"},
{"sv","Att åberopa Konfiguratorn"},
{"tr","Aramak için yapılandırıcı"}
},
{1,1,
{"ru","Для вызова конфигуратора"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ДляВызоваКонфигуратора",3,0,0,
{0,0},1,0,1,0,0},
{8,
{19,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СвернутьДеревоДоФич",
{1,1,
{"ru","Свернуть дерево до фич"}
},
{1,1,
{"ru","Свернуть дерево до фич"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СвернутьДеревоДоФич",3,0,0,
{0,0},1,0,1,0,0},
{8,
{20,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СвернутьДеревоДоСценариев",
{1,1,
{"ru","Свернуть дерево до сценариев"}
},
{1,1,
{"ru","Свернуть дерево до фич"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СвернутьДеревоДоСценариев",3,0,0,
{0,0},1,0,1,0,0},
{8,
{21,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПроверитьЧтоЗаписьВидеоБудетРаботать",
{1,20,
{"ru","Проверить что запись видео будет работать"},
{"en","Check video record"},
{"am","መሆኑን ለማረጋገጥ ቪዲዮ ቀረጻ በመስጠት"},
{"az","Yoxlamaq ki, video işləyəcək"},
{"bg","Провери какво запис на видео ще работи"},
{"et","Kontrollida, et video salvestamine töötab"},
{"fr","Vérifier que l'enregistrement de la vidéo fonctionnera"},
{"ka","გადაამოწმონ, რომ ვიდეო გადაღება იმუშავებს"},
{"de","Überprüfen, dass die Video-Aufnahme funktioniert"},
{"hu","Ellenőrizze, hogy a videofelvétel működik"},
{"it","Verificare che la registrazione video funziona"},
{"lv","Pārbaudīt, kas ieraksta video strādās"},
{"lt","Patikrinkite, kad vaizdo įrašas bus dirbti"},
{"mn","Гэдгийг батлахын тулд видео бичлэг ажиллах болно"},
{"pl","Sprawdzić, że nagrywanie wideo będzie działać"},
{"ro","Verificați că înregistrarea video va funcționa"},
{"sl","Preverite, da je video snemanje se bo delo"},
{"es","Comprobar que la entrada de vídeo funcione"},
{"sv","För att kontrollera att video-inspelning kommer att arbeta"},
{"tr","Kontrol kayıt video çalışacaktır"}
},
{1,1,
{"ru","Проверить что запись видео будет работать"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПроверитьЧтоЗаписьВидеоБудетРаботать",3,0,0,
{0,0},1,0,1,0,0},
{8,
{22,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"КомандаСохранитьНастройки",
{1,20,
{"ru","Команда сохранить настройки"},
{"en","Save settings"},
{"am","የሚለውን ትዕዛዝ ጋር."},
{"az","Komanda qəbulu"},
{"bg","Екипът на запазване на настройките"},
{"et","Käsk salvesta seaded"},
{"fr","La commande enregistrer les paramètres"},
{"ka","ბრძანება გადარჩენა პარამეტრები"},
{"de","Der Befehl Einstellungen speichern"},
{"hu","A parancsot a beállítások mentéséhez"},
{"it","La squadra di salvare le impostazioni"},
{"lv","Komanda saglabāt iestatījumus"},
{"lt","Komanda išsaugoti nustatymus"},
{"mn","Тушаалыг хадгалах тохиргоо"},
{"pl","Polecenie zapisz ustawienia"},
{"ro","Echipa de salvare setări"},
{"sl","Ukaz, da shranite nastavitve"},
{"es","El comando guardar configuración"},
{"sv","Kommandot för att spara inställningarna"},
{"tr","Takım ayarları kaydet"}
},
{1,1,
{"ru","Команда сохранить настройки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,894cf65b-4109-4533-a1d7-c87b1fcc80a3},"",-1,-1,1,0,""},"КомандаСохранитьНастройки",3,0,0,
{0,0},1,0,1,0,0},
{8,
{23,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьНастройкиПоУмолчанию",
{1,20,
{"ru","Загрузить настройки по умолчанию"},
{"en","Load default settings"},
{"am","የሚሰጡዋቸውን ስለጀመሩ ቅድሚያ የሚሰጡዋቸውን"},
{"az","Parametrləri yükləmək default"},
{"bg","Изтегляне на настройки по подразбиране"},
{"et","Alla laadida vaikimisi seadete"},
{"fr","Charger les paramètres par défaut"},
{"ka","To load default პარამეტრები"},
{"de","Die Standardeinstellungen geladen"},
{"hu","Az alapértelmezett beállítások betöltéséhez,"},
{"it","Caricare le impostazioni di default"},
{"lv","Lejupielādēt noklusējuma iestatījumus"},
{"lt","Atsisiųsti nustatymus"},
{"mn","Дуудахын тулд анхдагч тохиргоо"},
{"pl","Załadować ustawienia domyślne"},
{"ro","Încărcați setările implicite"},
{"sl","Za nalaganje privzetih nastavitev"},
{"es","Cargar la configuración predeterminada"},
{"sv","För att ladda standardinställningarna"},
{"tr","Varsayılan ayarları yüklemek"}
},
{1,1,
{"ru","Загрузить настройки по умолчанию"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьНастройкиПоУмолчанию",3,0,0,
{0,0},1,0,1,0,0},
{8,
{24,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СохранитьКлиентовТестирования",
{1,20,
{"ru","Сохранить"},
{"en","Save"},
{"am","አስቀምጥ"},
{"az","Saxlamaq"},
{"bg","Запази"},
{"et","Salvesta"},
{"fr","Enregistrer"},
{"ka","შენახვა"},
{"de","Behalten"},
{"hu","Mentés"},
{"it","Mantenere"},
{"lv","Saglabāt"},
{"lt","Įrašyti"},
{"mn","Хадгалах"},
{"pl","Zapisz"},
{"ro","Salvați"},
{"sl","Shranjevanje"},
{"es","Guardar"},
{"sv","Spara"},
{"tr","Kaydet"}
},
{1,1,
{"ru","Сохранить клиентов тестирования"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СохранитьКлиентовТестированияКоманда",3,0,0,
{0,0},1,0,1,0,0},
{8,
{25,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПодключитьВыбранногоКлиентаТестирования",
{1,20,
{"ru","Подключить"},
{"en","Connect"},
{"am","ጋር"},
{"az","Əlaqə"},
{"bg","Свържете"},
{"et","Ühendada"},
{"fr","Brancher"},
{"ka","დაკავშირება"},
{"de","Verbinden"},
{"hu","Csatlakozás"},
{"it","Collegare"},
{"lv","Pievienot"},
{"lt","Prisijungti"},
{"mn","Холбох"},
{"pl","Podłączyć"},
{"ro","Conectați"},
{"sl","Za povezavo"},
{"es","Conectar"},
{"sv","För att ansluta"},
{"tr","Bağlamak"}
},
{1,2,
{"ru","Подключить выбранного клиента тестирования"},
{"en","Connect the selected test client"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПодключитьВыбранногоКлиентаТестирования",3,0,0,
{0,0},1,0,1,0,0},
{8,
{26,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"НачатьЗаписьДействийПользлователяВВыбранномКлиентеТестирования",
{1,1,
{"ru","Начать запись"}
},
{1,2,
{"ru","Начать запись действий пользлователя в выбранном клиенте тестирования"},
{"en","Start recording the user actions of the selected test client"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"НачатьЗаписьДействийПользлователяВВыбранномКлиентеТестирования",3,0,0,
{0,0},1,0,1,0,0},
{8,
{27,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОтключитьВыбранногоКлиентаТестирования",
{1,20,
{"ru","Отключить"},
{"en","Disconnect"},
{"am","አንድ"},
{"az","Aradan"},
{"bg","Изключите"},
{"et","Välja lülitada"},
{"fr","Désactiver"},
{"ka","გამორთე"},
{"de","Deaktivieren Sie die"},
{"hu","Letiltása"},
{"it","Disattivare"},
{"lv","Izslēgt"},
{"lt","Išjungti"},
{"mn","Идэвхгүй"},
{"pl","Wyłączyć"},
{"ro","Pentru a dezactiva"},
{"sl","Onemogočite"},
{"es","Desconectar"},
{"sv","Inaktivera"},
{"tr","Kapatmak"}
},
{1,2,
{"ru","Отключить выбранного клиента тестирования"},
{"en","Disconnect the selected test client"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОтключитьВыбранногоКлиентаТестирования",3,0,0,
{0,0},1,0,1,0,0},
{8,
{29,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СвернутьДеревоИзвестныхФич",
{1,1,
{"ru","Свернуть дерево известных фич"}
},
{1,1,
{"ru","Свернуть дерево известных фич"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СвернутьДеревоИзвестныхФич",3,0,0,
{0,0},1,0,1,0,0},
{8,
{30,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СвернутьДеревоИзвестныхШагов",
{1,1,
{"ru","Свернуть дерево известных шагов"}
},
{1,1,
{"ru","Свернуть дерево известных шагов"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СвернутьДеревоИзвестныхШагов",3,0,0,
{0,0},1,0,1,0,0},
{8,
{31,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПреобразоватьИсходныйXML",
{1,20,
{"ru","Преобразовать исходный XML"},
{"en","Convert XML"},
{"am","ተጠቃሚ ምንጭ ይታያል"},
{"az","Çevirmək mənbə XML"},
{"bg","Преобразуване на изходния XML"},
{"et","Teisendada XML-allikas"},
{"fr","Pour convertir la source XML"},
{"ka","გარდაქმნას წყარო XML"},
{"de","Das XML konvertieren"},
{"hu","Átalakítani a forrás XML"},
{"it","Convertire XML di origine"},
{"lv","Konvertēt avota XML"},
{"lt","Konvertuoti XML šaltinio"},
{"mn","Хөрвүүлэх эх XML"},
{"pl","Konwertuj źródłowego XML"},
{"ro","Pentru a converti sursă XML"},
{"sl","Če želite pretvoriti vir XML"},
{"es","Convertir XML de origen"},
{"sv","För att omvandla XML-källa"},
{"tr","Kaynak XML dönüştürmek"}
},
{1,1,
{"ru","Преобразовать исходный XML"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПреобразоватьИсходныйXML",3,0,0,
{0,0},1,0,1,0,0},
{8,
{32,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПодготовитьСценарийКВыполнению",
{1,1,
{"ru","Подготовить сценарий к выполнению"}
},
{1,1,
{"ru","Подготовить сценарий к выполнению"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПодготовитьСценарийКВыполнению",3,0,0,
{0,0},1,0,1,0,0},
{8,
{33,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьФичу",
{1,1,
{"ru","Выполнить фичу"}
},
{1,1,
{"ru","Выполнить фичу"}
},
{0,
{0,
{"B",1},0}
},
{0,116,24},
{4,0,
{0},"",-1,-1,1,0,""},"ВыполнитьФичуФорма",3,0,0,
{0,0},1,0,1,0,0},
{8,
{34,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьНедавнююФичу1",
{1,1,
{"ru","Загрузить недавнюю фичу1"}
},
{1,1,
{"ru","Загрузить недавнюю фичу1"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьНедавнююФичу1",3,0,0,
{0,0},1,0,1,0,0},
{8,
{35,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьНедавнююФичу2",
{1,1,
{"ru","Загрузить недавнюю фичу2"}
},
{1,1,
{"ru","Загрузить недавнюю фичу1"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьНедавнююФичу2",3,0,0,
{0,0},1,0,1,0,0},
{8,
{36,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьНедавнююФичу3",
{1,1,
{"ru","Загрузить недавнюю фичу3"}
},
{1,1,
{"ru","Загрузить недавнюю фичу1"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьНедавнююФичу3",3,0,0,
{0,0},1,0,1,0,0},
{8,
{37,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьНедавнююФичу4",
{1,1,
{"ru","Загрузить недавнюю фичу4"}
},
{1,1,
{"ru","Загрузить недавнюю фичу1"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьНедавнююФичу4",3,0,0,
{0,0},1,0,1,0,0},
{8,
{38,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьНедавнююФичу5",
{1,1,
{"ru","Загрузить недавнюю фичу5"}
},
{1,1,
{"ru","Загрузить недавнюю фичу1"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьНедавнююФичу5",3,0,0,
{0,0},1,0,1,0,0},
{8,
{39,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьНедавнююФичу6",
{1,1,
{"ru","Загрузить недавнюю фичу6"}
},
{1,1,
{"ru","Загрузить недавнюю фичу1"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьНедавнююФичу6",3,0,0,
{0,0},1,0,1,0,0},
{8,
{40,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьНедавнююФичу7",
{1,1,
{"ru","Загрузить недавнюю фичу7"}
},
{1,1,
{"ru","Загрузить недавнюю фичу1"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьНедавнююФичу7",3,0,0,
{0,0},1,0,1,0,0},
{8,
{41,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьНедавнююФичу8",
{1,1,
{"ru","Загрузить недавнюю фичу8"}
},
{1,1,
{"ru","Загрузить недавнюю фичу1"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьНедавнююФичу8",3,0,0,
{0,0},1,0,1,0,0},
{8,
{42,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ЗагрузитьНедавнююФичу9",
{1,1,
{"ru","Загрузить недавнюю фичу9"}
},
{1,1,
{"ru","Загрузить недавнюю фичу1"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ЗагрузитьНедавнююФичу9",3,0,0,
{0,0},1,0,1,0,0},
{8,
{43,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДобавитьИзвестныйШаг",
{1,1,
{"ru","Добавить известный шаг"}
},
{1,1,
{"ru","Добавить известный шаг"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ДобавитьИзвестныйШаг",3,0,0,
{0,0},1,0,1,0,0},
{8,
{44,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьДанныйСценарийСТекущегоШага",
{1,1,
{"ru","Выполнить данный сценарий с текущего шага"}
},
{1,1,
{"ru","Выполнить данный сценарий с текущего шага"}
},
{0,
{0,
{"B",1},0}
},
{0,116,8},
{4,0,
{0},"",-1,-1,1,0,""},"ВыполнитьДанныйСценарийСТекущегоШагаФорма",3,0,0,
{0,0},1,0,1,0,0},
{8,
{45,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьДанныйСценарийСТекущегоШагаСПродолжением",
{1,1,
{"ru","Выполнить данный сценарий с текущего шага и продолжить дальше"}
},
{1,1,
{"ru","Выполнить данный сценарий с текущего шага"}
},
{0,
{0,
{"B",1},0}
},
{0,116,12},
{4,0,
{0},"",-1,-1,1,0,""},"ВыполнитьДанныйСценарийСТекущегоШагаСПродолжениемФорма",3,0,0,
{0,0},1,0,1,0,0},
{8,
{46,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"Брейкпоинт",
{1,1,
{"ru","Брейкпоинт"}
},
{1,1,
{"ru","Брейкпоинт"}
},
{0,
{0,
{"B",1},0}
},
{0,120,0},
{4,0,
{0},"",-1,-1,1,0,""},"Брейкпоинт",3,0,0,
{0,0},1,0,1,0,0},
{8,
{47,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"БрейкпоинтУбратьВсе",
{1,1,
{"ru","Убрать все брейкпоинты"}
},
{1,1,
{"ru","Брейкпоинт"}
},
{0,
{0,
{"B",1},0}
},
{0,120,8},
{4,0,
{0},"",-1,-1,1,0,""},"БрейкпоинтУбратьВсе",3,0,0,
{0,0},1,0,1,0,0},
{8,
{48,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьОдинШаг",
{1,20,
{"ru","Выполнить один шаг"},
{"en","Run scenarios"},
{"am","አንድ ነጠላ ደረጃ"},
{"az","Həyata bir addım"},
{"bg","Пусни една стъпка"},
{"et","Teha üks samm"},
{"fr","Effectuer une étape"},
{"ka","შეასრულოს ერთი ნაბიჯი"},
{"de","Einen Schritt ausführen"},
{"hu","Végre is egyetlen lépéssel"},
{"it","Eseguire un passo"},
{"lv","Palaist vienu soli"},
{"lt","Atlikti vienas žingsnis"},
{"mn","Хийх нэг алхам"},
{"pl","Wykonać jeden krok"},
{"ro","Executa un pas"},
{"sl","Za opravljanje enem koraku"},
{"es","Seguir el paso uno"},
{"sv","För att utföra ett enda steg"},
{"tr","Gerçekleştirmek için bir adım"}
},
{1,1,
{"ru","Выполнить сценарии"}
},
{0,
{0,
{"B",1},0}
},
{0,122,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВыполнитьОдинШагФорма",3,0,0,
{0,0},1,0,1,0,0},
{8,
{49,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СброситьКешИзвестныхStepDefinition",
{1,20,
{"ru","Сбросить кеш известных step definition"},
{"en","Clear cache"},
{"am","የሚሰጡዋቸውን ስለጀመሩ ቅድሚያ ቅድሚያ የሚሰጡዋቸውን ይታያል"},
{"az","Yenidən кеш tanınmış step definition"},
{"bg","Нулиране на кеша на известни step definition"},
{"et","Nulli vahemälu tuntud step definition"},
{"fr","Réinitialiser le cache connus step definition"},
{"ka","აღადგინოთ cache, ცნობილია ნაბიჯი განმარტება"},
{"de","Zurücksetzen der Cache der bekannten step-definition"},
{"hu","Állítsa vissza a cache, ismert lépés meghatározása"},
{"it","Resettare la cache famosi step definition"},
{"lv","Zaudēt kešatmiņu zināms step izšķirtspējas"},
{"lt","Anuliuoti кеш žinomų step definition"},
{"mn","Анхны байдалд нь кэш, алдартай алхам тодорхойлолт"},
{"pl","Wyczyść pamięć podręczną znanych step definition"},
{"ro","Piardă în cache cunoscute step definition"},
{"sl","Ponastavi predpomnilnik, ki je znan po korak opredelitev"},
{"es","Restablecer la caché de conocidos paso definition"},
{"sv","För att nollställa cachen, känd för steg definition"},
{"tr","Reset cash bilinen step definition"}
},
{1,1,
{"ru","Сбросить кеш известных step definition"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СброситьКешИзвестныхStepDefinition",3,0,0,
{0,0},1,0,1,0,0},
{8,
{50,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОткрытьКаталогФичи",
{1,1,
{"ru","Открыть каталог фичи"}
},
{1,1,
{"ru","Открыть каталог фичи"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОткрытьКаталогФичи",3,0,0,
{0,0},1,0,1,0,0},
{8,
{51,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПерезагрузитьИВыполнитьДанныйСценарий",
{1,1,
{"ru","Перезагрузить и выполнить данный сценарий"}
},
{1,1,
{"ru","Перезагрузить и выполнить данный сценарий"}
},
{0,
{0,
{"B",1},0}
},
{0,117,16},
{4,0,
{0},"",-1,-1,1,0,""},"ПерезагрузитьИВыполнитьДанныйСценарийФорма",3,0,0,
{0,0},1,0,1,0,0},
{8,
{52,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПриостановитьЗаписьДействийПользователя",
{1,1,
{"ru","Приостановить запись действий пользователя"}
},
{1,1,
{"ru","Приостановить запись действий пользователя"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПриостановитьЗаписьДействийПользователя",3,0,0,
{0,0},1,0,1,0,0},
{8,
{53,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПродолжитьЗаписьДействийПользователя",
{1,1,
{"ru","Продолжить запись действий пользователя"}
},
{1,1,
{"ru","Продолжить запись действий пользователя"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПродолжитьЗаписьДействийПользователя",3,0,0,
{0,0},1,0,1,0,0},
{8,
{54,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьСкрытьПутьКФайлу",
{1,1,
{"ru","Показать скрыть путь к файлу"}
},
{1,1,
{"ru","Показать скрыть путь к файлу"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПоказатьСкрытьПутьКФайлу",3,0,0,
{0,0},1,0,1,0,0},
{8,
{55,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьСкрытьСнипет",
{1,1,
{"ru","Показать скрыть снипет"}
},
{1,1,
{"ru","Показать скрыть снипет"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПоказатьСкрытьСнипет",3,0,0,
{0,0},1,0,1,0,0},
{8,
{56,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьСкрытьАдресСнипета",
{1,1,
{"ru","Показать скрыть адрес снипета"}
},
{1,1,
{"ru","Показать скрыть адрес снипета"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПоказатьСкрытьАдресСнипета",3,0,0,
{0,0},1,0,1,0,0},
{8,
{57,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьСкрытьСтрокаРеальнойПроцедуры",
{1,1,
{"ru","Показать скрыть строка реальной процедуры"}
},
{1,1,
{"ru","Показать скрыть строка реальной процедуры"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПоказатьСкрытьСтрокаРеальнойПроцедуры",3,0,0,
{0,0},1,0,1,0,0},
{8,
{58,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьСкрытьВсеКолонки",
{1,1,
{"ru","Показать/Скрыть все колонки"}
},
{1,1,
{"ru","Показать скрыть все колонки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПоказатьСкрытьВсеКолонки",3,0,0,
{0,0},1,0,1,0,0},
{8,
{28,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"КлиентТестированияТекущейИнфобазы",
{1,20,
{"ru","Клиент тестирования текущей инфобазы"},
{"en","TestClient of current base"},
{"am","ቅድሚያ የታዘዘ የአሁኑ infobase"},
{"az","Müştəri test cari инфобазы"},
{"bg","Клиентът тестване на текущата инфобазы"},
{"et","Klient testimise praeguse инфобазы"},
{"fr","Le client de test soutien инфобазы"},
{"ka","კლიენტი გამოცდა მიმდინარე infobase"},
{"de","Der Kunde testen der aktuellen инфобазы"},
{"hu","Ügyfél teszt jelenlegi infobase"},
{"it","Il client di test corrente инфобазы"},
{"lv","Klients testēšanas pašreizējo инфобазы"},
{"lt","Klientas bandymai dabartinę инфобазы"},
{"mn","Үйлчлүүлэгч туршилтын одоогийн infobase"},
{"pl","Klient testowania bieżącej инфобазы"},
{"ro","Clientul de testare curentă инфобазы"},
{"sl","Naročnik test tekočih infobase"},
{"es","Cliente de prueba actual инфобазы"},
{"sv","Kunden testa nuvarande infobase"},
{"tr","Müşteri test geçerli инфобазы"}
},
{1,1,
{"ru","Клиент тестирования текущей инфобазы"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КлиентТестированияТекущейИнфобазы",3,0,0,
{0,0},1,0,1,0,0},
{8,
{59,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"РедактироватьТаблицуТекст",
{1,20,
{"ru","Редактировать таблицу текст"},
{"en","Edit gherkin table"},
{"am","መገለጫዎ ጋር. ጽሑፍ"},
{"az","Redaktə masa mətni"},
{"bg","Редактирай таблица текст"},
{"et","Tabelit redigeerida teksti"},
{"fr","Modifier le tableau du texte"},
{"ka","რედაქტირება მაგიდა ტექსტი"},
{"de","Bearbeiten von Text Tabelle"},
{"hu","Szerkeszteni a táblázat szöveg"},
{"it","Modificare una tabella di testo"},
{"lv","Labot tabulu teksts"},
{"lt","Redaguoti lentelę tekstas"},
{"mn","Засварлах хүснэгт текст"},
{"pl","Edycja tabeli tekst"},
{"ro","Edita tabelul de text"},
{"sl","Če želite urediti tabelo besedilo"},
{"es","Editar una tabla de texto"},
{"sv","För att redigera tabellen text"},
{"tr","Tablo düzenle metin"}
},
{1,1,
{"ru","Редактировать таблицу текст"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"РедактироватьТаблицуТекст",3,0,0,
{0,0},1,0,1,0,0},
{8,
{60,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьСкрытьИДСтроки",
{1,1,
{"ru","Показать скрыть ИД строки"}
},
{1,1,
{"ru","Показать скрыть ИДСтроки"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПоказатьСкрытьИДСтроки",3,0,0,
{0,0},1,0,1,0,0},
{8,
{61,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьПроизвольныйКод",
{1,1,
{"ru","Выполнить произвольный код"}
},
{1,1,
{"ru","Выполнить произвольный код"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВыполнитьПроизвольныйКод",3,0,0,
{0,0},1,0,1,0,0},
{8,
{62,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВычислитьPIDЭтогоСеанса",
{1,2,
{"ru","Вычислить PIDЭтого сеанса"},
{"en","Get PID"}
},
{1,1,
{"ru","Вычислить PIDЭтого сеанса"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВычислитьPIDЭтогоСеанса",3,0,0,
{0,0},1,0,1,0,0},
{8,
{64,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДобавитьСтрокуВСписокБиблиотек",
{1,1,
{"ru","Добавить строку в список библиотек"}
},
{1,1,
{"ru","Добавить строку в список библиотек"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ДобавитьСтрокуВСписокБиблиотек",3,0,0,
{0,0},1,0,1,0,0},
{8,
{65,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ИсследовательФормы",
{1,20,
{"ru","Исследователь формы"},
{"en","Form explorer"},
{"am","ወደ researcher ነው ቅጽ"},
{"az","Tədqiqatçı formaları"},
{"bg","Изследовател форма"},
{"et","Teadlane vormi"},
{"fr","Le chercheur de la forme"},
{"ka","მკვლევარი არის ფორმა"},
{"de","Forscher Formen"},
{"hu","A kutató a forma"},
{"it","Ricercatore di forma"},
{"lv","Pētnieks formas"},
{"lt","Mokslininkė formos"},
{"mn","Тус судлаач нь хэлбэр"},
{"pl","Badacz formy"},
{"ro","Cercetător forme"},
{"sl","Raziskovalec je obrazca"},
{"es","El investigador del formulario"},
{"sv","Forskaren är den form"},
{"tr","Araştırmacı formu"}
},
{1,1,
{"ru","Исследователь формы"}
},
{0,
{0,
{"B",1},0}
},
{0,69,16},
{4,0,
{0},"",-1,-1,1,0,""},"ИсследовательФормы",3,0,0,
{0,0},1,0,1,0,0},
{8,
{66,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПолучитьМакетПоТаблице",
{1,2,
{"ru","Получить макет по таблице"},
{"en","Get a table document from the table"}
},
{1,1,
{"ru","Получить макет по таблице"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПолучитьМакетПоТаблице",3,0,0,
{0,0},1,0,1,0,0},
{8,
{67,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ДобавитьСтрокуВСписокСловарейЗамен",
{1,2,
{"ru","Добавить"},
{"en","Add"}
},
{1,1,
{"ru","Добавить строку в список словарей замен"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ДобавитьСтрокуВСписокСловарейЗамен",3,0,0,
{0,0},1,0,1,0,0},
{8,
{68,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОчиститьСгенерированныйСценарий",
{1,2,
{"ru","Очистить"},
{"en","Clear"}
},
{1,1,
{"ru","Очистить сгенерированный сценарий"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОчиститьСгенерированныйСценарий",3,0,0,
{0,0},1,0,1,0,0},
{8,
{69,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПолучитьСостояниеТекущегоЭлементаФормы",
{1,2,
{"ru","Получить состояние текущего элемента формы"},
{"en","Get the state of the current form element"}
},
{1,1,
{"ru","Получить изменения формы gherkin"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПолучитьСостояниеТекущегоЭлементаФормыКнопка",3,0,0,
{0,0},1,0,1,0,0},
{8,
{70,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПеревестиТекстНаДругойЯзык",
{1,2,
{"ru","Перевести"},
{"en","Translate"}
},
{1,1,
{"ru","Перевести текст на другой язык"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПеревестиТекстНаДругойЯзык",3,0,0,
{0,0},1,0,1,0,0},
{8,
{63,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"СохранитьНастройкиКлиент",
{1,1,
{"ru","Сохранить настройки клиент"}
},
{1,1,
{"ru","Сохранить настройки клиент"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СохранитьНастройкиКлиент",3,0,0,
{0,0},1,0,1,0,0},
{8,
{71,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьКодНаСервере",
{1,1,
{"ru","Выполнить код на сервере"}
},
{1,1,
{"ru","Выполнить код на сервере"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВыполнитьКодНаСервере",3,0,0,
{0,0},1,0,1,0,0},
{8,
{72,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВыполнитьКодНаКлиенте",
{1,1,
{"ru","Выполнить код на клиенте"}
},
{1,1,
{"ru","Выполнить код на клиенте"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ВыполнитьКодНаКлиенте",3,0,0,
{0,0},1,0,1,0,0},
{8,
{73,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОчиститьСтрокиВСпискеБиблиотек",
{1,1,
{"ru","Очистить"}
},
{1,1,
{"ru","Очистить строки в списке библиотек"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ОчиститьСтрокиВСпискеБиблиотек",3,0,0,
{0,0},1,0,1,0,0},
{8,
{74,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ГенераторМакетовДанных",
{1,1,
{"ru","Генератор макетов данных"}
},
{1,1,
{"ru","Генератор макетов данных на базе реальных данных"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ГенераторМакетовДанных",3,0,0,
{0,0},1,0,1,0,0},
{8,
{75,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПоказатьГУИД",
{1,1,
{"ru","Показать ГУИД"}
},
{1,1,
{"ru","Показать ГУИД"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПоказатьГУИД",3,0,0,
{0,0},1,0,1,0,0},
{8,
{76,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ПреобразоватьЖурналДействийПользователяВТест",
{1,1,
{"ru","Преобразовать журнал действий пользователя в тест"}
},
{1,1,
{"ru","Преобразовать журнал действий пользователя в тест"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"ПреобразоватьЖурналДействийПользователяВТест",3,0,0,
{0,0},1,0,1,0,0},
{8,
{77,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"КонвертерТестов",
{1,1,
{"ru","Конвертер тестов в формат 4-й версии"}
},
{1,1,
{"ru","Конвертер тестов"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"КонвертерТестов",3,0,0,
{0,0},1,0,1,0,0},
{8,
{78,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ВнешнийИнструментБраузерТестов_xddTestRunner",
{1,1,
{"ru","Открыть браузер тестов xddTestRunner"}
},
{1,1,
{"ru","Открыть браузер тестов xddTestRunner"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,1,
{0,a9152be7-62cf-4523-be34-a23f018f497e},"",-1,-1,1,0,""},"ВнешнийИнструментБраузерТестов_xddTestRunner",3,0,0,
{0,0},1,0,1,0,0},
{8,
{79,409b9a53-7f7e-4178-86c1-33176c7c7a7a},"ОтобразитьОтчетAllureВБраузере",
{1,1,
{"ru","Отобразить отчет Allure в браузере"}
},
{1,1,
{"ru","Отобразить отчет allure в браузере"}
},
{0,
{0,
{"B",1},0}
},
{0,0,0},
{4,0,
{0},"",-1,-1,1,0,""},"СоздатьОткрытьОтчетAllure",3,0,0,
{0,0},1,0,1,0,0}
},
{0,0},
{0,0},0,0}